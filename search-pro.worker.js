const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/en/\":{\"documentCount\":0,\"nextId\":0,\"documentIds\":{},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{},\"averageFieldLength\":[],\"storedFields\":{},\"dirtCount\":0,\"index\":[],\"serializationVersion\":2},\"/\":{\"documentCount\":454,\"nextId\":454,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-60e61671\",\"2\":\"v-60e61671#_1-指标\",\"3\":\"v-60e61671#_1-1-bollinger-bands-布林线\",\"4\":\"v-60e61671#_1-2-relative-strength-index-rsi-相对强弱指数\",\"5\":\"v-60e61671#_1-3-moving-average-convergence-divergence-macd-平滑异同移动平均线\",\"6\":\"v-60e61671#_1-4-on-balance-volume-obv\",\"7\":\"v-60e61671#_2-python-库\",\"8\":\"v-47394a38\",\"9\":\"v-47394a38#_1-快速介绍\",\"10\":\"v-47394a38#_2-属性的顺序\",\"11\":\"v-14dd182b\",\"12\":\"v-14dd182b#_1-symbols\",\"13\":\"v-14dd182b#_2-作用\",\"14\":\"v-14dd182b#_3-global-symbols\",\"15\":\"v-14dd182b#_3-1-symbol-for-key-读取-symbol\",\"16\":\"v-14dd182b#_3-2-symbol-keyfor-symbol-读取-description\",\"17\":\"v-14dd182b#_4-系统-symbol\",\"18\":\"v-14dd182b#总结\",\"19\":\"v-1c369cee\",\"20\":\"v-1c369cee#_1-symbol-iterator\",\"21\":\"v-1c369cee#_2-显示调用迭代器\",\"22\":\"v-1c369cee#_3-可迭代-iterable-v-s-类数组-array-like\",\"23\":\"v-1c369cee#_4-array-from\",\"24\":\"v-1c369cee#总结\",\"25\":\"v-333550ae\",\"26\":\"v-333550ae#_1-快速介绍\",\"27\":\"v-333550ae#不要用-比较数组\",\"28\":\"v-333550ae#_2-数组的方法\",\"29\":\"v-9e0cde30\",\"30\":\"v-9e0cde30#基本使用\",\"31\":\"v-9e0cde30#_1-export\",\"32\":\"v-9e0cde30#_2-import\",\"33\":\"v-9e0cde30#_3-export-使用-as\",\"34\":\"v-9e0cde30#_4-export-default\",\"35\":\"v-9e0cde30#_5-export-既有-default-又有命名实体\",\"36\":\"v-9e0cde30#_2-re-export\",\"37\":\"v-8b05f93e\",\"38\":\"v-8b05f93e#_1-ai-agent-定义\",\"39\":\"v-8b05f93e#大语言模型\",\"40\":\"v-8b05f93e#_2\",\"41\":\"v-38a45680\",\"42\":\"v-38a45680#_1-the-deep-q-network-dqn\",\"43\":\"v-38a45680#dqn-的过程\",\"44\":\"v-38a45680#_2-the-deep-q-learning-algorithm\",\"45\":\"v-38a45680#_2-1-experience-replay\",\"46\":\"v-38a45680#_2-2-fixed-q-target\",\"47\":\"v-38a45680#_2-3-double-deep-q-learning\",\"48\":\"v-2d6ffe42\",\"49\":\"v-2d6ffe42#_1-rl-process\",\"50\":\"v-2d6ffe42#_2-任务类型\",\"51\":\"v-2d6ffe42#类型-1-episodic-task\",\"52\":\"v-2d6ffe42#类型-2-continuing-task\",\"53\":\"v-2d6ffe42#_3-the-exploration-exploitation-trade-off\",\"54\":\"v-2d6ffe42#_4-rl-问题的两种主要方法\",\"55\":\"v-2d6ffe42#方法-1-策略方法-policy-based\",\"56\":\"v-2d6ffe42#方法-2-value-based-方法\",\"57\":\"v-c6beb0e0\",\"58\":\"v-c6beb0e0#_1-policy-gradient-methods-的优劣\",\"59\":\"v-c6beb0e0#_1-1-优点\",\"60\":\"v-c6beb0e0#_1-2-缺点\",\"61\":\"v-c6beb0e0#_2-policy-gradient-算法\",\"62\":\"v-c6beb0e0#_2-1-损失函数\",\"63\":\"v-c6beb0e0#_2-2-gradient-ascent-policy-gradient-theorem\",\"64\":\"v-402bdd9d\",\"65\":\"v-402bdd9d#_1-bellman-equation\",\"66\":\"v-402bdd9d#_2-蒙特卡洛学习和时序差分学习\",\"67\":\"v-402bdd9d#_2-1-monte-carlo-回合结束后学习\",\"68\":\"v-402bdd9d#_2-2-temporal-difference-learning-每个-step-进行学习\",\"69\":\"v-402bdd9d#_3-q-learning\",\"70\":\"v-402bdd9d#_3-1-q-learning-算法\",\"71\":\"v-030bd266\",\"72\":\"v-652d8e04\",\"73\":\"v-9f1cb90a\",\"74\":\"v-9f1cb90a#_1-概念\",\"75\":\"v-9f1cb90a#_2-notation\",\"76\":\"v-1c3d7e88\",\"77\":\"v-b398ee9c\",\"78\":\"v-b398ee9c#_1-准确性-accuracy\",\"79\":\"v-b398ee9c#_2-精确度-precision\",\"80\":\"v-b398ee9c#_3-召回率-recall\",\"81\":\"v-b398ee9c#_4-f1-分数-f1-score\",\"82\":\"v-5095a1d2\",\"83\":\"v-5095a1d2#_1-基本术语\",\"84\":\"v-5095a1d2#_2-现代字符编码模型\",\"85\":\"v-5095a1d2#_2-1-抽象字符表-acr-abstract-character-repertoire\",\"86\":\"v-5095a1d2#_2-2-编号字符集-ccs-coded-character-set\",\"87\":\"v-5095a1d2#_2-3-字符编码方式-形式-格式-规则-cef-character-encoding-form\",\"88\":\"v-5095a1d2#_2-4-字符编码模式ces-ces-character-encoding-scheme\",\"89\":\"v-5095a1d2#_2-5-传输编码语法-tes-transfer-encoding-syntax\",\"90\":\"v-5095a1d2#_2-6-小结\",\"91\":\"v-4d2bf094\",\"92\":\"v-4d2bf094#_1-ebcdic-码与-ascii-码\",\"93\":\"v-4d2bf094#_1-1-ebcdic-码\",\"94\":\"v-4d2bf094#_1-2-ascii字符编码方案简介\",\"95\":\"v-4d2bf094#_2-eascii-及-iso-8859-字符编码方案\",\"96\":\"v-4d2bf094#_2-1-eascii\",\"97\":\"v-4d2bf094#_2-2-iso-iec-8859\",\"98\":\"v-4d2bf094#_3-简体汉字编码方案-gbk2312、gbk-等\",\"99\":\"v-4d2bf094#_3-1-背景\",\"100\":\"v-4d2bf094#_3-2-gb2312\",\"101\":\"v-4d2bf094#_3-3-gbk\",\"102\":\"v-4d2bf094#_3-4-gb18030\",\"103\":\"v-4d2bf094#_3-5-小结\",\"104\":\"v-49c23f56\",\"105\":\"v-49c23f56#_1-概述\",\"106\":\"v-49c23f56#_1-1-bmp、sp\",\"107\":\"v-49c23f56#_1-2-utf-16\",\"108\":\"v-49c23f56#_1-3-码点名称\",\"109\":\"v-d623d08a\",\"110\":\"v-d623d08a#_1-协议三要素-语法、语义、顺序\",\"111\":\"v-d623d08a#_2-ip-和-cidr\",\"112\":\"v-d623d08a#_3-ip-addr-ifconfig\",\"113\":\"v-d623d08a#_4-ip-地址配置\",\"114\":\"v-d623d08a#_5-动态主机配置协议-dhcp-dynamic-host-configuration-protocol\",\"115\":\"v-d623d08a#dhcp-的工作方式\",\"116\":\"v-d623d08a#step-1-dhcp-discover\",\"117\":\"v-d623d08a#step-2-dhcp-offer\",\"118\":\"v-d623d08a#step-3-dhcp-request\",\"119\":\"v-d623d08a#step-4-dhcp-ack\",\"120\":\"v-d623d08a#_6-ip-地址回收和续租\",\"121\":\"v-d623d08a#_7-预启动执行环境-pxe-pre-boot-execution-environment\",\"122\":\"v-d623d08a#pxe-的工作过程\",\"123\":\"v-b3ff5502\",\"124\":\"v-b3ff5502#_1-用户\",\"125\":\"v-b3ff5502#_2-浏览文件\",\"126\":\"v-b3ff5502#_3-安装软件\",\"127\":\"v-b3ff5502#_3-1-没有软件管家\",\"128\":\"v-b3ff5502#_3-2-有软件管家\",\"129\":\"v-b3ff5502#_3-3-下载-配置环境\",\"130\":\"v-b3ff5502#_4-运行程序\",\"131\":\"v-b3ff5502#_4-1-通过-shell-在交互命令行里运行\",\"132\":\"v-b3ff5502#_4-2-后台运行\",\"133\":\"v-b3ff5502#_4-3-以服务的方式运行\",\"134\":\"v-b3ff5502#_5-关机-重启\",\"135\":\"v-b3ff5502#_6-总结\",\"136\":\"v-3e588d2c\",\"137\":\"v-6172b9af\",\"138\":\"v-6172b9af#_1-时间复杂度\",\"139\":\"v-6172b9af#_2-二分查找的递归与非递归实现\",\"140\":\"v-6172b9af#_3-二分查找应用场景的局限性\",\"141\":\"v-6172b9af#_4-更复杂的二分查找\",\"142\":\"v-6172b9af#_4-1-查找第一个值等于给定值的元素\",\"143\":\"v-6172b9af#_4-2-查找最后一个值等于给定值的元素\",\"144\":\"v-6172b9af#_4-3-查找第一个大于等于给定值的元素\",\"145\":\"v-6172b9af#_4-4-查找最后一个小于等于给定值的元素\",\"146\":\"v-af0b2240\",\"147\":\"v-af0b2240#_1-解决散列冲突的方法\",\"148\":\"v-af0b2240#_1-1-开放寻址法-open-addressing\",\"149\":\"v-af0b2240#_1-1-1-线性探测-linear-probing\",\"150\":\"v-af0b2240#_1-1-2-二次探测-quadratic-probing\",\"151\":\"v-af0b2240#_1-1-3-双重散列-double-hashing\",\"152\":\"v-af0b2240#_1-2-链表法-chaining\",\"153\":\"v-af0b2240#_2-打造一个工业级水平的散列表\",\"154\":\"v-af0b2240#_2-1-如何设计\",\"155\":\"v-af0b2240#_2-2-工业级散列表\",\"156\":\"v-af0b2240#_2-2-1-初始大小\",\"157\":\"v-af0b2240#_2-2-2-装在因子和动态扩容\",\"158\":\"v-af0b2240#_2-2-3-散列冲突解决方法\",\"159\":\"v-af0b2240#_2-2-4-散列函数\",\"160\":\"v-c93be06c\",\"161\":\"v-c93be06c#复杂度分析\",\"162\":\"v-c93be06c#时间复杂度-空间复杂度\",\"163\":\"v-c93be06c#最好、最坏、平均、均摊时间复杂度\",\"164\":\"v-c93be06c#_1-最好情况时间复杂度-best-case-time-complexity-、最坏情况时间复杂度-worst-case-time-complexity\",\"165\":\"v-c93be06c#_2-平均情况时间复杂度-average-case-time-complexity\",\"166\":\"v-c93be06c#_3-均摊时间复杂度-amortized-time-complexity\",\"167\":\"v-68a607de\",\"168\":\"v-68a607de#_1-几种常见的链表结构\",\"169\":\"v-68a607de#_1-1-单链表\",\"170\":\"v-68a607de#_1-2-循环链表\",\"171\":\"v-68a607de#_1-3-双向链表\",\"172\":\"v-68a607de#_1-4-双向循环链表\",\"173\":\"v-68a607de#_2-数组-v-s-链表\",\"174\":\"v-68a607de#_3-用链表的应用\",\"175\":\"v-68a607de#_3-1-实现-lru\",\"176\":\"v-68a607de#_3-2-快慢指针\",\"177\":\"v-68a607de#_4-正确写出链表代码\",\"178\":\"v-68a607de#_4-1-理解指针或引用的含义-——-地址\",\"179\":\"v-68a607de#_4-2-警惕指针丢失和内存泄漏\",\"180\":\"v-68a607de#_4-3-利用哨兵简化实现难度\",\"181\":\"v-68a607de#_4-4-重点留意边界条件处理\",\"182\":\"v-68a607de#_4-5-举例画图-辅助思考\",\"183\":\"v-68a607de#_4-6-多写多练\",\"184\":\"v-c8b6f49c\",\"185\":\"v-c8b6f49c#introduction\",\"186\":\"v-c8b6f49c#_1-阻塞队列\",\"187\":\"v-c8b6f49c#_2-并发队列\",\"188\":\"v-c8b6f49c#q-线程池没有空闲线程时-新的任务请求线程资源时-线程池该如何处理\",\"189\":\"v-2bfb5101\",\"190\":\"v-2bfb5101#递归需要满足的-3-个条件\",\"191\":\"v-2bfb5101#如何编写递归代码\",\"192\":\"v-2bfb5101#递归代码要警惕堆栈溢出\",\"193\":\"v-2bfb5101#警惕重复计算\",\"194\":\"v-2bfb5101#将递归代码改为非递归代码\",\"195\":\"v-3a6dc312\",\"196\":\"v-3a6dc312#_1-跳表\",\"197\":\"v-3a6dc312#_2-时间复杂度\",\"198\":\"v-3a6dc312#_3-空间复杂度\",\"199\":\"v-3a6dc312#_4-高效的动态插入和删除\",\"200\":\"v-3a6dc312#_5-跳表索引动态更新\",\"201\":\"v-1f043171\",\"202\":\"v-1f043171#_1-冒泡、插入、选择\",\"203\":\"v-1f043171#_1-1-bubble-sort\",\"204\":\"v-1f043171#_1-2-insertion-sort\",\"205\":\"v-1f043171#_1-3-selection-sort\",\"206\":\"v-1f043171#_1-4-小结\",\"207\":\"v-1f043171#_2-归并排序-快速排序\",\"208\":\"v-1f043171#_2-1-merge-sort\",\"209\":\"v-1f043171#_2-2-quick-sort\",\"210\":\"v-1f043171#_2-3-比较\",\"211\":\"v-1f043171#_3-线性排序-桶排序、计数排序、基数排序\",\"212\":\"v-1f043171#_3-1-bucket-sort\",\"213\":\"v-1f043171#_3-2-counting-sort\",\"214\":\"v-1f043171#_3-3-radix-sort\",\"215\":\"v-1f043171#_4-实现通用、高性能的排序函数\",\"216\":\"v-1f043171#优化排序\",\"217\":\"v-bb09a2ca\",\"218\":\"v-bb09a2ca#栈的应用\",\"219\":\"v-bb09a2ca#函数调用栈\",\"220\":\"v-bb09a2ca#表达式求值\",\"221\":\"v-bb09a2ca#括号匹配\",\"222\":\"v-bb09a2ca#浏览器回退、前进\",\"223\":\"v-ba48219a\",\"224\":\"v-ba48219a#_1-字符匹配\",\"225\":\"v-ba48219a#_2-位置匹配\",\"226\":\"v-42d4835c\",\"227\":\"v-42d4835c#_1-动词搭配\",\"228\":\"v-42d4835c#_2-名词\",\"229\":\"v-42d4835c#_3-形容词、副词\",\"230\":\"v-1d30fdf3\",\"231\":\"v-1d30fdf3#_1-表示喜欢、不喜欢\",\"232\":\"v-1d30fdf3#_2-说-yes、no\",\"233\":\"v-1d30fdf3#_3-比较\",\"234\":\"v-1d30fdf3#_4-开头的一些口语化表达\",\"235\":\"v-1d30fdf3#_5-coherence\",\"236\":\"v-1d30fdf3#_6-habitats\",\"237\":\"v-1d30fdf3#_7-idioms\",\"238\":\"v-3c4cb40e\",\"239\":\"v-3c4cb40e#_1-comparison\",\"240\":\"v-565cd864\",\"241\":\"v-565cd864#_1-studies\",\"242\":\"v-565cd864#useful-vocabulary\",\"243\":\"v-565cd864#_2-work\",\"244\":\"v-565cd864#useful-vocabulary-1\",\"245\":\"v-565cd864#_3-accommodation\",\"246\":\"v-565cd864#useful-vocabulary-2\",\"247\":\"v-565cd864#_4-hometown\",\"248\":\"v-565cd864#useful-vocabulary-3\",\"249\":\"v-4289b8e5\",\"250\":\"v-4289b8e5#_1-introduction\",\"251\":\"v-4289b8e5#_1-1-特征工程的目标\",\"252\":\"v-4289b8e5#_1-2-关键原则\",\"253\":\"v-4289b8e5#_2-互信息-mutual-information-mi\",\"254\":\"v-4289b8e5#_2-1-什么是互信息\",\"255\":\"v-4289b8e5#_2-2-互信息分数\",\"256\":\"v-4289b8e5#_3-特征创建-creating-features\",\"257\":\"v-4289b8e5#_3-1-数学转换\",\"258\":\"v-4289b8e5#_3-2-计数-counts\",\"259\":\"v-4289b8e5#字符串合并与拆分\",\"260\":\"v-4289b8e5#_3-3-group-transforms\",\"261\":\"v-4289b8e5#_4-使用-k-means-进行聚类\",\"262\":\"v-4289b8e5#_5\",\"263\":\"v-495ba690\",\"264\":\"v-495ba690#_1-nlp-介绍\",\"265\":\"v-495ba690#_1-1-术语-architectures-vs-checkpoints\",\"266\":\"v-495ba690#_2-transformers-能做什么\",\"267\":\"v-495ba690#_2-1-快速体验-🤗-transformers-库\",\"268\":\"v-495ba690#_2-2-局限性-偏见\",\"269\":\"v-495ba690#_3-transformer-背景知识\",\"270\":\"v-495ba690#_3-1-transformer-是语言模型-language-model\",\"271\":\"v-495ba690#_3-2-transformer-是大模型\",\"272\":\"v-495ba690#_3-3-迁移学习-transfer-learning\",\"273\":\"v-495ba690#_4-transformer-结构\",\"274\":\"v-495ba690#_4-1-注意力层-attention-layers\",\"275\":\"v-495ba690#_4-2-原始模型\",\"276\":\"v-495ba690#_5-小结\",\"277\":\"v-45f1f552\",\"278\":\"v-45f1f552#_1-pipeline-都做了什么\",\"279\":\"v-45f1f552#_1-1-使用-tokenizer-进行预处理\",\"280\":\"v-45f1f552#_1-2-model\",\"281\":\"v-45f1f552#_1-2-1-model-输出-hidden-states-或-features-高维张量\",\"282\":\"v-45f1f552#_1-2-2-model-heads\",\"283\":\"v-45f1f552#_1-3-后处理\",\"284\":\"v-45f1f552#_2-models\",\"285\":\"v-45f1f552#_2-1-创建-transformer\",\"286\":\"v-45f1f552#_2-1-1-不同的加载方法\",\"287\":\"v-45f1f552#_2-1-2-保存方法\",\"288\":\"v-45f1f552#_2-2-使用-transformer-进行推理-inference\",\"289\":\"v-45f1f552#_3-tokenizers\",\"290\":\"v-45f1f552#_3-1-tokenization-算法\",\"291\":\"v-45f1f552#_3-1-1-word-based\",\"292\":\"v-45f1f552#_3-1-2-character-based\",\"293\":\"v-45f1f552#_3-1-3-subword-tokenization\",\"294\":\"v-45f1f552#_3-2-加载-保存\",\"295\":\"v-45f1f552#_3-3-编码-encoding\",\"296\":\"v-45f1f552#_3-3-1-tokenization\",\"297\":\"v-45f1f552#_3-3-2-将-tokens-转换为-input-ids\",\"298\":\"v-45f1f552#_3-4-解码-decoding\",\"299\":\"v-45f1f552#_3-5-小结\",\"300\":\"v-45f1f552#_4-处理多个序列\",\"301\":\"v-45f1f552#_4-1-批处理\",\"302\":\"v-45f1f552#_4-2-填充-padding\",\"303\":\"v-45f1f552#_4-3-attention-masks\",\"304\":\"v-45f1f552#_4-4-长序列\",\"305\":\"v-45f1f552#_5-tokenizer-api\",\"306\":\"v-45f1f552#_5-1-特殊-token\",\"307\":\"v-45f1f552#_5-2-小结\",\"308\":\"v-45f1f552#总结\",\"309\":\"v-42884414\",\"310\":\"v-42884414#_1-处理数据\",\"311\":\"v-42884414#_1-1-从-hub-中加载数据集\",\"312\":\"v-42884414#_1-2-数据集预处理\",\"313\":\"v-42884414#_1-3-动态填充-dynamic-padding\",\"314\":\"v-42884414#_2-使用-trainer-api-进行微调\",\"315\":\"v-42884414#_2-1-训练-training\",\"316\":\"v-42884414#_2-2-评估-evaluation\",\"317\":\"v-42884414#_3-使用-pytorch-训练\",\"318\":\"v-42884414#_3-1-准备\",\"319\":\"v-42884414#_3-1-1-数据加载器-dataloader-用于迭代批次\",\"320\":\"v-42884414#_3-1-2-model\",\"321\":\"v-42884414#_3-1-3-优化器-optimizer\",\"322\":\"v-42884414#_3-1-4-学习率调度器-learning-rate-scheduler\",\"323\":\"v-42884414#_3-2-training-loop\",\"324\":\"v-42884414#_3-3-evaluation-loop\",\"325\":\"v-42884414#_3-4-使用-🤗-accelerate-进行加速\",\"326\":\"v-42884414#总结\",\"327\":\"v-3f1e92d6\",\"328\":\"v-3f1e92d6#_1-使用预训练模型\",\"329\":\"v-3f1e92d6#_2-共享预训练模型\",\"330\":\"v-3f1e92d6#_2-1-创建模型仓库\",\"331\":\"v-3f1e92d6#_2-1-1-使用-push-to-hub-api\",\"332\":\"v-3f1e92d6#_2-1-2-使用-huggingface-hub-python-库\",\"333\":\"v-3f1e92d6#_2-1-3-使用-web-页面\",\"334\":\"v-3f1e92d6#_2-2-上传-model-files\",\"335\":\"v-3f1e92d6#_2-3-1-upload-file-方法\",\"336\":\"v-3f1e92d6#_2-3-2-repository-类\",\"337\":\"v-3f1e92d6#_2-3-3-git-based-方法\",\"338\":\"v-3f1e92d6#_3-建立-model-card\",\"339\":\"v-3f1e92d6#model-card-metadata\",\"340\":\"v-3c00f975\",\"341\":\"v-3c00f975#_1-处理不在-hugging-face-hub-上的数据集\",\"342\":\"v-3c00f975#_1-1-加载本地数据集\",\"343\":\"v-3c00f975#_1-2-加载远程数据集\",\"344\":\"v-3c00f975#_2-切片\",\"345\":\"v-3c00f975#_2-1-slicing-and-dicing-数据\",\"346\":\"v-3c00f975#_2-2-创建新列\",\"347\":\"v-3c00f975#_2-3-map-方法\",\"348\":\"v-0f0ad766\",\"349\":\"v-0f0ad766#_1-物理层-mac-层\",\"350\":\"v-0f0ad766#_1-1-第一层-物理层\",\"351\":\"v-0f0ad766#_1-2-第二层-数据链路层\",\"352\":\"v-0f0ad766#mac-medium-access-control-媒体访问控制\",\"353\":\"v-0f0ad766#arp-协议\",\"354\":\"v-0f0ad766#交换机-转发表\",\"355\":\"v-0f0ad766#_2-交换机与-vlan\",\"356\":\"v-0f0ad766#环路问题-stp-协议\",\"357\":\"v-0f0ad766#stp-的工作过程\",\"358\":\"v-0f0ad766#广播问题-安全问题\",\"359\":\"v-0f0ad766#_3-icmp-与-ping\",\"360\":\"v-0f0ad766#icmp\",\"361\":\"v-0f0ad766#ping\",\"362\":\"v-0f0ad766#traceroute-差错报文的使用\",\"363\":\"v-0f0ad766#小结\",\"364\":\"v-0f0ad766#_4-网关-一般是路由器-——三层设备\",\"365\":\"v-0f0ad766#_4-1-静态路由\",\"366\":\"v-0f0ad766#ip-头、mac-头中的字段哪些会改变\",\"367\":\"v-0f0ad766#_4-2-配置路由-策略路由\",\"368\":\"v-0f0ad766#_4-3-动态路由\",\"369\":\"v-0f0ad766#动态路由算法\",\"370\":\"v-0f0ad766#动态路由协议\",\"371\":\"v-fabb23a2\",\"372\":\"v-fabb23a2#七种类型\",\"373\":\"v-fabb23a2#_1-undefined、null\",\"374\":\"v-fabb23a2#_2-string\",\"375\":\"v-fabb23a2#_3-number\",\"376\":\"v-fabb23a2#_4-symbol\",\"377\":\"v-fabb23a2#_5-object\",\"378\":\"v-fabb23a2#_6-类型转换\",\"379\":\"v-fabb23a2#_6-1-stringtonumber-number-str\",\"380\":\"v-fabb23a2#_6-2-numbertostring-string-num\",\"381\":\"v-fabb23a2#_6-3-object-to-primitive-conversion-对象-基本类型的转换-拆箱转换\",\"382\":\"v-fabb23a2#_6-4-基本类型-对象的转换-装箱转换\",\"383\":\"v-0d730495\",\"384\":\"v-0d730495#_2-1-do-you-know-network-latency\",\"385\":\"v-0d730495#_2-2-do-you-think-network-is-important\",\"386\":\"v-0d730495#_2-3-the-importance-of-network-latency\",\"387\":\"v-0d730495#_2-4-factors-affecting-latency\",\"388\":\"v-05453a55\",\"389\":\"v-05453a55#_1-1-are-there-wild-animals-in-your-country\",\"390\":\"v-05453a55#_1-2-have-you-ever-been-to-a-zoo-or-a-safari-park\",\"391\":\"v-05453a55#_1-3-what-is-the-animal-you-would-like-to-see-in-the-wild\",\"392\":\"v-05453a55#_1-4-are-there-tv-programs-about-wild-animals-in-your-country\",\"393\":\"v-05453a55#_2-1-what-is-your-favorite-day-of-the-week\",\"394\":\"v-05453a55#_2-2-what-is-your-lease-favorite-day\",\"395\":\"v-05453a55#_2-3-what-is-the-busiest-day-of-the-week-for-you\",\"396\":\"v-05453a55#_2-4-is-there-anything-that-you-do-every-day\",\"397\":\"v-05453a55#_2-5-what-do-you-usually-do-on-weekends\",\"398\":\"v-05453a55#_2-6-are-weekdays-and-weekends-the-same-for-you\",\"399\":\"v-4b7112f4\",\"400\":\"v-4b7112f4#_3-1-do-you-prefer-to-watch-tv-programmes-on-a-tv-or-your-mobile-phone\",\"401\":\"v-4b7112f4#_3-2-do-you-always-watch-the-same-kinds-of-programmes\",\"402\":\"v-4b7112f4#_4-1-do-you-prefer-to-watch-tv-programmes-on-your-tv-or-mobile-phone\",\"403\":\"v-4b7112f4#_4-2-do-you-always-watch-the-same-kind-of-programmes\",\"404\":\"v-695ee1fb\",\"405\":\"v-695ee1fb#_3-1-what-helps-you-concentrate\",\"406\":\"v-695ee1fb#_3-2-what-do-you-do-when-you-can-t-concentrate\",\"407\":\"v-4a806310\",\"408\":\"v-4a806310#_3-1-what-kinds-of-flowers-do-you-like\",\"409\":\"v-4a806310#_3-2-are-there-any-flowers-that-have-special-meanings-in-your-country\",\"410\":\"v-4a806310#_4-1-what-kinds-of-flowers-do-you-like\",\"411\":\"v-4a806310#_4-2-are-there-any-flowers-that-have-a-special-meaning-in-your-country\",\"412\":\"v-76f2dc9b\",\"413\":\"v-76f2dc9b#_3-1-do-you-think-people-will-still-write-letters-in-the-future\",\"414\":\"v-76f2dc9b#_3-2-what-do-you-think-are-the-differences-between-writing-with-a-pen-and-typing-on-a-computer\",\"415\":\"v-6ed23d18\",\"416\":\"v-6ed23d18#_3-1-do-you-like-history\",\"417\":\"v-6ed23d18#_3-2-did-you-enjoy-learning-history-when-you-were-a-child-at-school\",\"418\":\"v-6ed23d18#_4-1-do-you-like-history\",\"419\":\"v-6ed23d18#_4-2-did-you-enjoy-learning-history-as-a-child\",\"420\":\"v-6eb8ee75\",\"421\":\"v-6eb8ee75#_3-1-do-you-like-singing\",\"422\":\"v-6eb8ee75#_3-2\",\"423\":\"v-c4110b2e\",\"424\":\"v-c4110b2e#_3-1-do-you-like-to-look-at-the-sky\",\"425\":\"v-c4110b2e#_3-2-do-you-know-much-about-the-stars\",\"426\":\"v-c4110b2e#_4-1-do-you-like-to-look-at-the-sky\",\"427\":\"v-c4110b2e#_4-2-do-you-know-much-about-the-stars\",\"428\":\"v-c4110b2e#_4-3-how-did-you-learn-about-the-stars\",\"429\":\"v-2877aa14\",\"430\":\"v-2877aa14#_3-1-what-kind-of-weather-do-you-like\",\"431\":\"v-2877aa14#_3-2-do-you-prefer-dry-or-wet-weather\",\"432\":\"v-16fc29d4\",\"433\":\"v-16fc29d4#_3-1-have-you-ever-seen-wild-animals-before\",\"434\":\"v-16fc29d4#_3-2-do-you-like-to-go-to-the-zoo\",\"435\":\"v-30c797d8\",\"436\":\"v-e4cb1150\",\"437\":\"v-15217c36\",\"438\":\"v-2d0a776e\",\"439\":\"v-72c72144\",\"440\":\"v-7664c5fa\",\"441\":\"v-cdc722de\",\"442\":\"v-146a1089\",\"443\":\"v-8fa0fce4\",\"444\":\"v-5c22ae88\",\"445\":\"v-1a38e8f2\",\"446\":\"v-b6223fc6\",\"447\":\"v-b6223f88\",\"448\":\"v-0da66b30\",\"449\":\"v-ffbdf6be\",\"450\":\"v-093bfdbe\",\"451\":\"v-25e79b38\",\"452\":\"v-47e2844c\",\"453\":\"v-578c8e3d\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[2],\"2\":[2],\"3\":[4,124],\"4\":[7,59],\"5\":[8,59],\"6\":[7,35],\"7\":[3,19],\"8\":[1],\"9\":[2,43],\"10\":[2,44],\"11\":[1,35],\"12\":[2,23],\"13\":[2,53],\"14\":[3,12],\"15\":[7,29],\"16\":[7,17],\"17\":[3,17],\"18\":[1,42],\"19\":[2,59],\"20\":[3,86],\"21\":[2,44],\"22\":[9,43],\"23\":[3,45],\"24\":[1,44],\"25\":[1],\"26\":[2,81],\"27\":[3,23],\"28\":[2,229],\"29\":[2,4],\"30\":[1],\"31\":[2,12],\"32\":[2,12],\"33\":[4],\"34\":[3,8],\"35\":[5,32],\"36\":[3,42],\"37\":[2],\"38\":[4,19],\"39\":[2,37],\"40\":[2],\"41\":[3,42],\"42\":[7,26],\"43\":[2,52],\"44\":[6,71],\"45\":[4,79],\"46\":[4,54],\"47\":[6,41],\"48\":[1,32],\"49\":[3,77],\"50\":[2],\"51\":[4,12],\"52\":[4,6],\"53\":[6,27],\"54\":[3,40],\"55\":[6,22],\"56\":[4,30],\"57\":[4,58],\"58\":[5],\"59\":[2,78],\"60\":[3,16],\"61\":[4,38],\"62\":[3,51],\"63\":[6,32],\"64\":[2,58],\"65\":[3,17],\"66\":[2,26],\"67\":[5,14],\"68\":[7,39],\"69\":[3,108],\"70\":[5,78],\"71\":[1,12],\"72\":[2,9],\"73\":[1,2],\"74\":[2,85],\"75\":[2,67],\"76\":[1,1],\"77\":[1,25],\"78\":[3,14],\"79\":[3,16],\"80\":[3,16],\"81\":[4,68],\"82\":[2,4],\"83\":[2,106],\"84\":[2,2],\"85\":[8,20],\"86\":[7,83],\"87\":[11,46],\"88\":[8,69],\"89\":[8,30],\"90\":[3,34],\"91\":[2,4],\"92\":[5],\"93\":[3,14],\"94\":[3,82],\"95\":[6,31],\"96\":[3,21],\"97\":[4,45],\"98\":[6],\"99\":[3,76],\"100\":[3,47],\"101\":[2,29],\"102\":[3,36],\"103\":[3,16],\"104\":[3,4],\"105\":[2,23],\"106\":[3,81],\"107\":[4,44],\"108\":[3,33],\"109\":[1,3],\"110\":[5],\"111\":[4,81],\"112\":[4,166],\"113\":[3,65],\"114\":[8,20],\"115\":[2,7],\"116\":[4,34],\"117\":[4,28],\"118\":[4,39],\"119\":[4,19],\"120\":[3,20],\"121\":[8,101],\"122\":[2,46],\"123\":[2],\"124\":[2,44],\"125\":[2,78],\"126\":[2],\"127\":[3,44],\"128\":[3,29],\"129\":[4,122],\"130\":[2],\"131\":[5,15],\"132\":[3,51],\"133\":[3,52],\"134\":[3,6],\"135\":[2],\"136\":[1,23],\"137\":[1,7],\"138\":[9,23],\"139\":[2,17],\"140\":[2,41],\"141\":[2],\"142\":[3,24],\"143\":[3,24],\"144\":[3,24],\"145\":[2,24],\"146\":[1,25],\"147\":[2],\"148\":[5,5],\"149\":[5,36],\"150\":[6,17],\"151\":[6,31],\"152\":[5,28],\"153\":[2],\"154\":[4,117],\"155\":[2,4],\"156\":[3,10],\"157\":[2,11],\"158\":[3,29],\"159\":[3,41],\"160\":[1],\"161\":[1],\"162\":[2,44],\"163\":[4],\"164\":[9,28],\"165\":[7,31],\"166\":[6,13],\"167\":[1],\"168\":[2,6],\"169\":[2,17],\"170\":[3,13],\"171\":[3,23],\"172\":[3],\"173\":[5,45],\"174\":[2],\"175\":[4,23],\"176\":[3,7],\"177\":[2],\"178\":[4],\"179\":[3,5],\"180\":[3,64],\"181\":[2,5],\"182\":[4],\"183\":[3,15],\"184\":[1],\"185\":[1,33],\"186\":[2,18],\"187\":[2,26],\"188\":[4,41],\"189\":[1],\"190\":[3,5],\"191\":[1,36],\"192\":[1,46],\"193\":[1,41],\"194\":[1,33],\"195\":[1,13],\"196\":[2,16],\"197\":[9,28],\"198\":[5,32],\"199\":[9,6],\"200\":[2,23],\"201\":[1,34],\"202\":[4,2],\"203\":[3,72],\"204\":[4,61],\"205\":[4,39],\"206\":[3,45],\"207\":[3,2],\"208\":[4,113],\"209\":[3,86],\"210\":[3,50],\"211\":[5],\"212\":[4,38],\"213\":[4,59],\"214\":[3,15],\"215\":[3,35],\"216\":[1,24],\"217\":[1],\"218\":[1],\"219\":[1,11],\"220\":[1,19],\"221\":[1,14],\"222\":[2,21],\"223\":[1,4],\"224\":[2,82],\"225\":[2,79],\"226\":[1],\"227\":[2,48],\"228\":[2,24],\"229\":[3,13],\"230\":[1],\"231\":[3,31],\"232\":[4,56],\"233\":[2,42],\"234\":[2,37],\"235\":[2,6],\"236\":[2,8],\"237\":[2,55],\"238\":[1],\"239\":[2,18],\"240\":[1],\"241\":[2],\"242\":[2,81],\"243\":[2],\"244\":[2,157],\"245\":[2],\"246\":[2,145],\"247\":[2],\"248\":[2,86],\"249\":[1],\"250\":[2,41],\"251\":[2,7],\"252\":[3,11],\"253\":[6,25],\"254\":[3,13],\"255\":[2,165],\"256\":[5],\"257\":[3,41],\"258\":[5,31],\"259\":[1,62],\"260\":[3,154],\"261\":[5,109],\"262\":[2],\"263\":[3],\"264\":[3,27],\"265\":[5,34],\"266\":[3,8],\"267\":[6,71],\"268\":[3,49],\"269\":[3,23],\"270\":[7,24],\"271\":[4,2],\"272\":[5,15],\"273\":[3,59],\"274\":[6,25],\"275\":[3,49],\"276\":[2,25],\"277\":[4,31],\"278\":[3,6],\"279\":[4,115],\"280\":[3,59],\"281\":[9,35],\"282\":[4,46],\"283\":[3,66],\"284\":[2,15],\"285\":[4,61],\"286\":[3,39],\"287\":[3,36],\"288\":[6,47],\"289\":[2,9],\"290\":[4],\"291\":[4,69],\"292\":[5,39],\"293\":[4,26],\"294\":[4,69],\"295\":[4,37],\"296\":[3,28],\"297\":[7,18],\"298\":[5,34],\"299\":[3,12],\"300\":[2,7],\"301\":[3,110],\"302\":[5,74],\"303\":[4,93],\"304\":[2,80],\"305\":[3,13],\"306\":[4,60],\"307\":[3,50],\"308\":[1,22],\"309\":[2,21],\"310\":[2,33],\"311\":[4,83],\"312\":[3,144],\"313\":[6,81],\"314\":[5,42],\"315\":[5,147],\"316\":[4,127],\"317\":[4,43],\"318\":[3,47],\"319\":[5,40],\"320\":[4,31],\"321\":[5,22],\"322\":[8,42],\"323\":[4,56],\"324\":[3,56],\"325\":[6,116],\"326\":[1,26],\"327\":[5,21],\"328\":[2,14],\"329\":[2,19],\"330\":[3],\"331\":[7,107],\"332\":[7,62],\"333\":[6,3],\"334\":[4,17],\"335\":[6,36],\"336\":[4,62],\"337\":[5,126],\"338\":[4,41],\"339\":[3,30],\"340\":[4,39],\"341\":[6,32],\"342\":[2,69],\"343\":[3,26],\"344\":[2],\"345\":[6,403],\"346\":[2,73],\"347\":[4,16],\"348\":[1],\"349\":[4],\"350\":[4,4],\"351\":[5],\"352\":[6,59],\"353\":[2,49],\"354\":[2,45],\"355\":[3,65],\"356\":[3,39],\"357\":[2,6],\"358\":[2,37],\"359\":[4],\"360\":[1,138],\"361\":[1,60],\"362\":[2,76],\"363\":[1,10],\"364\":[4,65],\"365\":[3,21],\"366\":[4,79],\"367\":[4,144],\"368\":[3,4],\"369\":[1,56],\"370\":[1,74],\"371\":[1],\"372\":[1,7],\"373\":[3,17],\"374\":[2,36],\"375\":[2,76],\"376\":[2,22],\"377\":[2,31],\"378\":[2,9],\"379\":[6,38],\"380\":[6,15],\"381\":[10,19],\"382\":[6,1],\"383\":[2,99],\"384\":[8,37],\"385\":[8,45],\"386\":[7,40],\"387\":[5,41],\"388\":[3],\"389\":[9,62],\"390\":[13,69],\"391\":[14,56],\"392\":[13,52],\"393\":[11,77],\"394\":[8,53],\"395\":[12,52],\"396\":[11,61],\"397\":[9,91],\"398\":[11,69],\"399\":[4,71],\"400\":[16,83],\"401\":[12,87],\"402\":[15,72],\"403\":[12,219],\"404\":[3,60],\"405\":[7,63],\"406\":[10,186],\"407\":[3,138],\"408\":[10,45],\"409\":[14,45],\"410\":[10,54],\"411\":[15,168],\"412\":[3,54],\"413\":[14,57],\"414\":[19,53],\"415\":[3,49],\"416\":[7,59],\"417\":[14,62],\"418\":[7],\"419\":[11,215],\"420\":[3,21],\"421\":[7,74],\"422\":[2],\"423\":[5,73],\"424\":[11,81],\"425\":[10,42],\"426\":[11,53],\"427\":[10,39],\"428\":[9,283],\"429\":[3,26],\"430\":[10,48],\"431\":[10,49],\"432\":[4,56],\"433\":[10,41],\"434\":[10,232],\"435\":[1,620],\"436\":[1],\"437\":[1],\"438\":[1],\"439\":[2],\"440\":[1],\"441\":[1],\"442\":[1],\"443\":[2],\"444\":[2],\"445\":[2],\"446\":[1],\"447\":[1],\"448\":[1],\"449\":[1],\"450\":[2],\"451\":[2],\"452\":[2],\"453\":[1]},\"averageFieldLength\":[3.8832599118942723,47.79912736881607],\"storedFields\":{\"0\":{\"h\":\"首页\"},\"1\":{\"h\":\"Quantitative Analysis\"},\"2\":{\"h\":\"1. 指标\"},\"3\":{\"h\":\"1.1 Bollinger bands 布林线\",\"t\":[\"布林线包括上中下三条轨道线。上-压力线、中-价格平均线、下-支撑线。\",\"中轨：20日 MA\",\"上轨：20日 MA + 2 * SD\",\"下轨：20日 MA - 2 * SD\",\"如何使用布林线呢？\",\"内容来自 布林带指标是什么？布林线指标怎么用。\",\"当价格在中轨和上轨之间的区域运行时，只要价格不跌破中轨，说明市场处于多头（买入）行情中，价格趋势向上，此时的交易策略应该是逢低买进，暂不考虑做空（卖出）\",\"当价格沿着布林上轨运行时，市场为单边上涨行情(稳定上涨)，持有多单的要守住，只要价格不脱离上轨区域就耐心持有。\",\"当价格在中轨和下轨之间的区域运行时，只要价格不冲破中轨，说明市场处于空头（卖出）行情中，价格趋势向下，此时我们的交易策略就是逢高卖出，暂不考虑做多（买进）。\",\"当价格沿着布林下轨运行时，市场为单边下跌行情(稳定下跌)，持有的空单的只要价格不脱离下轨，也是耐心持有。\",\"行情震荡并且有一定空间时，如果高点的连线与低点的连线形成基本平行，价格一般会围绕价格中轨来回运动。 这时候可以高卖低买，在股价接近布林上轨时卖出，在股价接近布林下轨时买入，高抛低吸反复操作。\",\"当布林带通道收窄，价格会进入到一个狭窄的范围内振荡休整，振荡的价格区域会越来越小，这种状态往往是大行情（爆发性大幅上涨/下跌）要来临前的预兆，要采取的交易策略就是耐心等待。\",\"如果布林通道随即出现突然扩张，投资者就该观测好股价的突破方向，顺应行情做好交易的准备。如果股价向上突破则买入，向下突破则卖出。\",\"这种情况不常见，但却是很好的进场点，把握得好的话，投资成功率很高。\",\"在上涨趋势中，布林带的下轨会在趋势结束前收口，这个时候可以观察情况考虑高位卖出。 在下跌趋势中，布林带的上轨会在趋势结束前收口，这个时候可以观察情况考虑低位买入。\",\"提防极端行情拐点。\",\"当布林带上轨或者下轨开口达到相当大的幅度，如果股价格远远偏离了上轨或者下轨，也就是说当有至少两根K线的实体完全突破上轨或者完全跌破下轨时，就说明行情在短期内进入了超涨或者超跌状态。\",\"当股价在布林带内宽幅震荡时，如果市场上没有什么会影响股价的重要消息爆出，那么可以在股价触碰布林带上轨时卖出、触碰布林带下轨时买入，高抛低吸反复操作。\",\"MA、SD\",\"Moving Average (MA) 滑动平均\",\"简单移动平均 Simple Moving Average\",\"SMAt​=nP1​+P2​+...+Pn​​\",\"n 为时间周期\",\"加权滑动平均 Weighted Moving Average\",\"WMAt​=T(T+1)/2Tyt​+(T−1)yt−1​+...+2yt−T+2​+yt−T+1​​\",\"T 为时间周期\",\"指数移动平均 Exponential Moving Average\",\"EMAt​={​y1​αyt​+(1−α)EMAt−1​​​t=1t>2​\",\"其中 α∈(0,1)。表示权重的衰减程度。α 越大，表示过去的观测值衰减得越快。\",\"α=1+T2​\",\"T 是用来计算 α 的参数，它不表示指数衰减在 T 期后结束。\",\"Standard Deviation (SD) 标准差\"]},\"4\":{\"h\":\"1.2 Relative Strength Index (RSI) 相对强弱指数\",\"t\":[\"利用平均收盘价上涨和下跌的幅度比较，从而确定市场的趋势和强度。\",\"如何使用 RSI\",\"超买、超卖信号 一般认为，当RSI超过70时，表示股票已经超买，可能会出现价格回调的机会；当RSI低于30时，表示股票已经超卖，可能会出现反弹的机会。\",\"转折信号RSI指标也可以提供价格趋势的转折信号。 当RSI从超买区（通常是70以上）下跌并跌破50时，这可能是一个卖出信号。相反，当RSI从超卖区（通常是30以下）上涨并突破50时，这可能是一个买入信号。\",\"交叉信号：RSI指标的快线和慢线交叉也可以提供买入和卖出的信号。 当RSI快线从下方向上突破RSI慢线时，这可能是一个买入信号。相反，当RSI快线从上方向下突破RSI慢线时，这可能是一个卖出信号。\",\"配合其他指标使用：为了增强RSI指标的有效性，投资者可以将其与其他技术指标结合使用。 例如，结合移动平均线、布林带或成交量指标等，可以提高预测准确性，并进一步确认买卖信号。\",\"计算\",\"step 1: 计算平均收盘价上涨和下跌的幅度。\",\"平均收盘价上涨的幅度 = 当前收盘价 - 上一个交易日的收盘价\",\"平均收盘价下跌的幅度 = 上一个交易日的收盘价 - 当前收盘价\",\"step 2: 分别计算上涨日的平均涨幅（UM）和下跌日的平均跌幅（DM）\",\"首先计算每一天的涨幅和跌幅\",\"将所有上涨日的涨幅相加求平均得到 UM\",\"将所有下跌日的跌幅相加求平均得到 DM\",\"step 2: 计算相对强度（Relative Strength）\",\"RS=DMUM​\",\"step 3: 计算相对强弱指标（RSI）\",\"RSI=100−1+RS100​\"]},\"5\":{\"h\":\"1.3 Moving Average Convergence Divergence (MACD) 平滑异同移动平均线\",\"t\":[\"利用短期（常用为12日）移动平均线与长期（常用为26日）移动平均线之间的聚合与分离状况，对买进、卖出时机作出研判的技术指标。\",\"DIF 线：快速线是由短期移动平均线（通常为12天）减去长期移动平均线（通常为26天）得出的差值。这条线代表了价格短期内的快速变化。\",\"DEA 线：慢速线是对快速线进行平滑处理得到的，通常采用9天的移动平均线。这条线用于平滑快速线的波动，并产生买入和卖出的信号。\",\"柱状图：柱状图是快速线和慢速线之间的差值。当快速线向上突破慢速线时，柱状图为正值，表示买入信号；当快速线向下突破慢速线时，柱状图为负值，表示卖出信号。\",\"如何使用 MACD\",\"趋势判断：当快速线向上穿过慢速线时，表示市场可能处于上升趋势；当快速线向下穿过慢速线时，表示市场可能处于下降趋势。\",\"交叉信号：当快速线和慢速线发生交叉时，产生信号。当快速线从下方向上穿过慢速线时，被称为“金叉”，可能预示价格上涨的可能性增加；当快速线从上方向下穿过慢速线时，被称为“死叉”，可能预示价格下跌的可能性增加。\",\"柱状图的变化：柱状图的正负值和变化趋势可以用来确认价格趋势的强弱和判断价格的超买超卖情况。正值表示买入信号的强度增加，负值表示卖出信号的强度增加。\",\"MACD 具有滞后性，因此单独使用时可能会产生延迟的信号。结合其他技术指标和趋势分析工具，可以提高交易决策的准确性。\",\"正因为 MACD 有滞后性，所以通常用它来看大级别，大级别的方向确定后，小级别的操作也就相对得心应手很多。\",\"计算\"]},\"6\":{\"h\":\"1.4 On Balance Volume (OBV)\",\"t\":[\"是一种基于成交量的技术分析工具，旨在衡量市场买入和卖出压力的相对强度。该指标通过将每个交易日的成交量与价格的变化结合起来，来判断市场趋势的可靠性和价格的持续性。\",\"使用 OBV\",\"趋势确认：OBV指标与价格的趋势相一致时，可以确认当前趋势的可靠性。如果价格上涨且OBV也上涨，或者价格下跌且OBV也下跌，这表示市场参与者对当前趋势持续性的看法一致，趋势可能持续。\",\"背离信号：当价格形成高点或低点时，OBV指标却形成了相反的低点或高点，这被称为背离。背离通常暗示着趋势可能发生反转。\",\"量价分析：通过比较OBV指标和价格走势的差异，可以判断市场买入和卖出压力的强弱。如果价格上涨但OBV下跌，意味着买盘减少，可能提示价格上涨的动力减弱。\",\"计算\",\"如果当日的收盘价高于前一日的收盘价，则当日的成交量被视为买入量，将其加到前一日的OBV值上。\",\"如果当日的收盘价低于前一日的收盘价，则当日的成交量被视为卖出量，将其从前一日的OBV值中减去。\",\"如果当日的收盘价等于前一日的收盘价，则当日的成交量被视为无效，将其忽略不计。\"]},\"7\":{\"h\":\"2. Python 库\",\"t\":[\"Yahoo Finance、Quandl、alpha_vantage\",\"算法交易：使用 Zipline、PyAlgoTrade 等库创建和回测交易策略。这些库提供了用于创建和测试交易算法以及优化参数和分析性能的工具。\",\"投资组合管理：使用 PyPortfolioOpt、PortfolioLab 等库来管理和优化投资组合。这些库提供了资产配置、风险管理和绩效分析的工具，这对于有效的投资组合管理至关重要。\"]},\"8\":{\"h\":\"Object\"},\"9\":{\"h\":\"1. 快速介绍\",\"t\":[\"// 创建 let user = new Object() let user = {} user.name = \\\"John\\\" user.age = 10 delete user.age user[\\\"likes birds\\\"] = true delete user[\\\"likes birds\\\"] // 判断属性是否存在 alert(\\\"age\\\" in user) let key = \\\"age\\\" alert(key in user) let key = prompt(\\\"输入一个 user 属性\\\", \\\"name\\\") alert(user[key]) for (key in obj) { alert(key) alert(obj[key]) } function makeUser(name, age) { return { name, age, } } // 变量名不能是保留字 // 但 属性名没有这个限制 let obj = { for: 1, let: 2, return: 3, } alert( obj.for + obj.let + obj.return ) // 6 // 属性只能是 Symbol 或 Sting let obj = { 0: \\\"test\\\", // 箱单与 \\\"0\\\": \\\"test\\\" } alter(obj[\\\"0\\\"]) alter(obj[0]) \"]},\"10\":{\"h\":\"2. 属性的顺序\",\"t\":[\"整数属性会进行排序，其他属性按照创建的顺序显示。\",\"相关信息\",\"如果一个字符串可以和一个整数互相转换，那么它就是整数属性。\",\"// Number(...) 显式转换为数字 // Math.trunc 是内建的去除小数部分的方法。 alert( String(Math.trunc(Number(\\\"49\\\"))) ); // \\\"49\\\"，相同，整数属性 alert( String(Math.trunc(Number(\\\"+49\\\"))) ); // \\\"49\\\"，不同于 \\\"+49\\\" ⇒ 不是整数属性 alert( String(Math.trunc(Number(\\\"1.2\\\"))) ); // \\\"1\\\"，不同于 \\\"1.2\\\" ⇒ 不是整数属性 \",\"如果想让属性按照自定义的方式（非数值大小）显示，只需给键名前加一个 +。\",\"let codes = { \\\"+49\\\": \\\"Germany\\\", \\\"+41\\\": \\\"Switzerland\\\", \\\"+44\\\": \\\"Great Britain\\\", // .., \\\"+1\\\": \\\"USA\\\" }; for (let code in codes) { alert( +code ); // 49, 41, 44, 1 } \"]},\"11\":{\"h\":\"Symbol\",\"t\":[\"symbol 是唯一标识符的基本类型，用 Symbol([name]) 创建。\",\"symbol 的值总是不同的，这样我们可以用于“隐藏”对象属性。JavaScript 提供了系统 symbol，用 Symbol.* 进行访问，使用它们可以修改一些内建行为。\",\"如果想让同名 symbol 相等，需要用到全局注册表，用 Symbol.for(name) 获取以及注册，返回的是 symbol；用 Symbol.keyFor(symbol) 可以在全局注册表中寻找其 name。\",\"对象的 key 只能是 String 类型或 Symbol 类型。使用字符串做 key 容易造成属性名的冲突，ES 6 引入 Symbol 正是为了防止属性名冲突的。\"]},\"12\":{\"h\":\"1. Symbols\",\"t\":[\"let id = Symbol(); // 传入 description let id1 = Symbol(\\\"id\\\"); let id2 = Symbol(\\\"id\\\"); id1 == id2 // false \",\"Symbols 不能自动转化成 String\",\"Symbol 不能自动转换成 String，你可以用 toString() 方法，或者输出 symbol.description\",\"let id = Symbol(\\\"id\\\"); console.log(id); // TypeError console.log(id.toString()); // Symbol(id) console.log(id.description); // id \"]},\"13\":{\"h\":\"2. 作用\",\"t\":[\"当我们使用外部的 user 对象时，想为该对象增加属性时，使用 Symbol 可以避免属性名冲突，有效防止双方对该属性进行的重写覆盖。\",\"// another code let user = { id: 'Their Id', name: 'John', } \",\"let id = Symbol(\\\"id\\\") user[id] = \\\"Our Id\\\" \",\"我们定义对象的时候，如果使用 Symbol，应该是：\",\"let id = Symbol(\\\"id\\\"); let user = { name: \\\"John\\\", age: 30, [id]: 123 // not \\\"id\\\": 123 }; \",\"使用 for...in 遍历 key 或 Object.keys(obj) 时，Symbol 会被略过\",\"let id = Symbol(\\\"id\\\"); let user = { name: \\\"John\\\", age: 30, [id]: 123 }; for (let key in user) alert(key); // name, age Object.keys(user); // ['name', 'age'] \",\"想要获得 symbol 属性，可以用以下方法：\",\"Object.getOwnPropertySymbols(obj) 可以获取所有的 symbol 属性\",\"Reflect.ownKeys(obj) 可以返回对象所有键，包括 symbol\",\"Object.assign() 既拷贝 string，也拷贝 symbol\",\"let id = Symbol(\\\"id\\\"); let user = { [id]: 123 }; let clone = Object.assign({}, user); alert( clone[id] ); // 123 \",\"我们在拷贝或者合并对象时是希望对所有的属性做操作的。\"]},\"14\":{\"h\":\"3. Global symbols\",\"t\":[\"有时我们希望在不同的地方使用相同名字的 symbol 且它们对应的实体也是相同的。\",\"为了达到这个目的，我们需要使用全局 symbol 注册表（global symbol register），全局注册表中的 symbol 被称为全局 Symbol。\"]},\"15\":{\"h\":\"3.1 Symbol.for(key) 读取 symbol\",\"t\":[\"在注册表中读取 symbol 时使用 Symbol.for(key)。如果全局注册表中有 description 为 key 的 symbol，就会返回该 symbol，都则将创建一个新的 symbol（即创建了 Symbol(key)），并将其存储在注册表中。\",\"// 从全局注册表中读取 let id = Symbol.for(\\\"id\\\"); // 如果该 symbol 不存在，则创建它 // 再次读取（可能是在代码中的另一个位置） let idAgain = Symbol.for(\\\"id\\\"); // 相同的 symbol alert( id === idAgain ); // true \"]},\"16\":{\"h\":\"3.2 Symbol.keyFor(symbol) 读取 description\",\"t\":[\"// 通过 name 获取 symbol let sym = Symbol.for(\\\"name\\\"); let sym2 = Symbol.for(\\\"id\\\"); let local_sym = Symbol(\\\"local\\\") // 通过 symbol 获取 name alert( Symbol.keyFor(sym) ); // name alert( Symbol.keyFor(sym2) ); // id alert( Symbol.keyFor(local_sym) ); // undefined 只能查找全局注册表中的 symbol \"]},\"17\":{\"h\":\"4. 系统 symbol\",\"t\":[\"JavaScript 内置了很多系统 symbol，用 Symbol.* 来调用。我们可以用它们来微调对象的各个方面。\",\"Symbol.hasInstance\",\"Symbol.isConcatSpreadable\",\"Symbol.iterator\",\"Symbol.toPrimitive\",\"可以参考 iterables ，其中使用 Symbol.iterator 微调对象，以使得对象具有迭代性质。\"]},\"18\":{\"h\":\"总结\",\"t\":[\"symbol 是唯一标识符的基本类型，用 Symbol([name]) 创建。\",\"symbol 的值总是不同的，这样我们可以用于“隐藏”对象属性。JavaScript 提供了系统 symbol，用 Symbol.* 进行访问，使用它们可以修改一些内建行为。\",\"如果想让同名 symbol 相等，需要用到全局注册表，用 Symbol.for(name) 获取以及注册，返回的是 symbol；用 Symbol.keyFor(symbol) 可以在全局注册表中寻找其 name。\",\"注意：\",\"使用 for...in 遍历 key 或 Object.keys(obj) 时，Symbol 会被略过\",\"Object.getOwnPropertySymbols(obj) 可以获取所有的 symbol 属性\",\"Reflect.ownKeys(obj) 可以返回对象所有键，包括 symbol\",\"Object.assign() 既拷贝所有的属性，包括 symbol\"]},\"19\":{\"h\":\"Iterables 可迭代对象\",\"t\":[\"可以用 for...of 进行遍历的都是 可迭代对象（iterable）。它是通过 Symbol.iterator 实现的，该属性值是个函数，返回一迭代器（迭代器必须有 next() 函数，next() 函数返回 {done: Boolean, value: any}，当 done: true 时迭代结束）。\",\"String 和 Array 内部实现了 Symbol.iterable，它们内置的可迭代对象。用 for...of 对 String 进行遍历时，surrogate pairs 是可以被争取处理的。\",\"有索引和 length 属性的对象叫类数组（array-like）。\",\"Array.from(obj[, mapFn, thisArg]) 将可迭代对象或类数组 obj 转化为真正的数组。\",\"任何可以在 for...of 循环中使用的对象都是可迭代对象。例如，数组和字符串都是可迭代的。\",\"对象本身不是数组，如果它表示一个集合（list 或 set），那么我们会很自然地想使用 for..of 来遍历它。如何使得一个表示集合的对象可以被 for..of 遍历呢？\"]},\"20\":{\"h\":\"1. Symbol.iterator\",\"t\":[\"我们有这样一个对象，它表示数字区间，我们希望遍历该对象获取该数字区间的值。\",\"let range = { from: 1, to: 5, }; // 目标： // for (let num of range) ... num = 1, 2, 3, 4, 5 \",\"我们为对象增加一个名为 Symbol.iterator 的方法。\",\"当使用 for...of 时，它会调用这个方法（没有则会报错）。这个方法必须返回一个迭代器（iterator）——一个有 next 方法的对象。\",\"之后，for...of只对这个被返回的对象（即被返回的迭代器）进行操作。\",\"当 for...of 循环希望获取下一个数值时，它就调用这个对象的 next() 方法。\",\"next() 方法返回的结果的搁置必须是 {done: Boolean, value: any}，当 done=True 时，表示循环结束，否则 value 时下一个值。\",\"我们来看一下代码实现\",\"// 1. for..of 调用 Symbol.iteration 对应的函数 range[Symbol.iterator] = function() { // 返回迭代器 return { current: this.from, last: this.to, // 迭代器要有 next 方法 next() { if (this.current <= this.last) { return { done: false, value: this.current++ }; } else { return { done: true }; } } } } \",\"迭代器和它所迭代的对象是分开的\",\"range 本身没有 next() 属性\",\"迭代器是在 range[Symbol.iteration]() 被调用时生成的\",\"当然我们也可以让 range 直接成为一个迭代器：\",\"let range = { from: 1, to: 5, [Symbol.iterator]() { this.current = this.from; return this; } next() { if (this.current <= this.to) { return { done: false, value: this.current++ }; } else { return { done: true }; } } } \",\"但是这样的问题是，我们不能使用同时运行两个 for...of 了。因为同时进行循环的情况下他们共享迭代状态，而我们只有一个迭代器。不过并行执行 for...of 还是很罕见的。\",\"无穷迭代器\",\"可以创建无穷迭代器。比如设置 range.to = Infinity。\",\"对于无穷迭代器，我们可以使用 break 来停止。\"]},\"21\":{\"h\":\"2. 显示调用迭代器\",\"t\":[\"String 都是可迭代的，即可以使用 for...of 对其进行遍历。对于 SP 上的 surrogate pairs 也可以正常地处理。\",\"let str = '𝒳😂'; for (let char of str) { alert( char ); // 𝒳，然后是 😂 } \",\"下面我们直接使用迭代器本身来进行 for...of 遍历。\",\"let str = \\\"Hello\\\" // 实现 for (char of str) alert(char); 的效果 let iterator = str[Symbol.iterator](); while (true) { let result = iterator.next(); if (result.done) break; alert(result.value); // 输出字符 } \",\"这样做给了我们更多的控制权，不过很少这样做。比如，我们可以迭代一部分，做一些其他的操作，然后再继续迭代。\"]},\"22\":{\"h\":\"3. 可迭代（iterable）v.s. 类数组（array-like）\",\"t\":[\"iterables: 实现了 Symbol.iterator 方法的对象\",\"array-likes: 有索引和 length 属性的对象\",\"例如，String 它既是 iterable 也是 array-like。上面的 range 是 iterable 但不是 array-like。\",\"这里给一个 array-like 的对象：\",\"let arrayLike = { 0: \\\"apple\\\", 1: \\\"banana\\\", length: 2, } \",\"要注意，iterables 和 array-likes 都不是 array，没有 push、pop 等数组方法。\",\"但是对于 arrayLike 这个对象，我们可能会很自然地想到，如果能用 array 的方法就好了。\"]},\"23\":{\"h\":\"4. Array.from\",\"t\":[\"Array.from 可以将 iterables 和 array-likes 转成 array。\",\"Array.from 的完整语法为\",\"Array.from(obj[, mapFn, thisArg]) \",\"例：\",\"let arr = Array.from(range, num => num * num) alert(arr); // 1, 4, 9, 16, 25 \",\"对于 surrogate pairs，str 的 slice 方法不能正确处理，我们可以利用 Array.from 来做处理：\",\"function slice(str, start, end) { return Array.from(str).slice(start, end).join('') } let str = '𝒳😂𩷶' slice(str, 1, 3); // 😂𩷶 str.slice(1, 3); // \\\\uDCB3\\\\uD83D \"]},\"24\":{\"h\":\"总结\",\"t\":[\"可迭代对象（iterables）：可以用 for...of 进行遍历的对象 \",\"使用 Symbol.iterator 实现 \",\"obj[Symbol.iterator]() 的结果被称为 迭代器（iterator）\",\"迭代器必须有 next() 方法，它返回 {done: Boolean, value: any}，done:true 表明迭代结束，否则 value 就是 next 值。\",\"String 和 Array 是内置的可迭代对象。\",\"字符串迭代器可以正确处理 surrogate pair。\",\"类数组（array-like）：有索引和 length 属性的对象\",\"Array.from(obj[, mapFn, thisArg]) 将可迭代对象或类数组转化为真正的数组。\"]},\"25\":{\"h\":\"Array\"},\"26\":{\"h\":\"1. 快速介绍\",\"t\":[\"let arr = new Array(); let arr = []; let fruits = [\\\"Apple\\\", \\\"Orange\\\", \\\"Plum\\\"]; fruits[3] = \\\"Banana\\\"; alert(fruits[2]); // arr.at(i) 支持「负数」 alert(fruits[fruits.length - 1]) alert(fruits.at(-1)) /** push() pop() */ alert(fruits.pop()); // 删掉了 Banana，并将其 alert alert(fruits); // Apple, Orange, Plum fruits.push(\\\"Pear\\\"); // 相当于 fruits[fruits.length] = \\\"Pear\\\" alert(fruits); // Apple, Orange, Plum, Pear /** shift() unshift() */ alert(fruits.shift()); // 删掉了 Apple， 并将其 alert alert(fruits); // Orange, Plum, Pear fruits.unshift('Apple'); alert( fruits ); // Apple, Orange, Plum, Pear // push() 和 unshift() 可以一次添加多个元素 let fruits = [\\\"Apple\\\"]; fruits.push(\\\"Orange\\\", \\\"Peach\\\"); fruits.unshift(\\\"Pineapple\\\", \\\"Lemon\\\"); alert( fruits ); // [\\\"Pineapple\\\", \\\"Lemon\\\", \\\"Apple\\\", \\\"Orange\\\", \\\"Peach\\\"] /** 循环 */ let arr = [\\\"Apple\\\", \\\"Orange\\\", \\\"Pear\\\"]; // 1. for for (let i = 0; i < arr.length; i++){ alert(arr[i]) } // 2. for ... of 只获取元素，不获取索引 for ( let fruit of fruits) { alert(fruit) } // 3. for ... in 获取索引 // 适用于普通对象并做了对应优化，但是不适用于数组，速度要慢 10-100 倍 for (let key in fruits) { alert(fruits[key]) } /** length */ // 显示地将 length 减小再恢复原长，此过程不可逆（被截断的元素并不会找回来，是 undefined） // 清空数组最简单的方式 arr.length = 0 // 多维数组 let matrix = [ [1, 2, 3], [4, 5, 6], [7, 8, 9] ]; /** toString() */ // 以逗号连接数组中的元素 let arr = [1, 2, 3]; alert( arr ); // 1,2,3 alert( String(arr) === '1,2,3' ); // true // 数组没有 Symbol.toPrimitive，也没有 valueOf，只能执行 toString 进行转换 alert( [] + 1 ); // \\\"1\\\" alert( [1] + 1 ); // \\\"11\\\" alert( [1,2] + 1 ); // \\\"1,21\\\" \"]},\"27\":{\"h\":\"不要用 == 比较数组\",\"t\":[\"仅当两个对象引用的是同一个对象时，它们才相等 ==\",\"如果 == 两边一个是对象、一个是基本类型，那么该对象会被转换为原始类型\",\"null == undefined\",\"// 左边是基本类型，右边是数组，于是数组被转换成了基本类型: '' 0 == []; // true，'' 被转换成了数字0 '0' == []; // false，'' 不需要进一步进行类型转化，它们是不同的字符串 \",\"数组可以逐项比较，用 for 循环或迭代来进行。\"]},\"28\":{\"h\":\"2. 数组的方法\",\"t\":[\"上面已经介绍了 push(), pop(), shift(), unshift()。\",\"arr.splice(start[, deleteCount, elem1, ..., elemN])\",\"改变原数组，添加、删除、插入都可以完成\",\"从 start 开始修改，删除 deleteCount 个元素，并在当前位置插入 elem1, ..., elemN\",\"返回被删除的元素所组成的数组\",\"允许负向索引\",\"let arr = [1, 2, 5]; arr.splice(-1, 0, 3, 4); alert( arr ); // 1,2,3,4,5 \",\"arr.slice([start], [end])\",\"不改变原数组，将 [start, end) 区间的元素复制到新的数组中\",\"start 和 end 都可以是负数\",\"arr.concat(arg1, arg2...)\",\"不改变原数组。创建新数组，其中包含来自于其他数组和其他项的值\",\"接受任意数量的参数，数组或值都行\",\"`argN` 是数组时，其中的所有元素都会被复制；否则，复制参数本身\",\"let arr = [1, 2]; alert( arr.concat([3, 4]) ); // 1,2,3,4 alert( arr.concat([3, 4], [5, 6]) ); // 1,2,3,4,5,6 alert( arr.concat([3, 4], 5, 6) ); // 1,2,3,4,5,6 \",\"对于对象（即使是类数组对象），由于它不是数组，所以会被当做元素直接添加\",\"let arr = [1, 2]; let arrayLike = { 0: \\\"something\\\", length: 1 }; alert( arr.concat(arrayLike) ); // 1,2,[object Object] \",\"如果类数组中有 Symbol.isConcatSpreadable 属性，那么它会被当做一个数组来处理：\",\"let arr = [1, 2]; let arrayLike = { 0: \\\"something\\\", 1: \\\"else\\\", [Symbol.isConcatSpreadable]: true, length: 2 }; alert( arr.concat(arrayLike) ); // 1,2,something,else \",\"arr.forEach(function(item, index, array) {...});\",\"indexOf(item, from)、lastIndexOf(item, from)、includes(item, from)\",\"都使用 === 进行比较\",\"includes() 可以正确处理 NaN，而另外两个不能\",\"arr.find(function(item, index, array) {...});\",\"返回满足条件的第一个元素 \",\"如果返回 true，则返回 item 并停止迭代\",\"如果为假值，则返回 undefined\",\"arr.findIndex、arr.findLastIndex 和 arr.find 有相同的语法，但是返回的是元素的索引而不是元素本身，没找到则返回 -1。\",\"arr.filter(function(item, index, array) {...});\",\"返回满足条件的元素组成的数组 \",\"如果 true， item 被 push 到 results，迭代继续\",\"如果什么都没找到，则返回空数组\",\"arr.map(function(item, index, array) {...});\",\"arr.sort()\",\"对数组进行**原位（in-place）**排序\",\"返回排序后的数组，但由于修改了数组本身（in-place 的含义），所以这个返回值一般会被忽略\",\"默认情况下按照字符串进行排序\",\"let arr = [ 1, 2, 15 ]; arr.sort(); alert( arr ); // 1, 15, 2 \",\"可以自定义顺序进行排序，提供一个函数作为 arr.sort() 的参数 \",\"比较函数要返回：正数表示大于，负数表示小于\",\"let arr = [ 1, 2, 15 ]; arr.sort((a, b) => a - b); alert(arr); // 1, 2, 15 \",\"arr.reverse() 颠倒顺序\",\"split 和 join\",\"str.split(delim[, arrLength])\",\"arr.join(glue)\",\"reduce/reduceRight 根据数组计算单个值\",\"语法：arr.reduce(function(accumulator, item, index, array) {...}, [initial]);\",\"accumulator: 上一个函数调用的结果，第一次等于 initial（如果提供了的话），如果没有提供，那么会将数组的第一个元素作为初始值，并从第二个元素开始迭代\",\"item: 当前的数组元素\",\"index: 当前索引\",\"arr: 数组本身\",\"reduceRight 从右到左\",\"Array.isArray(value) 判断 value 是否为数组。对数组用 typeof(value) 只能得到 object。\",\"arr.some(fn)、arr.every(fn) 检查是否「存在/所有」元素满足 fn\",\"arr.fill(value, start, end) 从索引 start 到 end，用重复的 value 填充数组\",\"arr.copyWithin(target, start, end) 将位置 start 到 end 的所有元素复制到自身的 target 位置（覆盖现有元素）\",\"arr.flat(depth)/arr.flatMap(fn) 从多维数组创建一个新的扁平数组。\",\"Array.of(element0[, element1[, …[, elementN]]]) 基于可变数量的参数创建一个新的 Array 实例，而不需要考虑参数的数量或类型。\",\"注：几乎所有函数的数组方法，比如 find，filter，map，除了 sort 是一个特例，都接受一个可选的附加参数 thisArg。\",\"`thisArg`\",\"下面是完整的语法\",\"arr.find(func, thisArg); arr.filter(func, thisArg); arr.map(func, thisArg); ... \",\"使用 army 的方法 canJoin() 作为过滤器，thisArg 用于传递上下文\",\"let army = { minAge: 18, maxAge: 27, canJoin(user) { return user.age >= this.minAge && user.age < this.maxAge; } }; let users = [ {age: 16}, {age: 20}, {age: 23}, {age: 30} ]; // 找到 army.canJoin 返回 true 的 user // 如果不传 army 作为 thisArg，那么 this.canJoin 将被作为独立函数调用，this 是 undefined // 也可以用 users.filter(user => army.canJoin(user)) 这是是 army 调用的，于是 this 是 army let soldiers = users.filter(army.canJoin, army); alert(soldiers.length); // 2 alert(soldiers[0].age); // 20 alert(soldiers[1].age); // 23 \"]},\"29\":{\"h\":\"Export & Import\",\"t\":[\"export 和 import 的用法\"]},\"30\":{\"h\":\"基本使用\"},\"31\":{\"h\":\"1. export\",\"t\":[\"直接在变量、函数、class 前面加 export 即可。注：export function 和 class 时，不需要在最后加分号。\"]},\"32\":{\"h\":\"2. import\",\"t\":[\"不用担心引入得太多\",\"使用现代构建工具（如 webpack 等）时，它们会将 modules 打包到一起并进行优化以加速 loading。它们也会将没有用到过的引用移除掉。\"]},\"33\":{\"h\":\"3. export 使用 as\"},\"34\":{\"h\":\"4. export default\",\"t\":[\"import User from './user.js'; new User('John'); \"]},\"35\":{\"h\":\"5. export 既有 default 又有命名实体\",\"t\":[\"// 📁 user.js export default class User { constructor(name) { this.name = name; } } export function sayHi(user) { alert(`Hello, ${user}!`); } \",\"使用 default 导出时，import 时不需要加 {}，且 import 时可以是任何名称（最好和文件同名）。\",\"Named export\",\"Default Export\",\"export class User {...}\",\"export default class User {...}\",\"import {User} from ...\",\"import User from ...\",\"使用 export default 时，可以不指定被导出实体的名称：\",\"export default function (user) { // 没有 function name alert(`Hello, ${user}`) } \"]},\"36\":{\"h\":\"2. Re-export\",\"t\":[\"语法：export ... from ...\",\"export {sayHi} from './say.js'; // re-export sayHi export {default as User} from './user.js'; // re-export default \",\"当我们写 package 的时候，一个文件下面有很多 modules，我们会将所有的功能在统一的位置进行 export。这样其他人在使用该包的时候，可以从统一的位置进行 import。\",\"现在我们有 auth 这个包，index.js 作为唯一的出口。auth 文件夹下其他的 modules 都从 index.js 的位置进行 export。\",\"对于 default export，在进行 re-export 时需要进行单独处理。\",\"对于 user.js 中的 default export:\",\"export default class User { //.. } \",\"使用 export User from './user.js' 是不行的。我们应该使用 export { default as User } from './user.js'.\",\"使用 export * from './user.js' 进行的 re-export 只会导出 named export，会忽略 default export。\",\"export * from './user.js'; // 导出了 named export export { default } from './user.js'; // 导出了 default export \"]},\"37\":{\"h\":\"AI Agent\"},\"38\":{\"h\":\"1. AI Agent 定义\",\"t\":[\"AI Agent，或称智能代理，是一种基于人工智能技术的软件实体，具备某种程度的自主性和智能性，能够感知其环境、采取决策并执行相应的行动，以实现既定的任务或目标。这些代理通常被设计用来模拟人类智能，但也可以根据任务的需要具备不同程度的自主性。AI Agent 在各种领域都有广泛的应用，包括自动驾驶汽车、机器人、虚拟助手和游戏智能角色。它们的工作原理基于不同的机器学习技术，如深度学习和强化学习，以便学习并改进其决策能力。\",\"参考链接：AI Agent Definition\"]},\"39\":{\"h\":\"大语言模型？\",\"t\":[\"与现在的大语言模型（例如chatGPT）不同，AI Agent 的主要特点在于其能力不仅限于文本生成和自然语言处理。尽管chatGPT等语言模型在文本生成方面取得了显著的进展，但它们更多地是基于自然语言处理技术的被动响应式系统，用于回答问题和生成文本。相比之下，AI Agent 是主动的实体，具备自主决策和行动的能力。它们能够感知和理解更广泛的环境信息，从多个感官源获得数据，然后采取行动以实现任务。例如，自动驾驶汽车是一个AI Agent的示例，它能够感知道路和周围的车辆，做出决策以控制车辆的行驶，而chatGPT等大语言模型则主要用于自然语言理解和生成。\",\"此外，AI Agent的设计和应用通常涉及更广泛的工程和硬件系统，以支持其感知、决策和执行任务。这些系统可能包括传感器、执行器、控制算法等，以确保AI Agent能够在实际世界中操作。大语言模型更多地集中于自然语言理解和生成，通常不包括与物理世界的直接交互。因此，尽管AI Agent和大语言模型都代表了人工智能领域的重要进展，但它们在目标和应用领域上存在显著的差异。\"]},\"40\":{\"h\":\"2.\"},\"41\":{\"h\":\"Deep Q-learning\",\"t\":[\"Q-Learning 是 tabular method，It is not scalable. 当 state space 比较小时，我们可以使用之前的 Q-learning，训练 Q Table 来实现目标。当 state space 很大时（玩 Atari 游戏时，可能达到 109 到 1011 种状态之多），Q Table 就会很低效。在这种情况下，我们不再使用 Q 表，而是使用 Neural Network 来获取状态、根据该状态为每一个 action 估计 Q-value，这种方式就是 Deep Q-Learning。\"]},\"42\":{\"h\":\"1. The Deep Q-Network (DQN)\",\"t\":[\"Deep Q-Learning Network 的架构如下：\",\"我们输入 state（a stack of 4 frames），输出在该状态下每个可能的 action 的 Q-value 向量。这样，我们就可以像 Q-Learning 一样，使用 epsilon-greedy policy 来决定采取哪种行动。\"]},\"43\":{\"h\":\"DQN 的过程\",\"t\":[\"为了降低 state 的复杂性，我们对输入进行降维（84 * 84）并灰度化（grayscale），将 3 通道 GRB（160*210*3）降低到 1 维（84*84*1）。\",\"能这么做是因为 Atari environments 中的颜色并没有很重要的信息。同样，我们也可以截掉屏幕的一部分，如果它没有什么重要信息。\",\"我们将 4 帧信息堆叠在一起（这样可以捕捉到 temporal information，解决 temporal limitation 的问题）作为输入。\",\"然后经过 3 层 convolutional layers。卷积层可以捕捉并利用图像的空间的关系。由于我们使用了 4 个帧，它还能利用这些帧之间的一些 temporal properties。\",\"最后，经过几个 fully connected layers，为该状态下每个可能的 action 输出对应的 Q-value。\"]},\"44\":{\"h\":\"2. The Deep Q-Learning Algorithm\",\"t\":[\"Deep Q-Learning 和 Q-Learning 的主要不同之处在于：Q-Learning 直接对 Q-value 进行更新\",\"Q(St​,At​)←Q(St​,At​)+α[Rt+1​+γamax​Q(St+1,At​​)−Q(St​,At​)]\",\"而 Deep Q-Learning 创建 loss function（比较 Q-value prediction 和 Q-target），利用 gradient descent 来更新 Deep Q-Network 的权重来估计 Q-value。\",\"Deep Q-Learning 算法有两个阶段：\",\"Sampling：执行动作，将观察到的 experience tuples 存到 replay memory 中。\",\"Training：随机选择一小批 tuples，利用 gradient descent 从这批 tuples 中学习\",\"由于使用了非线性 Q-value function（Neural Network）和 bootstrapping（利用现有估计更新目标，而不是实际的完整的回报），Deep Q-Learning 的训练可能不稳定。\",\"为了使得训练更稳定，我们采取了下面的措施：\",\"Experience Replay to make more efficient use of experiences.\",\"Fixed Q-Targetto stabilize the training.\",\"Double Deep Q-Learning, to handle the problem of the overestimation of Q-values.\"]},\"45\":{\"h\":\"2.1 Experience Replay\",\"t\":[\"创建 replay memory 有两个作用：\",\"在训练过程中高效利用 experiences。\",\"一般来说，在 online reinforcement learning 中，agent 和环境进行交互，获得 experiences（state, action, reward, next state），从中学习（updates the neural network），然后就 discard 了这些 experiences。\",\"使用 replay buffer 存储 Experience samples，我们可以在训练过程中重复使用，这样更加高效。\",\"它也能够让 agent 多次学习相同的 experiences。\",\"避免忘记以前的 experiences，减少了 experiences 之间的 correlation。\",\"如果我们给神经网络提供 sequential samples of experiences，当它获得新 experiences 时，往往会忘记以前的 experiences。比如，agent 玩了第一关，然后玩了第二关，它可能会忘记第一关怎么玩了。\",\"解决的办法就是，当 agent 与环境进行交互时，将 experience tuples 存到 replay buffer 中，之后取样一批 tuples。这样就避免了网络只学它刚刚做的事情了。\",\"通过随机抽样，消除了 observation sequences 中的相关性，避免 action values 振荡以及灾难性的偏离。\",\"我们初始化了 replay buffer D，其 capacity N 是一个超参。在训练过程中，存储 experiences，并取样一个批次喂给 Deep Q-Network。\"]},\"46\":{\"h\":\"2.2 Fixed Q-Target\",\"t\":[\"TD error（或称 loss）：TD target（Q-Target）和当前 Q-value（estimation of Q）的差。\",\"但是我们不知道实际的 TD target 是多少。我们需要对其进行估计。使用 Bellman equation，TD target 就是在该状态下采取该行动获得的 reward 加上下一状态的最高 Q value 的折扣值。\",\"问题在于，我们用于估计 TD Target 和 Q-value 的参数（神经网络权重）是一样的。于是，TD 和 Q-value 之间存在显著的相关性。在训练的每一步，权重的更新既会使 Q-value 更接近 TD Target，但也会导致目标值本身发生变化。这就像是在追逐一个不断移动的目标。这个问题会导致在训练过程中出现显著的振荡。因为 Q-value 和 TD Target 在不断相互影响，它们可能在每次训练迭代中都在变化，这会导致训练的不稳定性，使得 agent 难以稳定地学习。\",\"在伪代码中可以看到：\",\"使用的单独的参数固定的网络来估计 TD Target\",\"每 C 个 step 从 Deep Q-Network 中复制参数来更新 target network\"]},\"47\":{\"h\":\"2.3 Double Deep Q-Learning\",\"t\":[\"Double DQNs (或 Double Deep Q-Learning neural networks) 是为了解决 overestimation of Q-values。\",\"计算 TD 目标时，我们如何确定执行哪个行动会得到最高的 Q-value。尤其是训练开始的时候，没有足够多的信息，以最大的 Q-value 来确定最优 action 可能会导致 false positive。如果非最优的 actions 规律性地高于最优 actions 的Q值，学习将变得复杂。\",\"解决的方案是，使用两个网络来计算 Q target：\",\"使用 DQN network 选择最佳 action (有最高 Q-value 的 action)\",\"使用 Target network 计算执行该行动后的目标 Q-value\"]},\"48\":{\"h\":\"Introduction\",\"t\":[\"深度强化学习（Deep Reinforcement Learning）是机器学习的一种，用于训练智能代理（Agent）在未知环境中通过试错学习来采取最佳行动以实现特定目标。\",\"深度学习背后的思想是，一个代理（一种人工智能）通过与环境的互动（通过试错）并根据执行动作后获得的奖励（正面或负面的反馈）来学习。\",\"相关信息\",\"Reinforcement Learning: An Introduction, Richard Sutton and Andrew G. Barto\",\"下面将介绍强化学习相关的概念，而深度强化学习就是将 deep neural networks 应用于强化学习问题中。\"]},\"49\":{\"h\":\"1. RL Process\",\"t\":[\"RL 循环输出一系列的 state, action, reward 和 next state。\",\"Reward Hypothesis: Agent 的目标是最大化累积奖励，即 expected return。\",\"Markov Decision Process (MDP)：Agent 只需要当前的状态来决定采取什么行动，而不需要考虑之前所有状态和行动的历史\",\"Observations/States Space：这是 Agent 从环境中获取的信息。在视频游戏中，可以是一帧图片。\",\"State s: 对世界状态的完整描述。比如象棋游戏中我们可以获得整个棋盘信息。\",\"Observation o: 是状态的部分描述。比如超级玛丽中，我们只能看到玩家附近的地图。\",\"Action Space：环境中所有可能的 actions 的集合\",\"Discrete space: 可能的 actions 的数量有限。比如超级玛丽中，actions 只有 ↑↓←→\",\"Continuous space: 可能的 actions 的数量无限。比如自动驾驶\",\"Reward & discounting：奖励在 RL 中至关重要，它是 Agent 的卫衣反馈，通过奖励可以知道采取的行动是好是坏。\",\"R(τ)=rt+1​+rt+2​+rt+3​+rt+4​+...=k=0∑∞​rr+k+1​\",\"但我们通常不会这样直接加和。较早出现的奖励比远期的奖励更有可能发生、更可预测。于是我们定义了 discount（用 γ 表示），该值在 0 到 1 之间（大部分时候是0.95 到 0.99）.\",\"R(τ)=rt+1​+γrt+2​+γ2rt+3​+γ3rt+4​+...=k=0∑∞​γkrr+k+1​\"]},\"50\":{\"h\":\"2. 任务类型\"},\"51\":{\"h\":\"类型 1：episodic task\",\"t\":[\"在这种情况下，有初始状态和终止状态。即创建了一个\\\"episode\\\"：一个包含了 States、Actions、Rewards 和 new States 的序列。\"]},\"52\":{\"h\":\"类型 2：continuing task\",\"t\":[\"即没有终止状态的情况。Agent 必须学会如何选择最佳的 actions 并同时与环境互动。\"]},\"53\":{\"h\":\"3. The Exploration/Exploitation trade-off\",\"t\":[\"Exploration: 通过随机 actions 来探索环境，以获取更多关于环境的信息。\",\"Exploitation: 利用已知信息最大化奖励。\",\"强化学习中 Agent 的目标是最大化 expected cumulative reward。然而，我们可能会陷入一个常见的陷阱中。\",\"这个陷阱是探索与利用之间的权衡问题。如果智能体过于探索，它可能会错失机会，浪费时间并且无法获得足够的奖励。如果它过于利用，它可能会错过更好的策略，并且无法达到最佳性能。因此，强化学习算法需要智能地决定何时以探索为主，何时以利用为主，以便在学习过程中不断改进其策略。\"]},\"54\":{\"h\":\"4. RL 问题的两种主要方法\",\"t\":[\"The policy π: π 相当于 Agent 的大脑，它是一个函数，会告诉 Agent 根据现在的 State 应该采取哪种 action，即它确定了某一时刻下 Agent 的行为。\",\"State→π(State)→Action\",\"policy 是我们要学的函数，我们的目标就是找到最佳的 policy π∗，即当 agent 按照它的计算会得到最大的 expected return。\",\"训练得到 π∗ 的方法：\",\"Policy-Based（直接）：给定当前的状态，直接告诉 agent 采取哪个 action\",\"Value-Based（间接）：让 agent 学哪种 State 更有价值，然后选择能达到更有价值的 states 的 action\"]},\"55\":{\"h\":\"方法 1：策略方法（Policy-Based）\",\"t\":[\"核心思想是直接学习一个策略函数（policy function）。策略函数定义了在每个状态下应该采取的最佳行动，或者它可以定义一个在该状态下可能行动的概率分布。\",\"Deterministic: 对于给定 state 总是返回同一个 action\",\"a=π(s)\",\"Stochastic: 会输出一个关于可能行动的概率分布。在相同的状态下，随机性策略可以选择不同的行动，具有一定的随机性。\",\"π(a∣s)=P[A∣s]\"]},\"56\":{\"h\":\"方法 2：Value-Based 方法\",\"t\":[\"不直接学策略函数，而是学一个值函数（value function）。这个值函数将状态（State）映射到在该状态下的期望价值（Expected Value）。这里的价值是指在给定状态下，如果 Agent 按照我们的策略行动，它可以获得的期望折扣回报（Expected Discounted Return）。\",\"vπ​(s)=Eπ​[Rt+1​+γRt+2​+γ2Rt+3​+γ3Rt+4​+...∣St​=s]\",\"具体来说，价值函数用于衡量在不同状态下的优劣，这有助于代理决定在哪个状态采取行动，以获得最大的长期回报。这种方法的核心思想是：代理通过学习状态的价值来评估每个状态的好坏，然后根据这些值来决定在哪个状态采取行动，即选择具有最高价值的状态作为下一步的目标。\"]},\"57\":{\"h\":\"Policy Gradient with PyTorch\",\"t\":[\"之前介绍的 Q-Learning 是 value-based 方法，我们训练 value function 作为确定最优 policy 的中间媒介。这一章将介绍一种 policy-based 方法：policy gradient，然后使用 PyTorch 实现 Monte Carlo Reinforcement (policy gradient 的一种)。\",\"先回顾一下 policy-based methods，我们直接训练 π∗，parameterize the policy。\",\"我们使用 gradient ascent 改变 θ 以最大化 parameterized policy，目标函数 J(θ) 是 expected cumulative reward。\",\"Policy-gradient methods 是 policy-based methods 中的一种。Policy-based method 通过最大化 local approximation of the objective function（hill climbing, simulated annealing, or evolution strategies）来间接优化参数 θ。Policy-gradient methods 在 objective function 上使用 gradient ascent 来直接优化参数 θ。\"]},\"58\":{\"h\":\"1. Policy-gradient methods 的优劣\"},\"59\":{\"h\":\"1.1 优点\",\"t\":[\"The simplicity of integration 不必额外存其他数据（action values），直接 estimate the policy\",\"Policy-gradient methods can learn a stochastic policy 可以学随机策略，这是 value function 做不到的\",\"使用随机策略：\",\"我们不用手动实现 exploration/exploitation trade-off。因为我们输出的是动作上的概率分布，agent 在探索时会根据概率分布随机选择动作。\",\"避免了感知别名的问题（perceptual aliasing）。perceptual aliasing 指的是两个或多个 states 看起来相同或者实际上相同，但对于达到最优性能而言，这些状态需要不同的动作相应。\",\"Policy-gradient methods 在高维 action spaces 和 continuous actions spaces 中更高效。\",\"Policy-gradient methods have better convergence properties value-based 方法中，以 Deep Q-Learning 为例，我们通过最大化 Q 值来更新 value function。那么即使估计的 action values 只有一点点变化（如果这种变化导致其他的动作有更大的 Q value），也会引起 action probabilities 的剧烈变化。\",\"相比之下，policy-gradient 学习一个概率分布，这个分布决定了在给定状态下采取每个动作的概率。这种方法使得 action preferences（即选择特定动作的概率）随时间平稳变化。\",\"这种平滑的调整机制为 policy-gradient 提供了更好的手链特性。由于策略的变化不会因为价值估计的小幅度变动而剧烈波动，这使得学习过程更加稳定，降低了在探索最佳策略时出现大的振荡或不稳定的风险。\"]},\"60\":{\"h\":\"1.2 缺点\",\"t\":[\"很多情况下，policy-gradient 方法收敛到 local maximum 而不是 global optimum。\",\"Policy-gradient 很慢，需要更长时间训练。\",\"Policy-gradient 有 high variance。\"]},\"61\":{\"h\":\"2. Policy-gradient 算法\",\"t\":[\"如何优化权重呢？\",\"方法就是 let the agent interact during an episode. 如果赢了，就认为每个 action 都是应该在后续中被更多地被选择。也就是说，对于每一个 state-action pair，要么增加要么减少 P(a∣s)（在状态 s 时采取行动 a 的概率）。\",\"Stochastic Policy: a probability distribution over actions at that state\",\"πθ​(s)=P[A∣s;θ]\"]},\"62\":{\"h\":\"2.1 损失函数\",\"t\":[\"损失函数给出了 agent 在给定一个轨迹（trajectory, state action sequence，不考虑奖励（contrary to an episode））下的性能，输出是 expected cumulative reward。\",\"J(θ)=Eτ∼π​[R(τ)]R(τ)=rt+1​+γrt+2​+γ2rt+3​+γ3rt+4​+...\",\"expected return (或称 expected cumulative reward)，每个行动轨迹 τ 在执行策略 π(θ) 时都有一个出现的概率 P(τ;θ)\",\"J(θ)=γ∑​P(τ;θ)[R(τ)]P(τ;θ)=[t=0∏​P(st+1​∣st​,at​)πθ​(at​∣st​)]\",\"P(st+1​∣st​,at​): Environment dynamics (state distribution)\",\"πθ​(at​∣st​): Probability of taking that action at​ at st​\",\"我们的目标就是找到让 J()θ 最大的 θ:\",\"θmax​J(θ)=Eτ∼πθ​​[R(τ)]\"]},\"63\":{\"h\":\"2.2 Gradient Ascent，Policy-gradient Theorem\",\"t\":[\"Policy-gradient 是 optimization problem，需要用 gradient-ascent 找到使得 J(θ) 最大的 θ。\",\"更新步骤是：θ←θ+α∗δθ​J(θ)\",\"求导的时候有两方面问题：\",\"计算量的问题： \",\"计算 J(θ) 的梯度需要计算每个可能轨迹的概率，计算量很大\",\"一种解决方式是使用基于样本的梯度估计方法，通过采集一些轨迹样本来估计梯度。这些样本可以用来近似计算梯度，而不需要显式计算所有可能的轨迹。\",\"对损失函数进行微分的时候，需要对 state distribution 进行微分，这个叫做 Markov Decision Process dynamics\"]},\"64\":{\"h\":\"Q-learning\",\"t\":[\"Q-learning 是一种 value-based Reinforcement Learning method。\",\"在 value-based 方法中，我们训练 value function，然后基于自定义的 policy，根据 value function 选择 actions（例如使用贪心策略，总选择能够让 value function 最大的 action）。\",\"有两种 value-based functions:\",\"state-value function\",\"Vπ​(s)=Eπ​[Gt​∣St​=s]\",\"从该状态开始，Agent 总是按照 policy 行动的 expected return\",\"action-value function\",\"Qπ​(s,a)=Eπ​[Gt​∣St​=s,At​=a]\",\"对于每一个 (state, action) 对，即在该状态下，选择某个 action a，agent 总是按照 policy 行动能够得到的 expected return\",\"不管采用上面的哪种方法（计算一个状态或状态-动作对的价值），都需要考虑 Agent 在该状态下采取各种可能的动作，并计算从每个可能的动作开始后，智能体可能获得的所有奖励的累积。这就要求进行大量的模拟和计算，特别是在状态空间较大且奖励函数复杂的情况下，这一过程会变得计算上昂贵和困难。为了解决这个问题，我们将介绍贝尔曼方程（Bellman equation）。\"]},\"65\":{\"h\":\"1. Bellman equation\",\"t\":[\"贝尔曼方程是一个递归式，当前状态下的 value 为：当前的 reward Rt+1​ + 下一状态下的价值 * 折扣因子。\",\"Vπ​(s)=Eπ​[Rt+1​+γ∗Vπ​(St+1​)∣St​=s]\"]},\"66\":{\"h\":\"2. 蒙特卡洛学习和时序差分学习\",\"t\":[\"Monte Carlo 和 Temporal Difference Learning 是训练 value function 或 policy function 的两种策略，它们都是用经验（experience）来解决 RL 问题。\",\"蒙特卡洛学习是基于完整回合（episode）的学习方法，而时序差分学习是一种基于单步 (St​,At​,Rt+1​,St+1​) 的学习方法。\"]},\"67\":{\"h\":\"2.1 Monte Carlo：回合结束后学习\",\"t\":[\"直到回合结束，才会计算 Gt​（return）。计算得到的回报（Gt​）被用作目标值（target），以更新当前状态的值函数（V(St​)）。\",\"V(St​)←V(St​)+α[Gt​−V(St​)]\"]},\"68\":{\"h\":\"2.2 Temporal Difference Learning：每个 step 进行学习\",\"t\":[\"TD 学习不必等到整个回合结束，而是在每次交互（1 step）后得到 St+1​ 来形成 TD 目标（TD target），使用当前时间获得的奖励 Rt+1​ 和下一个状态的估值函数 γ∗V(St+1​) 来更新 V(St​)。\",\"由于 TD 学习不需要等待整个回合的结束，它无法计算完整回合的期望回报（Gt​）。于是我们通过将当前时间步的奖励（Rt+1​）与下一个状态的折扣估值（γ∗V(St+1​)）相结合来计算。这种基于部分样本的估计方式被称为“bootstrapping”，因为 TD 的更新部分依赖于对下一个状态的估计（V(St+1​)），而不是完整回合的观测数据（Gt​）。\",\"V(St​)←V(St​)+α[Rt+1​+γV(St+1​)−V(St​)]\",\"Rt+1​+γV(St+1​) 为 TD Target\",\"这种方法叫 TD(0) 或者 one-step TD\"]},\"69\":{\"h\":\"3. Q-Learning\",\"t\":[\"Q-Learning 是一种 off-policy、value-based 方法，它基于 TD 方法训练来训练 action-value function（称为 Q-function）:\",\"Off-policy: 在 acting (inference) 和 updating (training) 时使用不同的 policy。 \",\"Epsilon-greedy policy (acting policy)\",\"Greedy policy：用于选择最好的 next state-action value 来更新 Q-value 的 updating policy\",\"Q-Learning 是训练 Q-function 的算法，Q 来自于 Quality。\",\"On-policy\",\"acting 和 updating 用相同的 policy。例如 Sarsa（也是一种 value-based algorithm）的 acting 和 updating 都是用 epsilon-greedy policy。 \",\"复习：value v.s. reward\",\"The value of a state, or a state-action pair is the expected cumulative reward our agent gets if it starts at this state (or state-action pair) and then acts accordingly to its policy.\",\"The reward is the feedback I get from the environment after performing an action at a state.\",\"在 Q-Learning 中，Q 函数通常被编码为一个 Q 表（Q-table），这是一个二维表格，其中的每个单元格对应一个状态-动作对（state-action pair）的值。Q 表可以被看作是 Q 函数的内部表示，它充当了 Q 函数的内存或备忘录，用于存储每个状态-动作对的估值。\",\"Q 表的结构如下所示：\",\"行表示不同的状态（States）。\",\"列表示可以采取的不同动作（Actions）。\",\"每个单元格包含了相应状态-动作对的 Q 值，即在特定状态下采取特定动作的预期长期累积奖励值。\",\"当我们训练得到 optimal Q-function 后，我们就有了 optimal policy。即：\",\"π∗(s)=argamax​Q∗(s,a)\"]},\"70\":{\"h\":\"3.1 Q-Learning 算法\",\"t\":[\"Q-learning 算法的步骤\",\"Step 1: Initialize Q arbitrarily\",\"初始化 Q-table，一般情况下初始化为 0 \",\"Step 2: Choose an action using the epsilon-greedy strategy\",\"刚开始将 ϵ 初始化为 1.0。在 training 前期，主要是 exploration（ϵ 比较大）。随着训练的进行，Q-table 的质量也来越高，我们逐渐减小 ϵ 的值。\",\"Step 3: Perform action At​, get reward Rt+1​ and next state St+1​\",\"Step 4: Update Q(St​,At​)\",\"V(St​)←V(St​)+α[Rt+1​+γV(St+1​)−V(St​)]\",\"于是 Q(St​,At​) 为：\",\"Q(St​,At​)←Q(St​,At​)+α[Rt+1​+γamax​Q(St+1,At​​)−Q(St​,At​)]\",\"注意这里用的不是 epsilon-greedy 策略，这里取最优的。当 Q-value 更新之后，我们从新的 state 开始，再次使用 epsilon-greedy 策略开始循环。这就是为什么我们说 Q-Learning 是 off-policy algorithm 的原因。\",\"相关信息\",\"这是一个 Q-Learning algorithm 的例子\"]},\"71\":{\"h\":\"介绍\",\"t\":[\"本模块用于记录 Hugging Face NLP Course 的学习过程。\",\"主要围绕以下四部分展开：\",\"🤗 Transformers\",\"🤗 DataSets\",\"🤗 Tokenizers\",\"🤗 Accelerate\"]},\"72\":{\"h\":\"读书笔记-统计学习导论\",\"t\":[\"书是开源的，访问 An Introduction to Statistical Learning 获得。\"]},\"73\":{\"h\":\"简介\",\"t\":[\"本篇文章记录了一些相关概念以及 notation\"]},\"74\":{\"h\":\"1. 概念\",\"t\":[\"error term: 误差项，has mean zero\",\"lease squares 最小二乘法 -> linear regression -> continuous or quantitative values\",\"linear discriminant analysis 线性判别分析, logistic regression -> non-numerical value: categorical or qualitative values\",\"generalized liner model: entire class of statistical learning methods that include both linear and regression\",\"classification and regression trees, generalized additive models 广义加性模型\",\"neural network, support vector machine\",\"scalar 标量\",\"K-nearest neighbor classifier\",\"cross-validation, bootstrap\",\"stepwise selection, ridge regression, principal components regression, lasso\",\"non-linear statistical learning\",\"non-linear additive models\",\"tree-based methods: bagging, boosting, random forests\",\"support vector machines: a set of approaches for performing both linear and non-linear classification\",\"deep learning\",\"survival analysis\",\"unsupervised\",\"principal components analysis, K-means clustering, hierarchical clustering\",\"multiple hypothesis testing 多重假设检验\"]},\"75\":{\"h\":\"2. Notation\",\"t\":[\"n: The number of distinct data points/observations\",\"p: the number of variables that are available for use in making predictions\",\"xi​j: the value of the jth variable for the ith observation\",\"X: n×p matrix\",\"X=​x11​x21​⋮xn1​​x12​x22​⋮xn2​​⋯⋯⋱⋯​x1p​x1p​⋮xnp​​​\",\"xi​: the rows of X. A vector of length p\",\"xi​=​xi​1xi​2⋮xi​p​​\",\"X=​x1T​x2T​⋮xnT​​​\",\"xj​: the column of X\",\"xj​=​x1​jx2​j⋮xn​j​​\",\"X=(x1​​x1​​⋯​xp​​)\",\"yi​:\",\"y=​y1​y2​⋮yn​​​\",\"长度为 n 的向量：小写加粗\",\"长度非 n 的向量：小写\",\"标量：小写\",\"矩阵：大写粗体\",\"随机变量：大写\",\"一些标记：\",\"标量：a∈R\",\"a vector of length k：a∈Rk\",\"r×s 矩阵：A∈Rk×s\",\"input: predictors, independent variables, features, variables\",\"output: response, dependent variable\"]},\"76\":{\"h\":\"jjj\",\"t\":[\"dfsjh\"]},\"77\":{\"h\":\"机器学习的评价指标\",\"t\":[\"在评价一个二分类的机器学习模型的性能时，我们通常可以选择 Accuracy、Precision、Recall、F1 Score 等指标。\",\"使用分类器做预测后，可以绘出混淆矩阵（Confusion Matrix）：\",\"True Positive (TP): 把正样本成功预测为正。\",\"True Negative (TN)：把负样本成功预测为负。\",\"False Positive (FP)：把负样本错误地预测为正。\",\"False Negative (FN)：把正样本错误的预测为负。\"]},\"78\":{\"h\":\"1. 准确性 Accuracy\",\"t\":[\"Accuracy=TP+TN+FP+FNTP+TN​\",\"from sklearn.metric import accuracy_score print('Accuracy: %.3f' % accuracy_score(y_test, y_pred)) \"]},\"79\":{\"h\":\"2. 精确度 Precision\",\"t\":[\"Precision=TP+FPTP​\",\"在预测为Positive的所有数据中，真实Positve的数据到底占多少\",\"from sklearn.metric import precision_score print('Precision: %.3f' % precision_score(y_test, y_pred)) \"]},\"80\":{\"h\":\"3. 召回率 Recall\",\"t\":[\"Recall=TP+FNTP​\",\"在所有的Positive数据中，到底有多少数据被成功预测为Positive\",\"from sklearn.metric import recall_score print('Recall: %.3f' % recall_score(y_test, y_pred)) \"]},\"81\":{\"h\":\"4. F1-分数 F1 Score\",\"t\":[\"F1−score=Precision+Recall2×Precision×Recall​\",\"F1 Score 是 Precision 和 Recall 的综合考量。它赋予Precision score和Recall Score相同的权重，以衡量其准确性方面的性能，使其成为准确性指标的替代方案。\",\"from sklearn.metric import f1_score print('Recall: %.3f' % f1_score(y_test, y_pred)) \",\"Recall v.s. Precision[^first]\",\"Recall > Precision:\",\"当 FN 的成本代价很高，希望尽量避免产生 FN 时，应该着重考虑提高Recall指标。 例如，癌症诊断场景中，False Negative 是得了癌症的病人没有被诊断出癌症，这种情况是最应该避免的。我们宁可把健康人误诊为癌症 (FP)，也不能让真正患病的人检测不出癌症 (FN) 而耽误治疗离世。所以，癌症诊断系统的目标是：尽可能提高Recall值，哪怕牺牲一部分Precision。\",\"Precision > Recall:\",\"当 FP 的成本代价很高，希望尽量避免产生 FP 时，应该着重考虑提高Precision指标。 例如，垃圾邮件分类时，垃圾邮件为Positive，正常邮件为 Negative，False Positive 是把正常邮件识别为垃圾邮件，这种情况是最应该避免的。我们宁可把垃圾邮件标记为正常邮件 (FN)，也不能让正常邮件直接进垃圾箱 (FP)。于是，垃圾邮件分类的目标是：尽可能提高Precision值，哪怕牺牲一部分recall。\",\"继续以癌症诊断场景为，FP 是将没有患癌症的人诊断为癌症，虽然这不致命，但是会给患者带来麻烦\",\"参考：多分类模型Accuracy, Precision, Recall和F1-score的超级无敌深入探讨\"]},\"82\":{\"h\":\"1. 术语\",\"t\":[\"本系列文章是对知乎专栏「刨根问底字符编码」 的学习记录。\"]},\"83\":{\"h\":\"1. 基本术语\",\"t\":[\"位（bit, binary digit），表示为 b，亦称二进制位、比特位、位元，指二进制数中的一位。\",\"位串（bit string）：一连串的位\",\"字节（byte），表示为 B，又称位元组：\",\"半字节（nibble）：4个 bit\",\"字节（byte）：8个 bit。有时用 8 位组（Octet）来强调 8 比特串\",\"字（word）、双字（Dword, double word）、四字（Qword, Quad word）、十字（Tbyte, Ten byte）\",\"现代 PC 一般以字节为单位，称为为按字节编址，因此字节一般也是存储器的最小存取单位以及处理器的最小寻址单位。 这与字符编码关系密切，比如码元的单字节与多字节、字节序的大端序与小端序等，都与以字节为基础的基本数据类型密切相关。\",\"字与字长\",\"字（word）：作为一整个整体来处理或运算的一串比特位，通常分为若干字节\",\"字长：字的长度（位数），决定了 CPU 一次操作实际处理的比特位数量。字长由 CPU 对外数据通路的数据总线宽度决定。\",\"一般来说，计算机可以最高效处理的数据大小应该与其字长相同。 桌面平台的处理器字长基本是 64 位，嵌入式平台 32 位，在某些专业领域（高端显卡等）64位甚至高达128位、256位。\",\"编码（encode）：信息从一种形式转换为另一种形式的过程\",\"解码（decode）：编码的逆过程\",\"字符集（character set、charset）\",\"字符编码（character encoding）：将字符集中的字符按一定方式编码为某指定集合中的某一对象的过程。\",\"字符编码模型（character encoding model）：反应字符编码系统的构成特点和个构成部分之间相互关系的模型框架。\",\"ASCII：传统字符编码模型。将字符集中的字符进行编号，编号就是该字符的编码\",\"统一码（Unicode）、通用字符集（UCS）：现代字符编码模型\",\"现代字符编码模型：\",\"有哪些字符\",\"这些字符的编号是什么\",\"这些编号如何编码成一系列逻辑层面有限大小的数字，即码元序列\",\"这些逻辑层面的码元序列如何转换为（即映射为）物理层面的字节序列(即字节流)\",\"在某些特殊的传输环境中（比如Email中），再进一步将字节序列进行适应性编码处理\",\"核心思想：创建一个能够用不同方式来编码的通用字符集\"]},\"84\":{\"h\":\"2. 现代字符编码模型\",\"t\":[\"现代字符编码模型分为了5个层次：\"]},\"85\":{\"h\":\"2.1 抽象字符表（ACR, Abstract Character Repertoire）\",\"t\":[\"明确字符的范围（即确定支持哪些字符）\",\"无序\",\"不同于具有特定字型的“具体”字符，“抽象”字符不具有特定的字形。\",\"字符表可以是封闭的（如ASCII字符表、ISO/IEC 8859系列），也可以是开放的（如 Unicode、Code Page 代码页）\"]},\"86\":{\"h\":\"2.2 编号字符集（CCS, Coded Character Set）\",\"t\":[\"用数字编号表示字符（即用数字给抽象字符表ACR中的字符进行编号），CCS 常简称为字符集\",\"将抽象字符表 SCR 中的每个抽象字符表示为 1 个非负整数 N 或者映射到 1 个坐标（非负整数值对 x, y），映射的结果就是编号字符集 CCS。\",\"由此产生了编号空间（code space），一般翻译为代码空间、码空间、码点空间\",\"编号空间可以用以下方式进行描述\",\"(x,y)：GB2312的汉字编号空间是94 x 94\",\"N：ISO-8859-1的编号空间是256\",\"存储单元尺寸：ISO-8859-1是一个8比特的编号空间（28=256）\",\"子集：如行、列、面（Plane平面、层面）等等\",\"码点（code point 或 code position）：码点空间中的位置\",\"还经常会用“码点”来指代“码点值”，需要根据上下文进行判断\",\"码点值（或码点编号）：一个字符占用的码点所在的坐标或非负整数，即该字符的编号\",\"在 Unicode 编码方案中，字符码点又称为 Unicode 标量值（Unicode Scalar Value）\",\"字符编号不完全等同于码点编号（即码点值）\",\"一般编号字符集 CCS 里的码点数量要大于抽象字符表 ACR 中的字符数量。 在编号字符集中，除了字符码点之外，还有非字符码点和保留码点\",\"在 Unicode 标准中，一个抽象字符可能对应多个码点，也可能使用多个码点组成的序列来表示。\",\"如码点编号为U+51C9与U+F979的这两个码点实际上是同一个字符“凉”，这是为了兼容韩国字符集标准KS X 1001:1998。再如 aˋ，由码点编号为U+0061的基本字符字母 a 和码点编号为U+0300的组合字符读音符号 ˋ 所共同组成。\"]},\"87\":{\"h\":\"2.3 字符编码方式/形式/格式/规则（CEF, Character Encoding Form）\",\"t\":[\"将字符编号编码为逻辑上的码元序列（即逻辑字符编码）\",\"也被称为存储格式（Storage Format）\",\"以 Unicode 为例，它的 CCS 所需的码点数量赎回不断增加的，而计算机所能表示的整数范围却是有限的。如何通过相对有限的整型数来可扩展地表示可能会无限增长的字符数量？对于 ASCII 字符编码等早期广泛应用的编码方案，如何做兼容？这就是 CEF 要解决的问题。\",\"CEF 就是将 CCS 中的码点值（码点编号、字符编号）转化成有限比特长度的编码值（字符编码）。\",\"这个编码值是码元的序列（code unit sequence）。\",\"码元（code unit）\",\"CEF 虽然也被称为存储格式，但是它只涉及逻辑层面、与特定的计算机系统平台无关的编码方式，尚未涉及到物理层面上、与特定计算机系统平台有关的存储方式\",\"UTF-8、UTF-16、UTF-32 等，都是 Unicode 字符集（编号字符集 CCS）常用的字符编码方式（CEF）\"]},\"88\":{\"h\":\"2.4 字符编码模式CES（CES, Character Encoding Scheme）\",\"t\":[\"将逻辑上的码元序列映射为物理上的字节序列（字节流，即物理字符编码）\",\"也称作序列化模式（Serialization Format）\",\"经过编码后的字符能在计算机中进行处理、存储和传输\",\"CEF 是跟特定计算机系统平台无关的逻辑意义上的编码过程，而 CES 就属于跟特定计算机系统平台有关的物理意义上的编码过程。\",\"由于硬件平台与操作系统设计上的历史原因，对于U TF-16、UTF-32 等采用多字节码元的编码方式而言，必须使用一个原先称之为**零宽度不中断空格(ZERO WIDTH NO-BREAK SPACE)**的字符（Unicode字符编号为 0xFEFF，用来指定字节序 （Byte-Order 或 Endianness，也称字节顺序、位元组顺序），是大端序还是小端序），计算机才能够正确地进行处理、存储和传输。\",\"对于 UTF-8 这种采用单字节码元的编码方式来说，并不存在字节序问题，无需指明字节序。所以在各种计算机系统平台中，UTF-8 编码的码元序列与字节序列都是相同的。\",\"编码（encode）可能指 CEF 也可能是指 CES，解码（decode）也存在对应的两种可能。\",\"编码（encoding）就相应的可能指码元序列，也可能指字节序列。\",\"程序员更多接触到的是 CES 将码元序列进一步编码所形成的 字节序列，这是物理意义上的最终编码\",\"通过 CEF 编码后得到的码元序列，更多的是逻辑意义上的中间编码，一般不和它直接打交道。\",\"第五层的 TES 所形成的编码用于某些特殊的传输环境，打交道机会也比较少。\"]},\"89\":{\"h\":\"2.5 传输编码语法（TES, Transfer Encoding Syntax）\",\"t\":[\"用将字节序列作进一步的适应性编码处理\",\"在某些特殊传输环境中，需要对 CES 所提供的字节序列（字节流）进一步进行适应性编码。一般有两种处理方式：\",\"把字节序列映射到一套更受限制的值域内，以满足该特殊环境的限制。\",\"如用于 Email 传输的 Base64 编码或者 quoted-printable 编码（即可打印字符引用编码），都是把8位的字节映射为7位长的数据。\",\"Email 协议的设计仅能传输 7 位 ASCII 字符。\",\"压缩字节序列的值\",\"如 LZW 或者进程长度编码等无损压缩技术。\"]},\"90\":{\"h\":\"2.6 小结\",\"t\":[\"同一个字符，因多个不同的字符编码方式 CEF（如 UTF-8、UTF-16、UTF-32 等），会有不同的码元序列（Code Unit Sequence）\",\"同一个码元序列，因 2 个不同的字符编码模式 CES（大端、小端），可能具有 2 个不同的字节序列（Byte Sequence）\",\"不同的码元序列或是字节序列，只要表示的是同一个字符，name对应的**码点值（码点编号、字符编号）**一般都是相同的（在Unicode标准中，为了与其它标准兼容，有少数字符可能与多个码点对应）\"]},\"91\":{\"h\":\"2. 字符编码\",\"t\":[\"本系列文章是对知乎专栏「刨根问底字符编码」 的学习记录。\"]},\"92\":{\"h\":\"1 EBCDIC 码与 ASCII 码\"},\"93\":{\"h\":\"1.1 EBCDIC 码\",\"t\":[\"EBCDIC（Extended Binary Coded Decimal Interchange Code，扩展二进制编码的十进制交换码）：1964年，IBM 为大型机操作系统而开发设计的。英文字母的排列是不连续的，这带来了一些困扰和麻烦。\"]},\"94\":{\"h\":\"1.2 ASCII字符编码方案简介\",\"t\":[\"ASCII（American Standard Code for Information Interchange，美国信息交换标准码）：后来 IBM 的个人计算机和工作站操作系统采用了 ASCII 码，后来称为了英文字符编码工业标准。\",\"由美国国家标准学会ANSI（American National Standard Institute）于1968年正式制定\",\"1972 年被 ISO/IEC 采用，，制定为 ISO/IEC 646 标准\",\"7 位二进制表示一个字符，总共 128 （27）个字符。\",\"计算机普遍采用8位作为一个字节来进行存取与处理，因此剩下最高位的那1比特一般为0，但有时在一些通讯系统中也被用作奇偶校验位。\",\"4 类字符\",\"0~31：不可显示不可打印的控制字符或通讯专用字符。如 0x07（BEL响铃）会让计算机发出哔的一声、0x00（NUL空，注意不是空格）通常用于指示字符串的结束、0x0D（CR回车）和 0x0A（LF换行）用于指示打印机的打印针头退到行首（即回车）并移到下一行（即换行）等\",\"注：将这些用于控制或通讯的控制字符或通讯专用字符称之为“字符”，感觉上似乎有点怪，实际上这些所谓的“字符”表示的其实是一种动作或行为，因此才既不可显示也不可能打印。\",\"32：可显示但不可打印的空格字符\",\"33~126：可显示可打印字符，其中 48~57 为 0-9 的阿拉伯数字，65~90 为 26 个大写英文字母，97~122 为26个小写英文字母，其余的是一些标点符号、运算符号等\",\"127：不可显示不可打印的控制字符DEL\"]},\"95\":{\"h\":\"2 EASCII 及 ISO 8859 字符编码方案\",\"t\":[\"计算出现后，逐渐从美国发展到了欧洲。除了最基本的美国使用的那 128 个 ASCII 码之外，还有很多衍生的拉丁字母等字符。考虑到一个字节能够表示的编码实际上有 256（28）个，于是欧洲各国纷纷打起了后面 128 个编码的主意。\",\"各国对于 0x80 ~ 0xFF 的设计各自为政，形成了多个 ANSI 编码方案。为了统一这种混乱局面，又先后设计了两套统一的技能兼容 ASCII 码、又支持各国所使用的那些衍生字段的单字节编码方案：EASCII（Extended ASCII）和 ISO/IEC8859。\"]},\"96\":{\"h\":\"2.1 EASCII\",\"t\":[\"将 ASCII 中闲置的最高位利用起来。当第一个比特位为 0 时，仍然表示之前的 ASCII 字符；当第一个比特位为 1 时，表示补充扩展的其他衍生字符。\",\"现在 EASCII 码基本上被废弃了，它容纳的字符太少，国际化和标准化程度不够。目前已经被 ISO/IEC 8859 字符编码方案取代了。\"]},\"97\":{\"h\":\"2.2 ISO/IEC 8859\",\"t\":[\"和 EASCII 一样，ISO/IEC 8859 也是在 ASCII 码的基础上利用了最高位，即扩展剩余的128位。但实际上只有 0xA0~0xFF （十进制 160~255）这 96 个编码定义了字符。\",\"与 ASCII、EASCII 字符编码方案只包括单个独立的字符集不同，ISO/IEC 8859 字符编码方案包括了一组字符集，或者说 ISO/IEC 8859 相当于是一组字符集的总称，其内共包含了 15 个字符集，即 ISO/IEC 8859-n，n=1、2、3...15、16，其中 12 未定义，所以实际上共 15 个。这 15 个字符集大致上包括了欧洲各国所使用到的字符。\",\"目前使用最为普遍的是 ISO/IEC 8859-1 （也称 Latin-1）字符集，收录了西欧常用字符（包括德法两国的字母）。\"]},\"98\":{\"h\":\"3. 简体汉字编码方案（GBK2312、GBK 等）\"},\"99\":{\"h\":\"3.1 背景\",\"t\":[\"中文汉字多达10万+，而一个字节只能表示 256 个字符，所以只能使用多个字节来表示一个字符。\",\"在 GB（汉语“国标”首字母）系列编码方案中，如果一个字节是 0~127，那么这个字节的含义与 ASCII 码相同，否则，这个字节和下个字节共同组成汉字（或其他字符）。\",\"GB2312 是最早的 GB 编码方案，收录的汉字不足 1 万，基本满足日常需要，但不包括生僻字，于是后来又进行了扩展。\",\"GBK 是在 GB2312 上扩展后的字符集，K 指扩展。\",\"GB18030 是在 GBK 基础上进行进一步扩展得到的，加入了少数民族的文字，一些生僻字被编到了 4 字节。\",\"上述三个 GB 系列编码方案每次扩展都完全保留之前版本的编码，即每个新版本都向下兼容。\",\"多字节字符与 ASCII 码混用时，有 2 种处理方式：\",\"将 ASCII 重新编码为多字节，以便与其他多字节字符统一。如 UTF-16、UTF-32 等。\",\"保持 ASCII 字符为单字节编码，将其他多字节字符编码中的各个字节的最高位设为 1，以避免与 ASCII 码（首位为 0）冲突。如 GB、UTF-8。\",\"UTF-16、UTF-32 是多字节编码，采用的是多字节码元，UTF-8 虽然也是多字节编码，但采用的是单字节码元。GB 系列虽然除 ASCII 字符外的其余字符位多字节编码，但采用的是单字节码元，由于历史原因，又进一步引发了更为麻烦的字节序（Byte-Order）问题。\"]},\"100\":{\"h\":\"3.2 GB2312\",\"t\":[\"GB2312 是双字节编码，前一字节为高字节，后面的为低字节。一个汉字的编码（即汉字内码）的字节，其值必须大于 127（即最高位为 1），并且必须是 2 个大于 127 的字节连在一起共同表示一个汉字。\",\"GB2312 标准共收录 6763 个汉字，其中一级汉字 3755 个，二级汉字 3008个；同时，除了汉字，GB2312 还收录了包括拉丁字母、希腊字母、日文平假名及片假名字符、俄语西里尔字母在内的 682 个字符。\",\"可能是出于显示上视觉美观的考虑，这 682 个字符中还包括了 ASCII 里本来就有的数字、标点、字母等字符。即对 ASCII 码中原本就有的单字节编码的字符，又编入了 2 个字节长的 GB2312 编码版本。这些双字符编码字符就是全角字符，他们对应的单字节编码的 ASCII 字符就是半角字符。\"]},\"101\":{\"h\":\"3.3 GBK\",\"t\":[\"GBK 只要求高字节大于 127 就表示这是一个汉字的开始。向后完全兼容 GB1212，还支持 GB1212-1980 不支持的部分中文简体、中文繁体、日文。共收录汉字 21003 个、符号 883 个，并提供 1894个 造字码位，简、繁体字融于一体。\",\"微软的CP936通常被视为等同于GBK。但 GBK 定义的字符较 CP936 多出了 95 个（15个非汉字及80个汉字）。\"]},\"102\":{\"h\":\"3.4 GB18030\",\"t\":[\"中国国家质量技术监督局于 2000 年 3 月 17 日推出了 GB18030-2000 标准，以取代 GBK。GB18030-2000 除保留全部 GBK 编码汉字之外，在第二字节再度进行扩展，增加了大约一百个汉字及四位元组编码空间。\",\"2005 年，GB18030 编码方案在 GB18030-2000 的基础上又进行了扩充，于是又有了 GB18030-2005《信息技术中文编码字符集》。\",\"GB18030-2000 是 GBK 的升级版本，它的主要特点是在 GBK 基础上增加了 CJK 中日韩统一表意文字扩充 A 的汉字；而GB18030-2005 的主要特点是在 GB18030-2000 基础上又增加了 CJK 中日韩统一表意文字扩充 B 的汉字。\",\"微软也为GB18030定义了专门的代码页：CP54936，但是这个代码页实际上并没有真正使用。\"]},\"103\":{\"h\":\"3.5 小结\",\"t\":[\"GB 类字符集均属于双字节字符集 DBCS（Double Byte Character Set）。基于DBCS的编码方案里，最大的特点是两字节长的中文字符和一字节长的英文字符（ASCII字符）完全兼容，可以并存于同一个文件内。\",\"使用GB类编码方案时一般都要时刻记住：一个汉字由两个字节组成（即一个汉字占用的存储空间相当于两个英文字符所占用的存储空间）。\"]},\"104\":{\"h\":\"3. Unicode 编码方案\",\"t\":[\"本系列文章是对知乎专栏「刨根问底字符编码」 的学习记录。\"]},\"105\":{\"h\":\"1. 概述\",\"t\":[\"Unicode字符集的目标是涵盖目前人类使用的所有字符，并为每个字符分配一个唯一的字符编号（即码点编号、码点值），一一对应于编号空间（Code Space，即代码空间、码空间、码点空间）里的码点（Code Point，即代码点）。\",\"目前，Unicode字符集将所有字符按照使用上的频繁度，被划分为了17个平面（Plane），每个平面上的编号空间有 216=65536 个码点。将来根据需要，还可扩展为更多平面。\"]},\"106\":{\"h\":\"1.1 BMP、SP\",\"t\":[\"第 0 个平面称为基本多语言平面（BMP, Basic Multilingual Plane），简称为进本平面，平面 0，覆盖当今世界上正在使用中的常用字符。\",\"我们平常用到的大多数常见字符，一般都是位于 BMP 平面上的。\",\"BMP 以外的其他平面为增补平面（SP, Supplementary Plane），也称辅助平面，目前共 16 个增补平面 SP。\",\"增补平面要么用来表示一些非常特殊的字符（比如不常用的象形文字、远古时期的文字等），多半只有专家在历史和科学领域里才会用到它们；要么被留作扩展之用，尚未被分配字符，称之为保留区。目前Unicode字符集的17个平面中尚有大量的保留区编号空间未被使用。\",\"另外，BMP 平面中有一个私用区，也称为专用区（PUA：Private Use Area，或PUZ：Private Use Zone）：0xE000~0xF8FF（十进制 57344~63743），共6400个码点，被保留为私用，Unicode 官方未将之分配给任何 Unicode 字符，因而可根据需要由合作者之间私下协商将其分配给私有字符。\",\"注：Unicode 标准到目前为止实际上共定义了三个私用区：一个为如上所述的BMP中的 U+E000~U+F8FF，另外两个几乎包含了整个第 15 平面和第 16 平面，分别为 U+F0000~U+FFFFD 和 U+100000~U+10FFFD；私用区相当于是可以由 Unicode 官方之外的个人和机构自由定义字符的特殊区域，因此私用区中的同一个码点，可被分配给不同的字符，具体是哪个字符，取决于用户使用的字体文件，从而导致不同的用户由于安装了不同的字体文件，有可能所看到的私有字符也不同。\",\"BMP 中还有一个被称为代理区（Surrogate Zone）的特殊区域：0xD800-0xDFFF（十进制55296~57343），共 2048 个码点，这些码点被称之为代理码点，目的是用基本平面BMP中的两个码点“代理”表示 BMP 以外的其他增补平面 SP 中的字符。\"]},\"107\":{\"h\":\"1.2 UTF-16\",\"t\":[\"Unicode字符集的字符编码方式一开始规定，使用两个字节的码元（即16位码元）来统一表示所有的字符（即 UTF-16）。UTF-16 中将 ASCII 码的长度由 8 位扩展为 16 位（高 9 位永远是 0），其余的字符全部重新统一编码。\",\"无论是半角的英文字母还是全角的汉字，它们都表示“1个字符”，其编码也都是“2个字节”。\",\"Unicode 在制订 UTF-16 字符编码之处，没有考虑与任何一种现有的字符编码保持完全兼容。例如要将文本内容在 UTF-16 和 GBK 之间进行转换，只能通过查表这样低效率的办法。即便是 ASCII 字符，也属于是不完全的间接兼容或半兼容，因为 UTF-16 是两个字节表示的，不同于 ASCII 的单字节编码。于是后来又设计了 UTF-8 字符编码方式，从而实现了与 ASCII 编码的完全兼容。\"]},\"108\":{\"h\":\"1.3 码点名称\",\"t\":[\"Unicode 字符集为每个字符根据其所在的码点分配了唯一的码点值（即码点编号）。同时为每个码点赋予了一个正式的名称，用 U+ 后接十六进制数字表示，称为码点名称或字符名称。（U+0041 表示英文大写字母 A，可在这里查询\",\"Unicode字符集中的 U+0000~U+007F（即十进制的 0~127），跟ASCII字符集（即 ISO/IEC 646 标准）是一致的；U+0000~U+00FF（即十进制的 0~255），跟 ISO/IEC 8859-1 字符集（即Latin-1字符集）也是一致的。\"]},\"109\":{\"h\":\"通信协议综述\",\"t\":[\"专栏「趣谈网络协议」学习记录\"]},\"110\":{\"h\":\"1. 协议三要素：语法、语义、顺序\"},\"111\":{\"h\":\"2. IP 和 CIDR\",\"t\":[\"IP 分类\",\"Class\",\"前缀位\",\"网络地址位数\",\"剩余的位数\",\"网络数\",\"每个网络的主机数\",\"IP 地址范围\",\"私有 IP 地址范围\",\"A类地址\",\"0\",\"8\",\"24\",\"128\",\"16,777,214\",\"0.0.0.0~127.255.255.255\",\"10.0.0.0~10.255.255.255\",\"B类地址\",\"10\",\"16\",\"16\",\"16,384\",\"65,534\",\"128.0.0.0~191.255.255.255\",\"172.16.0.0~172.31.255.255\",\"C类地址\",\"110\",\"24\",\"8\",\"2,097,152\",\"254\",\"192.0.0.0~223.255.255.255\",\"192.168.0.0~192.168.255.255\",\"D类地址（群播）\",\"1110\",\"未定义\",\"未定义\",\"未定义\",\"未定义\",\"224.0.0.0~239.255.255.255\",\"E类地址（保留）\",\"1111\",\"未定义\",\"未定义\",\"未定义\",\"未定义\",\"240.0.0.0~255.255.255.255\",\"无类型域间选路（CIDR）\",\"打破原来设计的几类地址的做法，将 IP 地址分为两部分：网络号 + 主机号。如 IP 为 10.0.24.16/22，22 指的是前22位是网络号，后 10 位是主机号。\",\"广播地址：10.0.27.255。当发出一个目的地址为 10.0.27.255 的分组时，它将被分发给该网段上的所有计算机。\",\"子网掩码：255.255.252.0。\",\"子网掩码 & IP 地址 = 网路号\",\"公有 IP 地址、私有 IP 地址\",\"组播地址（之后 VXLAN 协议会涉及到）\"]},\"112\":{\"h\":\"3. ip addr / ifconfig\",\"t\":[\"查看 IP 地址：Windows -> ipconfig, Linux -> ifconfig 或者 ip addr\",\"如果在一个被剪裁的很小的 Linux 系统中没有 ifconfig 或者 ip addr，可以自行安装 net-tools 和 iproute2 这两个工具。\",\"net-tools 起源于 BSD，自 2001 年起，Linux 社区已经对其停止维护，而 iproute2 旨在取代 net-tools，并提供了一些新功能。一些 Linux 发行版已经停止支持 net-tools，只支持 iproute2。 net-tools 通过 procfs(/proc) 和 ioctl 系统调用去访问和改变内核网络配置，而 iproute2 则通过 netlink 套接字接口与内核通讯。 net-tools 中工具的名字比较杂乱，而 iproute2 则相对整齐和直观，基本是 ip 命令加后面的子命令。\",\"ip 后面的 scope global eth0 指的是 eth0 这张网卡是 global，是可以对外的，能够接收来自各个地方的包。而scope host lo 这张网卡仅仅可以供本机星湖通信。\",\"lo -> loopback(环回接口)，往往会被分配到 127.0.0.1 这个地址。这个地址用于本机通信，经过内核处理后直接返回，不会在任何网络中出现。\",\"在 IP 地址的上一行是 link/ether fa:16:3e:c7:79:75 brd ff:ff:ff:ff:ff:ff，这个被称为 MAC 地址，是一个网卡的物理地址，用十六进制，6 个 byte 表示。\",\"MAC 地址全局全局唯一，为什么还要用 IP 呢？\",\"MAC 地址是唯一的标识，但是要将一个网络包从一个地方传到另一个地方，除了需要确定的地址，还需要定位功能，而 IP 地址次具有远程定位功能（类比身份证 & 地址）。 MAC 地址具有一定定位功能，但是通信范围比较小，局限在一个子网里。一旦跨网，MAC 地址就不行了。\",\"网络设备的状态标识（net_device flags）：<BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\",\"UP: 网卡处于启动状态\",\"BROADCAST: 该网卡有广播地址，可以发送广播包\",\"MULTICAST: 网卡可以发送多播包\",\"LOWER_UP: 表示 L1 是启动的，即网线插着\",\"MTU500: 最大传输单元 MTU 为 1500，以太网的默认值 MTU 是 MAC 层的概念。以太网规定正文部分不允许超过 1500 字节。正文里有 IP 的头、TCP 的头、HTTP的头。如果放不下，就要分片传输。\",\"qdisc mq: qdisc(queueing discipline)，排队规则。如果需要通过某个网络接口发送数据包，它都需要按照为这个接口配置的 qdisc（排队规则）把数据包加入队列。 \",\"最简单的 qdisc 是 pfifo，不对进入的数据包做任何处理，数据包采用先进先出的方式通过队列\",\"pfifo_fast 稍微复杂一点，他的队列包括三个波段（band），在每个波段里使用先进先出。 \",\"band 0 的优先级最高。\",\"数据包按照服务类型（Type of Service, TOS）被分配到三个 band 里。TOS 是 IP 头中的一个字段，表示当前的包的优先级。\",\"mq 是多队列。\"]},\"113\":{\"h\":\"4. IP 地址配置\",\"t\":[\"当配置的地址不在同一个网段时，包就无法发送出去了。\",\"例如，周围的机器都是 192.168.1.x，但是配置的 IP 是 192.2.2.4。现在来 ping 192.168.1.6，在把包发出去之前要先把 MAC 层填好，源 MAC 直接填入，但是目的 MAC 需要费一番功夫。\",\"Linux 首先会判断，目的 IP 和源 IP 是否在同一网段，或者和我的一个网卡是否在同一个网段。只有是一个网段的，他才会发送 ARP 请求，获取 MAC 地址。\",\"如果不是一个网段的，那么它会企图把包发送到网关。\",\"如果你配置了网关，Linux 会获取网关的 MAC 地址，然后将包发出去。对于 192.168.1.6 来说，虽然路过它的这个包 IP 是它，但是 MAC 地址不是它的，所以它的网卡不会把包收进去。\",\"如果没配网关，那么包完全发不出去。\",\"如果直接将网关配置成 192.168.1.6 呢？完全不可能，Linux 不会允许配置成功。网关需要和当前的网络至少一个网卡是同一个网段的，192.2.2.4 的网关不可能是 192.168.1.6。\",\"实际分配的时候，一般都是网络管理员分配 IP 地址，且不会直接用命令，而是放在一个配置文件里面。不同系统的配置文件格式不同，但是无非就是 CIDR、子网掩码、广播地址和网关地址。\"]},\"114\":{\"h\":\"5. 动态主机配置协议（DHCP, Dynamic Host Configuration Protocol）\",\"t\":[\"我们需要自动配置的协议。使用 DHCP，网络管理员只需要配置一段共享的 IP 地址。每一台新接入的机器都通过 DHCP 协议，来这个 IP 地址里申请，然后自动配置好。等人走了或者用完了，还回去，这样其他的机器也能用。\",\"所以，如果是数据中心里面的服务器，IP 一旦配置好，基本不会变，这就相当于买房自己装修。\"]},\"115\":{\"h\":\"DHCP 的工作方式\",\"t\":[\"共 4 次广播，使用 UDP 协议。\"]},\"116\":{\"h\":\"Step 1: DHCP Discover\",\"t\":[\"当一台机器新加入一个网络时，只知道自己的 MAC 地址。这时的沟通基本靠“吼”，我来啦，有人吗？这一步称为 DHCP Discover。\",\"新来的机器使用 IP 地址 0.0.0.0 发送了一个广播包，目的 IP 是 255.255.255.255。广播包封装了 UDP，UDP 封装了 BOOTP。DHCP 是 BOOTP 的增强版，但是抓包后可能看到的名称还是 BOOTP 协议。\",\"广播包内容如下：我是新来的（boot request），我的 MAC 地址是这个，我没 IP，谁能租给我个 IP 地址！\"]},\"117\":{\"h\":\"Step 2: DHCP Offer\",\"t\":[\"如果一个网络管理员在网络里配置了 DHCP Server，它就相当于这些 IP 的管理员。由于 MAC 是唯一的，所以 DHCP Server 知道来了个“新人”，需要租给它一个 IP 地址。这个过程称为 DHCP Offer。DHCP Server 会为此客户保留为它提供的 IP 地址，不会为其他客户分配同一个 IP 地址。\",\"DHCP Offer 的格式如下，里面有给新人分配的地址：\",\"DHCP Server 仍然使用广播地址作为目的地址，因为此时请求分配 IP 的新人还没有自己的 IP。DHCP Server 为它分配了一个可以用的 IP，并发送了子网掩码、网关和 IP 地址租用期等信息。\"]},\"118\":{\"h\":\"Step 3: DHCP Request\",\"t\":[\"如果有多个 DHCP Server，这台机器会收到多个 IP 地址。他会选择其中一个 DHCP Offer，一般是最先到达的那个，并向网络发送一个 DHCP Request 广播数据包，包中包含客户端的 MAC 地址、接受的租约中的 IP 地址、提供此租约的 DHCP 服务器地址等，并且告诉所有的 DHCP Server 它将接受哪一台服务器提供的 IP 地址，告诉其他 DHCP 服务器，谢谢你们的接纳，并撤销他们提供的 IP 地址，以便提供给下一个 IP 租用请求者。\",\"此时，由于还没有得到 DHCP Server 的最后确认，客户端仍然使用 0.0.0.0 为源 IP 地址、255.255.255.255 为目标地址进行广播。在 BOOTP 里面，接受某个 DHCP Server 分配的 IP。\"]},\"119\":{\"h\":\"Step 4: DHCP ACK\",\"t\":[\"最终租约达成的时候，还是需要广播一下，让大家都知道。\",\"当 DHCP Server 收到客户机的 DHCP request 之后，会广播返回给客户机一个 DHCP ACK 消息包，表明已经接受客户机的选择，并将这一 IP 地址的合法租用信息和其他的配置信息都放入该广播包，发给客户机，欢迎它加入网络大家庭。\"]},\"120\":{\"h\":\"6. IP 地址回收和续租\",\"t\":[\"客户机在租期过去 50% 的时候，直接向为其提供 IP 的 DHCP Server 发送 DHCP request 消息包。客户机接收到该服务器回应的 DHCP ACK 消息包，会根据包中提供的新租期以及其他更新的 TCP/IP 参数，更新自己的配置。这样，IP 租用期更新就完成了。\"]},\"121\":{\"h\":\"7. 预启动执行环境（PXE, Pre-boot Execution Environment）\",\"t\":[\"DHCP 协议中还有个细节。网络管理员不仅能自动分配 IP 地址，还能帮你自动安装操作系统！\",\"数据中心的管理员肯呢个一下子拿到几百台控的机器，所以他希望的不仅仅是自动分配 IP 地址，还要自动安装系统。装好系统之后自动分配 IP 地址，直接启动就能用了。\",\"BIOS 启动之后才能安装操作系统，但是在没安装操作系统之前，是没有启动扇区的，所以这个过程叫预启动执行环境（PXE）。\",\"PXE 协议分为客户端和服务器端，由于没有操作系统，只能先把客户端放在 BIOS 里面。计算机启动是，BIOS 把 PXE 客户端调入内存里，就可以连接到服务器做一些操作了。\",\"PXE 客户端（通常也称为 PXE 固件）是网卡固件的一部分，被网卡厂商固化在了网卡的 ROM 中。\",\"PXE 客户端自己需要有 IP 地址。PEX 客户端启动的时候，啥都没有。但是可以发送 DHCP 请求，让 DHCP Server 给它分配一个地址。\",\"PXE 客户端有了自己的地址，那它怎么知道 PXE 服务器在哪呢？\",\"DHCP Server 除了分配 IP 地址以外，还可以做一些其他的事情。下面是一个 DHCP Server 的样例配置：\",\"ddns-update-style interim; ignore client-updates; allow booting; allow bootp; subnet 192.168.1.0 netmask 255.255.255.0 { option routers 192.168.1.1; option subnet-mask 255.255.255.0; option time-offset -18000; default-lease-time 21600; max-lease-time 43200; range dynamic-bootp 192.168.1.240 192.168.1.250; filename \\\"pxelinux.0\\\"; next-server 192.168.1.180; } \",\"如果想使用 PXE，需要配置 next-server，指向 PXE 服务器的地址，还要配置初始启动文件 filename。\",\"这样 PXE 客户端启动后，发送 DHCP，除了能得到 IP 地址，还能知道 PXE 服务器在哪。也可以知道如何从 PXE 服务器上下载某个文件，去初始化操作系统。\"]},\"122\":{\"h\":\"PXE 的工作过程\",\"t\":[\"PXE 客户端启动。通过 DHCP 协议告诉 DHCP Server 我是“新人”，我来了。DHCP Server 租给他一个 IP 地址，同时也给它 PXE 服务器的地址、启动文件 pxelinux.0。\",\"PXE 客户端去 PXE 服务器下载启动文件。系在启动文件使用的是 TFTP 协议，所以 PXE 服务器上，还需要有一个 TFTP 服务器。PXE 客户端向 TFTP 服务器请求下载这个文件，TFTP 服务器将文件传给它。\",\"PXE 收到了这个文件，开始执行该文件。这个文件会指示 PXE 客户端，向 TFTP 服务器请求计算机的配置信息 pxelinux.cfg。TFTP 服务器会给 PXE 客户端一个配置文件，里面会指明内核在哪里、initramfs 在哪里。PXE 客户端会请求这些文件。\",\"启动 Linux 内核。\"]},\"123\":{\"h\":\"Linux 命令\"},\"124\":{\"h\":\"1. 用户\",\"t\":[\"修改密码：passwd\",\"创建用户：\",\"创建新用户：useradd user-name\",\"为新用户设置密码：passwd user-name\",\"提示\",\"可以使用 -h 参数查看帮助。如 useradd -h。\",\"如果想看更详细的文档，可以通过 man useradd 获得。\",\"通过命令创建的用户，放在 /etc/passwd 文件里。组的信息在 /etc/group 中。我们可以通过 cat 命令查看。\",\"我们在 passwd 文件中看到了新创建的用户（用户名为 test）:\",\"test:x:1003:1003::/home/test:/bin/sh \",\"x 的地方是密码。然后是用户 ID 和组 ID。\",\"root 用户的主目录为 /root。test 用户的主目录为 /home/test。\",\"/bin/bash 的位置是用于配置登录后的默认交互命令行的\"]},\"125\":{\"h\":\"2. 浏览文件\",\"t\":[\"cd: change directory\",\"ls: 列出当前目录下的文件（Windows 中可以用 dir）\",\"-l: 用列表方式列出\",\"drwxr-xr-x 2 root root 4096 Aug 8 11:10 a/ -rw-r--r-- 1 root root 161 Jul 9 2019 b \",\"第一个字段的第一个字符是文件类型。- 表示普通文件，d 表示目录。\",\"第一个字段的剩下 9 个字段是模式，即权限位（access permission bits）。3 个一组，每一组 rwx 分别表示“读（read）”、“写（write）”、“执行（execute）”。每一组分别表示文件所属的用户权限、文件所属的组权限、其他用户的权限。\",\"第二个字段是硬链接（hard link）的数目\",\"第三个字段是所属用户，第四个字段是所属组。第五个字段是文件的大小。第六个字段是文件被修改的日期。最后是文件名。\",\"chmod 711 a: 修改权限\",\"chown: 改变所属用户\",\"chgrp: 改变所属组\",\"该文件所属用户可以使用 chmod 修改权限，但是 chown、chgrp 命令只能由 sudoers（在 /etc/sudoers 内查看） 来做。\"]},\"126\":{\"h\":\"3. 安装软件\"},\"127\":{\"h\":\"3.1 没有软件管家\",\"t\":[\"下载：最安全的方式是到官网下载，对于 Linux 可以下载 rpm 或者 deb。\",\"Linux 有两大体系，CentOS 体系使用的是 rpm，Ubuntu 体系用的是 deb。\",\"安装：\",\"查看软件列表：\",\"使用 grep 搜索工具或 more、less\",\"这个列表很长，很难找到刚安装的软件。如果知道软件有某个关键词，可以使用搜索工具 grep:\",\"如果不知道关键词，可以使用 rpm -qa | more 和 rpm -qa | less（dpkg -l | more 和 dpkg -l | less），可以将很长的结果分页展示。\",\"`more` 只能向后翻页，到最后一页自动结束；`less` 前后都能翻，输入 q 可以退出。 \",\"删除软件：rpm -e 或 dpkg -r\"]},\"128\":{\"h\":\"3.2 有软件管家\",\"t\":[\"CentOS 的软件管家是 yum，Ubuntu 对应的是 apt-get。\",\"搜索：可以通过管道 grep、more、less 来进行过滤。\",\"选中对应的版本就可以进行安装了\",\"安装：\",\"卸载：\",\"配置源\",\"Linux 允许我们配置从哪里下载这些软件，CentOS 的配置文件在 /etc/yum.repos.d/CentOS-Base.repo 里；Ubuntu 的配置文件在 /etc/apt/sources.list 里。\",\"源配置文件内容示例\"]},\"129\":{\"h\":\"3.3 下载 + 配置环境\",\"t\":[\"无论是哪种下载方式，最终都是下载文件，存放在某路径下，然后再相应的配置文件中进行配置。主执行文件会存放在 /usr/bin 或 /usr/sbin 下面，其他的库文件会在 /var 下面，配置文件在 /etc 下面。\",\"所以还可以用一种简单粗暴的方法。使用 wget 将安装好的文件直接下载下来，然后解压缩。例如在 jdk 官网中的安装目录里，Windows 有 jdk-XXX_Windows-x64_bin.zip，这是 Windows 下常用的压缩模式。Linux 有 jdk-XXX_linux-x64_bin.tar.gz，这是 Linux 下常用的压缩模式。\",\"如果要解压 zip，需要先安装 zip 程序：\",\"如果是 tar.gz，Linux 默认有 tar 程序，使用下面命令就可以解压缩了\",\"tar xvzf jdk-XXX_linux-x64_bin.tar.gz \",\"解压缩之后，需要配置环境变量，可以通过 export 命令来配置。\",\"export JAVA_HOME=/root/jdk-XXX_linux-x64 export PATH=$JAVA_HOME/bin:$PATH \",\"export 命令仅在当前命令行的会话中管用，一旦退出重新登录进来，就不管用了。我们需要一个可以永远起作用的配置。\",\"在当前用户的默认工作目录（/root 或 /home/test）下，有 .bashrc 文件。每次登录的时候，这个文件都会运行。也可以通过 source .bashrc 手动执行。\",\"可以使用 vim 文本编辑器来编辑 .bashrc 文件。如果默认没安装，可以使用 yum install vim 或 apt-get install vim 安装。\",\"在 .bashrc 文件中加入 export 的两行，进行保存。\",\"几个配置文件的区别\",\"/etc/profile\",\"为系统的每个用户设置环境信息，当用户第一次登录时，该文件被执行。并从 /etc/profile.d 目录下的配置文件中收集 shell 的设置。\",\"修改这个文件需要 source 一下，修改才会生效。此修改对每个用户都生效。\",\"/etc/bashrc（Ubuntu 中为 /etc/bash.bashrc ）\",\"为每一个运行 bash shell 的用户执行此文件。当 bash shell 被打开时，该文件被读取。\",\"修改这个文件不用重启，重新打开一个 bash 即可生效。\",\"~/.bash_profile（Ubuntu 中为 ~/.profile）\",\"用该文件输入专用于自己使用的 shell 信息，当用户登录时，该文件仅执行一次。它设置一些环境变量，执行用户的 ~/.bashrc 文件。\",\"修改后需要 source。只对当前用户生效。\",\".bashrc 是个人的配置信息存储文件，只对单用户有效\",\"包含专属于自己的 bash shell 的 bash 信息。当登录以及每次打开新的 shell 时，该文件被读取。\",\"不需要重启、只需要重新打开一个 bash 即可生效。\"]},\"130\":{\"h\":\"4. 运行程序\"},\"131\":{\"h\":\"4.1 通过 shell 在交互命令行里运行\",\"t\":[\"只要文件有 x 执行权限，都可以在该目录下用 ./filename 执行。如果程序在 PATH 中，那么直接调 filename 就可以了。\",\"在命令行中运行的程序，一旦交互命令行退出，程序就停止运行了。\"]},\"132\":{\"h\":\"4.2 后台运行\",\"t\":[\"nohup（no hang up, 不挂起），即交互命令行退出时，程序还要在。\",\"这时程序不能霸占交互命令行，应该在后台运行。最后要加一个 &，表示在后台运行。\",\"原本可以利用命令行进行输出，现在可以输出到文件。\",\"最终命令的一般形式是：\",\"nohup command > out.file 2>&1 & \",\"1: 文件描述符 1，表示标准输出\",\"2: 文件描述符 2，表示标准错误输出\",\"2>&1: 表示标准输出和错误输出合并了，合并到 out.file 中\",\"那么如何关闭这个进程呢？\",\"ps -ef |grep 关键字 |awk '{print $2}'|xargs kill -9 \",\"ps -ef 可以单独执行，列出所有正在运行的程序，grep 做搜索\",\"awk 可以灵活地对文本进行处理，awk '{print $2}' 是指第二列的内容，是运行的程序 ID\",\"xargs 命令将前面的输入作为后面命令 kill -9 的输入，也就是传左边命令截取的进程号给命令 kill -9\"]},\"133\":{\"h\":\"4.3 以服务的方式运行\",\"t\":[\"Linux 中有服务，比如数据库 MySQL 就可以以服务的方式运行。\",\"Ubuntu 中，我们可以使用 apt-get install mysql-server 安装 MySQL，调用命令 systemctl start mysql 启动 MySQL，通过 systemctl enable mysql 设置开机启动。对应的，在 /lib/systemd/system 目录下会创建一个 XXX.service 的配置文件，里面定义了如何启动、如何关闭。\",\"在 CentOS 中有些特殊，MySQL 被 Oracle 收购后，因为担心授权问题，改为使用 MariaDB，它是 MySQL 的一个分支。安装：yum install mariadb-server mariadb。启动：systemctl start mariadb。开机启动：systemctl enable mariadb。同样，会在 /usr/lib/systemd/system 下创建 XXX.service 的配置文件，从而成为一个服务。\",\"相关信息\",\"查看更多 systemd\"]},\"134\":{\"h\":\"5. 关机 & 重启\",\"t\":[\"shutdown -h now 现在就关机\",\"reboot 重启\"]},\"135\":{\"h\":\"6. 总结\"},\"136\":{\"h\":\"数组\",\"t\":[\"一块连续的内存空间，支持随机访问\",\"插入和删除比较低效（平均情况时间复杂度为 O(n)），因为可能要大量移动数据。\",\"插入：如果对数组内元素的顺序没有要求，那么可以将要插入位置的元素插入到最后，而将待插入的元素直接插入对应位置，则时间复杂度就会降到 O(1)。\",\"删除：可以先记录下已经删除的数据。每次删除并不进行数据的移动，只记录数据已经被删除，当数组没有更多空间存储数据时，我们再出发执行一次真正的删除操作。\",\"点此查看 JavaScript 中的数组提供的功能。\"]},\"137\":{\"h\":\"二分查找\",\"t\":[\"二分查找针对的是有序集合。每次通过跟中间元素对比，将待查找区间缩小为之前的一半，直到找到要查找的元素，或者区间被缩小为 0。\"]},\"138\":{\"h\":\"1. 时间复杂度： O ( l o g n ) O(log n) O ( l o g n )\",\"t\":[\"假设数据大小是 n，每次查找后都会变为原来的一半。最坏情况下，直到区间为缩小为 0 才停止：\",\"n,2n​,4n​,8n​,...,2kn​,...\",\"当 2kn​=1 时，k 的值就是总共缩小的次数。每次操作只涉及两数比较大小，所以时间复杂度就是 O(k)=O(log2​k)=O(logn)。\"]},\"139\":{\"h\":\"2. 二分查找的递归与非递归实现\",\"t\":[\"这里我们实现一个简单的二分查找。\",\"最简单的情况就是有序数组中不存在重复元素。\",\"mid 的取值 如果 low 和 high 比较大，使用 (low+high)/2 可能会溢出。改进：low+(high-low)/2。改成位操作：low+(high-low)>>1\"]},\"140\":{\"h\":\"3. 二分查找应用场景的局限性\",\"t\":[\"二分查找依赖的是顺序表（数组）\",\"二分查找针对的是有序数据 排序的时间复杂度最低的是 O(nlogn)。如果遇到一组静态数据，没有频繁的插入、删除操作，可以进行一次排序、多次二分查找。这样排序的成本可被均摊。\",\"如果有频繁的插入和删除操作，想使用二分查找，要么每次插入、删除之后保证数据仍然有序，要么在每次二分查找前都进行排序。无论哪种方法，维护有序的成本都是很高的。针对这种动态数据集合，查找数据用二叉树。\",\"数据量太小不适合二分查找 数据量很小的时候，直接顺序遍历就可以了。\",\"但是，如果数据之间的比较操作非常耗时，无论数据量大小，都推荐使用二分查找。\",\"数据量太大不适合二分查找 二分查找的底层需要依赖数组这种数据结构，而数组为了支持随机访问的特性，要求内存空间连续，对内存的要求比较苛刻。比如，我们有 1GB 大小的数据，如果希望用数组来存储，那就需要 1GB 的连续内存空间。\"]},\"141\":{\"h\":\"4. 更复杂的二分查找\"},\"142\":{\"h\":\"4.1 查找第一个值等于给定值的元素\",\"t\":[\"public int bsearch(int[] a, int n, int value) { int low = 0; int high = n - 1; while (low <= high) { int mid = low + (high - low) >> 1; if (a[mid] > value) { high = mid - 1; } else if (a[mid] < value) { low = mid + 1; } else { if ((mid == 0) || a[mid - 1] != value) return mid; else high = mid - 1; } } return -1; } \"]},\"143\":{\"h\":\"4.2 查找最后一个值等于给定值的元素\",\"t\":[\"public int bsearch(int[] a, int n, int value) { int low = 0; int high = n - 1; while (low <= high) { int mid = low + (high - low) >> 1; if (a[mid] > value) { high = mid - 1; } else if (a[mid] < value) { low = mid + 1; } else { if ((mid == n-1) || a[mid + 1] != value) return mid; else low = mid + 1; } } return -1; } \"]},\"144\":{\"h\":\"4.3 查找第一个大于等于给定值的元素\",\"t\":[\"public int bsearch(int[] a, int n, int value) { int low = 0; int high = n - 1; while (low <= high) { int mid = low + (high - low) >> 1; if (a[mid] >= value) { if ((mid == 0) || a[mid - 1] < value) return mid; else high = mid - 1; } else (a[mid] < value) { low = mid + 1; } } return -1; } \"]},\"145\":{\"h\":\"4.4 查找最后一个小于等于给定值的元素\",\"t\":[\"public int bsearch(int[] a, int n, int value) { int low = 0; int high = n - 1; while (low <= high) { int mid = low + (high - low) >> 1; if (a[mid] > value) { high = mid - 1; } else (a[mid] < value) { if ((mid == n-1) || a[mid + 1] > value) return mid; else low = mid + 1; } } return -1; } \"]},\"146\":{\"h\":\"散列表\",\"t\":[\"我们也称散列表为哈希表或 hash 表。它利用数组支持按照下标随机访问数据的特性，是数组的一种扩展。\",\"键（key）、散列函数（hash 函数、哈希函数）、散列值（hash 值、哈希值）\",\"hash 函数设计的基本要求：\",\"hash 函数计算得到的 hash 值是一个非负整数\",\"如果 key1 = key2，那么 hash(key1) = hash(key2)\",\"如果 key1 ≠ key2，那么 hash(key1) ≠ hash(key2)\",\"但是在实际中，无法完全避免散列冲突。\"]},\"147\":{\"h\":\"1. 解决散列冲突的方法\"},\"148\":{\"h\":\"1.1 开放寻址法（open addressing）\",\"t\":[\"核心思想：如果出现了冲突，就重新探测一个空闲位置将元素插入。\",\"如何探测？\"]},\"149\":{\"h\":\"1.1.1 线性探测（Linear Probing）\",\"t\":[\"核心思想：经过散列函数得到的散列值对应的位置已经被占用了，那么就从当前位置开始，依次向后查找，直到找到空闲位置。\",\"查找元素时，比较下标为散列值的元素和要查找的元素。如果相等，则说明该元素就是要找的元素；否则就依次往后找。如果遍历到数组中的空闲位置仍然没找到，就说明要查找的元素没有在散列表中。\",\"删除操作时，不能简单地只把要删除的元素设置为空。如果简单地设置为空，那么在下次查找某个元素时，可能查到该位置时，就判定该元素不在散列表里（实际上这个空的位置是我们后来删除的）。我们可以将删除的元素，特殊标记为 deleted。当线性探测查找时，遇到标记为 deleted 不要停下来，继续向下探测。\",\"线性探测的缺点：当散列表中插入的数据越来越多时，散列冲突发生的可能性就会越来越大，空闲位置越来越少，线性探测的时间就会越来越久。极端情况下需要探测整个散列表，即最坏情况下的时间复杂度为 O(n)。\"]},\"150\":{\"h\":\"1.1.2 二次探测（Quadratic probing）\",\"t\":[\"二次探测，跟线性探测很像，线性探测每次探测的步长是 1，那它探测的下标序列就是 hash(key)+0，hash(key)+1，hash(key)+2，...。而二次探测探测的步长就变成了原来的“二次方”，也就是说，它探测的下标序列就是 hash(key)+0，hash(key)+12，hash(key)+22，...。\"]},\"151\":{\"h\":\"1.1.3 双重散列（Double hashing）\",\"t\":[\"使用一组 hash 函数 hash1(key)，hash2(key)，hash3(key), ...。我们先用第一个散列函数，如果计算得到的存储位置已经被占用，再用第二个散列函数，依次类推，直到找到空闲的存储位置。\",\"不管采用哪种探测方法，当散列表中空闲位置不多的时候，散列冲突的概率就会大大提高。为了尽可能保证散列表的操作效率，一般情况下，我们会尽可能保证散列表中有一定比例的空闲槽位。我们用装载因子（load factor）来表示空位的多少。\",\"散列表的装载因子 = 填入表中的元素个数/散列表的长度 \",\"装载因子越大，说明空闲位置越少，冲突越多，散列表的性能会下降。\"]},\"152\":{\"h\":\"1.2 链表法（chaining）\",\"t\":[\"更常用的散列冲突解决办法，相比开放寻址法更简单。\",\"如下图，每个“桶”（bucket）或“槽”（slot）都对应一条链表，所有散列值相同的元素都放到相同曹伟对应的链表中。\",\"插入 O(1)。查找、删除的时间复杂度跟链表的长度 k 成正比，即 O(k)。对于散列表叫均匀的散列函数，理论上来讲 k=n/m，n 表示散列中数据的个数，m 表示散列表中“槽”的个数。\"]},\"153\":{\"h\":\"2. 打造一个工业级水平的散列表\"},\"154\":{\"h\":\"2.1 如何设计？\",\"t\":[\"散列函数不能太复杂 -> 计算复杂 -> 间接影响散列表的性能\",\"散列函数生成的值要尽可能随机且均匀分布 -> 避免或最小化散列冲突。即便出现冲突，散列到每个槽里的数据也会比较平均。\",\"动态扩容 & 动态缩容\",\"动态扩容\",\"当装载因子过大时，也可以进行动态扩容，重新申请一个更大的散列表，将数据搬移到新的散列表中。如果每次扩容都申请一个原来散列表大小两倍的空间，原来装载因子为 0.8，则扩容之后的装载因子就下降为原来的一半，变成了 0.4。\",\"插入一个数据，最好情况下，不需要扩容，最好时间复杂度是 O(1)。最坏情况下，散列表装载因子过高，启动扩容，我们需要重新申请内存空间，重新计算哈希位置，并且搬移数据，所以时间复杂度是 O(n)。用摊还分析法，均摊情况下，时间复杂度接近最好情况，就是 O(1)。\",\"动态缩容 实际上，对于动态散列表，随着数据的删除，散列表中的数据会越来越少，空闲空间会越来越多。如果我们对空间消耗非常敏感，我们可以在装载因子小于某个值之后，启动动态缩容。当然，如果我们更加在意执行效率，能够容忍多消耗一点内存空间，那就可以不用费劲来缩容了。\",\"“一次性”扩容？ 有时，“一次性”扩容的开销会让用户崩溃，这是我们可以将扩容操作穿插在插入操作的过程中。\",\"如何选择冲突解决方法？\",\"Java 中 LinkedHashMap 采用的是链表法解决冲突，ThreadLocalMap 通过线性探测的开放寻址法来结局冲突。\",\"开放寻址法\",\"优点： \",\"数据都存在数组中，可以有效利用 CPU 缓存加快查询进度。\",\"序列化比较简单。链表法包含指针，序列化起来没那么容易。\",\"缺点： \",\"删除数据时你叫麻烦，需要特殊标记已经删除的数据\",\"由于所有数据都存储在一个数组中，于是相比链表法，其冲突的代价更高 -> 装载因子的上限不能太大 -> 更浪费内存空间\",\"应用：当数据量比较小、装载因子小时，适合采用开放寻址法。\",\"链表法\",\"优点： \",\"对内存的利用率比开放寻址法要高。\",\"对大装载因子的容忍度更高。开放寻址法只适用装载因子小于1的情况。\",\"缺点： \",\"链表要存指针，所以对于比较小的对象的存储，比较消耗内存，还有可能让内存的消耗翻倍。\",\"链表中的结点是零散分布在内存中的（非连续），所以对 CPU 缓存不友好。\",\"应用 \",\"实际上，我们对链表法稍加改造，可以实现一个更加高效的散列表。那就是，我们将链表法中的链表改造为其他高效的动态数据结构，比如跳表、红黑树。这样，即便出现散列冲突，极端情况下，所有的数据都散列到同一个桶内，那最终退化成的散列表的查找时间也只不过是 O(logn)。这样也就有效避免了前面讲到的散列碰撞攻击。\",\"比较适合存储大对象、大数据量的散列表，而且，比起开放寻址法，它更加灵活，支持更多的优化策略，比如用红黑树代替链表。\"]},\"155\":{\"h\":\"2.2 工业级散列表\",\"t\":[\"Java 中的 HashMap。\"]},\"156\":{\"h\":\"2.2.1 初始大小\",\"t\":[\"HashMap 默认的初始的大小是 16。\",\"这个默认值是可以设置的，如果事先知道大概的数据量有多大，可以通过修改默认初始大小，减少动态扩容的次数，这样会大大提高 HashMap 的性能。\"]},\"157\":{\"h\":\"2.2.2 装在因子和动态扩容\",\"t\":[\"最大装载因子默认是 0.75，当 HashMap 中元素个数超过 0.75 * capacity 时，就会扩容，每次扩容为原来的两倍大小。\"]},\"158\":{\"h\":\"2.2.3 散列冲突解决方法\",\"t\":[\"HashMap 底层采用链表法来解决冲突。即使负载因子和散列函数设计得再合理，也免不了会出现拉链过长的情况，一旦出现拉链过长，则会严重影响 HashMap 的性能。\",\"于是，在 JDK1.8 版本中，为了对 HashMap 做进一步优化，我们引入了红黑树。而当链表长度太长（默认超过 8）时，链表就转换为红黑树。我们可以利用红黑树快速增删改查的特点，提高 HashMap 的性能。当红黑树结点个数少于 8 个的时候，又会将红黑树转化为链表。因为在数据量较小的情况下，红黑树要维护平衡，比起链表来，性能上的优势并不明显。\"]},\"159\":{\"h\":\"2.2.4 散列函数\",\"t\":[\"int hash(Object key) { int h = key.hashCode()； return (h ^ (h >>> 16)) & (capicity -1); //capicity表示散列表的大小 } \",\"其中，hashCode() 返回的是 Java 对象的 hash code。比如 String 类型的对象的 hashCode() 就是下面这样：\",\"public int hashCode() { int var1 = this.hash; if(var1 == 0 && this.value.length > 0) { char[] var2 = this.value; for(int var3 = 0; var3 < this.value.length; ++var3) { var1 = 31 * var1 + var2[var3]; } this.hash = var1; } return var1; } \"]},\"160\":{\"h\":\"introduction\"},\"161\":{\"h\":\"复杂度分析\"},\"162\":{\"h\":\"时间复杂度 & 空间复杂度\",\"t\":[\"（渐进）时间复杂度量级： T(n)=O(f(n))，O 表示执行时间 T(n) 与 f(n) 成正比\",\"多项式量级 \",\"常量阶 O(1)\",\"对数阶 O(logn)\",\"i = 1; while (i < n) { i = i * 2; } \",\"线性阶 O(n)\",\"线性对数阶 O(nlogn) 如果一段代码的时间复杂度是 O(logn)，我们循环执行 n 遍，时间复杂度就是 O(nlogn) 了。如归并排序、快速排序。\",\"平方阶 O(n2)、立方阶 O(n3)、...、 k 次方阶 O(nk)\",\"非多项式量级 \",\"指数阶 O(2n)\",\"阶乘阶 O(n!)\",\"（渐进）空间复杂度：常见 O(1)、O(n)、O(n2)\"]},\"163\":{\"h\":\"最好、最坏、平均、均摊时间复杂度\"},\"164\":{\"h\":\"1. 最好情况时间复杂度（best case time complexity）、最坏情况时间复杂度（worst case time complexity）\",\"t\":[\"// 在给定数组 array 中找指定元素 x int find(int[] array, int n, int x) { int i = 0; int pos = -1; for (; i < n; ++i) { if (array[i] == x) { pos = i; break; } } return pos; } \",\"如果我们要找的元素刚好是数组的第一个元素，那么循环只执行 1 步，时间复杂度就是 O(1)；如果数组中没有该元素，那么需要将整个数组遍历一遍，时间复杂度就是 O(n)。\",\"上面对应的就是最好情况时间复杂度和最坏情况时间复杂度。\"]},\"165\":{\"h\":\"2. 平均情况时间复杂度（average case time complexity）\",\"t\":[\"最好情况和最坏情况都是极端情况下的代码复杂度，于是又引入了平均情况时间复杂度，简称平均时间复杂度。\",\"还是上面查找元素在数组中的位置，有 n+1 种情况：在数组中（n 种）以及不在数组中。把每种情况下要遍历的元素的个数累加起来再除以 n+1，就可以得到需要遍历元素个数的平均值：\",\"n+11+2+3+...+n+n​=2(n+1)n(n+3)​O(n)\",\"如果我们从概率的角度分析，假设在数组中的概率和不在数组中的概率都是 21​，那么出现在每个位置的概率为 2n1​，计算加权平均（期望）。于是平均时间复杂度的全称是加权平均时间复杂度或期望时间复杂度。\",\"1×2n1​+2×2n1​+3×2n1​+...+n×2n1​+n×21​=43n+1​\",\"只有同一块代码在不同的情况下，时间复杂度有量级的差距，我们才会使用这三种复杂度表示法来区分。\"]},\"166\":{\"h\":\"3. 均摊时间复杂度（amortized time complexity）\",\"t\":[\"摊还分析：对一个数据结构进行一组连续操作中，大部分情况下时间复杂度都很低，只有个别情况下时间复杂度比较高，而且这些操作之间存在前后连贯的时序关系，这个时候，我们就可以将这一组操作放在一块儿分析，看是否能将较高时间复杂度那次操作的耗时，平摊到其他那些时间复杂度比较低的操作上。而且，在能够应用均摊时间复杂度分析的场合，一般均摊时间复杂度就等于最好情况时间复杂度。\"]},\"167\":{\"h\":\"链表\"},\"168\":{\"h\":\"1. 几种常见的链表结构\",\"t\":[\"链表的结构五花八门，下面介绍三种最常见的列表结构：单链表、双向链表、循环链表。\"]},\"169\":{\"h\":\"1.1 单链表\",\"t\":[\"一些概念：\",\"结点： \",\"头结点：记录链表的基地址\",\"尾结点：指针指向空地址 NULL\",\"后继指针\",\"插入、删除的时间复杂度都是 O(1)，随机访问的性能不如数组，要 O(n) 的时间复杂度。\"]},\"170\":{\"h\":\"1.2 循环链表\",\"t\":[\"循环链表是一种特殊的单链表。循环链表的尾结点指向链表的头结点。\",\"优点：从链尾到链头比较方便。在单链表中，从已知一结点出发，只能访问到该结点以及它之后的结点；而使用循环链表时，从任意结点出发都可以访问到表中的所有节点。当要处理的数据具有环型结构的特点时，很适合采用循环链表，如著名的约瑟夫问题。\"]},\"171\":{\"h\":\"1.3 双向链表\",\"t\":[\"除了有后继指针 next，还有前驱指针 prev。\",\"需要更多的空间来存储前驱指针，但是能够支持双向遍历。\",\"双向链表可以支持 O(1) 时间复杂度来找到前驱节点，于是双向链表在某些情况下的插入、删除等操作比单链表简单高效（单链表需要从头结点开始找）。\",\"对于一个有序链表，双向链表的按值查询的效率要比单链表高一些。我们可以记录上次查找的位置 p，每次查询是，根据要找的值与 p 的大小关系，决定往前找还是往后找，所以平均值需要查找一半的数据。\"]},\"172\":{\"h\":\"1.4 双向循环链表\"},\"173\":{\"h\":\"2. 数组 v.s. 链表\",\"t\":[\"数组简单易用，在实现上使用的是连续的内存空间，可以借助 CPU 的缓存机制，预读数组中的数据，所以访问效率更高。而链表在内存中并不是连续存储，所以对 CPU 缓存不友好，没办法有效预读。\",\"数组的缺点是大小固定，一经声明就要占用整块连续内存空间。如果声明的数组过大，系统可能没有足够的连续内存空间分配给它，导致“内存不足（out of memory）”。如果声明的数组过小，则可能出现不够用的情况。这时只能再申请一个更大的内存空间，把原数组拷贝进去，非常费时。链表本身没有大小的限制，天然地支持动态扩容。\",\"如果你的代码对内存的使用非常苛刻，那数组就更适合你。因为链表中的每个结点都需要消耗额外的存储空间去存储一份指向下一个结点的指针，所以内存消耗会翻倍。而且，对链表进行频繁的插入、删除操作，还会导致频繁的内存申请和释放，容易造成内存碎片，如果是 Java 语言，就有可能会导致频繁的 GC（Garbage Collection，垃圾回收）。\"]},\"174\":{\"h\":\"3. 用链表的应用\"},\"175\":{\"h\":\"3.1 实现 LRU\",\"t\":[\"链表的典型应用场景：LRU(Least Recently Used, 最近最少使用) 缓存淘汰算法\",\"我们维护一个有序单链表，越靠近链表尾部的结点是越早之前访问的。\",\"当有一个新的数据被访问时，我们从链表头开始顺序遍历链表。\",\"如果此数据之前已经被缓存在链表中了，我们遍历得到这个数据对应的结点，并将其从原来的位置删除，然后再插入到链表的头部。\",\"如果此数据没有在缓存链表中，又可以分为两种情况： \",\"如果此时缓存未满，则将此结点直接插入到链表的头部；\",\"如果此时缓存已满，则链表尾结点删除，将新的数据结点插入链表的头部。\"]},\"176\":{\"h\":\"3.2 快慢指针\",\"t\":[\"判断是否有环 \",\"判断环的起点\",\"找中点（中点、上中点、下中点）\"]},\"177\":{\"h\":\"4. 正确写出链表代码\"},\"178\":{\"h\":\"4.1 理解指针或引用的含义 —— 地址\"},\"179\":{\"h\":\"4.2 警惕指针丢失和内存泄漏\",\"t\":[\"先后接，再前接\",\"删除链表结点时，记得手动释放内存空间。\"]},\"180\":{\"h\":\"4.3 利用哨兵简化实现难度\",\"t\":[\"对头结点和尾结点的特殊处理\",\"// 插入 new_node -> next = p -> next; p -> next = new_node; // 插入第一个节点 if (head == null) { head = new_node; } \",\"// 删除 p -> next = p -> next -> next; // 删除最后一个结点 if (head -> next == null) { head = null } \",\"引入哨兵结点，在任何时候，不管链表是否为空，head 指针都会指向这个哨兵结点。这种链表叫带头链表。不带哨兵结点的链表叫做不带头链表。\",\"使用带头链表之后，插入第一个结点、删除最后一个结点就可以统一为相同的代码实现逻辑。\",\"利用哨兵简化变成难度\",\"任务：给定数组 a，查找 key，返回 key 的索引（其中 n 表示数组 a 的长度）\",\"int find(char* a, int n, char key) { if (a == null || n <= 0) { return -1; } int i = 0; while (i < n ) { if (a[i] == key) { return i } ++i; } return -1; } \",\"int find(char* a, int n, char key) { if (a == null || n < 0) { return -1; } // 用 a[n-1] 做哨兵，这里做特殊处理 if (a[n - 1] == key) { return n-1; } char tmp = a[n - 1]; a[n - 1] = key; int i = 0; // 相比于上面的代码，少了 i < n 这个比较操作 while (a[i] != key) { ++i; } // 恢复 a[n - 1] a[n - 1] = tmp; if (i == n - 1) { return -1; } else { return i; } } \",\"当代码执行万次、几十万次时，省掉的一个比较语句积累的时间会比较明显。\",\"上面只是举例说明哨兵的作用，写代码时不必写成第二段那样（可读性太差）。\"]},\"181\":{\"h\":\"4.4 重点留意边界条件处理\",\"t\":[\"链表为空时\",\"链表只包含一个结点时\",\"链表只包含两个结点时\",\"处理头结点 & 尾结点时\"]},\"182\":{\"h\":\"4.5 举例画图，辅助思考\"},\"183\":{\"h\":\"4.6 多写多练\",\"t\":[\"单链表反转 206\",\"链表中环的检测 141 快慢指针\",\"两个有序链表的合并 21\",\"删除链表倒数第 n 个结点 19 双指针（固定步数差值）\",\"求链表的中间结点  876  快慢指针\"]},\"184\":{\"h\":\"队列\"},\"185\":{\"h\":\"Introduction\",\"t\":[\"栈：入栈（push）、出栈（pop）\",\"队列：入队（enqueue）、出队（dequeue）\",\"队尾入队，队首出队\",\"循环队列、阻塞队列、并发队列。比如高性能队列 Disruptor、Linux 环形缓存，都用到了循环并发队列；Java concurrent 并发包利用 ArrayBlockingQueue 来实现公平锁。\",\"循环队列：\",\"队空：head == tail\",\"队满：(tail + 1)%n == head\"]},\"186\":{\"h\":\"1. 阻塞队列\",\"t\":[\"阻塞队列是在队列的基础上增加了阻塞操作。在队列为空的时候，从队头取数据会被阻塞，知道队列中有了数据才能返回；如果队列已经满了，那么插入数据的操作会被阻塞，知道队列中有空闲位置后再插入数据，然后再返回。\",\"这种基于阻塞队列实现的“生产者-消费者”模型，可以有效地协调生产和消费的速度。我们还可以通过协调“生产者”和“消费者”的个数，来提高数据的处理效率。\"]},\"187\":{\"h\":\"2. 并发队列\",\"t\":[\"在多线程的情况下，会有多个线程同时操作队列，这个时候就会存在线程安全问题。如何实现一个线程安全的队列呢？\",\"线程安全的队列叫并发队列。最简单的实现方式是直接在 enqueue()、dequeue() 方法上加锁，但是锁粒度大并发度会比较低，同一时刻仅允许一个存或取操作。实际上，基于数组的循环队列（避免数据搬移），利用 CAS（Compare And Swap）原子操作（避免真正去 OS 底层申请锁资源），可以实现非常高效的并发队列。这也是循环队列比链式队列应用更加广泛的原因。\"]},\"188\":{\"h\":\"Q: 线程池没有空闲线程时，新的任务请求线程资源时，线程池该如何处理\",\"t\":[\"一般有两种策略。第一种是非阻塞的处理方式，直接拒绝任务请求；另一种是阻塞的处理方式，将请求排队，等到有空闲线程时，取出排队的请求继续处理。\",\"我们希望公平地处理每个排队的需求，先进者先服务，所以队列这种数据结构很适合来存储排队请求。\",\"利用链表实现的队列，我们可以实现一个支持无限排队的无界队列（unbounded queue），但是可能会导致过多的请求排队等待，请求处理的时间过长。针对响应时间比较敏感的系统，基于链表实现的无线排队的线程池是不合适的。\",\"利用数组实现的有界队列（bounded queue），队列大小有限，所以线程池中排队的请求超过队列大小时，接下来的请求就会被拒绝，这种方式对响应时间敏感的系统来说，就相对更加合理。不过，设置一个合理的队列大小，也是非常有讲究的。队列太大导致等待的请求太多，队列太小会导致无法充分利用系统资源、发挥最大性能。\",\"队列可以应用在任何有限资源池中，用于排队请求，比如数据库连接池等。实际上，对于大部分资源有限的场景，当没有空闲资源时，基本上都可以通过“队列”这种数据结构来实现请求排队。\"]},\"189\":{\"h\":\"递归\"},\"190\":{\"h\":\"递归需要满足的 3 个条件\",\"t\":[\"一个问题的解可以分解为几个子问题的解\",\"这个问题与分解之后的子问题，除了数据规模不同，求解思路完全一样\",\"存在递归终止条件\"]},\"191\":{\"h\":\"如何编写递归代码\",\"t\":[\"关键在于写出递推公式，找到终止条件。\",\"例题：有 n 个台阶，每次可以跨 1 个或 2 个台阶，请问走 n 个台阶有多少种走法？\",\"分析：可以把第一个的走法分为两类，第一类是第一步走了 1 个台阶，另一类是第一步走了 2 个台阶。所以 n 个台阶的走法就等于先走 1 阶后，n - 1 个台阶的走法，加上先走 2 阶后，n - 2 个台阶的走法：f(n)=f(n−1)+f(n−2)。\",\"终止条件：f(1)=1,f(2)=2\",\"最终代码：\",\"int f(int n) { if (n == 1) return 1; if (n == 2) return 2; return f(n-1) + f(n-2); } \"]},\"192\":{\"h\":\"递归代码要警惕堆栈溢出\",\"t\":[\"函数调用会使用栈来保存临时变量。每调用一个函数，都会将临时变量封装为栈帧压入内存栈，等函数执行完成返回时，才出栈。系统栈或者虚拟机栈空间一般都不大。如果递归求解的数据规模很大，调用层次很深，一直压入栈，就会有堆栈溢出的风险。\",\"我们可以通过在代码中限制递归调用的最大深度的方式来解决这个问题。当递归调用超过一定深度之后，就不再向下递归了，直接返回报错。\",\"// 全局变量，表示递归的深度。 int depth = 0; int f(int n) { ++depth； if (depth > 1000) throw exception; if (n == 1) return 1; return f(n-1) + 1; } \",\"但这种做法并不能完全解决问题，因为最大允许的递归深度跟当前线程剩余的栈空间大小有关，事先无法计算。如果实时计算，代码过于复杂，就会影响代码的可读性。所以，如果最大深度比较小，比如 10、50，就可以用这种方法，否则这种方法并不是很实用。\"]},\"193\":{\"h\":\"警惕重复计算\",\"t\":[\"上面爬台阶的例子中，计算 f(5) = f(4) + f(3)，但是在计算 f(4) = f(3) + f(2) 时，也计算了 f(3)。这就是重复计算问题。\",\"为了避免重复计算，我们可以通过一个数据结构（比如散列表）来保存已经求解过的 f(k)。当递归调用到 f(k) 时，先去散列表中取，没有对应的值再进行计算。这样就可以避免重复计算的问题了。\",\"public int f(int n) { if (n == 1) return 1; if (n == 2) return 2; if (hasSolvedList.containsKey(n)) { return hasSolvedList.get(n) } int ret = f(n-1) + f(n-2); hasSolvedList.put(n, ret); return ret; } \",\"注意\",\"由于递归需要在内存栈中进行压栈出栈操作，当调用栈比较深时，需要考虑这部分的时间开销。另外，空间上也要考虑压栈出栈的开销。\"]},\"194\":{\"h\":\"将递归代码改为非递归代码\",\"t\":[\"递归：\",\"优点：代码易理解，写起来很简洁。\",\"缺点：空间复杂度高，有堆栈溢出的风险，存在重复计算、过多的函数调用会耗时等问题。\",\"所有的递归代码都可以改为迭代循环的非递归写法。实际上是将递归改为了“手动”递归，本质并没有改变。\",\"int f (int n) { if (n == 1) return 1; if (n == 2) return 2; int ret = 0; int pre = 2; int prepre = 1; for (int i = 3; i <= n; ++1) { ret = pre + prepre; prepre = pre; pre = ret; } return ret; } \"]},\"195\":{\"h\":\"跳表\",\"t\":[\"跳表（Skip List）是一种各方面性能都比较优秀的动态数据结构，可以支持快速的插入、删除、查找操作，写起来也不复杂，甚至可以代替红黑树（Red-black Tree）。\"]},\"196\":{\"h\":\"1. 跳表\",\"t\":[\"跳表类似于在链表中实现二分查找。在链表中进行查找时，只能从头到尾遍历链表，这样的查找效率很低，时间复杂度是 O(n)。\",\"如果我们能在链表上建立“索引”，查找起来会快一些。每两个结点提取一个结点到上一级，把抽出来的那一级叫做索引或索引层。其中 down 指针指向下一级的结点。\"]},\"197\":{\"h\":\"2. 时间复杂度 O ( l o g n ) O(log n) O ( l o g n )\",\"t\":[\"每两个结点抽出一个结点作为上一级索引的结点。那么第一级索引的结点个数是 2n​，第二级 4n​，...，2kn​。\",\"最高级的索引有 2 个节点，则索引有 log2​n−1 级，加上原始链表一共 log2​n 层。如果每一层都要遍历 m 个结点，则在跳表中查询一个数据的时间复杂度就是 O(mlogn)。\",\"每一级最多只需要遍历 3 个结点，于是 m=3。所以在跳表中查询任意数据的时间复杂度就是 O(logn)\"]},\"198\":{\"h\":\"3. 空间复杂度 O ( n ) O(n) O ( n )\",\"t\":[\"每层的结点数：2n​,4n​,8n​,...,8,4,2。\",\"结点的总和：2n​+4n​+8n​+...+8+4+2=n−2。\",\"我们需要额外接近 n 个结点的存储空间。\",\"如果每 3 个结点取一个索引，那么总的索引数大概是 3n​+9n​+27n​+...+9+3+1=2n​。比每两个结点抽一个结点作为索引要减少了一般的索引结点存储空间。\",\"实际上，在软件开发中，我们不必太在意索引占用的额外空间。在讲数据结构和算法时，我们习惯性地把要处理的数据看成整数，但是在实际的软件开发中，原始链表中存储的有可能是很大的对象，而索引结点只需要存储关键值和几个指针，并不需要存储对象，所以当对象比索引结点大很多时，那索引占用的额外空间就可以忽略了。\"]},\"199\":{\"h\":\"4. 高效的动态插入和删除（ O ( l o g n ) O(log n) O ( l o g n ) ）\",\"t\":[\"查到对应的位置，进行插入。\",\"删除时要注意，如果要删除的结点也在索引中，那么索引中的结点也要跟着删除。\"]},\"200\":{\"h\":\"5. 跳表索引动态更新\",\"t\":[\"当我们不停地往跳表中插入数据时，如果我们不更新索引，就有可能出现某 2 个索引结点之间数据非常多的情况。极端情况下，跳表还会退化成单链表。\",\"作为一种动态数据结构，我们需要某种手段来维护索引与原始链表大小之间的平衡，也就是说，如果链表中结点多了，索引结点就相应地增加一些，避免复杂度退化，以及查找、插入、删除操作性能下降。\",\"跳表是通过随机函数来维护前面提到的“平衡性”。\",\"当我们往跳表中插入数据的时候，我们可以选择同时将这个数据插入到部分索引层中。我们通过一个随机函数，来决定将这个结点插入到哪几级索引中。\"]},\"201\":{\"h\":\"排序\",\"t\":[\"排序算法\",\"时间复杂度\",\"是否基于比较\",\"冒泡、插入、选择\",\"O(n2)\",\"✓\",\"快排\",\"O(nlogn)\",\"✓\",\"桶、计数、基数\",\"O(n)\",\"✗\",\"要考虑的指标：\",\"时间复杂度：最好、最坏、平均；时间复杂度的系数、常数、低阶；比较次数和交换（或移动）次数\",\"空间复杂度：原地排序（Sorted in place）-> O(1)\",\"稳定性\"]},\"202\":{\"h\":\"1. 冒泡、插入、选择\",\"t\":[\"这三种排序算法都是原地排序。\"]},\"203\":{\"h\":\"1.1 Bubble Sort\",\"t\":[\"对相邻数据做操作，比较 + 交换。\",\"代码\",\"public void bubbleSort(int[] a, int n) { if ( n <= 1) return; for (int i = 0; i < n; ++i) { // 是否有数据交换 boolean flag = false; for (int j = 0; j < n - i - j; ++j) { if (a[j] > a[j+1]) { int tmp = a[j]; a[j] = a[j+1]; a[j+1] = tmp; flag = true; // 有数据交换 } } if(!flag) break; } } \",\"稳定：当相邻元素大小相等时，不做交换。\",\"时间复杂度： \",\"最好：已经有序，一次冒泡，O(n)\",\"最坏：倒序，n次冒泡，O(n2)\",\"平均：O(n2)\",\"有序度 & 逆序度、满序度\",\"分析：冒泡排序有两个原子操作（比较和交换）。每交换一次，有序度加 1。交换次数=逆序度=2n(n−1)​−初始有序度。最坏情况下，初始有序度是 0，需要进行 2n(n−1)​ 次交换。最好情况下初始有序度是 2n(n−1)​，不需要进行交换。平均情况下，取中间值 4n(n−1)​。比较操作肯定比交换操作多，复杂度的上限是 O(n2)，所以平均情况下的时间复杂度是 O(n2)\"]},\"204\":{\"h\":\"1.2 Insertion Sort\",\"t\":[\"将数组中的元素分为两个区间：已排序区间和未排序区间。取未排序区间中的元素，在已排序区间中找到合适的位置将其插入，直到未排序区间为空。其中，初始已排序区间是数组的第一个元素。\",\"比较 + 移动。将未排序区间的一个元素插入已排序空间时，需要与已排序空间的元素依次比较大小，找到合适的位置插入，插入点之后的元素都需要往后移动腾出位置。\",\"移动的次数是固定的，等于逆序度。\",\"代码\",\"public void insertionSort(int[] a, int n) { if (n <= 1) return; for (int i = 1; i < n; ++i) { int value = a[i]; int j = i - 1; // 查找插入位置 for (; j >= 0; --j) { if (a[j] > value) { a[j+1] = a[j]; // 移动数据 } else { break; } } a[j+1] = value; // 插入数据 } } \",\"稳定：注意将元素插到相同元素的后面。\",\"时间复杂度： \",\"最好：有序，每次进行一次比较就可以确定插入位置，没有移动。O(n)\",\"最坏：倒序。O(n2)\",\"平均：O(n2)\",\"分析：在数组中插入一个元素的时间复杂度是 O(n)，循环执行 n 次插入操作，平均时间复杂度是 O(n2)\"]},\"205\":{\"h\":\"1.3 Selection Sort\",\"t\":[\"分排序空间和未排序空间。每次从未排序区间中找到最小的元素，将其放到已排序区间的末尾（与插入点位置的元素交换）。\",\"代码\",\"public void selectionSort(int[] a, int n) { if (n <= 1) return; for (int i = 0; i < n - 1; ++i) { int min = i; for (int j = i + 1; j < n; ++j) { if (a[j] < a[min]) { min = j; } } // swap if (min != i) { int tmp = a[min]; a[min] = a[i]; a[i] = tmp; } } } \",\"不稳定：找到最小值和目标位置做交换，这个交换的操作决定了它是不稳定的。\",\"时间复杂度：最好、最坏、平均都是 O(n2)。因为需要遍历找到最小元素，找到最小元素的时间复杂度是 O(n2)。\"]},\"206\":{\"h\":\"1.4 小结\",\"t\":[\"冒泡和插入排序都是稳定的，选择排序不稳定。\",\"对于冒泡和插入，它们的时间复杂度都是 O(n2)，都是原地排序，且都可以稳定。但是插入排序更受欢迎。\",\"无论怎么优化，冒泡排序的元素交换次数是固定值，插入排序的元素移动次数也是固定值，数值上等于数组初始状态的逆序度。但是从代码上看，冒泡排序要进行 3 个赋值操作，而插入排序只需要一个。\",\"// 冒泡中元素交换 if (a[j] > a[j+1]) { int tmp = a[j]; a[j] = a[j+1]; a[j+1] = tmp; flag = true; } // 插入排序中的元素移动 if (a[j] > value) { a[j+1] = a[j]; } else { break; } \",\"原地\",\"稳定\",\"最好\",\"最坏\",\"平均\",\"冒泡排序\",\"✓\",\"✓\",\"O(n)\",\"O(n2)\",\"O(n2)\",\"插入排序\",\"✓\",\"✓\",\"O(n)\",\"O(n2)\",\"O(n2)\",\"选择排序\",\"✓\",\"✗\",\"O(n2)\",\"O(n2)\",\"O(n2)\"]},\"207\":{\"h\":\"2. 归并排序 & 快速排序\",\"t\":[\"归并排序和快速排序都用到了分治思想。\"]},\"208\":{\"h\":\"2.1 Merge Sort\",\"t\":[\"将数组分成前后两部分，对两部分分别排序，再将排好序的两部分合并在一起，整个数组就有序了。\",\"归并排序使用的是分治思想，将大问题分解成小的子问题，子问题解决了，大问题也就解决了。分治算法一般都用递归来实现。分治是一种处理思想，而递归是一种编程技巧。\",\"先写递推公式：\",\"merge_sort(p, r) = merge(merge_sort(p, q), merge_sort(q+1, r)) 终止条件：p >= r \",\"代码\",\"void merge_sort(int[] arr, int n) { merge_sort_process(arr, 0, n-1) } void merge_sort_process(int[] arr, int l, int r) { if ( l >= r) return; mid = (l + r)/2; merge_sort_process(arr, p, mid); merge_sort_process(arr, mid+1, r); // 将 arr[l..mid] 和 arr[mid+1...r] 合并 merge(arr, l, mid, r) } void merge(int[] arr, l, mid, r) { int[] tmp = new int[r-l+1]; int i = 0; int p = l; int q = m+1; while(p <= mid && q < r) { tmp[i++] = arr[p] <= arr[q] ? arr[p++] : arr[q++]; } while(p <= mid) { tmp[i++] = arr[p++]; } while(q < r) { tmp[i++] = arr[q++]; } for(i = 0; i < r-l+1; ++i) { arr[l+i] = tmp[i]; } } \",\"稳定：取决于 merge 函数\",\"空间复杂度：O(n)\",\"时间复杂度：任何情况下都是 O(nlogn)\",\"快速排序最差情况下的时间复杂度是 O(n2)，但是归并排序并没有快排那样应用广泛。主要原因是，归并排序不是原地排序算法。\",\"递归代码的时间复杂度分析\",\"将问题 a 分解成子问题 b 和 c。问题 b 和 c 解决了在把二者的结果合并成 a 的结果。\",\"T(a)=T(b)+T(c)+K\",\"其中 K 是将子问题的结果合并成问题 a 的结果所消耗的时间。\",\"对于归并排序，n 个元素所需要的时间是 T(n)，分解成两个子数组排序的时间都是 T(2n​)。merge() 合并两个有序子数组的时间复杂度已知是 O(n)。\",\"n=1,T(1)n>1,T(n)​=C;=2×T(2n​)+n;=2×(2×T(4n​)+n/2)+n=4×T(4n​)+2×n=4×(2×T(8n​)+n/4)+2×n=8×T(8n​)+3×n...=2k×T(2kn​)+k×n​\",\"当 k=log2​n 时，T(2kn​)=T(1)，带入上式得，T(n)=Cn+nlog2​n。用大 O 标记法表示为 O(nlogn)。\"]},\"209\":{\"h\":\"2.2 Quick Sort\",\"t\":[\"也是分治。选取要排序数组中的任意一个元素最为 pivot（分区点），遍历数组，将小于 pivot 的放在左边，将大于 pivot 的放在右边。然后，我们分别排序 pivot 左边的数据和 pivot 右边的数据，直到区间缩小为 1。\",\"递推公式：\",\"quick_sort(l, r) = quick_sort(l, p-1) + quick_sort(p+1, r) 终止条件：l >= r \",\"代码\",\"void quick_sort(int[] arr, n) { quick_sort_process(arr, 0, n-1); } void quick_sort_process(int[] arr, l, r) { if (l >= r) return; // 分区，并返回分区点 int p = partition(arr, l, r); quick_sort_process(arr, l, p-1); quick_sort_process(arr, p+1, r); } void partition(int[] arr, int l, int r) { // 以最后一个元素作为分区的界限 int pivot = arr[r]; int i = l; for (int j = l; j < r; ++j) { if (arr[j] < pivot) { swap(arr[i], arr[j]); i++; } } swap(arr[i], arr[r]); return i; } \",\"对于 partition() 函数，i 就是在遍历数组，它表示的是小于 pivot 的下标。每次遇到下雨 pivot 的元素，都会跟 a[i] 交换，即 a[i] 存放小于 pivot 的数据。\",\"不稳定\",\"空间复杂度：原地，O(n)\",\"时间复杂度：O(nlogn)\",\"最好：O(nlogn)。分区平衡，大概满足 T(n)=2×T(2n​)+n\",\"最差：O(n2)。原数组有序，每次选择最后一个元素作为 pivot，需要进行大概 n 次分区，每次分区平均要扫描约 2n​ 个元素。这时快排的时间复杂度就从 O(nlogn) 退化到了 O(n2)。\",\"T(n) 在大部分情况下都可以做到 O(nlogn)，只有在极端情况下，才会退化到 O(n2)。\"]},\"210\":{\"h\":\"2.3 比较\",\"t\":[\"归并排序和快速排序用的都是分治思想。它们的区别在于：归并排序的处理过程是由下到上的，先处理子问题，然后再合并；而快排是由上到下的，先分区，然后再处理子问题。\",\"Q：利用分治思想解决非排序问题。如何在 O(n) 时间复杂度内查找一个无序数组中的第 K 大元素。\",\"A：选取最后一个元素做 pivot，进行原地分区，数组被分为三部分，arr[0...p], arr[p], arr[p+1...n-1]。如果 p+1 == k，那么 arr[p] 就是第 K 大的元素。如果 p+1 < K，那么到 arr[p+1...n-1] 中继续递归查找；如果 p+1 > K，那么到 arr[0...p] 中递归查找。\",\"时间复杂度分析：第一次需要遍历 n 个元素进行分区操作。下一次分区时，只需要对 n/2 个元素进行遍历。以此类推，直到区间缩小为 1。n+2n​+4n​+8n​+...+1=2n−1。即时间复杂度是 O(n)。\"]},\"211\":{\"h\":\"3. 线性排序：桶排序、计数排序、基数排序\"},\"212\":{\"h\":\"3.1 Bucket sort\",\"t\":[\"时间复杂度：n 个数据，m 个桶，平均每个桶 k = n/m 个数据。在每个桶中使用快排，在每个桶中的复杂度为 O(klogk)。则所有数据的时间复杂度就是 O(m×klogk)=nlogmn​。当桶的个数 m 接近数据个数 n 时，log(mn​) 就是一个非常小的常量，这时桶排序的时间复杂度接近于 O(n)。\",\"使用条件很苛刻：\",\"要排序的数据需要很容易就能划分成 m 个桶，并且，桶与桶之间有着天然的大小顺序。\",\"数据在各个桶之间的分布是比较均匀的。极端情况下，如果数据都被划分到一个桶里，那就退化为 O(nlogn) 的排序算法了。\",\"桶排序比较适合用在外部排序中。即数据存储在外部磁盘中，数据量比较大，内存有限，无法将数据全部加载到内存中。\"]},\"213\":{\"h\":\"3.2 Counting sort\",\"t\":[\"计数排序算是桶排序的一种特殊情况。当要排序的 n 个数据，所处的范围并不大的时候，比如最大值是 k，我们就可以把数据划分成 k 个桶。每个桶内的数据值都是相同的，省掉了桶内排序的时间。\",\"代码\",\"// 数组 a 中都是非负数 public void countingSort(int[] a, int n) { if (n <= 1) return; // 确定数据范围 int max = a[0]; for (int i = 1; i < n; ++i) { if (max < a[i]) { max = a[i]; } } // 申请数组，赋初值 0 int[] c = new int[max + 1]; for (int i = 0; i <= max; ++i) { c[i] = 0; } // 遍历数组 a，用 c 记录每个元素的个数 for (int i = 0; i < n; ++i) { c[a[i]]++; } // 对 c 累加 for (int i = 1; i <= max; ++i) { c[i] = c[i] + c[i - 1]; } // 对 a 数组排序之后的数组 int[] tmp = new int[n]; // 从后向前遍历，以保证计数是稳定的 for (int i = n - 1; i >= 0; --i) { int index = c[a[i]] - 1; tmp[index] = a[i]; c[a[i]] --; } // 将结果拷贝到 a for (int i = 0; i < n; ++i) { a[i] = tmp[i]; } } \",\"计数排序只能用在数据范围不大的场景中，如果数据范围 k 要比排序的数据 n 大很多，就不适合用计数排序了。\",\"而且，计数排序只能对非负数进行排序。对于其他类型，要将其转化为非负整数。\"]},\"214\":{\"h\":\"3.3 Radix sort\",\"t\":[\"根据每一位来排序，可以用桶排序或计数排序，时间复杂度可以做到 O(n)。如果要排序的数据有 k 位，那么就需要 k 次桶排序或者计数排序，总的时间复杂度是 O(kn)，k 不大时，基数排序的复杂度就近似于 O(n)。\"]},\"215\":{\"h\":\"4. 实现通用、高性能的排序函数\",\"t\":[\"时间复杂度\",\"稳定\",\"原地\",\"冒泡排序\",\"O(n2)\",\"✓\",\"✓\",\"插入排序\",\"O(n2)\",\"✓\",\"✓\",\"选择排序\",\"O(n2)\",\"✗\",\"✓\",\"归并排序\",\"O(nlogn)\",\"✓\",\"✗\",\"快速排序\",\"O(nlogn)\",\"✗\",\"✓\",\"桶排序\",\"O(n)\",\"✓\",\"✗\",\"计数排序\",\"O(n+k) k 是数据范围\",\"✓\",\"✗\",\"基数排序\",\"O(dn) d 是维度\",\"✓\",\"✗\",\"线性排序的使用场景特殊。小规模数据的排序可以用时间复杂度为 O(n2) 的算法。为了兼顾任意规模数据排序，一般都会选择时间复杂度是 O(nlogn) 的排序算法。比如 Java 中采用堆排序来实现排序函数，C 语言使用快速排序来实现排序函数。\"]},\"216\":{\"h\":\"优化排序\",\"t\":[\"快速排序在最坏情况下的时间复杂度是 O(n2)，我们要尽量避免。最坏情况出现的主要原因是分区点选得不够合理。最理想的分区点应该使得两个分区中的数据数量差不多多。\",\"下面是 2 个常用的比较简单的分区算法：\",\"三数取中法\",\"从区间的首、尾、中分别取出一个数，选择这三个数的中间值作为分区点。这样肯定比只取某一个数据好。如果排序的数组比较大，可能要“五数取中”、“十数取中”。\",\"随机法\",\"每次从要排序的区间中随机选择一个元素作为分区点。虽然不能保证每次分区点都选得很好，但是也不大可能出现每次分区点都选得很差的情况。\"]},\"217\":{\"h\":\"栈\"},\"218\":{\"h\":\"栈的应用\"},\"219\":{\"h\":\"函数调用栈\",\"t\":[\"操作系统给每个线程分配了一块独立的内存空间，这块内存被组织成“栈”这种结构，用来存储函数调用时的临时变量。每进入一个函数，就会将临时变量作为一个栈帧入栈，当被调用函数执行完成，返回之后，将这个对应的栈帧出栈。\"]},\"220\":{\"h\":\"表达式求值\",\"t\":[\"编译器可以通过两个栈来实现四则运算。一个栈用来保存操作数，一个栈用来保存运算符。\",\"从左向右遍历表达式，遇到数字时，直接入栈。遇到运算符时，与栈顶的运算符进行比较。如果比栈顶元素的优先级高，就入栈；否则，从运算符栈中取出运算符，从操作数栈栈顶取出 2 个操作数，进行运算后，将结果压入操作数栈。继续比较当前运算符和新的栈顶运算符。\"]},\"221\":{\"h\":\"括号匹配\",\"t\":[\"用栈保存未被匹配的左括号，从左到右扫描字符串，当扫描到左括号时，将其压入栈中，当扫描到右括号时，取出栈顶的左括号，判断能否匹配，如果能则继续（否则，判定括号不匹配）。匹配完之后，栈为空，否则判定括号不匹配。\"]},\"222\":{\"h\":\"浏览器回退、前进\",\"t\":[\"使用两个栈来实现。当按顺序访问页面 a、b、c 后，按照其顺序，将 a、b、c 压入栈 1。当点击回退时，将栈 1 的栈顶取出压入栈 2 中。当前进时，将栈 2 的栈顶取出压入栈 1。栈 1 没有数据了的话，说明不能再回退了；栈 2 没有数据了的话，说明不能再前进了。\"]},\"223\":{\"h\":\"Introduction\",\"t\":[\"正则是匹配模式，要么匹配字符，要么匹配位置。\"]},\"224\":{\"h\":\"1. 字符匹配\",\"t\":[\"横向模糊匹配：{m,n} 纵向模糊匹配：[abc]\",\"字符组：\",\"范围表示法\",\"[123456ancdefGHIJKLM] 可以写成 [1-6a-fG-M]\",\"要表示 a、-、z 三个字符中的一个，可以写成 [-az] 或 [az-] 或 [z\\\\-z]\",\"排除字符组\",\"[^abc] 表示除了 a、b、c 之外的任意字符\",\"常见简写\",\"字符组\",\"含义\",\"\\\\d\",\"表示 [0-9]。\",\"\\\\D\",\"表示 [^0-9]。表示除数字外的任意字符。\",\"\\\\w\",\"表示 [0-9a-zA-Z_]。表示数字、大小写字母和下划线。\",\"\\\\W\",\"表示 [^0-9a-zA-Z_]。非单词字符。\",\"\\\\s\",\"表示 [ \\\\t\\\\v\\\\n\\\\r\\\\f]。表示空白符，包括空格、水平制表符、垂直制表符、换行符、回车符、换页符。\",\"\\\\S\",\"表示 [^ \\\\t\\\\v\\\\n\\\\r\\\\f]。 非空白符。\",\".\",\"表示 [^\\\\n\\\\r\\\\u2028\\\\u2029]。通配符，几乎任意字符。换行符、回车符、行分隔符和段分隔符除外。\",\"匹配任意字符：[\\\\d\\\\D]、[\\\\w\\\\W]、[\\\\s\\\\S]、^\",\"量词（惰性）：\",\"量词\",\"含义\",\"{m,}\",\"表示至少出现 m 次。\",\"{m}\",\"等价于 {m,m}，表示出现 m 次。\",\"?\",\"等价于 {0,1}，表示出现或者不出现。\",\"+\",\"等价于 {1,}，表示出现至少一次。\",\"*\",\"等价于 {0,}，表示出现任意次，有可能不出现。\",\"惰性量词 & 贪婪量词：上面的两次都进行贪婪匹配，在量词后加个 ? 可实现惰性匹配\",\"多选分支（惰性）：(p1|p2|p3)\"]},\"225\":{\"h\":\"2. 位置匹配\",\"t\":[\"6 个锚：\",\"^：行开头。\",\"$：行结尾。\",\"\\\\b：单词边界，即 \\\\w 和 \\\\W 之间的位置，也包括 \\\\w 和 ^ 之间的位置，也包括 \\\\w 与 $ 之间的位置。\",\"\\\\B：非单词边界。具体说来就是 \\\\w 与 \\\\w、 \\\\W 与 \\\\W、^ 与 \\\\W，\\\\W 与 $ 之间的位置。\",\"(?=p)：其中 p 是一个子模式，整体指 p 前面的位置，或者说该位置后面要匹配 p。\",\"(?!p)：与 (?=p) 相反。\",\"(?=p) 和 (?!p) 分别叫 positive lookahead 和 negative lookahead，ES 5 之后还支持 positive lookbehind 和 negative lookbehind，分别为 (?<=p) 和 (?<!p)\",\"::: code-tabs#锚\\n@tab `^`和`$`\\n```js\\nresult = \\\"hello\\\".replace(/^|$/g, '#');\\nconsole.log(result);\\n// => \\\"#hello#\\\"\\n```\\n\\n@tab `\\\\b`\\n```js\\nlet result = \\\"[JS] Lesson_01.mp4\\\".replace(/\\\\b/g, '#');\\nconsole.log(result);\\n// => \\\"[#JS#] #Lesson_01#.#mp4#\\\"\\n```\\n\\n@tab `\\\\B`\\n```js\\nlet result = \\\"[JS] Lesson_01.mp4\\\".replace(/\\\\B/g, '#');\\nconsole.log(result);\\n// => \\\"#[J#S]# L#e#s#s#o#n#_#0#1.m#p#4\\\"\\n```\\n\\n@tab `(?=p)`\\n```js\\nlet result = \\\"hello\\\".replace(/(?=l)/g, '#');\\nconsole.log(result);\\n// => \\\"he#l#lo\\n```\\n\\n@tab `(?!p)`\\n```js\\nlet result = \\\"hello\\\".replace(/(?!l)/g, '#');\\nconsole.log(result);\\n// => \\\"#h#ell#o#\\\"\\n```\\n:::\\n\"]},\"226\":{\"h\":\"collocation\"},\"227\":{\"h\":\"1. 动词搭配\",\"t\":[\"take pleasure in doing\",\"I take pleasure in making others happy by doing ...\",\"see their face brighten up\",\"open presents on special occasions\",\"... doesn't matter to be, but ... does matter to me.\",\"... matters more than\",\"look/search for ...\",\"select\",\"call for\",\"Sometimes, the occasion might call for something more elaborate, and in those cases, I might consider giving something more valuable.\"]},\"228\":{\"h\":\"2. 名词\",\"t\":[\"preferences, interests and needs\",\"It is like a puzzle where I ...\",\"It's like a puzzle where I try to find something meaningful that will bring joy to the recipient.\"]},\"229\":{\"h\":\"3. 形容词、副词\",\"t\":[\"quite popular\",\"rewarding\",\"meaningful and thoughtful\",\"..., which I find quite + adj.\",\"thoughtful and enjoyable activity\"]},\"230\":{\"h\":\"表达\"},\"231\":{\"h\":\"1. 表示喜欢、不喜欢\",\"t\":[\"I like/adore ...\",\"I'm (not) a big fan of ... / I wouldn't say I'm a big fan of ...(, but ...)\",\"I'm (not) fond of + (doing) sth.\",\"I'm partial to sth.\",\"I'm a ... person / I'm not really a ... person\",\"I am into ... / I'm not really into ...\",\"To be honest, not much.\",\"Actually, I enjoy both.\"]},\"232\":{\"h\":\"2. 说 yes、no\",\"t\":[\"Yes, for sure. / For sure.\",\"I'd say so yes.\",\"Yes, I love/think ...\",\"Absolutely. I mean ...\",\"Yes, I'd say I was strongly encouraged to share with family and friends, if not I would get into big trouble with my parents.\",\"Yes, I would say so, but to be honest, ...\",\"Yes, quite ...\",\"e.g. Q: Are you a tidy person? A: Yes, quite tidy.\",\"Now and again yes, but by and large, I tend to ...\",\"No, not really.\",\"Not particularly.\",\"No, not at all.\"]},\"233\":{\"h\":\"3. 比较\",\"t\":[\"无所谓，两者都行\",\"I don't really mind, probably a mix of both, to be honest.\",\"Yes and no, ... On the one hand, ...; On the other hand, ...\",\"It depends really. I think if someone ..., they ..., if someone ..., they ...\",\"I'm not sure, maybe.\",\"I am on the fence on this one.\",\"I am in two minds about this.\",\"选择其一\"]},\"234\":{\"h\":\"4. 开头的一些口语化表达\",\"t\":[\"To be honest, ... / To tell you the truth, ...\",\"It's a good question, I think ... / Interestingly enough, ...\",\"To my mind, ...\",\"I'd say ...\",\"From time to time I do, especially if ...\",\"Now and again ...\",\"By and large, ...\",\"That's hard to say, I think ...\",\"obviously\",\"In my experience,\"]},\"235\":{\"h\":\"5. Coherence\",\"t\":[\"When it comes to ..., I ...\"]},\"236\":{\"h\":\"6. habitats\",\"t\":[\"I used to, but I don't anymore.\"]},\"237\":{\"h\":\"7. idioms\",\"t\":[\"to be tickled pink = to be very happy\",\"I am tickled pink that I passed my exam.\",\"It's not my cup of tea. = I don't like it.\",\"I'm not into football, it's just not my cup of tea. I prefer table tennis.\",\"to love someone to bits = to love someone a lot\",\"I am a big fan of ..., I love her to bits.\",\"to be fed up to the back teeth = to be really fed up (= bored and angry)\",\"I'm fed up to the beck teeth of this boring work my boss gives me.\"]},\"238\":{\"h\":\"问题的类型\"},\"239\":{\"h\":\"1. comparison\",\"t\":[\"In the past, we used to ...\",\"But now, things have changed.\",\"Today/Nowadays,\",\"we tend to ...\",\"we often/always/sometimes ...\"]},\"240\":{\"h\":\"热身\"},\"241\":{\"h\":\"1. Studies\"},\"242\":{\"h\":\"Useful vocabulary\",\"t\":[\"right now = at the moment\",\"just around the corner = very near\",\"It's handy = It's convenient\",\"To nip over to = to go quickly to a place\",\"calligraphy = writing\",\"to get interested in something = to become interested in it\",\"I chose it for travel = Travel is the reason I chose it\",\"to get by = to survive\",\"With his low income, he can only get by each month.\",\"to get deeper insights into something = to get a better understanding of something\",\"I chose it because ...\",\"I've always been interested in ...\",\"I always enjoy ...\",\"I have always wanted to be a ...\",\"I was inspired by ...\",\"So, ever since then, I've wanted to be a ...\",\"I think it may be useful for my future career.\",\"I wish I had chosen a different subject.\"]},\"243\":{\"h\":\"2. Work\"},\"244\":{\"h\":\"Useful vocabulary\",\"t\":[\"flexible work hours\",\"allows us to start and finish work whenever we want\",\"organize a better work-life balance\",\"no heavy labour\",\"it provides no flexible work hours, no heavy labour and a bigger income.\",\"work from home\",\"it's dead easy for me to ...\",\"I get to meet fascinating people.\",\"rewarding\",\"The dislikes or the downsides are that I have to sit in front of a computer screen all day long.\",\"It's such a sedentary lifestyle\",\"[ˈsed(ə)nt(ə)ri] 久坐的\",\"I had no idea whether I would enjoy it or not.\",\"It suits me down to the ground.\",\"非常适合\",\"I'm in touch with other teachers.\",\"I do get a chance to hook up with others.\",\"bounce ideas off them and get (their) feedback\",\"和他们交流创意，再从他们那里得到建议\",\"I get on well with those people.\",\"adequate lighting, good ventilation, the environments is clean\",\"housekeeper\",\"改变的地方 If I could, I would change ...\",\"work environment (furniture, facilities, people, atmosphere)\",\"I work in an office. It's an open plan office. I work from home.\",\"人数：There are about 10 of us/There are ten other people there/It's just me/on my own\",\"Talking about facilities, we have air conditioning.\",\"We've got canteen.\",\"There is canteen/ a gym.\",\"simple tables ->\",\"comfy seats -> ergonomic chairs [ˌɜː(r)ɡəˈnɒmɪk] 人体工学椅\",\"to be on edge = to be tense\",\"to be chilled out = to be relaxed\",\"Everybody is chilled out and laid-back (悠闲的).\",\"There's a good atmosphere where I work. Everybody gets on pretty well together\"]},\"245\":{\"h\":\"3. Accommodation\"},\"246\":{\"h\":\"Useful vocabulary\",\"t\":[\"I've been living on my own since I left school. I share a flat with 2 mates. We've been living together and sharing for about 3 or 4 months.\",\"in a seven-story building\",\"七层高的建筑\",\"a small flat\",\"quite cozy\",\"nice and cozy\",\"spacious and cozy\",\"an office space\",\"basic needs\",\"It's not huge, but it meets our basic needs.\",\"green fingers\",\"园艺 My neighbor has green fingers and his garden is always full of beautiful flowers.\",\"interior design\",\"cold and clinical colors\",\"冷淡的，临床的 -> add a bit of warmth\",\"move out\",\"a rustic house\",\"['rʌstɪk] 乡下的\",\"in the suburb\",\"in the city center\",\"it's downtown\",\"nice and friendly neighborhood\",\"a safe neighborhood\",\"there's quite a bit of hustle and bustle\",\"繁忙和喧嚣，熙熙攘攘 escape from/leave the hustle and hustle of the big city\",\"in the middle of the hustle and bustle of daily life, ...\",\"have a banter\",\"开玩笑 v. n.\",\"It's well-connected. 交通便利\",\"There are plenty of shops and restaurants nearby.\",\"washroom\",\"wet separation design\",\"there leaves a bunch of footprints on tha way\",\"mop the floor\",\"sparse decoration\",\"稀少的 The decoration is quite basic and sparse in our flat.\",\"decoration\",\"furniture (sofa, chairs, tables)\",\"I have 2 paintings hanging on the wall. put up paintings\",\"bookshelf -> it looks the worse for wear (= in poor condition)\"]},\"247\":{\"h\":\"4. Hometown\"},\"248\":{\"h\":\"Useful vocabulary\",\"t\":[\"To say that everybody is the same\",\"To generalize or be too stereotypical\",\"[ˌsteriəˈtɪpɪkl] 刻板印象的，类型化的\",\"I don't want to generalize too much or to be too stereotypical.\",\"People like water activities\",\"People are into water activities\",\"I think the people are very friendly\",\"I find the people to be very friendly\",\"People often come because of the beaches\",\"People will come for the beaches\",\"Tourism is an important industry for this city\",\"Tourism is a key sector for this city\",\"I would completely change the whole road system\",\"I would overhaul the whole road system\",\"overhaul [ˈəʊvə(r)ˌhɔːl] v. 改造\",\"The roads are quite bad\",\"The roads are not great\",\"The schools are quite bad\",\"The schools are not out of this world\",\"You can probably find a beach in every small place\",\"In every nook and cranny you can probably find a beach\",\"nook 静僻处，角落 cranny 裂缝\",\"every nook and cranny 处处\"]},\"249\":{\"h\":\"特征工程\"},\"250\":{\"h\":\"1. Introduction\",\"t\":[\"特征工程是机器学习模型构建过程中的重要步骤之一。它涉及到选择、创建、转换和优化特征，以改进模型性能。\",\"特征工程包括以下主要方面：\",\"特征选择：在原始数据中选择最相关的特征，去除不相关或冗余的特征，以减少数据维度和提高模型训练的速度。\",\"特征转换：对特征进行数学变换，如标准化、归一化、对数转换等，以确保特征具有相似的尺度和分布，有助于模型更好地理解数据。\",\"特征组合：将多个特征组合成新的特征，以捕捉特征之间的相互关系。这可以通过加法、乘法或其他方式来实现。\",\"特征创建：创建新的特征。例如，从文本数据中提取词袋模型或 TF-IDF 特征。\",\"处理缺失值：处理原始数据中的缺失值，可以通过填充、删除或其他方法来处理缺失值。\",\"离散化：将连续特征转化为离散特征，以适应某些机器学习算法，如决策树。\",\"特征缩放：将特征的范围缩放到特定的区间，以确保模型不会被某些特征的值范围所主导。\"]},\"251\":{\"h\":\"1.1 特征工程的目标\",\"t\":[\"通过特征工程，我们可以：\",\"提高模型的预测表现。\",\"减少数据的使用、减少计算量。\",\"提高结果的可解释性。\"]},\"252\":{\"h\":\"1.2 关键原则\",\"t\":[\"特征（feature）和目标（target）之间的关系必须是我们使用的模型可以学到的。即，如果我们选用线性模型，它只能学线性关系，所以我们使特征和目标具有线性关系。\",\"这是一个使用特征工程提高准确性的例子。\"]},\"253\":{\"h\":\"2. 互信息（Mutual Information, MI）\",\"t\":[\"当拿到一个比较复杂的数据集（比如有成百上千个特征）且没有对应的说明的时候，我们会感觉不知道何从下手。\",\"实际上，我们可以先用特征效用指标（feature utility metric，衡量每个特征和目标之间的关联程度）来构建一个排名，选择其中最有用的一些特征进行开发。\",\"我们使用的指标就叫做互信息（mutual information），它和相关性（correlation）很像，也是衡量两个量之间的关系。但是相关性只能检测到线性关系，而互信息可以检测任何类型的关系。\",\"所以说，当我们刚开始还不知道使用什么模型的时候，互信息就显得非常重要了。\"]},\"254\":{\"h\":\"2.1 什么是互信息\",\"t\":[\"互信息用不确定性（uncertainty）来描述关联性。如果两个变量之间存在关联，那么知道一个变量的取值，将会使我们对另一个变量的取值有更精确的估计，即不确定性降低。互信息（MI）衡量的就是这种关系，即知道一个量后，可以降低多少对另一个量的不确定性。\"]},\"255\":{\"h\":\"2.2 互信息分数\",\"t\":[\"互信息最小是 0，表示两个量之间是独立的；最大没有上限，但是实际应用中，高于 2.0 的分数也不常见。（MI 是对数量，所以它涨得很慢。）\",\"在使用 MI 时要了解以下内容：\",\"MI 是基于自身的评估，它可以帮助我们理解一个特征的潜在预测能力。\",\"MI 是单变量度量：特征可能在与其他特征的交互时具有信息量，但是每个特征本身却没什么信息量。互信息是无法检测出特征之间的相互作用的。\",\"一个特征的实际有用性取决于我们使用的模型：一个特征只有在它与目标的关系是我们的模型可以学的范围内才有用。高的 MI 分数并不意味着我们的模型能够有效地利用这些信息。我们可能需要首先对特征进行变换，以使与目标的关联更明显，以便模型能够更好地学习。\",\"这是一个使用 MI 的例子。\",\"主要代码：\",\"from sklearn.feature_selection import mutual_info_regression def make_mi_scores(X, y, discrete_features): mi_scores = mutual_info_regression(X, y, discrete_features=discrete_features) mi_scores = pd.Series(mi_scores, name=\\\"MI Scores\\\", index=X.columns) mi_scores = mi_scores.sort_values(ascending=False) return mi_scores \",\"相关代码\",\"# 获得 MI 分数 def make_mi_scores(X, y): X = X.copy() for colname in X.select_dtypes([\\\"object\\\", \\\"category\\\"]): X[colname], _ = X[colname].factorize() # All discrete features should now have integer dtypes discrete_features = [pd.api.types.is_integer_dtype(t) for t in X.dtypes] mi_scores = mutual_info_regression(X, y, discrete_features=discrete_features, random_state=0) mi_scores = pd.Series(mi_scores, name=\\\"MI Scores\\\", index=X.columns) mi_scores = mi_scores.sort_values(ascending=False) return mi_scores # 绘制 mi_score 横向条形图 def plot_mi_scores(scores): scores = scores.sort_values(ascending=True) width = np.arange(len(scores)) ticks = list(scores.index) plt.barh(width, scores) plt.yticks(width, ticks) plt.title(\\\"Mutual Information Scores\\\") # 散点图 sns.relplot(x=\\\"curb_weight\\\", y=\\\"price\\\", data=df) # 用 fuel_type 进行着色 sns.lmplot(x=\\\"horsepower\\\", y=\\\"price\\\", hue=\\\"fuel_type\\\", data=df); \",\"# 设置Matplotlib的默认样式和属性 plt.style.use(\\\"seaborn-whitegrid\\\") plt.rc(\\\"figure\\\", autolayout=True) # 自动布局图形 plt.rc( \\\"axes\\\", labelweight=\\\"bold\\\", labelsize=\\\"large\\\", titleweight=\\\"bold\\\", titlesize=14, titlepad=10, ) # 绘制 3 个子图，横坐标分别对应 features features = [\\\"YearBuilt\\\", \\\"MoSold\\\", \\\"ScreenPorch\\\"] sns.relplot( x=\\\"value\\\", y=\\\"SalePrice\\\", col=\\\"variable\\\", data=df.melt(id_vars=\\\"SalePrice\\\", value_vars=features), facet_kws=dict(sharex=False), ) # boxen sns.catplot(x=\\\"BldgType\\\", y=\\\"SalePrice\\\", data=df, kind=\\\"boxen\\\") # 相当于在多个子图中进行 hue feature = \\\"GrLivArea\\\" sns.lmplot( x=feature, y=\\\"SalePrice\\\", hue=\\\"BldgType\\\", col=\\\"BldgType\\\", data=df, scatter_kws={\\\"edgecolor\\\": 'w'}, col_wrap=3, height=4, ) \"]},\"256\":{\"h\":\"3. 特征创建（Creating Features）\"},\"257\":{\"h\":\"3.1 数学转换\",\"t\":[\"我们经常使用数学公式来对特征进行处理，它们一般都是领域知识。\",\"比如我们会使用「冲程比」来描述发动机性能和效率。\",\"autos[\\\"stroke_ratio\\\"] = autos.stroke / autos.bore \",\"另外，数据可视化可以帮助我们选择对数据进行重塑的方式（通常是使用幂函数或对数进行）。\",\"比如，对于高度偏斜分布的数据，即数据分布中存在明显的不对称性，通常是右偏（正偏）或左偏（负偏），使用对数可以压缩数据的范围，减小极端值的影响，并使分布更加接近正态分布。\",\"# If the feature has 0.0 values, use np.log1p (log(1+x)) instead of np.log accidents[\\\"LogWindSpeed\\\"] = accidents.WindSpeed.apply(np.log1p) \"]},\"258\":{\"h\":\"3.2 计数（Counts）\",\"t\":[\"表示有无的特征一般用 0-1 或 True-False 来标记。Python 中的 Boolean 类型可以直接相加。\",\"当我们想要以大于 0 为依据判断是否存在时，可以用 DataFrame 内置的 gt（greater than）方法来进行判断。\",\"相关信息\",\"这是一篇关于 Box-Cox Transformation 的内容，Data cleaning 也是个非常常用的 normalizer。\"]},\"259\":{\"h\":\"字符串合并与拆分\",\"t\":[\"有些字符串中蕴含着某些信息，比如身份证号码（地区、出生日期）、电话号码（区号）等。\",\"可以使用 str accessor 来对 DataFrame 的列做操作。\",\"# 把 Policy 这一列根据空格拆分，形成新的两列 Type 和 Level customer[[\\\"Type\\\", \\\"Level\\\"]] = ( # Create two new features customer[\\\"Policy\\\"] # from the Policy feature .str # through the string accessor .split(\\\" \\\", expand=True) # by splitting on \\\" \\\" # and expanding the result into separate columns ) \",\"当然也可以将多个字段合并。\",\"# 将 make 和 body_style 合并到 make_and_style 列中 autos[\\\"make_and_style\\\"] = autos[\\\"make\\\"] + \\\"_\\\" + autos[\\\"body_style\\\"] \",\"相关信息\",\"对于其他类型的数据：\",\"dates and times，请查看 Parsing Dates\",\"Latitudes and longitudes，请查看 Geospatial Analysis\"]},\"260\":{\"h\":\"3.3 Group Transforms\",\"t\":[\"我们还可以在分组下聚合多行信息。\",\"使用聚合函数，Group transform 将两个特征结合起来：一个是提供分组依据的类别特征，另一个是希望聚合的数值特征。例如，对于“按州计算的平均收入”，会选择州（State）作为分组特征，平均值（mean）作为聚合函数，收入（Income）作为聚合特征。在Pandas中使用 groupby 和 transform 方法。\",\"这种方法允许我们根据某个类别将数据分组，并在每个组中应用聚合函数，然后将聚合的结果返回到原始数据中，以创建新的特征。这对于分析数据中不同类别之间的关系和差异非常有用，因为它可以帮助我们洞察数据的不同方面和模式。\",\"customer[\\\"AverageIncome\\\"] = ( customer.groupby(\\\"State\\\") # for each state [\\\"Income\\\"] # select the income .transform(\\\"mean\\\") # and compute its mean ) \",\"mean 是内置的 DataFrame 方法，除此之外还有：max, min, median, var, std, count。\",\"例如，如果想要统计非数值特征（categorical feature）的频率：\",\"customer[\\\"StateFreq\\\"] = ( customer.groupby(\\\"State\\\") [\\\"State\\\"] .transform(\\\"count\\\") / customer.State.count() ) \",\"如果我们进行了训练集和验证集的划分，为了保持各自的独立性，最好在训练集上创建群组特征，然后将其连接到验证集上。我们可以在训练集上使用 drop_duplicates 来创建一个唯一的值集合，然后在验证集上使用 merge方法进行连接。\",\"# Create splits df_train = customer.sample(frac=0.5) # 从 customer 中取 50% 作为训练集 df_valid = customer.drop(df_train.index) # 去除训练集中的部分作为验证集 # Create the average claim amount by coverage type, on the training set df_train[\\\"AverageClaim\\\"] = df_train.groupby(\\\"Coverage\\\")[\\\"ClaimAmount\\\"].transform(\\\"mean\\\") # Merge the values into the validation set df_valid = df_valid.merge( df_train[[\\\"Coverage\\\", \\\"AverageClaim\\\"]].drop_duplicates(), # 去掉这两列中重复的行 on=\\\"Coverage\\\", how=\\\"left\\\", ) df_valid[[\\\"Coverage\\\", \\\"AverageClaim\\\"]].head(10) \",\"df.merge 方法\",\"how=\\\"left\\\" 表示左连接，还可以使用 right (右连接), inner (内连接), outer (外连接)。\",\"df1 = pd.DataFrame({'A': ['A0', 'A1', 'A2'], 'B': ['B0', 'B1', 'B2']}) df2 = pd.DataFrame({'A': ['A1', 'A2', 'A3'], 'C': ['C1', 'C2', 'C3']}) \",\"提示\",\"了解模型本身的优劣对于创建特征尤为重要，以下是一些大家需要知道的内容：\",\"线性模型自然地学习 sums 和 differences，但不能学习更复杂的关系。\",\"比率对大多数模型来说通常比较难学习。因此，将特征组合为比率往往可以带来性能的提升。\",\"线性模型和神经网络通常更适合使用标准化的特征。特别是神经网络需要特征缩放到接近0的值。而树模型（例如随机森林和XGBoost）有时可以从标准化受益，但通常受益较少。\",\"树模型可以学习几乎任何特征组合，但当某个组合特别重要时，尤其是在数据有限的情况下，明确创建这个组合特征仍然会有益。树模型通常具有很高的灵活性，但在一些情况下，明确地提供关键特征可以帮助它们更好地捕捉关系。\",\"计数特征对于树模型尤其有帮助，因为这些模型没有自然的方式来跨多个特征同时聚合信息。计数特征可以提供有关数据的聚合信息，帮助模型更好地理解数据。\"]},\"261\":{\"h\":\"4. 使用 K-Means 进行聚类\",\"t\":[\"K-means 使用欧氏距离来衡量数据点之间的相似性。它通过在特征空间内放置一些点，称为质心（centroids），来创建聚类（clusters）。数据集中的每个点都被分配到距离它最近的质心所属的聚类。在\\\"K-means\\\"中，\\\"k\\\" 表示要创建的质心（即聚类）的数量。\",\"简而言之，K均值聚类是一种无监督机器学习方法，旨在将数据分为\\\"k\\\"个紧凑的簇，使得同一簇内的数据点彼此相似，而不同簇之间的数据点差异较大。这个方法的核心思想是通过迭代的方式，不断更新质心的位置，以便最大程度地减小簇内数据点与质心之间的距离。K均值聚类通常需要指定要创建的簇的数量 \\\"k\\\"，这是一个关键参数，需要谨慎选择。\",\"我们主要关注 scikit-learn 的三个参数：n_clusters, max_iter, n_init。\",\"K-Means 主要是两步。首先是随机初始化一定数量（n_clusters）的质心（centroids），然后迭代执行下面的两个操作：\",\"将数据点分配给最近的质心所属的簇；\",\"移动质心，以减小与其所属簇中数据点之间的距离。\",\"直到质心不再移动，或迭代到最大次数（max_iter），迭代停止。这两个操作是K均值聚类的核心步骤，它们的目标是不断改进簇的质量，使簇内的数据点更加相似，簇与簇之间的距离更大。\",\"由于初始质心的随机位置可能导致不理想的聚类结果，因此K均值聚类通常会重复多次（n_init），并返回具有最小总距离的数据点和其质心之间的最佳聚类。这种方式有助于降低随机初始化对聚类结果的影响，提高聚类的稳定性。\",\"如果想要分成更多的簇，可以使用更大的 max_iter；如果数据比较复杂，可以使用更多的n_clusters。一般来讲，我们确定 n_clusters 就可以了。到底选择多少个簇由我们研究的问题和使用的模型来决定，我们可以使用交叉验证等方法来对这个参数进行调优。\",\"from sklearn.cluster import KMeans kmeans = KMeans(n_clusters=6) X[\\\"Cluster\\\"] = kmeans.fit_predict(X) X[\\\"Cluster\\\"] = X[\\\"Cluster\\\"].astype(\\\"category\\\") \",\"可视化\",\"sns.relplot( x=\\\"Longitude\\\", y=\\\"Latitude\\\", hue=\\\"Cluster\\\", data=X, height=6, ) # boxen 不同 cluster 上 MedHouseValue 的值分布情况 X[\\\"MedHouseVal\\\"] = df[\\\"MedHouseVal\\\"] sns.catplot(x=\\\"MedHouseVal\\\", y=\\\"Cluster\\\", data=X, kind=\\\"boxen\\\", height=6) \",\"注：K-means 聚类对数据的尺度（scale）十分敏感，不同特征的 scale 差异可能会影响 K-means 的结果，所以我们最好进行 rescale 或 normalization。\"]},\"262\":{\"h\":\"5.\"},\"263\":{\"h\":\"1. Transformer Models\"},\"264\":{\"h\":\"1. NLP 介绍\",\"t\":[\"NLP 的任务不仅仅是理解单个字词的含义，而是要理解上下文的含义。\",\"NLP 任务有很多，比如：\",\"对整个句子进行分类：获取评论的情绪，检测电子邮件是否为垃圾邮件，确定句子在语法上是否正确或两个句子在逻辑上是否相关\",\"对句子中的每个词语进行分类：识别句子的语法成分（名词、动词、形容词）或命名实体（人、地点、组织）\",\"生成上下文：用自动生成的文本完成提示，用屏蔽词填充文本中的空白\",\"从文本中提取答案：给定问题和上下文，根据上下文中提供的信息提取问题的答案\",\"根据输入文本生成新的句子：将文本翻译成另一种语言，总结文本\"]},\"265\":{\"h\":\"1.1 术语：Architectures vs. checkpoints\",\"t\":[\"在接下来的学习中，你将会看到 architectures、checkpoints，还有 models 这些术语。\",\"Architecture: 模型框架。每一层的定义、模型中发生的每个操作的定义。\",\"Checkpoints: 对于一个给定 architecture 的权重。\",\"Model: 范语，可能是指 architecture，也可能是指 checkpoints。\",\"如：BERT 是一个 architecture。bert-base-cased 是由 Google 团队为 BERT 训练的初始权重，它是 checkpoints。我们可以说 BERT model，也可以说 bert-base-cased model.\"]},\"266\":{\"h\":\"2. Transformers 能做什么\",\"t\":[\"你可以使用🤗 Transformers 库来创建并使用公开的模型。你可以在模型中心中查找预训练模型。你也可以在 Hub 中上传你自己的模型。\"]},\"267\":{\"h\":\"2.1 快速体验 🤗 Transformers 库\",\"t\":[\"🤗 Transformers 库提供了 pipeline() 函数，它聚合了预训练模型和对应的文本预处理。使用该函数可以直接根据输入返回目标输出。\",\"from transformers import pipeline # 选择任务 sentiment-analysis，创建分类器对象 # 没有指定 model，则会使用默认 model classifier = pipeline(\\\"sentiment-analysis\\\") # 1 传入一个句子 classifier(\\\"I've been waiting for a HuggingFace course my whole life.\\\") # 结果：[{'label': 'POSITIVE', 'score': 0.9598048329353333}] # 2 传入多个句子 classifier( [\\\"I've been waiting for a HuggingFace course my whole life.\\\", \\\"I hate this so much!\\\"] ) # 结果 # [{'label': 'POSITIVE', 'score': 0.9598048329353333}, # {'label': 'NEGATIVE', 'score': 0.9994558691978455}] \",\"目前支持的 pipeline 见 Model 中心。 如果不想使用默认模型，可通过 model 参数传递对应的模型名称。\",\"from transformers import pipeline generator = pipeline(\\\"text-generation\\\", model=\\\"distilgpt2\\\") generator( \\\"In this course, we will teach you how to\\\", max_length=30, num_return_sequences=2, ) \"]},\"268\":{\"h\":\"2.2 局限性 & 偏见\",\"t\":[\"为了在大规模数据上进行预训练，研究员们会收集尽可能多的数据，这其中可能会夹杂一些意识形态或者价值观的刻板印象。\",\"from transformers import pipeline unmasker = pipeline(\\\"fill-mask\\\", model=\\\"bert-base-uncased\\\") result = unmasker(\\\"This man works as a [MASK].\\\") print([r[\\\"token_str\\\"] for r in result]) result = unmasker(\\\"This woman works as a [MASK].\\\") print([r[\\\"token_str\\\"] for r in result]) \",\"['lawyer', 'carpenter', 'doctor', 'waiter', 'mechanic'] ['nurse', 'waitress', 'teacher', 'maid', 'prostitute'] \",\"观察结果，有明显的性别相关性，妓女成为了“女性工作”相关的前五名答案之一。\",\"注意\",\"原始模型中很容易掺杂性别歧视、种族歧视等问题，在模型上进一步微调并不会消除这种偏差。\"]},\"269\":{\"h\":\"3. Transformer 背景知识\",\"t\":[\"Transformer 架构于 2017 年 6 月推出。大体上可以将 Transformer 模型分为三类：\",\"GPT-like (自回归（auto-regressive）Transformer 模型)\",\"BERT-like (自编码（auto-encoding）Transformer 模型)\",\"BART/T5-like (序列到序列（sequence-to-sequence）Transformer 模型)\"]},\"270\":{\"h\":\"3.1 Transformer 是语言模型（language model）\",\"t\":[\"包括 GPT、BERT、BART、T5 等 Transformer 模型都是语言模型，即他们已经以自监督学习（self-supervised）的方式在大量文本上进行了训练。\",\"这类模型在其进行训练的语料上进行了理解，但是对于具体问题，它就没那么有针对性了，于是我们需要进行迁移学习（transfer learning）。在迁移学习时，对于具体问题，我们使用人工标注的数据以有监督的方式进行精调（fine-tune）。\"]},\"271\":{\"h\":\"3.2 Transformer 是大模型\",\"t\":[\"实现更好性能的一般策略是增加模型的大小以及预训练的数据量。\"]},\"272\":{\"h\":\"3.3 迁移学习（Transfer Learning）\",\"t\":[\"预训练（Pretraining）指从头开始训练模型。这往往需要使用大规模语料，花费长达数周的时间。\",\"微调（Fine-tuning）是在预训练好的模型上进行进一步的训练。要进行微调，你需要使用预训练模型以及针对特定任务的数据集再次进行训练。进行微调可以有效降低时间、设备成本，使用更小的数据集完成。\"]},\"273\":{\"h\":\"4. Transformer 结构\",\"t\":[\"扩展阅读\",\"推荐 The Illustrated Transformer 这篇文章。在该文章中，作者使用动图清晰地描述了 Transformer 的结构和原理。\",\"Transformer 主要由两部分组成：\",\"Encoders (编码器): 编码器接收输入并构建其表示（即特征）。这意味着对模型进行了优化，以从输入中获得理解。\",\"Decoders (解码器): 解码器使用编码器的表示（特征）以及其他输入来生成目标序列。这意味着该模型已针对生成输出进行了优化。\",\"这两部分可以单独使用，这取决于你要做什么任务：\",\"Encoder-only 模型（auto-encoding models）：适用于需要理解输入的任务，如句子分类和命名实体识别。\",\"这类模型有 ALBERT, BERT, DistillBERT, ELECTRA, RoBERTa\",\"Decoder-only 模型（auto-regressive models）：适用于生成任务，如文本生成。\",\"这类模型有 CTRL, GPT, GPT-2, Transformer XL\",\"Encoder-decoder 模型（sequence-to-sequence models）：适用于需要根据输入进行生成的任务，如翻译或摘要。预训练这类模型可以使用 encode 或 decoder 的目标。\",\"这类模型有 BART, mBART, Marian, T5\"]},\"274\":{\"h\":\"4.1 注意力层（Attention Layers）\",\"t\":[\"注意力层使得模型对不同位置的字词有着不同的关注程度。\",\"比如，在做文本翻译任务时，将 \\\"I like eating apples\\\" 翻译成中文，在翻译 like 时，模型需要关注 I 和 eating 来获得正确的翻译，而对 apples 的关注度可能小一些；翻译 \\\"It feels like a soft blanket\\\" 时，关注 feels 会帮助模型获得正确的翻译。\"]},\"275\":{\"h\":\"4.2 原始模型\",\"t\":[\"Transformer 最开始是为了翻译任务而设计的。\",\"在训练过程中，encoder 和 decoder 分别接收两种语言的同一个句子。encoder 使用注意力层，可以“看到”该句子中的全部字词。而 decoder 只能看到已经翻译好的字词（即在正在被翻译的字词之前已经生成的部分）。 比如 decoder 已经生成了3个单词，在生成第4个单词时，我们会把前三个单词也作为输入，连同 encoder 输出的部分一起作为 decoder 的输入来生成第4个单词。\",\"为了加快训练，我们会喂给 decoder 完整的目标，但是不允许它使用没有预测的词汇。例如，我们正在预测第4个单词，但是模型看到了目标中的第4个单词，显然这样的模型在实际中不会获得好的效果。\",\"最初的 Transformer 结构如下：\",\"注意，在 decoder 中，第一个注意力层关注所有 decoder 的过去的输入，第二个注意力层，使用了来自 encoder 的输出。因此它能够获得完整的输入句子来对当前词语进行最佳预测。\",\"我们还可以使用注意力遮罩层（attention mask）以使得模型关注某些表示。比如，在批处理句子时，会使用填充的方式使句子长度保持一致，填充的内容无意义，我们不希望模型关注它。\"]},\"276\":{\"h\":\"5. 小结\",\"t\":[\"本节内容介绍了 NLP 任务以及如何使用 🤗 Transformers 中的 pipeline() 函数来执行不同的 NLP 任务。你可以在模型中心中查找模型，按照 Model Card 中的说明或者使用页面上的 inference API 进行使用。\",\"我们简单介绍了 Transformer 的结构，如果你想做进一步了解，推荐阅读 The Illustrated Transformer。\"]},\"277\":{\"h\":\"2. 使用 🤗 Transformers\",\"t\":[\"Transformer 模型一般都很大，训练或者部署是一项复杂的任务。🤗 Transformers 库提供了简单的API，使得用户可以通过它来加载、训练、保存所有的 Transformer 模型。\",\"我们将使用 model 和 tokenizer 来实现在上一节中 pipeline() 函数完成的任务。然后会介绍 model API，看一看 model 类和 configuration 类，了解如何加载模型、它是怎么处理数字输入并输出预测的。\",\"接下来还有 tokenizer API。tokenizer 负责将文本转成数字表示（以作为神经网络的输入），并负责将数字表示转化成文本。我们还会展示如何批处理多个句子。\"]},\"278\":{\"h\":\"1. Pipeline 都做了什么\",\"t\":[\"上一节中提到的 pipeline() 函数实际上经过了以下几个步骤：预处理、将输入传递给模型、后处理\"]},\"279\":{\"h\":\"1.1 使用 tokenizer 进行预处理\",\"t\":[\"Transformer 模型不能直接处理原始文本，于是要先将文本输入转换成数字表示。实际上，Transformer 模型只接收 tensor 作为输入。\",\"tokenizer 的处理步骤：\",\"将文本切分成 tokens (可能是 words, subwords, 或者 symbols)\",\"将每一个 token 映射到一个数字上\",\"添加可能对模型有用的其他输入\",\"显然，使用模型进行预测时使用的上述操作应该和预训练时的操作一致。我们可以使用 AutoTokenizer 类以及它的 from_pretrained() 函数来实现这一点。使用模型的 checkpoints 名称，它会下载对应模型的 tokenizer 并缓存下来。\",\"在上一节中，我们使用了 sentiment-analysis\",\"from transformers import pipeline classifier = pipeline(\\\"sentiment-analysis\\\") classifier( [ \\\"I've been waiting for a HuggingFace course my whole life.\\\", \\\"I hate this so much!\\\", ] ) \",\"上面模型的默认 checkpoints 是 sentiment-analysis pipeline is distilbert-base-uncased-finetuned-sst-2-english，使用 AutoTokenizer 创建 tokenizer 对象\",\"from transformers import AutoTokenizer checkpoint = \\\"distilbert-base-uncased-finetuned-sst-2-english\\\" tokenizer = AutoTokenizer.from_pretrained(checkpoint) \",\"将文本传递给 tokenizer\",\"raw_inputs = [ \\\"I've been waiting for a HuggingFace course my whole life.\\\", \\\"I hate this so much!\\\", ] # padding, truncation 会在之后介绍；return_tensors 为 pt, 即 pytorch inputs = tokenizer(raw_inputs, padding=True, truncation=True, return_tensors=\\\"pt\\\") print(inputs) \",\"{ 'input_ids': tensor([ [ 101, 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012, 102], [ 101, 1045, 5223, 2023, 2061, 2172, 999, 102, 0, 0, 0, 0, 0, 0, 0, 0] ]), 'attention_mask': tensor([ [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] ]) } \"]},\"280\":{\"h\":\"1.2 model\",\"t\":[\"与 AutoTokenizer 类似，🤗 Transformers 库还提供了 AutoModel class，它也有 from_pretrained() 方法。\",\"from transformers import AutoModel checkpoint = \\\"distilbert-base-uncased-finetuned-sst-2-english\\\" model = AutoModel.from_pretrained(checkpoint) \",\"上面的代码下载了 distilbert-base-uncased-finetuned-sst-2-english 的 checkpoints （如果还在同一环境中，那么它在之前已经被缓存了），并实例化了对应的模型。\",\"这个架构只包括最基本的 Transformer 模块，即下图中 Transformer Network 部分。\",\"注意\",\"Transformer Network 即我们在上一节中谈到的 Transformer 架构，这里只是画成 Embedding + Layers\",\"当然 🤗 Transformers 还提供了不同的架构。下面列举了一部分\",\"*Model (retrieve the hidden states)\",\"*ForCausalLM\",\"*ForMaskedLM\",\"*ForMultipleChoice\",\"*ForQuestionAnswering\",\"*ForSequenceClassification\",\"*ForTokenClassification\",\"and others 🤗\"]},\"281\":{\"h\":\"1.2.1 Model 输出（hidden states 或 features）：高维张量\",\"t\":[\"Transformer 模块输出的张量通常很大，它有以下三个维度：\",\"Batch size: 每次处理的序列长度（上述例子中为2）\",\"Sequence length: 序列的数字表示的长度（上述例子中为16）\",\"Hidden size: 每个模型输入的张量维度。通常很大（小模型可能是768，在大一些的模型中可能是3072甚至更大）\",\"我们将上面使用 tokenizer 得到的输入传递给 model，看看它的输出\",\"outputs = model(**inputs) print(outputs.last_hidden_state.shape) \",\"torch.Size([2, 16, 768]) \"]},\"282\":{\"h\":\"1.2.2 Model heads\",\"t\":[\"Model heads 通常有一层或多层线性层组成，以 hidden states 作为输入，将这些高维张量映射到不同的维度上。\",\"我们需要一个有序列分类（sequence classification）head 的模型，于是我们不用 AutoModel 类，我们使用 AutoModelForSequenceClassification。\",\"from transformers import AutoModelForSequenceClassification checkpoint = \\\"distilbert-base-uncased-finetuned-sst-2-english\\\" model = AutoModelForSequenceClassification.from_pretrained(checkpoint) outputs = model(**inputs) print(outputs.logits.shape) \",\"torch.Size([2, 2]) \",\"我们分析的是两个句子，判断每个句子是 positive 还是 negative，所以输出维度是 2x2\"]},\"283\":{\"h\":\"1.3 后处理\",\"t\":[\"print(outputs.logits) \",\"tensor([[-1.5607, 1.6123], [ 4.1692, -3.3464]], grad_fn=<AddmmBackward>) \",\"对于第一个句子，我们预测的是 [-1.5607, 1.6123]，这是logits（所有的 🤗 Transformers 模型输出的都是 logits）。实际上我们更希望得到类似于概率的结果，于是我们将它输入至 SoftMax 层中。\",\"import torch predictions = torch.nn.functional.softmax(outputs.logits, dim=-1) print(predictions) \",\"tensor([[4.0195e-02, 9.5980e-01], [9.9946e-01, 5.4418e-04]], grad_fn=<SoftmaxBackward0>) \",\"我们可以通过查看 model config 的 id2label 属性来查看对应的 label\",\"model.config.id2label \",\"{0: 'NEGATIVE', 1: 'POSITIVE'} \",\"到此为止，我们通过三个步骤（使用 tokenizer 进行预处理，将输入传递给 model，后处理）得到最终的结论：\",\"第一个句子: NEGATIVE: 0.0402, POSITIVE: 0.9598\",\"第二个句子: NEGATIVE: 0.9995, POSITIVE: 0.0005\"]},\"284\":{\"h\":\"2. Models\",\"t\":[\"我们详细介绍下 model。AutoModel 类可以根据 checkpoint 来实例化任何模型。它根据 checkpoint 来确定模型结构，并实例化模型。如果你确切知道你想使用什么类型的模型，你可以直接使用对应的 model 类。\",\"下面将使用 BERT model。\"]},\"285\":{\"h\":\"2.1 创建 Transformer\",\"t\":[\"初始化 BERT 模型的第一步是加载配置对象。\",\"from transformers import BertConfig, BertModel config = BertConfig() model = BertModel(config) \",\"配置中包含很多建立模型要用到的属性。\",\"打印 config 的内容\",\"BertConfig { \\\"attention_probs_dropout_prob\\\": 0.1, \\\"classifier_dropout\\\": null, \\\"hidden_act\\\": \\\"gelu\\\", \\\"hidden_dropout_prob\\\": 0.1, \\\"hidden_size\\\": 768, \\\"initializer_range\\\": 0.02, \\\"intermediate_size\\\": 3072, \\\"layer_norm_eps\\\": 1e-12, \\\"max_position_embeddings\\\": 512, \\\"model_type\\\": \\\"bert\\\", \\\"num_attention_heads\\\": 12, \\\"num_hidden_layers\\\": 12, \\\"pad_token_id\\\": 0, \\\"position_embedding_type\\\": \\\"absolute\\\", \\\"transformers_version\\\": \\\"4.29.1\\\", \\\"type_vocab_size\\\": 2, \\\"use_cache\\\": true, \\\"vocab_size\\\": 30522 } \"]},\"286\":{\"h\":\"2.1.1 不同的加载方法\",\"t\":[\"使用默认的配置来创建 model 时，model 会被随机初始化。\",\"你可以直接使用随机初始化的 model，不过使用效果肯定很差，而重新训练又需要大量的时间和数据。我们不妨加载已经训练好的模型，这要用到 from_pretrained() 方法。\",\"from transformers import BertModel model = BertModel.from_trained(\\\"bert-base-cased\\\") \",\"当然你也可以将 BertModel 替换为 AutoModel\",\"from transformers import AutoModel model = AutoModel.from_trained(\\\"bert-base-cased\\\") \",\"你可以在这个 model card 中查看 BERT 模型的更多细节。\",\"提示\",\"缓存路径为 ~/.cache/huggingface/modules 你可以通过设置 HF_HOME 环境变量来自定义缓存路径。\"]},\"287\":{\"h\":\"2.1.2 保存方法\",\"t\":[\"使用 save_pretrained() 方法来保存模型\",\"model.save_pretrained(\\\"directory_on_my_computer\\\") \",\"这会保存两个文件\",\"ls directory_on_my_computer config.json pytorch_model.bin \",\"你可以在 config.json 中看到建立模型所需的属性。该文件中也有一些 metadata，比如 checkpoint 的来源或路径、你最后一次保存 checkpoint 时使用的 🤗 Transformers 版本\",\"python_model.bin 被称为状态字典（state dictionary）。其中记录了模型的权重。\",\"这两个文件相辅相成，config.json 提供了模型的架构信息，python_model.bin 提供了模型权重。\"]},\"288\":{\"h\":\"2.2 使用 Transformer 进行推理（inference）\",\"t\":[\"在 2.1 中你已经看到了如何加载以及保存使用模型，下面我们来使用模型进行预测。\",\"在 1.1 中，我们已经过如何使用 tokenizer 将文本转化为张量，它将输入的文本转化为数字：\",\"获得 input IDs: model_input\",\"给定文本：\",\"sequences = [\\\"Hello!\\\", \\\"Cool.\\\", \\\"Nice!\\\"] \",\"经 tokenizer 获得 input IDs:\",\"encoded_sequences = [ [101, 7592, 999, 102], [101, 4658, 1012, 102], [101, 3835, 999, 102], ] \",\"Transformer 只接收 tensor，将上面的 list 转化成 tensor：\",\"import torch model_inputs = torch.tensor(encoded_sequences) \",\"现在可以将 model_input 传递给 model 了\",\"output = model(model_inputs) \",\"model 可以接收很多参数，其中 input IDs 只必传的。我们将在未来在讨论其他参数。\"]},\"289\":{\"h\":\"3. Tokenizers\",\"t\":[\"模型只能处理数字，tokenizer 的作用是将文本转化为模型可以处理的数字。它的目标是找到最有意义的表示，并尽可能小。\",\"下面介绍几种 tokenization 算法。\"]},\"290\":{\"h\":\"3.1 tokenization 算法\"},\"291\":{\"h\":\"3.1.1 Word-based\",\"t\":[\"可以使用空格来将句子切分为字词：\",\"tokenized_text = \\\"Jim Henson was a puppeteer\\\".split() print(tokenized_text) # res # ['Jim', 'Henson', 'was', 'a', 'puppeteer'] \",\"也有针对标点符号增加了额外规则的 tokenizer。\",\"使用 word-based tokenizer，我们最终会得到一个非常大的词汇表，此表的大小由语料中的独立 token 数决定。每个字词都被分配了一个 ID，从 0 到整个词表大小。模型使用这些 ID 来表示每个字词。\",\"如果我们想使用这种 tokenizer 来覆盖某门语言，那将会生成大量 token。例如，英语中有 500,000 个单词，于是构建每个单词到 input_id 的映射要有 500,000 个。除此之外，'dog' 和 'dogs', 'run' 和 'running' 会被分别构建不同的 input_id, 没有体现出它们之间的相似与联系。\",\"另外，我们还需要自定义一个 token 来表示不在词表中的字词，也就是 'unknown' token。一般用 '[UNK]' 或 '' 表示。如果某个 tokenizer 产生了大量 unknown token，这意味着它无法检索到一个词的合理表示，且你在这个过程中丢失了信息。我们希望 tokenizer 会将尽量少的字词标记为 unknown token。\",\"下面介绍 character-based tokenizer，它可以减少 unknown token 的产生。\"]},\"292\":{\"h\":\"3.1.2 Character-based\",\"t\":[\"Character-based tokenizer 将文本切分成 characters，而不是 words。这样做有两点好处：\",\"词表将有效地减小\",\"unknown tokens 也会减少（因为每个字词都是通过 character 构建的）\",\"当然，这也会产生一些问题。首先，character 可能本身没有含义（相对于 word 来说。但也因语言而异，比如中文字符会比拉丁系语言的字符携带更多信息）。另外，模型需要处理大量 token（对于 word-based 来说的一个 word 只需要 1 个 token，而使用 character-based，可能有十几个 tokens 要处理）、\",\"考虑到上面两种技术，又提出了第三种方式：subword tokenization\"]},\"293\":{\"h\":\"3.1.3 Subword tokenization\",\"t\":[\"subword tokenization 的原则是：经常使用的词不应该再被切分为更小的子词，比较少用的词可以分解为有意义的子词。\",\"比如：annoyingly 可能被切分成 annoy、ing、ly\",\"以下 tokenization 是 subword tokenization：\",\"Byte-level BPE, GPT-2 使用这种方式\",\"WordPiece, BERT 使用这种方式\",\"SentencePiece or Unigram, 在一些多语言模型中使用\",\"...\"]},\"294\":{\"h\":\"3.2 加载 & 保存\",\"t\":[\"加载和保存 tokenizer 分别使用方法 from_pretrained() 和 save_pretrained(). 使用该方法会加载或保存 tokenizer 使用的算法（类似于 model 的 architecture），还会加载或保存对应的词表（类似于 model 的 weight）\",\"加载 BERT 的 tokenizer\",\"from transformers import BertTokenizer tokenizer = BertTokenizer.from_pretrained(\\\"bert-base-cased\\\") \",\"也可以使用 AutoTokenizer\",\"from transformers import AutoTokenizer tokenizer = AutoTokenizer.from_pretrained(\\\"bert-base-cased\\\") \",\"然后我们就可以使用 tokenizer 将文本转化成 input_ids\",\"tokenizer(\\\"Using a Transformer network is simple\\\") # result: # {'input_ids': [101, 7993, 170, 11303, 1200, 2443, 1110, 3014, 102], # 'token_type_ids': [0, 0, 0, 0, 0, 0, 0, 0, 0], # 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1]} \",\"保存 tokenizer\",\"tokenizer.save_pretrained(\\\"directory_on_my_computer\\\") \",\"我们将在 Chapter 3 中来讨论 token_type_ids。并在 4.3 中讨论 attention_mask。下面我们先介绍下 input_ids 如何生成，为此我们要查看 tokenizer 的中间方法。\"]},\"295\":{\"h\":\"3.3 编码（Encoding）\",\"t\":[\"将文本转换成数字的过程叫做编码（Encoding）。Encoding 的分为两步：tokenization，然后转化为 input IDs.\",\"第一步是将文本切分为 tokens。实现这一步有不同的规则（见 3.1），所以我们需要用我们所选的模型的名称来实例化 tokenizer，以确保使用和预训练时相同的规则。\",\"第二步是将 tokens 转化为数字表示，所以我们可以用它们构建张量并把张量提供给模型。为了实现这一步骤，tokenizer 需要一个词表（vocabulary），我们在使用 from_pretrained() 来实例化 tokenizer 的时候已经下载好了。同样地，这个词表和预训练时的词表是相同的。\",\"下面分别介绍这两步。注意，在使用过程中直接调用 tokenizer 就可以，下面的分步调用只是为了让大家更清楚 encoding 的两个步骤分别做了什么。\"]},\"296\":{\"h\":\"3.3.1 Tokenization\",\"t\":[\"Tokenization 过程可以使用 tokenizer 的 tokenize() 方法实现：\",\"from transformers import AutoTokenizer tokenizer = AutoTokenizer.from_pretrained(\\\"bert-based-cased\\\") sequence = \\\"Using a Transformer network is simple\\\" tokens = tokenizer.tokenize(sequence) print(tokens) # result: # ['Using', 'a', 'transform', '##er', 'network', 'is', 'simple'] \"]},\"297\":{\"h\":\"3.3.2 将 tokens 转换为 input IDs\",\"t\":[\"该过程通过 convert_tokens_to_ids() 实现。\",\"ids = tokenizer.convert_tokens_to_ids(tokens) print(ids) # result: # [7993, 170, 11303, 1200, 2443, 1110, 3014] \"]},\"298\":{\"h\":\"3.4 解码（Decoding）\",\"t\":[\"解码（decoding）和编码（encoding）的该过程相反，将词表索引转化成字符串，可以使用 decode() 方法来实现\",\"decoded_string = tokenizer.decode([7993, 170, 11303, 1200, 2443, 1110, 3014]) print(decoded_string) # result: # 'Using a Transformer network is simple' \",\"注意，decode() 方不仅将索引转化为了 tokens，还将同一个词中的 tokens 组合在一起了。\"]},\"299\":{\"h\":\"3.5 小结\",\"t\":[\"通过本章的学习，你应该了解 tokenizer 的原子操作：tokenization、将 tokens 转化成 input_ids、将 ids 转化为字符串。\"]},\"300\":{\"h\":\"4. 处理多个序列\",\"t\":[\"在之前的例子中，我们对小长度的序列进行了处理。我们需要思考以下问题：\",\"如何处理多个序列\",\"如何处理不同长度的多个序列\",\"词汇表索引是唯一能够使模型正常工作的输入吗\",\"是否存在序列过长的问题\"]},\"301\":{\"h\":\"4.1 批处理\",\"t\":[\"import torch from transformers import AutoTokenizer, AutoModelForSequenceClassification checkpoint = \\\"distilbert-base-uncased-finetuned-sst-2-english\\\" tokenizer = AutoTokenizer.from_pretrained(checkpoint) model = AutoModelForSequenceClassification.from_pretrained(checkpoint) sequence = \\\"I've been waiting for a HuggingFace course my whole life.\\\" tokens = tokenizer.tokenize(sequence) ids = tokenizer.convert_tokens_to_ids(tokens) input_ids = torch.tensor(ids) # This line will fail. model(input_ids) # IndexError: Dimension out of range (expected to be in range of [-1, 0], but got 1) \",\"为什么会出错呢？🤗 Transformers 模型默认接收多个句子作为输入，但我们只传递来一个序列。\",\"在此之前我们直接调用 tokenizer 时，在顶部加了一个维度：\",\"tokenized_input = tokenizer(sequence, return_tensors=\\\"pt\\\") print(tokenized_inputs[\\\"input_ids\\\"]) # result: # tensor([[ 101, 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, # 2607, 2026, 2878, 2166, 1012, 102]]) \",\"tokenizer 可以将序列转化成特定结构的 tensor，通过 return_tensors 参数设置\",\"sequences = [\\\"I've been waiting for a HuggingFace course my whole life.\\\", \\\"So have I!\\\"] # Returns PyTorch tensors model_inputs = tokenizer(sequences, padding=True, return_tensors=\\\"pt\\\") # Returns TensorFlow tensors model_inputs = tokenizer(sequences, padding=True, return_tensors=\\\"tf\\\") # Returns NumPy arrays model_inputs = tokenizer(sequences, padding=True, return_tensors=\\\"np\\\") \",\"我们对起初的代码进行修改：\",\"import torch from transformers import AutoTokenizer, AutoModelForSequenceClassification checkpoint = \\\"distilbert-base-uncased-finetuned-sst-2-english\\\" tokenizer = AutoTokenizer.from_pretrained(checkpoint) model = AutoModelForSequenceClassification.from_pretrained(checkpoint) sequence = \\\"I've been waiting for a HuggingFace course my whole life.\\\" tokens = tokenizer.tokenize(sequence) ids = tokenizer.convert_tokens_to_ids(tokens) input_ids = torch.tensor([ids]) print(input_ids) # tensor([[ 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012]]) output = model(input_ids) print(output.logits) # tensor([[-2.7276, 2.8789]], grad_fn=<AddmmBackward0>) \",\"Batching 是指一次向模型传递多个句子\",\"batched_ids = [ids, ids] \"]},\"302\":{\"h\":\"4.2 填充（Padding）\",\"t\":[\"当进行批处理时，如果两个序列的长度不一样怎么办（对于 tensor 来说，它必须是矩阵，即每个序列的表示应该是一样长的），为了解决这个问题，我们将填充（pad）输入。\",\"对于短的序列，我们使用 padding token 来填充，使其和最长的序列一样长。\",\"# 我们无法将这个 batch 转化成 tensor bached_id_origin = [ [200, 200, 200], [200, 200] ] padding_id = 100 # 使用 padding batched_ids = [ [200, 200, 200], [200, 200, padding_id] ] \",\"可以在 tokenizer.pad_token_id 中获取 padding token id。\",\"model = AutoModelForSequenceClassification.from_pretrained(checkpoint) sequence1_ids = [[200, 200, 200]] sequence2_ids = [[200, 200]] batched_ids = [ [200, 200, 200], [200, 200, tokenizer.pad_token_id], ] print(model(torch.tensor(sequence1_ids)).logits) print(model(torch.tensor(sequence2_ids)).logits) print(model(torch.tensor(batched_ids)).logits) \",\"tensor([[ 1.5694, -1.3895]], grad_fn=<AddmmBackward0>) tensor([[ 0.5803, -0.4125]], grad_fn=<AddmmBackward0>) tensor([[ 1.5694, -1.3895], [ 1.3374, -1.2163]], grad_fn=<AddmmBackward0>) \",\"观察上面的结果，batched_ids 的结果的第二行与 sequence2_ids 的结果不一样，这显然是不应该的。\",\"造成不一致是因为，Transformer 中的 attention layers 将每个 token 都作为上下文考虑进去了。那么 padding tokens 也会被考虑进去。如果想让两次的结果相同，需要告诉 attention layer 忽略 padding tokens。这要通过 attention mask 来实现。\"]},\"303\":{\"h\":\"4.3 Attention Masks\",\"t\":[\"attention mask 也是 tensor，它和 input IDs tensor 结构相同，元素只有 0 和 1：0 表示该位置是 padding tokens，attention layers 应该忽略它。\",\"我们将 attention_mask 作为参数传递给 model，再观察结果，和 sequence2_ids 的结果一致了：\",\"batched_ids = [ [200, 200, 200], [200, 200, tokenizer.pad_token_id], ] attention_mask = [ [1, 1, 1], [1, 1, 0] ] print(model(torch.tensor(batched_ids), attention_mask=torch.tensor(attention_mask)).logits) # tensor([[ 1.5694, -1.3895], # [ 0.5803, -0.4125]], grad_fn=<AddmmBackward0>) \",\"sequences = [\\\"I've been waiting for a HuggingFace course my whole life.\\\", \\\"So have I!\\\"] model_inputs = tokenizer(sequences) print(model_inputs) # Will pad the sequences up to the maximum sequence length model_inputs = tokenizer(sequences, padding=\\\"longest\\\") print(model_inputs) # Will pad the sequences up to the model max length # (512 for BERT or DistilBERT) model_inputs = tokenizer(sequences, padding=\\\"max_length\\\") print(model_inputs) # Will pad the sequences up to the specified max length model_inputs = tokenizer(sequences, padding=\\\"max_length\\\", max_length=8) print(model_inputs) \",\"输出\",\"{'input_ids': [[101, 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012, 102], [101, 2061, 2031, 1045, 999, 102]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]]} {'input_ids': [[101, 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012, 102], [101, 2061, 2031, 1045, 999, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]} {'input_ids': [[101, 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [101, 2061, 2031, 1045, 999, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]} {'input_ids': [[101, 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012, 102], [101, 2061, 2031, 1045, 999, 102, 0, 0]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0]]} \"]},\"304\":{\"h\":\"4.4 长序列\",\"t\":[\"Transformer 模型能处理的序列长度是有限的，大都在 512 至 1024 个 tokens 之间。如果传入了大于最大限度的序列会崩溃，有两种方式来解决这个问题：\",\"换用支持更长序列的模型。像 Longformer 和 LED 就能处理比较长的序列。\",\"截断序列。\",\"sequence = sequence[:max_sequence_length] \",\"可以使用 tokenizer 进行截断\",\"sequences = [\\\"I've been waiting for a HuggingFace course my whole life.\\\", \\\"So have I!\\\"] # Will truncate the sequences that are longer than the model max length # (512 for BERT or DistilBERT) model_inputs = tokenizer(sequences, truncation=True) print(model_inputs) # Will truncate the sequences that are longer than the specified max length model_inputs = tokenizer(sequences, max_length=8, truncation=True) print(model_inputs) \",\"{'input_ids': [[101, 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012, 102], [101, 2061, 2031, 1045, 999, 102]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]]} {'input_ids': [[101, 1045, 1005, 2310, 2042, 3403, 2005, 102], [101, 2061, 2031, 1045, 999, 102]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]]} \"]},\"305\":{\"h\":\"5. Tokenizer API\",\"t\":[\"我们可以使用 tokenizer 来 padding、truncate 序列，也可以指定 return_tensors 的类型（4 中已有对应示例）。\"]},\"306\":{\"h\":\"5.1 特殊 token\",\"t\":[\"sequence = \\\"I've been waiting for a HuggingFace course my whole life.\\\" model_inputs = tokenizer(sequence) print(model_inputs[\\\"input_ids\\\"]) tokens = tokenizer.tokenize(sequence) ids = tokenizer.convert_tokens_to_ids(tokens) print(ids) \",\"[101, 1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012, 102] [1045, 1005, 2310, 2042, 3403, 2005, 1037, 17662, 12172, 2607, 2026, 2878, 2166, 1012] \",\"首位各添加了一个 token ID，我们将其进行 decode：\",\"print(tokenizer.decode(model_inputs[\\\"input_ids\\\"])) print(tokenizer.decode(ids)) \",\"\\\"[CLS] i've been waiting for a huggingface course my whole life. [SEP]\\\" \\\"i've been waiting for a huggingface course my whole life.\\\" \",\"tokenizer 添加了两个特殊词 “[CLS]” 和 “[SEP]”。这是在预训练时使用的，所以我们在使用该模型做推理的时候也应该在首尾加上它们。不同的模型会使用不同的特殊词，有些模型不用特殊词，有些模型只在句首加特殊词，有些模型只在句尾加特殊词。不论如何，tokenizer 总是知道应该是怎样的，并会为你处理好它。\"]},\"307\":{\"h\":\"5.2 小结\",\"t\":[\"最后让我们看一看如何使用 tokenizer 和 model 来进行 inference，我们使用了 padding（为了批处理），使用了 truncate（为了处理长序列）。\",\"import torch from transformers import AutoTokenizer, AutoModelForSequenceClassification checkpoint = \\\"distilbert-base-uncased-finetuned-sst-2-english\\\" tokenizer = AutoTokenizer.from_pretrained(checkpoint) model = AutoModelForSequenceClassification.from_pretrained(checkpoint) sequences = [\\\"I've been waiting for a HuggingFace course my whole life.\\\", \\\"So have I!\\\"] tokens = tokenizer(sequences, padding=True, truncation=True, return_tensors=\\\"pt\\\") output = model(**tokens) \"]},\"308\":{\"h\":\"总结\",\"t\":[\"Transformer 的基本结构\",\"tokenization pipeline 的组成\",\"如何使用 Transformer model\",\"如何利用 tokenizer 将文本转化为 tensor\",\"使用 tokenizer 和 model 来进行推理\",\"input IDs 的限制，了解 attention masks\",\"尝试了多种可配置的 tokenizer 方法\"]},\"309\":{\"h\":\"3. 微调预训练模型\",\"t\":[\"上一篇文章中介绍了如何使用 tokenizer 和预训练模型来进行推理。接下来我们将介绍如何在自己的数据集上进行微调（Fine-tuning）。在本篇文章中，你将了解到：\",\"如何从 Hub 中准备大型数据集\",\"如何使用 high-level API 微调模型\",\"如何使用自定义训练过程\",\"如何利用 🤗 Accelerate 库在任何分布式设备上轻松运行自定义训练过程\"]},\"310\":{\"h\":\"1. 处理数据\",\"t\":[\"注\",\"如果你不想了解这些细节，或者想先运行数据处理的整体代码，请直接从 2 开始阅读\",\"Hub 中不仅有 models，还有很多 datasets.\",\"我们将使用 MRPC（Microsoft Research Paraphrase Corpus）数据集，它是 GLUE benchmark 的十个数据集之一，该 benchmark 用来衡量 ML 模型在 10 个不同文本分类任务中的性能。MRPC 数据集有 5801 个句子对，每个句子对有一个标签来指明两个句子是否同义。\"]},\"311\":{\"h\":\"1.1 从 Hub 中加载数据集\",\"t\":[\"🤗 Datasets 库提供了简单易用的命令来下载并缓存 Hub 中的数据集\",\"from datasets import load_dataset raw_datasets = load_dataset(\\\"glue\\\", \\\"mrpc\\\") raw_datasets \",\"DatasetDict({ train: Dataset({ features: ['sentence1', 'sentence2', 'label', 'idx'], num_rows: 3668 }) validation: Dataset({ features: ['sentence1', 'sentence2', 'label', 'idx'], num_rows: 408 }) test: Dataset({ features: ['sentence1', 'sentence2', 'label', 'idx'], num_rows: 1725 }) }) \",\"我们得到了一个 DatasetDict 对象，它有 training set, validation set, 和 test set。每一个集合中包含这样几列：sentence1、sentence2、label、idx，以及行数（即数据数量）。\",\"提示\",\"缓存路径为 ~/.cache/huggingface/datasets 你可以通过设置 HF_HOME 环境变量来自定义缓存路径。\",\"你可以先看看数据：\",\"raw_train_dataset = raw_datasets[\\\"train\\\"] raw_train_dataset[0] \",\"{'sentence1': 'Amrozi accused his brother , whom he called \\\" the witness \\\" , of deliberately distorting his evidence .', 'sentence2': 'Referring to him as only \\\" the witness \\\" , Amrozi accused his brother of deliberately distorting his evidence .', 'label': 1, 'idx': 0} \",\"可以通过查看 raw_train_dataset 的 features 来查看 label 的含义。0 是 not_equivalent，1 是 equivalent。\",\"raw_train_dataset.features \",\"{'sentence1': Value(dtype='string', id=None), 'sentence2': Value(dtype='string', id=None), 'label': ClassLabel(names=['not_equivalent', 'equivalent'], id=None), 'idx': Value(dtype='int32', id=None)} \"]},\"312\":{\"h\":\"1.2 数据集预处理\",\"t\":[\"我们需要将文本转化成数字表示，这样模型才能进行处理。\",\"from transformers import AutoTokenizer checkpoint = \\\"bert-base-uncased\\\" tokenizer = AutoTokenizer.from_pretrained(checkpoint) tokenized_sentences_1 = tokenizer(raw_datasets[\\\"train\\\"][\\\"sentence1\\\"]) tokenized_sentences_2 = tokenizer(raw_datasets[\\\"train\\\"][\\\"sentence2\\\"]) \",\"上面的代码确实将文本转化成了数字表示，但是我们需要传入句子对\",\"inputs = tokenizer(\\\"This is the first sentence.\\\", \\\"This is the second one.\\\") print(inputs) print(tokenizer.convert_ids_to_tokens(inputs[\\\"input_ids\\\"])) \",\"{'input_ids': [101, 2023, 2003, 1996, 2034, 6251, 1012, 102, 2023, 2003, 1996, 2117, 2028, 1012, 102], 'token_type_ids': [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]} ['[CLS]', 'this', 'is', 'the', 'first', 'sentence', '.', '[SEP]', 'this', 'is', 'the', 'second', 'one', '.', '[SEP]'] \",\"我们在上一篇文章中介绍了 input_ids 和 attention_mask，没有介绍 token_type_ids。在这个例子中，token_type_ids 表示输入的哪部分是第一个句子，哪一个是第二个句子。\",\"我们可以看到模型需要的输入形式是 [CLS] sentence1 [SEP] sentence2 [SEP]（使用不同的 checkpoints 时该结构会不一样），所以 token_type_ids（使用其他的 checkpoints 时，可能不会有 token_type_ids） 的值是\",\"['[CLS]', 'this', 'is', 'the', 'first', 'sentence', '.', '[SEP]', 'this', 'is', 'the', 'second', 'one', '.', '[SEP]'] [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1] \",\"我们可以为 tokenizer 提供句子对列表\",\"tokenized_dataset = tokenizer( raw_datasets[\\\"train\\\"][\\\"sentence1\\\"], raw_datasets[\\\"train\\\"][\\\"sentence2\\\"], padding=True, truncation=True, ) \",\"这是有用的，但是也有一些不足。tokenization 过程中需要在 RAM 中保存整个数据集，如果你的 RAM 空间不足将会有问题。\",\"我们使用 Dataset.map() 方法来构建数据集，它不会将整个 dataset 都加载到内存中，且结果会被缓存，下次执行时不需要重复计算。首先创建函数对输入进行 tokenization：\",\"def tokenized_function(example): return tokenizer(example[\\\"sentence1\\\"], example[\\\"sentence2\\\"], truncation=True) \",\"我们将 padding 参数去掉了，因为将所有的数据 padding 到最大长度效率不高，更好的做法是当我们构建一个 batch 时 pad 该 batch 中的数据，这样我们只需要将长度填充为该 batch 中的最大长度。\",\"# 设置 batched 为 True，使得同时对数据集中的多个元素同时做处理，加速了预处理 tokenized_datasets = raw_datasets.map(tokenized_function, batched=True) tokenized_datasets \",\"DatasetDict({ train: Dataset({ features: ['sentence1', 'sentence2', 'label', 'idx', 'input_ids', 'token_type_ids', 'attention_mask'], num_rows: 3668 }) validation: Dataset({ features: ['sentence1', 'sentence2', 'label', 'idx', 'input_ids', 'token_type_ids', 'attention_mask'], num_rows: 408 }) test: Dataset({ features: ['sentence1', 'sentence2', 'label', 'idx', 'input_ids', 'token_type_ids', 'attention_mask'], num_rows: 1725 }) }) \",\"🤗 Datasets 库用 map() 函数的处理方式是想数据集中添加新的字段，新的字段即预处理函数返回的字典中的每个键。\",\"可以通过传递 num_proc 参数给 map() 以启动多进程。🤗 Tokenizers 库已经使用了多线程，于是这里我们没有启用多进程。\",\"最后一项任务就是在每个 batch 进行 padding，即 dynamic padding.\"]},\"313\":{\"h\":\"1.3 动态填充（Dynamic Padding）\",\"t\":[\"在批处理中这将数据整理到一个 batch 的函数称为 collate function. 它是构建 DataLoader 时的一个参数，默认是一个函数，它把你的数据集转化为 Pytorch tensors，并将它们拼接起来。\",\"🤗 Transformers 库通过 DataCollatorWithPadding 提供了 collate function。它接收一个 tokenizer (以获取 padding token、确定是在输入的左侧还是右侧进行 padding)。\",\"from transformers import DataCollatorWithPadding data_collator = DataCollatorWithPadding(tokenizer=tokenizer) \",\"我们可以验证一下 data_collator 是否能在 batch 上进行正确的 padding\",\"samples = tokenized_datasets[\\\"train\\\"][:8] samples = {k: v for k, v in samples.items() if k not in [\\\"idx\\\", \\\"sentence1\\\", \\\"sentence2\\\"]} [len(x) for x in samples[\\\"input_ids\\\"]] # [50, 59, 47, 67, 59, 50, 62, 32] \",\"我们取了 train set 中前 8 个作为一个 batch，去掉了 idx、sentence1、sentence2 字段。\",\"input_ids 的最大长度为 67，则这个 batch 经过 padding 之后将会被填充到 67\",\"batch = data_collator(samples) {k: v.shape for k, v in batch.items()} \",\"{'attention_mask': torch.Size([8, 67]), 'input_ids': torch.Size([8, 67]), 'token_type_ids': torch.Size([8, 67]), 'labels': torch.Size([8])} \",\"现在，我们已经将原数数据转化成模型可处理的 batches，下面我们要进行微调了。\"]},\"314\":{\"h\":\"2. 使用 Trainer API 进行微调\",\"t\":[\"🤗 Transformers 提供了 Trainer 类来微调各种预训练模型。最难的步骤大概是为 Trainer.train() 配置运行环境。\",\"我们快速回顾一下上一部分的预处理：\",\"from datasets import load_dataset from transformers import AutoTokenizer, DataCollatorWithPadding raw_dataset = load_dataset(\\\"glue\\\", \\\"mrpc\\\") checkpoint = \\\"bert-base-uncased\\\" tokenizer = AutoTokenizer.from_pretrained(checkpoint) def tokenize_function(example): return tokenizer(example[\\\"sentence1\\\"], example[\\\"sentence2\\\"], truncation=True) tokenized_datasets = raw_dataset.map(tokenize_function, batched=True) data_collator = DataCollatorWithPadding(tokenizer=tokenizer) \"]},\"315\":{\"h\":\"2.1 训练（Training）\",\"t\":[\"第一步，在我们定义 Trainer 之前我们要先定义 TrainingArguments 类，它包含 Trainer 训练和评估时所用的全部超参。必须提供的唯一参数是训练模型的存储路径，也是 checkpoints 的路径。其余的参数都可以设置为默认值，对于基础的微调来说表现得也很不错。\",\"from transformers import TrainingArguments training_args = TrainingArguments(\\\"test-trainer\\\") \",\"提示\",\"如果你想在训练过程中自动上传你的模型到 Hub 上，可以在 TrainingArguments 中传递 push_to_hub=True。我们将在 Chapter 4 中详细介绍。\",\"🤗 官方示例 accelerate 版本错误解决方案\",\"在 CoLab 上运行 🤗 官方示例时，如果遇到下面的错误，\",\"ImportError: Using the `Trainer` with `PyTorch` requires `accelerate>=0.20.1`: Please run `pip install transformers[torch]` or `pip install accelerate -U` \",\"可以尝试下面方法，首先更新 accelerate 和 transformers\",\"!pip install -U accelerate !pip install -U transformers \",\"然后 Restart runtime\",\"第二步，定义模型。\",\"from transformers import AutoModelForSequenceClassification model = AutoModelForSequenceClassification.from_pretrained(checkpoint, num_labels=2) \",\"在实例化 model 时你会看到 warning，这是因为 BERT 没有对句子对进行过预训练，于是预训练模型的 head 被替换成了做 sequence classification 的 head。\",\"现在我们可以定义 Trainer 了，将我们之前构造的对象（model, training_args, training & validation datasets, data_collator 以及 tokenizer）作为参数传递。\",\"from transformers import Trainer trainer = Trainer( model, training_args, train_dataset=tokenized_datasets[\\\"train\\\"], eval_dataset=tokenized_datasets[\\\"validation\\\"], data_collator=data_collator, tokenizer=tokenizer, ) \",\"注意\",\"当在 Trainer 中传递 tokenizer 时，Trainer 使用的默认 data_collator 和我们之前使用 DataCollatorWithPadding 定义的是一样的。所以我们可以不传递 data_collator。\",\"调用 Trainer 的 train() 方法，我们就可以在自己的数据集上微调模型了。\",\"trainer.train() \",\"运行上面代码后，我们将开始微调，每 500 steps 会输出一次 training loss。但是它不会告诉你这个模型表现得怎么样，因为：\",\"我们没有配置 Trainer 让它在训练时进行评估。想要进行评估可以设置 evaluation_strategy 为 “steps”（每eval_steps 进行评估） 或 “epoch”（在每个 epoch 之后进行评估）。\",\"我们没有为 Trainer 提供评估的方法。我们可以传递通过 compute_metrics() 函数提供计算模型性能的方法。没有提供该方法的话，评估时会直接输出 loss，并不直观。\"]},\"316\":{\"h\":\"2.2 评估（Evaluation）\",\"t\":[\"我们来看一下如何构建 compute_metrics() 函数并在训练时使用它。\",\"可以使用 Trainer.predict() 方法进行预测。\",\"predictions = trainer.predict(tokenized_datasets[\\\"validation\\\"]) print(predictions.predictions.shape, predictions.label_ids.shape) # (408, 2) (408,) import numpy as np # predictions.predictions 的输出是 logits，为了获得预测结果，可以将 logits 的最大值的取出 preds = np.argmax(predictions.predictions, axis=-1) \",\"Trainer.predict() 的输出是一个命名元祖，有三个字段：predictions, label_ids, 和 metrics。metrics 字段包含 loss、时间 metrics（预测用了多长时间，总计时长、平均时长）。如果我们自定义了 compute_metrics() 函数并传递给了 Trainer，那么该字段还会包括 compute_metrics() 函数返回的 metrics。\",\"构建 compute_metrics() 需要用到 🤗 Evaluate 库。我们可以使用 evaluate.load() 函数加载与 MRPC 数据集有关的 metrics，它返回的对象有 compute() 方法，可以用来进行 metric calculation。\",\"import evaluate metric = evaluate.load(\\\"glue\\\", \\\"mrpc\\\") metric.compute(predictions=preds, references=predictions.label_ids) \",\"{'accuracy': 0.8578431372549019, 'f1': 0.8996539792387542} \",\"我们最终得到了 accuracy 和 f1。这是用来衡量 MRPC 的 metrics。\",\"现在我们可以定义 compute_metrics() 函数了：\",\"def compute_metrics(eval_preds): metric = evaluate.load(\\\"glue\\\", \\\"mrpc\\\") logits, labels = eval_preds predictions = np.argmax(logits, axis=-1) return metric.compute(predictions=predictions, references=labels) \",\"如果想要在每个 epoch 之后输出这些 metrics，我们可以在 Trainer 中传递 compute_metrics() 函数\",\"training_args = TrainingArguments(\\\"test-trainer\\\", evaluation_strategy=\\\"epoch\\\") model = AutoModelForSequenceClassification.from_pretrained(checkpoint, num_labels=2) trainer = Trainer( model, training_args, train_dataset=tokenized_datasets[\\\"train\\\"], eval_dataset=tokenized_datasets[\\\"validation\\\"], data_collator=data_collator, tokenizer=tokenizer, compute_metrics=compute_metrics, ) \",\"这次我们再执行 trainer.train() 时就会在每个 epoch 结束时输出 validation loss 和 metrics。\",\"Trainer 在多 GPU 和多 TPU 上开箱即用，且提供了很多配置项，比如通过配置 fp16=True 来启动 mixed-precision 训练。我们会在第 10 章介绍这些配置项。\"]},\"317\":{\"h\":\"3. 使用 Pytorch 训练\",\"t\":[\"在 2 中我们介绍了如何使用 Trainer 类进行微调。现在我们不使用 Trainer 来达到同样的目的。\",\"数据预处理的方式和之前介绍的一样，我们假定你已经完成了这步。\",\"数据预处理\",\"from datasets import load_dataset from transformers import AutoTokenizer, DataCollatorWithPadding raw_datasets = load_dataset(\\\"glue\\\", \\\"mrpc\\\") checkpoint = \\\"bert-base-uncased\\\" tokenizer = AutoTokenizer.from_pretrained(checkpoint) def tokenize_function(example): return tokenizer(example[\\\"sentence1\\\"], example[\\\"sentence2\\\"], truncation=True) tokenized_datasets = raw_datasets.map(tokenize_function, batched=True) data_collator = DataCollatorWithPadding(tokenizer=tokenizer) \"]},\"318\":{\"h\":\"3.1 准备\",\"t\":[\"之前我们直接将 tokenized_datasets 传给 Trainer 让它自己处理，现在我们需要手动处理：\",\"tokenized_datasets 中的 sentence1, sentence2, idx 不是 model 需要的输入，需要删掉\",\"将列 label 改为 labels\",\"将 dataset 的格式设为 Pytorch tensor\",\"对应的代码：\",\"tokenized_datasets = tokenized_datasets.remove_columns([\\\"sentence1\\\", \\\"sentence2\\\", \\\"idx\\\"]) tokenized_datasets = tokenized_datasets.rename_column(\\\"label\\\", \\\"labels\\\") tokenized_datasets.set_format(\\\"torch\\\") tokenized_datasets[\\\"train\\\"].column_names \",\"['labels', 'input_ids', 'token_type_ids', 'attention_mask'] \",\"接下来在定义 training loop 之前，还要先定义几个对象：\"]},\"319\":{\"h\":\"3.1.1 数据加载器（dataloader）：用于迭代批次\",\"t\":[\"from torch.utils.data import DataLoader train_dataloader = DataLoader( tokenized_datasets[\\\"train\\\"], shuffle=True, batch_size=8, collate_fn=data_collator ) eval_dataloader = DataLoader( tokenized_datasets[\\\"validation\\\"], batch_size=8, collate_fn=data_collator ) \",\"快速检验下是否有错\",\"for batch in train_dataloader: break {k: v.shape for k, v in batch.items()} \",\"{'labels': torch.Size([8]), 'input_ids': torch.Size([8, 76]), 'token_type_ids': torch.Size([8, 76]), 'attention_mask': torch.Size([8, 76])} \",\"至此，数据预处理完成了。\"]},\"320\":{\"h\":\"3.1.2 model\",\"t\":[\"from transformers import AutoModelForSequenceClassification model = AutoModelForSequenceClassification.from_pretrained(checkpoint, num_labels=2) \",\"快速检验下是否有错\",\"我们将上面检验 dataloader 是否出错时使用的 batch 传递给 model\",\"outputs = model(**batch) print(outputs.loss, outputs.logits.shape) \",\"tensor(0.6617, grad_fn=<NllLossBackward0>) torch.Size([8, 2]) \"]},\"321\":{\"h\":\"3.1.3 优化器（optimizer）\",\"t\":[\"我们使用 Trainer 的默认 optimizer：AdamW，它和 Adam 类似，主要差异在于他们的权重衰减正则化（weight decay regularization）不同。\",\"from transformers import AdamW optimizer = AdamW(model.parameters(), lr=5e-5) \"]},\"322\":{\"h\":\"3.1.4 学习率调度器（learning rate scheduler）\",\"t\":[\"默认的 learning rate scheduler 实现的是简单的从 5e-5 到 0 的线性衰减。为了定义学习率调度器，我们需要知道要进行多少 training steps，即 epoch 乘 training batches（training dataloader 的长度）。\",\"from transformers import get_scheduler # Trainer 默认训练 3 轮 num_epochs = 3 num_training_steps = num_epochs * len(train_dataloader) lr_scheduler = get_scheduler( \\\"linear\\\", optimizer=optimizer, num_warmup_steps=0, num_training_steps=num_training_steps, ) print(num_training_steps) # 1377 \"]},\"323\":{\"h\":\"3.2 Training Loop\",\"t\":[\"我们可以设置 device 为 gpu 以让 model在 GPU 上运行：\",\"import torch device = torch.device(\\\"cuda\\\") if torch.cuda.is_available() else torch.device(\\\"cpu\\\") model.to(device) \",\"现在可以开始训练啦！为了让我们知道训练的进度，可以使用进度条（tqdm 库）。\",\"from tqdm.auto import tqdm progress_bar = tqdm(range(num_training_steps)) model.train() for epoch in range(number_epochs): for batch in train_dataloader: batch = {k: v.to(device) for k, v in batch.items()} outputs = model(**batch) loss = outputs.loss loss.backward() optimizer.step() lr_scheduler.step() optimizer.zero_grad() progress_bar.update(1) \",\"下面我们添加一些输出，以在训练过程中查看训练效果\"]},\"324\":{\"h\":\"3.3 Evaluation Loop\",\"t\":[\"我们仍然使用 🤗 Evaluate 库提供的 metric。之前我们用过 metric.compute() 方法了。在 prediction loop 中使用 add_batch() ，metrics 会跟着 batches 累积，当我们将全部 batch 的结果累积后就可以使用 metric.compute() 得到最后的结果。\",\"import evaluate metric = evaluate.load(\\\"glue\\\", \\\"mrpc\\\") model.eval() for batch in eval_dataloader: batch = {k: v.to(device) for k, v in batch.items()} with torch.no_grad(): outputs = model(**batch) logits = outputs.logits predictions = torch.argmax(logits, dim=-1) metric.add_batch(predictions=predictions, references=batch[\\\"labels\\\"]) metric.compute() \",\"{'accuracy': 0.8431372549019608, 'f1': 0.8907849829351535} \"]},\"325\":{\"h\":\"3.4 使用 🤗 Accelerate 进行加速\",\"t\":[\"使用 🤗 Accelerate 我们可以在多个 GPU 或 TPU 上进行分布式训练。\",\"我们在之前的代码上进行简单修改即可完成：\",\"+ from accelerate import Accelerator from transformers import AdamW, AutoModelForSequenceClassification, get_scheduler + accelerator = Accelerator() model = AutoModelForSequenceClassification.from_pretrained(checkpoint, num_labels=2) optimizer = AdamW(model.parameters(), lr=3e-5) - device = torch.device(\\\"cuda\\\") if torch.cuda.is_available() else torch.device(\\\"cpu\\\") - model.to(device) + train_dataloader, eval_dataloader, model, optimizer = accelerator.prepare( + train_dataloader, eval_dataloader, model, optimizer + ) num_epochs = 3 num_training_steps = num_epochs * len(train_dataloader) lr_scheduler = get_scheduler( \\\"linear\\\", optimizer=optimizer, num_warmup_steps=0, num_training_steps=num_training_steps, ) progress_bar = tqdm(range(num_training_steps)) model.train() for epoch in range(num_epochs): for batch in train_dataloader: - batch = {k: v.to(device) for k, v in batch.items()} outputs = model(**batch) loss = outputs.loss - loss.backward() + accelerator.backward(loss) optimizer.step() lr_scheduler.step() optimizer.zero_grad() progress_bar.update(1) \",\"🤗 Accelerate 会帮你处理设备的问题，所以你可以删除 device 那段代码（你也可以使用 accelerator.device 来代替 device）。\",\"提示\",\"为了充分利用集群 TPU 的加速，建议把所有的数据填充到固定的长度（配置 tokenizer 的 padding=\\\"max_length\\\"）。\",\"如果你要复制粘贴分布式训练的代码，请看这里\",\"from accelerate import Accelerator from transformers import AdamW, AutoModelForSequenceClassification, get_scheduler accelerator = Accelerator() model = AutoModelForSequenceClassification.from_pretrained(checkpoint, num_labels=2) optimizer = AdamW(model.parameters(), lr=3e-5) train_dl, eval_dl, model, optimizer = accelerator.prepare( train_dataloader, eval_dataloader, model, optimizer ) num_epochs = 3 num_training_steps = num_epochs * len(train_dl) lr_scheduler = get_scheduler( \\\"linear\\\", optimizer=optimizer, num_warmup_steps=0, num_training_steps=num_training_steps, ) progress_bar = tqdm(range(num_training_steps)) model.train() for epoch in range(num_epochs): for batch in train_dl: outputs = model(**batch) loss = outputs.loss accelerator.backward(loss) optimizer.step() lr_scheduler.step() optimizer.zero_grad() progress_bar.update(1) \",\"将代码存到 train.py 中，该脚本可以在任何分布式设备上运行。\",\"accelerate config \",\"回答弹出的问题，然后它会将你的答案写入配置文件中。然后你可以使用下面的命令使用该配置文件启动分布式训练。\",\"accelerate launch train.py \",\"如果你想在 Notebook 中尝试，你把代码贴到函数下面（比如 training_function() ），然后在 cell 中执行：\",\"from accelerate import notebook_launcher notebook_launcher(training_function) \",\"更多示例\",\"你可以在 🤗 Accelerate repo 中查看更多示例。\"]},\"326\":{\"h\":\"总结\",\"t\":[\"在前两章中你了解了 model 和 tokenizer，现在你学会了如何微调。回顾本章：\",\"在 Hub 中查看并下载 datasets\",\"学会了如何加载、预处理数据集，包括动态填充和 collator\",\"实现微调以及评估\",\"较底层实现 training loop\",\"使用 🤗 Accelerate 以在 GPU 集群或 TPU 集群上进行训练\"]},\"327\":{\"h\":\"4. 共享 Models 和 Tokenizers\",\"t\":[\"Hugging Face Hub 是主网站，我们可以在里面找到各种最新的模型和数据集，也可以上传自己的模型和数据集。\",\"其中的模型不局限于 🤗 Transformers 或者 NLP。你可以自己去探索。\",\"模型都用 Git 进行托管，允许版本控制和重现。另外，在 Hub 上共享模型会自动为该模型部署托管的推理 API。\"]},\"328\":{\"h\":\"1. 使用预训练模型\",\"t\":[\"如我们要使用 camembert-base checkpoints.\",\"提示\",\"使用预训练模型时，可以在 model card 中查看它是如何训练的，在哪些数据集上训练的，局限性和 bias 。\"]},\"329\":{\"h\":\"2. 共享预训练模型\",\"t\":[\"创建模型仓库的三种方法：\",\"使用 push_to_hub API\",\"使用 huggingface_hub python 库\",\"在 web 页面上创建\",\"创建好仓库后，就可以通过 git 或者 git-lfs 上传文件了。\"]},\"330\":{\"h\":\"2.1 创建模型仓库\"},\"331\":{\"h\":\"2.1.1 使用 push_to_hub API\",\"t\":[\"你需要身份令牌一遍 huggingface_hub 知道你的权限。\",\"如果你使用 Trainer API 训练模型，将模型上传至 Hub 最简单的方式就是在定义 TrainerArguments 时配置 push_to_hub=True\",\"from transformers import TrainerArguments training_args = TrainerArguments( \\\"bert-finetuned-mrpc\\\", save_strategy=\\\"epoch\\\", push_to_hub=True ) \",\"当你调用 trainer.train() 时，Trainer 会在每次保存 model 时（按照上面的配置，是每个 epoch）将你的 model 上传到 Hub 中对应的仓库上。仓库名称为你选择的输出路径（如上面的 bert-finetuned-mrpc），你也可以用 hub_model_id=\\\"a_different_name\\\" 来设置不同的名称。如果要将 model 上传到你所在的组织下，你可以使用 hub_model_id=\\\"my_organization/mu_repo_name\\\"。\",\"训练结束后，使用 trainer.push_to_hub() 上传最后一版 model。它会生成 model card。\",\"在较低层的实现中，我们可以直接通过 models、tokenizers、configuration 对象的 push_to_hub() 方法来访问 Model Hub。这种方式既可以创建仓库，又能将 model 和 tokenizer 文件直接推到仓库中。\",\"首先创建 model 和 tokenizer。\",\"from transformers import AutoModelForMaskedLM, AutoTokenizer checkpoint = \\\"camembert-base\\\" model = AutoModelForMaskedLM.from_pretrained(checkpoint) tokenizer = AutoTokenizer.from_pretrained(checkpoint) \",\"你可以训练模型、对模型进行微调、向 tokenizer 中增加 tokens。做完你想做的事情时候，你可以使用 push_to_hub() 将 model 推到仓库中\",\"model.push_to_hub(\\\"dummy-model\\\") \",\"这将会创建名为 dummy-model 的仓库，其中会填上你的 model 文件。\",\"同样，对 tokenizer 也可做同样的操作。现在你的仓库中有了全部所需的文件。\",\"tokenizer.push_to_hub(\\\"dummy-model\\\") \",\"如果你想将仓库放到组织下：\",\"tokenizer.push_to_hub(\\\"dummy-model\\\", organization=\\\"huggingface\\\") \",\"如果你想使用某个特定的 Hugging Face token：\",\"tokenizer.push_to_hub(\\\"dummy-model\\\", organization=\\\"huggingface\\\", use_auth_token=\\\"<TOKEN>\\\") \"]},\"332\":{\"h\":\"2.1.2 使用 huggingface_hub python 库\",\"t\":[\"你需要使用 CLI 的登录命令\",\"huggingface-cli login \",\"huggingface_hub 库提供了很多方法和类。下面是和仓库创建、删除等有关的方法\",\"from huggingface_hub import ( # User management login, logout, whoami, # Repository creation and management create_repo, delete_repo, update_repo_visibility, # And some methods to retrieve/change information about the content list_models, list_datasets, list_metrics, list_repo_files, upload_file, delete_file, ) \",\"# 创建仓库 from huggingface_hub import create_repo create_repo(\\\"dummy-model\\\") # 可以指定 organization # create_repo(\\\"dummy-model\\\", organization=\\\"huggingface\\\") \",\"除了可以指定 organization，还有一些参数：\",\"private: 是否对其他人可见\",\"token: 是否想用给定的 token 覆盖缓存中的 token\",\"repo_type: 是都要创建 dataset 或 space（而非创建 model）。接受的值可以是 “dataset” 或 “space”\"]},\"333\":{\"h\":\"2.1.3 使用 web 页面\",\"t\":[\"这里不展开介绍，按照页面提示进行即可。\"]},\"334\":{\"h\":\"2.2 上传 model files\",\"t\":[\"Hugging Face Hub 的文件管理系统基于 git（对于 regular files）和 git-lfs（对于大文件，large file storage）。\",\"下面我们将介绍三种上传文件到 Hub 的方法。\"]},\"335\":{\"h\":\"2.3.1 upload_file 方法\",\"t\":[\"使用 upload_file() 不需要 git 或 git-lfs，它使用 http post 请求将文件直接传到 🤗 Hub。但是它没有办法处理 5GB 以上的文件。\",\"from huggingface_hub import upload_file upload_file( \\\"<path_to_file>/config.json\\\", path_in_repo=\\\"config.json\\\", repo_id=\\\"<namespace>/dummy-model\\\", ) \",\"还有一些其他的参数：\",\"token\",\"repo_type\"]},\"336\":{\"h\":\"2.3.2 Repository 类\",\"t\":[\"Repository 类以于 git 的方式管理本地仓库。使用该类需要安装 git 和 git-lfs\",\"安装 git-lfs\",\"参考 Git Large File Storage\",\":::\",\"我们使用刚刚建好的仓库。首先我们克隆远端仓库：\",\"from huggingface_hub import Repository repo = Repository(\\\"<path_to_dummy_folder>\\\", clone_from=\\\"<namespace>/dummy-model\\\") \",\"这将在本地创建文件夹<path_to_dummy_folder>。该文件夹中包含 .gitattributes 文件。\",\"我们还会使用一些传统的 git 方法，参考文档：\",\"repo.git_pull() repo.git_add() repo.git_commit() repo.git_push() repo.git_tag() \",\"现在我们有想要推到 Hub 上的 model 和 tokenizer，并成功 clone 了仓库。\",\"首先，确保我们本地 clone 的版本是最新的：\",\"repo.git_pull() \",\"然后我们就可以保存 model 和 tokenizer files 了：\",\"model.save_pretrained(\\\"<path_to_dummy_folder>\\\") tokenizer.save_pretrained(\\\"<path_to_dummy_folder>\\\") \",\"目前，<path_to_dummy_folder> 中包含了全部的 model 和 tokenizer files。接下来可以使用传统的 git 工作流将他们推到远端 hub：\",\"repo.git_add() repo.git_commit(\\\"Add model and tokenizer files\\\") repo.git_push() \"]},\"337\":{\"h\":\"2.3.3 git-based 方法\",\"t\":[\"直接使用 git 和 git-lfs 来上传文件。请确保安装了 git 和 git-lfs。\",\"首先，初始化 git-lfs\",\"git lfs install \",\"接下来，第一步是克隆 model 仓库：\",\"git clone https://huggingface.co/<namespace>/<your-model-id> \",\"例如，我的 username 是 hanzhuo，使用的 model name 是 dummy-model\",\"git clone https://huggingface.co/hanzhuo/dummy-model \",\"现在我的工作路径中有一个 dummy-model 文件夹，\",\"cd dummy-model && ls \",\"可以使用 git 来添加小文件，对于大文件，需要使用 git-lfs。\",\"回顾一下之前获得 model 和 tokenizer 的方式：\",\"from transformers import AutoModelForMaskedLM, AutoTokenizer checkpoint = \\\"camembert-base\\\" model = AutoModelForMaskedLM.from_pretrained(checkpoint) tokenizer = AutoTokenizer.from_pretrained(checkpoint) # Do whatever with the model, train it, fine-tune it... model.save_pretrained(\\\"<path_to_dummy_folder>\\\") tokenizer.save_pretrained(\\\"<path_to_dummy_folder>\\\") \",\"我们看一下 dummy-model 下的文件目录：\",\"config.json pytorch_model.bin README.md sentencepiece.bpe.model special_tokens_map.json tokenizer_config.json tokenizer.json \",\"如果使用 ls -lh 命令，可以发现 pytorch_model.bin 的大小超过了 400MB。\",\"接下来使用常规的 git 命令：\",\"git add . git status \",\"On branch main Your branch is up to date with 'origin/main'. Changes to be committed: (use \\\"git restore --staged <file>...\\\" to unstage) modified: .gitattributes new file: config.json new file: pytorch_model.bin new file: sentencepiece.bpe.model new file: special_tokens_map.json new file: tokenizer.json new file: tokenizer_config.json \",\"再看一下 git-lfs ：\",\"git lfs status \",\"On branch main Objects to be pushed to origin/main: Objects to be committed: config.json (Git: bc20ff2) pytorch_model.bin (LFS: 35686c2) sentencepiece.bpe.model (LFS: 988bc5a) special_tokens_map.json (Git: cb23931) tokenizer.json (Git: 851ff3e) tokenizer_config.json (Git: f0f7783) Objects not staged for commit: \",\"可以观察到 pytorch_model.bin 和 sentencepiece.bpe.model 使用的 LFS，其余的都是 Git。\",\"最后，commit 并 push\",\"git commit -m \\\"First model version\\\" git push \"]},\"338\":{\"h\":\"3. 建立 model card\",\"t\":[\"建立 model card 是通过 README.md 来完成的。为了理解 model card 的重要作用，你可以阅读 Model Cards for Model Reporting。\",\"model card 通常开篇为简短的概述说明其用途，然后是以下几部分：\",\"Model description 描述\",\"Intended uses & limitations 预期用途和限制\",\"How to use 如何使用\",\"Limitations and bias 局限性和偏见\",\"Training data 训练数据\",\"Training procedure 训练过程\",\"Variable & metrics 评估指标\",\"Evaluation results 评估结果\"]},\"339\":{\"h\":\"Model card metadata\",\"t\":[\"在 Hugging Face Hub 中，有的 model 属于特定的类型，你可以通过 tasks, languages, libraries 等等来筛选。\",\"请查看 camembert-base model card，你能看到在 model card header 中有如下信息：\",\"--- language: fr license: mit datasets: - oscar --- \",\"具体配置可查看 full model card specification。\"]},\"340\":{\"h\":\"5. 🤗 Datasets 库\",\"t\":[\"在第三章中我们初步体验了 🤗 Datasets 库，了解 fine-tune 的基本步骤：\",\"从 Hugging Face Hub 上加载数据集\",\"使用 Dataset.map() 预处理数据\",\"加载并计算 metrics\",\"在本章内容中，我们将深入了解 🤗 Datasets 库，你将能够回答以下问题：\",\"数据集不在 hub 上应该怎么做\",\"如何对数据集进行切片（如果你确实需要使用 Pandas 怎么办）\",\"如果你的数据集很大，会撑爆你的 RAM 应该怎么办\",\"Memory Mapping、Apache Arrow 是什么\",\"如何创建自己的数据集并将其推至 Hub\"]},\"341\":{\"h\":\"1. 处理不在 Hugging Face Hub 上的数据集\",\"t\":[\"🤗 Datasets 提供了加载本地和远程数据集的方法，支持下列格式：\",\"Data format\",\"Loading script\",\"Example\",\"CSV & TSV\",\"csv\",\"load_dataset(\\\"csv\\\", data_files=\\\"my_file.csv\\\")\",\"Text files\",\"text\",\"load_dataset(\\\"text\\\", data_files=\\\"my_file.txt\\\")\",\"JSON & JSON Lines\",\"json\",\"load_dataset(\\\"json\\\", data_files=\\\"my_file.jsonl\\\")\",\"Pickled DataFrames\",\"pandas\",\"load_dataset(\\\"pandas\\\", data_files=\\\"my_dataframe.pkl\\\")\"]},\"342\":{\"h\":\"1.1 加载本地数据集\",\"t\":[\"我们使用 SQuAD-it dataset，它是大规模意大利语问答数据集。\",\"Ubuntu 下载并解压\",\"!wget https://github.com/crux82/squad-it/raw/master/SQuAD_it-train.json.gz !wget https://github.com/crux82/squad-it/raw/master/SQuAD_it-test.json.gz !gzip -dkv SQuAD_it-*.json.gz \",\"from datasets import load_dataset squad_it_dataset = load_dataset(\\\"json\\\", data_files=\\\"SQuAD_it-train.json\\\", field=\\\"data\\\") squad_it_dataset \",\"DatasetDict({ train: Dataset({ features: ['paragraphs', 'title'], num_rows: 442 }) }) \",\"加载本地文件会创建一个带有 train 的 DatasetDict 对象。我们可以通过下标查看几个示例如：squad_it_dataset[\\\"train\\\"][0]。\",\"如何获得同时有 train 和 test 的 DatasetDict 对象呢？\",\"data_files = {\\\"train\\\": \\\"SQuAD_it-train.json\\\", \\\"test\\\": \\\"SQuAD_it-test.json\\\"} squad_it_dataset = load_dataset(\\\"json\\\", data_files=data_files, field=\\\"data\\\") squad_it_dataset \",\"DatasetDict({ train: Dataset({ features: ['paragraphs', 'title'], num_rows: 442 }) test: Dataset({ features: ['paragraphs', 'title'], num_rows: 48 }) }) \",\"提示\",\"data_files 参数很灵活，可以是单个文件路径、文件路径 list、映射名称路径的字典，还可以使用 Unix shell 的匹配规则选择多有满足规则的文件（如 data_files=\\\"*.json\\\" 匹配所有的 json 文件）。\",\"🤗 Datasets 的 loading script 支持自动解压，所以我们可以跳过自己解压的过程，直接使用下面的代码加载数据：\",\"data_files = {\\\"train\\\": \\\"SQuAD_it-train.json.gz\\\", \\\"test\\\": \\\"SQuAD_it-test.json.gz\\\"} squad_it_dataset = load_dataset(\\\"json\\\", data_files=data_files, field=\\\"data\\\") \"]},\"343\":{\"h\":\"1.2 加载远程数据集\",\"t\":[\"将 data_files 设置为 url 即可。\",\"url = \\\"https://github.com/crux82/squad-it/raw/master/\\\" data_files = { \\\"train\\\": url + \\\"SQuAD_it-train.json.gz\\\", \\\"test\\\": url + \\\"SQuAD_it-test.json.gz\\\", } squad_it_dataset = load_dataset(\\\"json\\\", data_files=data_files, field=\\\"data\\\") \"]},\"344\":{\"h\":\"2. 切片\"},\"345\":{\"h\":\"2.1 Slicing and dicing 数据\",\"t\":[\"和 Pandas 类似，🤗 Datasets 也提供了一些函数处理 Dataset 和 DatasetDict 对象。在第三章中我们介绍了 Dataset.map()，本章我们将介绍其他函数。\",\"接下来我们使用的数据集为 Drug Review Dataset。\",\"TSV 是 CSV 的变体，它和 CSV 的区别在于 CSV 用逗号作为分割符，而 TSV 使用制表符作为分隔符。所以我们可以使用 csv 加载的方式并指定 delimiter。\",\"from datasets import load_dataset data_files = {\\\"train\\\": \\\"drugLibTrain_raw.tsv\\\", \\\"test\\\": \\\"drugLibTest_raw.tsv\\\"} drug_dataset = load_dataset(\\\"csv\\\", data_files=data_files, delimiter=\\\"\\\\t\\\") \",\"我们可以抽取一些样本来观察，以对数据有一个直观的认识。可以使用 Dataset.shuffle() 和 Dataset.select() 来随机抽取样本。\",\"drug_sample = drug_dataset[\\\"train\\\"].shuffle().select(range(1000)) # 选取前面几个样本 drug_sample[:3] \",\"运行结果\",\"{'Unnamed: 0': [1468, 3422, 1444], 'urlDrugName': ['cymbalta', 'tazorac', 'tirosint'], 'rating': [9, 5, 4], 'effectiveness': ['Highly Effective', 'Moderately Effective', 'Moderately Effective'], 'sideEffects': ['No Side Effects', 'Severe Side Effects', 'Moderate Side Effects'], 'condition': ['sever depression', 'acne', 'thyroid/total thyroidectomy due to cancer'], 'benefitsReview': [\\\"This medication saved my life. The depression had gotten so sever that I was unable to function properly. It has made me feel like a 'real' person again. It has not done much for the anxiety, panic, or OCD. The Xanax helps with that area. I will be going to the psychiatrist in 2 weeks for the anxiety, panic, and OCD. Hoping to stay on the Cymbalta. I was on Lexapro 30mg from 2000-2006. Then switched to Celexa (cost reasons) 60mg from 2007-2008. The Celexa just about costed me my life. It was ineffective for the Depression. Try not to take Celexa for cost reasons, Lexapro shows much more promise in its effectiveness.\\\", 'It exfoliated my skin.', 'I started taking Tirosint 125mcg 6 weeks ago due to a gluten and caseine allergy. I previously was taking synthroid however, the company couldnt verify the inactive ingredients. So to avoid gluten, caseine, and some really nasty anxiety symptms I switched to the Tirosint. \\\\r\\\\r\\\\n\\\\r\\\\r\\\\nThe anxiety symptoms subsided from 1 attack per day to none. This was great!, but then new symptoms started after three weeks.'], 'sideEffectsReview': ['Weight gain, which is to be expected when you \\\"feel better\\\"', 'My skin became extremely dry, irritated, red, and would peel.', 'I felt dperessed, tired and very sore. My finger joints hurt so bad and to the touch. My back, and legs ached. Then my lower legs, ankles and feet started to swell. it is so bad that I cannot walk upon waking in the morning. If Im on my feet for more than an hour I have to elevate my legs due to the pain and swelling. I also gained alot of weight 8lbs. I\\\\'m a healthy 37 year old woman, I am active with two small boys, and eat an extremley healthy diet due to my Celiacs and Caseine allergies. \\\\r\\\\r\\\\n\\\\r\\\\r\\\\nI recently had my blood levels checked and to my surprise I was taking way too much Tirosint. My Endo said that the swelling and pain wasnt from the Tirosint and that I should see my Primary doctor...REALLY?? I was shocked due to my \\\"hypo\\\" symptoms. Im thinking of returning to Synthroid and switching doctors...'], 'commentsReview': ['Depression and Anxiety', 'Use once daily, at night. Wash face, use toner and leave to dry (10 minutes). Then apply pea size amount of cream all over face, excluding eye area. Let soak in (15 minutes), then layer with moisturizer. Must wear sunscreen daily.', '125 mcg Tirosint per day and doubled on Sat and Sun. \\\\r\\\\r\\\\n\\\\r\\\\r\\\\nListen to your body and be persistent with your doctors.']} \",\"Dataset.select() 需要传入一个可迭代的索引，这里我们传入了 range(1000) 从随机打乱的数据集中选取前 1000 个样本。我们可以看出数据集的一些特点了：\",\"Unnamed: 0: 可能是患者的 ID\",\"condition: 描述健康状况的标签，有大写有小写\",\"各类 review: 长短不一，混有 Python 行分隔符（\\\\r\\\\n）、html 字符编码（见 🤗 官方示例，如&#039;）\",\"下面我们验证一下 Unnamed 0 是患者 ID 的猜想，这里会用到 Dataset.unique()：\",\"for split in drug_dataset.keys(): assert len(drug_dataset[split]) == len(drug_dataset[split].unique(\\\"Unnamed: 0\\\")) \",\"上面的代码没抛出 AssertionError，看来是患者 ID 的这个想法是正确的。我们将该列重命名为 patient_id，这里会用到 DatasetDict.rename_column():\",\"drug_dataset = drug_dataset.rename_column( original_column_name=\\\"Unnamed: 0\\\", new_column_name=\\\"patient_id\\\" ) \",\"我们使用 Dataset.map() 标准化所有的 condition：\",\"def lowercase_condition(example): return {\\\"condition\\\": example[\\\"condition\\\"].lower()} drug_dataset.map(lowercase_condition) \",\"AttributeError: 'NoneType' object has no attribute 'lower' \",\"看来我们还需要把 condition 为 None 的数据过滤掉（使用 Dataset.filter()）：\",\"drug_dataset = drug_dataset.filter(lambda x: x[\\\"condition\\\"] is not None) \"]},\"346\":{\"h\":\"2.2 创建新列\",\"t\":[\"在处理 review 字段时，最好是要统计一下字数。我们就简单基于空格来进行词数统计。\",\"def compute_review_length(example): return {\\\"benefit_review_length\\\": len(example[\\\"benefitsReview\\\"].split())} drug_dataset = drug_dataset.map(compute_review_length) \",\"这样，我们就增加了 benefit_review_length 列。我们还可以使用 Dataset.sort() 以该列为基准做排序\",\"drug_datasets[\\\"train\\\"].sort(\\\"benefit_review_length\\\") \",\"`Dataset.add_column()`\",\"我们还可以使用 Dataset.add_column() 增加列。可以传入 Python list 或 numpy。\",\"review 的词数较少时（极端情况比如只有一个词）对于预测没有提供相对有用的信息。下面我将使用 Dataset.filter() 将少于 30 个词的 review 去掉。\",\"drug_dataset = drug_dataset.filter(lambda x: x[\\\"benefit_review_length\\\"] > 30) print(drug_dataset.num_rows) \",\"{'train': 1445, 'test': 473} \",\"review 中还有一些 html 编码，可以使用 Python 的 html module 来解码：\",\"import html text = \\\"I&#039;m a transformer called BERT\\\" html.unescape(text) \",\"\\\"I'm a transformer called BERT\\\" \",\"drug_dataset = drug_dataset.map(lambda x: { \\\"benefitsReview\\\": html.unescape(x[\\\"benefitsReview\\\"])}) \"]},\"347\":{\"h\":\"2.3 map() 方法\",\"t\":[\"Dataset.map() 有一个参数是 batched。将其设为 True 后，map 函数将一次处理多个数据（成为一批 a batch），batch size 可以配置，默认情况下为 1000.\"]},\"348\":{\"h\":\"第二层到第三层\"},\"349\":{\"h\":\"1. 物理层 & MAC 层\"},\"350\":{\"h\":\"1.1 第一层（物理层）\",\"t\":[\"设备：集线器（Hub），广播\"]},\"351\":{\"h\":\"1.2 第二层（数据链路层）\"},\"352\":{\"h\":\"MAC（Medium Access Control，媒体访问控制）\",\"t\":[\"解决的是谁先发谁后发的问题，学名是多路访问。有很多算法解决这个问题： \",\"信道划分：分多个道，你走你的，我走我的\",\"轮流协议：轮着来\",\"随机接入协议（以太网就用的这种方式）：管他三七二十一，先出门，堵的话就回去\",\"判断发给谁，谁接收 \",\"链路层地址，即 MAC 地址\",\"第二层的网络包格式：\",\"目标 MAC（6 bytes）\",\"源 MAC（6 bytes）\",\"类型（2 bytes）\",\"数据（46-1500 bytes）\",\"CRC（4 bytes）\",\"类型：0800 - IP 数据报，0860 - ARP 请求\",\"CRC 循环冗余检测：通过 XOR 异或来计算整个包是否在发送的过程中出现了了错误\",\"有了目标 MAC 地址，数据包在链路上广播，MAC 的网卡发现这个包是给它的，于是把包收进来。接着打开 IP 包，发现 IP 包也是自己的，再打开 TCP 包，发现端口是 80，nginx 就是监听的 80。于是将请求提交给 nginx，nginx 返回一个网页。\"]},\"353\":{\"h\":\"ARP 协议\",\"t\":[\"问题：如果一个广播网络里面接入了 N 台机器，怎么知道每台机器的 MAC 地址呢？\",\"答案：ARP 协议 - 根据 IP 地址找 MAC 地址的协议。这是一个输出全靠“吼”的阶段。\",\"目标 MAC（6 bytes）\",\"源 MAC（6 bytes）\",\"类型（2 bytes）\",\"ARP 报文\",\"过程：要发送数据的机器发送一个广播包，等目的 IP 对应的机器来回应自己。\",\"ARP 报文格式：\",\"硬件类型（Ethernet）\",\"协议类型（IP）\",\"硬件地址长度（6）\",\"协议地址长度（6）\",\"操作代码（1 request 2 reply）\",\"发送者 MAC\",\"发送者 IP\",\"目标 MAC\",\"目标 IP\",\"ARP 缓存：为了避免每次都用 ARP 请求，机器本地也会进行 ARP 缓存。由于机器会不断上线下线，IP 也可能会变，所以 ARP 的 MAC 地址缓存过一段时间就会过期。\"]},\"354\":{\"h\":\"交换机 & 转发表\",\"t\":[\"机器数少的时候，我们可以用集线器组网。集线器是广播的，每个端口不管是否需要该包，都会接收然后发给主机，然后让主机自己判断是否需要。当机器数多的时候，端口什么都接受什么都转发的话，会更容易产生冲突，而且把不需要的包转发出去纯属浪费。\",\"我们需要稍微智能一点的设备，该设备每个口可以解析 MAC 头，检查下目标 MAC 地址，然后根据策略进行转发。即第二层设备：交换机。\",\"交换机如何知道每个口的电脑的 MAC 地址呢？需要交换机会学习，学习的结果就是转发表。\",\"电脑 A 向电脑 B 发送一个包，当包到达交换机时，最开始交换机并不知道电脑 B 在哪个口，于是它只能将包发送给除了连接电脑 A 口以外的其他口。交换机聪明之处在于，它会记住，电脑 A（对应的MAC）在哪个口。以后遇到目的地址是电脑 A 的 MAC 地址时，直接发送到对应的口就行。\",\"这样过了一段时间之后，交换机就有了整个网络的结构了，这时基本不用广播了，可以准确转发。\"]},\"355\":{\"h\":\"2. 交换机与 VLAN\",\"t\":[\"下图是两台交换机连接三个局域网的情况。\",\"当机器 1 向机器 4（已知其 IP）发送包的时候，目的 MAC 还不知道，所以需要先用 ARP 获取目的 MAC。\",\"简述交换机学习网络拓扑信息的过程\",\"现在两台交换机都不了解网络的任何拓扑信息。\",\"机器 1 发起广播。机器 2 能收到，但是没它啥事。交换机 A 也收到了这个广播，此时它不知道网络的拓扑信息，于是它将该广播包转发给除了广播包来的方向之外的其他所有网口。\",\"机器 3 也收到了信息，但是这和它也没啥关系。交换机 B 同样收到了该广播包，它也不知道网络的拓扑信息，于是它也按照广播策略将包转发到 LAN 3。此时，机器 4 和机器 5 都能收到广播信息。机器 4 主动响应，这是找我的，我的 MAC 是 blabla。于是一个 ARP 请求就完成了。\",\"在上面的过程中，两台交换机都学到了这样的信息：机器 1 是在左边的网口。\",\"下次当机器 2 要访问机器 1 时，先通过 ARP 获取机器 1 的 MAC 地址。知道目的 MAC 后，发送数据包。该消息会到达机器 1，也会到交换机 A。交换机已经知道了机器 1 不在右边的网口，于是这个广播信息不会广播到 LAN 2 和 LAN 3。\"]},\"356\":{\"h\":\"环路问题 & STP 协议\",\"t\":[\"环路问题会导致 ARP 请求爆炸，且交换机无法学习到网络的拓扑结构。\",\"数据结构中有最小生成树，有环的我们常称为图。将图中的环破坏了，就生成了树。计算机网络中生成树算法是STP（Spanning Tree Protocol）。\",\"STP 中的概念：\",\"Root Bridge，根交换机\",\"Designated Bridge，指定交换机\",\"Bridge Protocol Data Unit，BPDU，网桥协议数据单元。“互相比较实例”的协议。只有 Root Bridge 可以发，其他交换机只能转发 Root Bridge 的消息。\",\"Priority Vector，优先级向量。[Root Bridge ID, Root Path Cost, Bridge ID, Port ID]。在 BPDU 中。\"]},\"357\":{\"h\":\"STP 的工作过程\",\"t\":[\"网络管理员为所有的交换机分配了优先级。交换机通过互相发送 BPDU 来判断谁的优先级更高。\",\"具体过程这里不介绍了。\"]},\"358\":{\"h\":\"广播问题 & 安全问题\",\"t\":[\"物理隔离：使用单独的交换机配置单独的子网\",\"虚拟隔离，虚拟局域网（VLAN）：一个交换机上会连属于多个局域网的机器。\",\"交换机如何区别某个机器属于哪个局域网呢？在原来的二层的头上加一个 TAG，里面有一个 VLAN ID，一共12位（可以划分 4096 个 VLAN）。这样仍然不够，目前云计算厂商例绝对不止 4096 个用户。当然每个用户需要一个 VLAN，后面章节再讲这个问题。\",\"如果我们使用的交换机是支持 VLAN 的，当交换机把二层的头取下来时就可以识别 VLAN ID。这样，只有相同 VLAN 的包才会互相转发，不同 VLAN 的包是看不到的。\",\"对于支持 VLAN 的交换机，有一种口叫 Trunk 口。它可以转发属于任何 VLAN 的数据，交换机之间可以通过这种口互相连接。\"]},\"359\":{\"h\":\"3. ICMP 与 ping\"},\"360\":{\"h\":\"ICMP\",\"t\":[\"ping 基于 ICMP 协议（Internet Control Message Protocol, 互联网控制报文协议）工作。ICMP 用来监测网络通信故障、实现链路追踪，最典型的应用就是 ping 和 traceroute。它要解决 IP 肯呢个出现的不可靠问题，属于 IP 的组成部分。\",\"ICMP 是网络层的协议，所以 ICMP 报文是封装在 IP 包里的。IP包有两部分：IP头 + 正文（这里是 ICMP 报文）。其中 IP 分组头中，协议字段为 1，表示数据部分是 ICMP 报文。\",\"ICMP 报文前 4 格式统一：\",\"类型（1B）\",\"代码（1B）\",\"校验和（2B）\",\"与类型值相关（4B）\",\"ICMP 数据部分\",\"ICMP 报文类型\",\"ICMP 报文大类\",\"类型值\",\"ICMP 报文类型\",\"差错报告报文\",\"3\",\"目的不可达\",\"4\",\"源抑制\",\"5\",\"超时\",\"11\",\"参数问题\",\"12\",\"重定向\",\"询问报文\",\"8 或 0\",\"回送请求和应答\",\"13 或 14\",\"时间戳请求和应答\",\"15 或 16\",\"路由器询问与通告\",\"17 或 18\",\"地址掩码请求和应答\",\"查询报文：\",\"目的不可达报文主要有以下 7 种类型：\",\"网络不可达（network unreachable）：表示路由器寻址出错，下一跳路由器可能存在故障。网络不可达报文只能由路由器产生。代码 0 表示网络不可达。\",\"主机不可达（host unreachable）：表示网络寻址不存在问题，可能是目的主机不工作或不存在。主机不可达报文只能由路由器产生。代码 1 表示主机不可达。\",\"协议不可达（protocol unreachable）：IP 分组携带的数据来自高层协议，例如 UDP、TCP、OSPF 等。如果目的主机接收分组的数据字段来自 TCP，但是目的主机的 TCP 未运行，这时目的主机不能处理 IP 分组携带的 TCP 数据，则主机将产生一个协议不可达报文，通知源主机此次传输失败。代码 2 表示协议不可达。\",\"端口不可达（port unreachable）：表示分组要交付的应用进程没有运行。代码 3 表示端口不可达。\",\"源路由失败（source route failed），表示由源主机路由选项中规定的一个或多个路由器无法通过。代码5表示源路由失败。\",\"目的网络不可知（unknown destination network）：表示路由器根本不知道关于目的网络的信息。代码6表示目的网络不可知。目的网络不可知与网络不可达不同，网络不可达是知道目的网络存在，但是无法将分组送达目的网络.\",\"目的主机不可知（unknown destination host）：表示路由器根本不知道关于目的主机的信息。代码7表示目的主机不可知。\",\"源抑制：让源站放慢发送速度\",\"超时：超过网络包的生存时间仍然没到\",\"重定向：让下次发给另一个路由。\",\"差错报告报文：会将出错的 IP 包的 IP 头和 IP 正文前的 8 个字节加到报文里。\"]},\"361\":{\"h\":\"ping\",\"t\":[\"ping 命令执行时，源主机会构建 ICMP 请求数据包。类型为 8，增加顺序号（用于区分连续 ping 时发出的多个包，每发出一个包，顺序号会自动加 1。为了能够计算往返时间 RTT，会在报文的数据部分插入发送时间。\",\"被 ping 的设备构建的应答包中，类型字段为 0，顺序号为接收到的请求数据包中的顺序号。\",\"如果在规定时间内，源主机没有收到 ICMP 应答包，说明目的主机不可达。如果接收到了，源主机会用当前时刻减去该数据包最初从源主机上发出的时刻，就是 ICMP 数据包的时间延迟。\",\"如果在自己可控范围内遇到网落不通的问题，除了直接 ping 目的 IP 外，还应该有一个清晰的网络拓扑图。并且从理论上来讲，应该要清楚地知道一个网络包从源地址到目标地址都需要经过哪些设备，然后逐个 ping 中间的这些设备或者机器。如果可能的话，在这些关键点，通过 tcpdump -i eth0 icmp，查看包有没有到达某个点，回复的包到达了哪个点，可以更加容易推断出错的位置。点此阅读 tcpdump。\",\"如果不在我们的控制范围内，很多中间设备都是禁止 ping 的，但是 ping 不通不代表网络不通。这个时候就要使用 telnet，通过其他协议来测试网络是否通，这个就不在本篇的讲述范围了。\"]},\"362\":{\"h\":\"traceroute: 差错报文的使用\",\"t\":[\"并非只有真正遇到错误才可以收到 ICMP。Traceroute 这个程序利用 ICMP 规则，制造一些能够产生错误的场景。\",\"设置 TTL 追踪路由\",\"Traceroute 可以设置特殊的 TTL，来追踪去往目的地时沿途经过的路由器。Traceroute 的参数指向某个目的 IP 地址，它会发送一个 UDP 数据包。将 TTL 设置成 1，于是一旦遇到一个路由器，它就嘎了。于是就会返回一个 ICMP 包，也就是网络差错包，类型是超时。\",\"接下来将 TTL 设置成 2。于是就可以知道第二关有多远。如此反复，直到到达主机。于是，Traceroute 就拿到了所有的路由 IP。如果有的路由器设置了不回 ICMP，那么 Traceroute 就看不到这些中间路由。\",\"如何判断主机可达？Traceroute 会选择一个不可能的值作为 UDP 端口号（大于 30,000）。当该数据包到达时，目的主机的 UDP 模块将产生“端口不可达”的 ICMP 报文。如果数据没有达到主机，则可能回复的是超时。\",\"UDP 是无连接的，不会像 TCP 那样返回 ACK 确认，发出后是没有办法确定有没有收到的。所以要故意出错，让对方返回 ICMP 错误码来确定经过的 route。\",\"设置不分片，确定路径的 MTU\",\"设置“不分片”标志。发送的第一个分组的长度正好与出口 MTU 相等。如果中间遇到窄的关口会被卡住，会发送 ICMP 网络差错包。每次收到 ICMP“不能分片”差错时就减小分组的长度，直到到达目标主机。\"]},\"363\":{\"h\":\"小结\",\"t\":[\"ICMP 用来检测网络通信故障以及实现链路追踪。ICMP 分两种，差错报告报文、查询报文。\",\"ping 使用查询报文，Traceroute 使用差错报告报文。\"]},\"364\":{\"h\":\"4. 网关（一般是路由器）——三层设备\",\"t\":[\"MAC 头和 IP 头\",\"MAC 头中，首先是目标 MAC 和源 MAC，然后是协议类型（0800，IP）说明 MAC 包的数据部分是 IP 协议。\",\"IP 协议中，版本号目前主流还是 IPv4。服务类型 TOS 表示包的优先级（在 ip addr 命令中提到过）。TTL 在上面 ICMP 不分提到过。8 位协议标志表示再上一层协议是 TCP 还是 UDP。接下来就是源 IP 和目的 IP。\",\"任何一台机器在访问另一个 IP 时，都会先判断目标 IP 和源 IP 是否处于同一网段（根据 CIDR 和子网掩码判断）。\",\"如果在同一网段中，就没网关啥事儿了，直接将源 IP、目的 IP 放到 IP 头中。然后通过 ARP 获取目的 MAC，将目的 MAC 和源 MAC 放入 MAC 头中。\",\"如果不在同一网段，就会发到默认网关（Gateway）。网关的地址和源 IP 一定在一个网段。源主机到网关的发送过程和上面同一网段的情况一样。网络包被网关接收后，剩下的就交给网关了。\",\"网关一般是路由器，是一个三层转发的设备。它会把 MAC 头和 IP 头都取下来，根据里面的内容，决定接下来把包转发到哪。\"]},\"365\":{\"h\":\"4.1 静态路由\",\"t\":[\"静态路由就是在路由器上配置一条一条规则。例如，要访问 A 网站（知道属于哪个网段），从 2 号口出去，下一跳是 IP2；要访问 B 网站（知道属于哪个网段），从 3 号口出去，下一跳是 IP3。\",\"每当要选择从哪个口转发的时候，就一条条地匹配规则，找到符合的，就按照找规则中设置的端口转发过去，找下一跳 IPX。\"]},\"366\":{\"h\":\"IP 头、MAC 头中的字段哪些会改变\",\"t\":[\"MAC 地址在局域网内才有效。只要过网关，MAC 地址就一定会改变，因为已经换了局域网。到网关的 IP 地址可能变，也可能不变。IP 不变网关被称为转发网关，改变 IP 的网关是 NAT (Network Address Translation) 网关。\",\"所谓的下一跳就是某个 IP，要查找这个 IP 对应的 MAC 放入 MAC 头。\",\"下面说一下 NAT 网关的转发流程。服务器 A 和 B 的局域网网段是一样的，因为局域网之间并没有做过协商。所以到了外网上，它们必须要使用“国际身份”。B 的“国际身份”是 192.168.56.2。在网关 B 中记下 192.168.56.2 对应局域网内的 192.168.1.101。\",\"源服务器 A 要访问目标服务器 B，目标地址应该是 192.168.56.2（A 应该只知道 B 的国际身份）。\",\"网络包先从服务器 A 发送到网关 A 上（源 MAC：服务器 A 的MAC，目的 MAC：网关 A 的MAC，源 IP：192.168.1.101，目目 IP：192.168.56.2）。\",\"网关 A 判断应该从 192.168.56.1 这个口转发，没有下一跳了（因为这个口和目标 IP 在同一网段），这是的源 MAC：192.168.56.1 的 MAC，目标 MAC：192.168.56.2 的 MAC，源 IP：192.168.56.1（服务器 A 的“国际身份”），目标 IP：192.168.56.2。\",\"路由器 B 是 NAT 网关，它上面配置了 192.168.56.2 对应的内部 IP 是 192.168.1.101。于是改为访问 192.168.1.101。路由器 B 中配置了静态路由：想访问 192.168.1.0/24 这个网段，要从 192.168.1.1 这个口出去，没有下一跳了。（源 MAC：192.168.1.1 的 MAC 地址，目标 MAC：192.168.1.101 的 MAC 地址，源 IP：192.168.56.1，目标 IP：192.168.1.101）。\",\"可以通过 whatismyip 查看自己的出口 IP 地址。\"]},\"367\":{\"h\":\"4.2 配置路由 & 策略路由\",\"t\":[\"路由器中维护路由表，一张路由表中有多条路由规则，每个规则至少包括三项信息：\",\"出口网络：包想去哪\",\"出口设备：将包从哪个口扔出去\",\"下一跳网关：下一跳路由器的地址\",\"ip route add 10.176.48.0/20 via 10.173.32.1 dev eth0 \",\"要去 10.176.48.0/20 这个目标网络，要从 eth0 端口出去，讲经过 10.173.32.1。\",\"除了根据目的 IP 地址配置路由外，还可以根据多个参数来配置路由，即策略路由。\",\"配置多个路由表（可以根据源 IP 地址、入口设备、TOS 等选择路由表，然后再路由表中查找路由）。\",\"可以设置：\",\"ip rule add from 192.168.1.0/24 table 10 ip rule add from 192.168.2.0/24 table 20 \",\"表示从 192.168.1.0/24 这个网段来的使用 table 10 这个路由表。从 192.168.2.0/24 网段来的，使用 table 20 路由表。\",\"一条路由规则中，也可以有多条路径\",\"ip route add default scope global nexthop via 100.100.100.1 weight 1 nexthop via 200.200.200.1 weight 2 \",\"下一跳可以是 100.100.100.1，权重是 1；也可以是 200.200.200.1，权重是 2。\",\"现在有这样一种情景。房东家里从不同的运营商哪里拉了两根网线，一个带宽大些，一个带宽小些，买了个高级点的路由器（可以接两个外网）。\",\"路由可以配置成这样：\",\"$ ip route list table main 60.190.27.189/30 dev eth3 proto kernel scope link src 60.190.27.190 183.134.188.1 dev eth2 proto kernel scope link src 183.134.189.34 192.168.1.0/24 dev eth1 proto kernel scope link src 192.168.1.1 127.0.0.0/8 dev lo scope link default via 183.134.188.1 dev eth2 \",\"如果访问 60.190.27.189/30 这个网络，就走 eth3\",\"如果访问 183.134.188.1 这个网络，就走 eth2\",\"如果访问内网，就走 eth1\",\"如果所有规则都匹配不上，默认走 183.134.188.1 这个快速网络\",\"现在租户 A 不想多付钱。于是我们添加一个 Table 叫 chao\",\"$ echo 200 chao >> /etc/iproute2/rt_tables \",\"添加一条规则：\",\"$ ip rule add from 192.168.1.101 table chao $ ip rule ls 0: from all lookup local 32765: from 192.168.1.101 lookup chao 32766: from all lookup main 32767: from all lookup default \",\"这样，从 192.168.1.101 来的包都查看新路由表 chao。\",\"将本地发起的数据包（即目标是本机的数据包）从本地路由表中查找，用于本机之间的通信。\",\"从 IP 地址为 192.168.1.101 的主机发起的数据包将使用 \\\"chao\\\" 路由表。这是刚刚添加的规则。\",\"数据包将从主路由表中查找。这是默认的主路由表，如果没有其他规则匹配，数据包将使用此表中的路由规则。\",\"在 chao 表中添加规则\",\"$ ip route add default via 60.190.27.189 dev eth3 table chao $ ip route flush cache \",\"不想花钱就用慢的网络吧。\"]},\"368\":{\"h\":\"4.3 动态路由\",\"t\":[\"使用动态路由路由器，可以根据路由协议算法生成动态路由表，随网络运行状况的变化而变化。\"]},\"369\":{\"h\":\"动态路由算法\",\"t\":[\"距离矢量路由算法（Distance Vector Routing）—— 基于 Bellman-Ford\",\"这种算法基于节点之间的距离信息，通常使用跳数（hops）或某种度量来表示。\",\"每个节点维护一个距离向量表，其中包含到其他节点的最短距离。节点周期性地将其向量表发送给相邻节点，相邻节点会根据接收到的信息更新自己的向量表。\",\"优缺点\",\"简单易实现： 距离向量路由算法相对较简单，容易实现和部署。它不需要大量的计算和存储资源，适用于较小规模的网络。\",\"分布式协作： 节点之间仅交换距离向量信息，不需要全局知识。这使得算法适用于分布式网络环境。\",\"慢收敛： 距离向量算法的一个缺点是慢收敛性。由于信息是通过邻居节点传递的，网络中的信息更新可能需要一些时间才能传播到整个网络，特别是在大规模和复杂网络中。\",\"计数到无穷： 一个问题是计数到无穷现象，即如果存在一个环路或者不断的传递，距离值可能会趋向于无穷大，从而导致不稳定的路由。\",\"拥塞和环路： 距离向量算法不能有效处理网络拥塞或环路情况，可能导致不稳定的路由和降低的网络性能。\",\"最早的路由协议 RIP（Routing Information Protocol）就用的距离矢量路由算法。它适用于小型网络（小于 15 跳）。现在一个数据中心内部路由器数目就很多，因而不适用了。\",\"链路状态路由算法（Link State Routing）—— 基于 Dijkstra\",\"它基于节点之间的链路状态信息来计算最短路径，并选择最优的路径来传输数据包。\"]},\"370\":{\"h\":\"动态路由协议\",\"t\":[\"OSPF（Open Shortest Path First，开放式最短路径优先）\",\"OSPF 是一种内部网关协议（IGP，Interior Gateway Protocol），用于在企业内部网络或自治系统中进行路由选择。基于 Link State Routing，旨在计算最短路径并支持大规模、复杂的网络拓扑。\",\"内部网关协议的重点就是找到最短的路径。在一个组织内部，路径最短往往最优。当然有时候 OSPF 可以发现多个最短的路径，可以在这多个路径中进行负载均衡，这常常被称为等价路由。\",\"这一点非常重要。有了等价路由，到一个地方去可以有相同的两个路线，可以分摊流量，还可以当一条路不通的时候，走另外一条路。这个在后面我们讲数据中心的网络的时候，一般应用的接入层会有负载均衡 LVS (Linux Virtual Server)。它可以和 OSPF 一起，实现高吞吐量的接入层设计。\",\"BGP（Border Gateway Protocol，外网路由协议）\",\"BGP 是一种外部网关协议（EGP，Exterior Gateway Protocol），用于在不同的自治系统（AS，Autonomous System）之间进行路由选择。与内部网关协议（IGP，Interior Gateway Protocol）如 OSPF 和 RIP 不同，BGP 主要用于互联网核心路由器之间的路由决策。\",\"BGP 协议使用的算法是路径矢量路由协议（path-vector protocol）。它是距离矢量路由协议的升级版。\",\"BGP 又分为两类，eBGP 和 iBGP。自治系统间，边界路由器之间使用 eBGP 广播路由。内部网络也需要访问其他的自治系统。边界路由器如何将 BGP 学习到的路由导入到内部网络呢？就是通过运行 iBGP，使得内部的路由器能够找到到达外网目的地的最好的边界路由器。\"]},\"371\":{\"h\":\"类型\"},\"372\":{\"h\":\"七种类型\",\"t\":[\"Undefined\",\"Null\",\"Boolean\",\"String\",\"Number\",\"Symbol\",\"Object\"]},\"373\":{\"h\":\"1. Undefined、Null\",\"t\":[\"Q：为什么有的编程规范要求用 void 0 代替 undefined？A：局部变量中的 undefined 可以修改（ES5 之后全局变量下的 undefined 只读），为了避免它在无意中被修改，建议使用 void 0 来获取 undefined 值。\"]},\"374\":{\"h\":\"2. String\",\"t\":[\"Q：字符串是否有最大长度？A：String 的最大长度是 253−1\",\"String并非“字符串”，而是是字符串的 UTF16 编码，对 String 的各种操作如 charAt、charCodeAt、length 等，针对的都是 UTF-16 编码，每个 UTF-16 单元被认为是 1 个字符（处理 SP 平面的字符时要注意，SP 上的每个字符对应 4 字节）。所以字符串的最大长度实际上是受字符串的编码长度影响的。\",\"JavaScrip 中的 String 永远无法变更，即字符串具有值类型的特征。\"]},\"375\":{\"h\":\"3. Number\",\"t\":[\"Number 共有 18437736874454810627(即 264−253+3) 个值。\",\"提示\",\"Number 用 64 位表示。\",\"IEEE 754 标准： s（符号位，1）+ e（指数位，11）+ f（尾数，52）\",\"e 全 1 时的特殊值减掉（即 64 - 11 = 53），+3 是指三个特殊值：NaN、Infinity、-Infinity\",\"NaN：e 全 1，f 非 0\",\"Infinity：e 全 1，f = 0，正无穷（S 为 0），负无穷（S 为 1）\",\"JavaScript 中的 Number 类型基本符合 IEEE 754-2008 规定的双精度浮点数规则，但是 JavaScript 为了表达几个额外的语言场景（比如不让除以 0 出错，而引入了无穷大的概念），规定了几个例外情况：\",\"NaN，占用了 9007199254740990，这原本是符合 IEEE 规则的数字\",\"Infinity，无穷大\",\"Infinity，负无穷大\",\"JavaScript 中有 +0 和 -0，区分他们的方法是检验 1/x 是 Infinity 还是 -Infinity\",\"整数范围：-0x1f ffff ffff ffff 至 0x1f ffff ffff ffff\",\"浮点数精度问题：0.1 + 0.2 != 0.3\",\"正确的比较方法应该是使用 JavaScript 提供的最小精度：\",\"Math.abs(0.1 + 0.2 - 0.3) <= Number.EPSILON // true \"]},\"376\":{\"h\":\"4. Symbol\",\"t\":[\"对象的 key 只能是 String 类型或 Symbol 类型。使用字符串做 key 容易造成属性名的冲突，ES 6 引入 Symbol 正是为了防止属性名冲突的。\",\"即使 description 相同，Symbol 也是不同的。\",\"使用 JavaScript 内置的 Symbol.* 修改对象的内建行为。\"]},\"377\":{\"h\":\"5. Object\",\"t\":[\"对于 JavaScript 中的几个基本类型，都在对象类型中有所对应，分别是\",\"Number\",\"String\",\"Boolean\",\"Symbol\",\"要注意，new Number(3) 和数字 3 是不同的类型，前者是对象类型，后者是 Number 类型\",\"new Number(3) == 3; // true new Number(3) === 3; // false \",\"Number、String、Boolean 当跟 new 搭配时，是对应类型的构造器，会产生对象；直接调用表示强制类型转换。\",\"Symbol 是 Symbol 对象构造器，但是用 new 调用会抛出错误。\"]},\"378\":{\"h\":\"6. 类型转换\",\"t\":[\"== 运算会进行跨类型的比较，规则复杂。一般被认为是设计失误，很多实践中推荐禁止使用 ==，而是要求进行显示转换后用 === 进行比较。\"]},\"379\":{\"h\":\"6.1 StringToNumber: Number(str)\",\"t\":[\"数字（十进制、二进制、八进制、十六进制 & 科学计数法 E 或 e）：\",\"30\",\"0b111\",\"0c13\",\"0xFF\",\"1e3\",\"-1e-2\",\"使用 `Number()` 而非 `parseInt()`、`parseFloat`\",\"parseInt 只支持十六进制前缀“0x”，忽略非数字字符，不支持科学计数法 \",\"在比较旧的浏览器中，parseInt 还支持 0 开头的八进制前缀，这会造成错误。所以不论何时，都建议传入 parseInt 的第二个参数\",\"parseFloat 直接把字符串作为十进制进行解析，不能处理其他任何进制\"]},\"380\":{\"h\":\"6.2 NumberToString: String(num)\",\"t\":[\"在较小范围内，数字转字符串完全符合你的直觉\",\"在 Number 的绝对值较大或较小时，字符串表示是用科学计数法\",\"let p = 10000000000000000 console.log(String(p)); // 10000000000000000 console.log(String(p)); // 1e+25 \"]},\"381\":{\"h\":\"6.3 Object to primitive conversion 对象->基本类型的转换（拆箱转换）\",\"t\":[\"布尔转换：没有对应的转换。所有的对象都是 true。\",\"数值转换：当进行数学运算时进行数值转换。例如，Date 对象可以相减。\",\"字符串转换：一般在输出的时候进行。比如 alert(obj)、console.log(obj) 等。\",\"我们可以使用特殊的对象方法来实现字符串和数值转换。\",\"ToFdo\"]},\"382\":{\"h\":\"6.4 基本类型->对象的转换（装箱转换）\",\"t\":[\"Todo\"]},\"383\":{\"h\":\"Speed Network\",\"t\":[\"network latency\",\"online gaming\",\"megabits ['meɡə.bɪt], gigabits /ˈɡɪɡ.ə.bɪt/\",\"500 megabits per second (Mbps), 1 gigabits per second (Gbps)\",\"latency\",\"high latency: Longer distances often results in higher latency.\",\"Low latency indicates faster network performance\",\"fast speed and low latency\",\"Low latency is crucial/essential for online gaming because it reduces the delay between your actions and their impact/effects in the game.\",\"gaming experience\",\"impacts the game experience\",\"affects the responsiveness of the game\",\"a smoother gaming experience\",\"frustrating experiences and a competitive disadvantage\",\"noticeable delay\",\"upload/download speed\",\"upgrade internet plan, upgrade internet connection\",\"I just upgrade my internet plan, and now I get download speeds of up to 500 Mbps.\",\"transmit data\",\"data transfer\",\"wireless network\",\"5G network, designed to provide significantly faster speeds, reduced latency, and increased connectivity for various devices.\",\"Many people are exited about 5G networks to revolutionize mobile communication and enable new technologies.\"]},\"384\":{\"h\":\"2.1 Do you know network latency?\",\"t\":[\"Yes, of course.\",\"Latency, also referred to as \\\"ping\\\" or \\\"ping time\\\". It is the time it takes for data to travel from its source to its destination in a network.\",\"And maybe everyone should know, lower latency indicates faster network performance.\"]},\"385\":{\"h\":\"2.2 Do you think network is important?\",\"t\":[\"Definately Yes. Nowadays, people cannot live without network, it is highly important in modern life.\",\"They serves as a foundation for communication, data sharing, and global connectivity.\",\"Without networks, many of the technologies and services we rely on tody, including the internet, would not be possible.\"]},\"386\":{\"h\":\"2.3 the importance of network latency\",\"t\":[\"Network latency plays a crucial role in the online gaming because it directly effects the responsiveness of the game.\",\"Low latency reduces the delay between your actions and their impact in the game.\",\"While the latency is high, there is a noticeable delay, which can lead to frustrating experiences and a competitive disadvantage.\"]},\"387\":{\"h\":\"2.4 Factors affecting latency\",\"t\":[\"physical distance -> Longer distances often result in higher latency.\",\"network congestion -> If many users are accessing the same server or network simultaneously, it can lead to congestion and increase latency.\",\"Internet Service Provider (ISP)\",\"Wired connection (Ethernet) v.s. Wireless connection (Wi-fi)\"]},\"388\":{\"h\":\"Part 1 - QA\"},\"389\":{\"h\":\"1.1 Are there wild animals in your country?\",\"t\":[\"Yes, there are certainly wild animals in my country. We have a diverse range ofwildlife.\",\"Some of the common wild animals you can find here include deer, squirrels, foxes, rabbits, and various bird species.\",\"Additionally, there are national parks and wildlife reserves where you can spot larger animals like bears, wolves, and even rare species such as lions and tigers in their natural habitats.\",\"The presence of wild animals is an important aspect of our country's biodiversity and natural heritage.\",\"biodiversity and natural heritage\"]},\"390\":{\"h\":\"1.2 Have you ever been to a zoo or a safari park?\",\"t\":[\"Yes, I have had the opportunity to visit the Beijing Zoo.\",\"During my visit, I was particularly excited to see the pandas that they have there. The Beijing Zoo is home to a population ofgiant pandas, and it was an incredible experience to observe these magnificent creatures up close.\",\"I remember seeing the pandas in a specially designed enclosure that mimicked their natural habitat, complete with bamboo and rocks. It was truly a memorable experience to watch them eat bamboo, play, and laze around.\",\"Pandas are such adorable animals, and it was a privilege to see them in person at the Beijing Zoo.\"]},\"391\":{\"h\":\"1.3 What is the animal you would like to see in the wild?\",\"t\":[\"One animal I would like to see in the wild is the elephant. I think they are intelligent and interesting creatures.\",\"I have never seen them in real life, but I always see them on TV where they do various amazing things. For example, they can perform acrobatics, also, they use their trunks to give massages or paint pictures.\",\"Seeing them in their natural habitat would be a fantastic experience.\"]},\"392\":{\"h\":\"1.4 Are there TV programs about wild animals in your country?\",\"t\":[\"Yes, in my country, there are TV programs about wild animals, and one popular show is called \\\"动物世界\\\" (Animal World).\",\"This program showcasesa wide variety of wildlife from around the world, including their behaviors, habitats, and conservation efforts.\",\"It's a great way for people to learn about and appreciate the beauty and diversity of animals from the comfort of their homes.\"]},\"393\":{\"h\":\"2.1 What is your favorite day of the week?\",\"t\":[\"~~My favorite day is probably Saturday. ~~\",\"It's the day when I can unwind and have some free time to work on personal coding projects or learn new programming languages and technologies without the pressure of work deadlines.\",\"It allows me to ==explore my passion for ==coding and technology at my own pace.\",\"My favorite day of the week is Saturday.\",\"It's a day when I can unwind, relax, and recharge after a busy week.\",\"I often use Saturdays to pursue my hobbies, spend time with friends, or simply enjoy some leisure activities. It's a day when I don't have to worry about work-related tasks, and I can focus on doing things that I truly enjoy.\"]},\"394\":{\"h\":\"2.2 What is your lease favorite day?\",\"t\":[\"My least favorite day of the week would have to be Monday.\",\"It's the start of the workweek, and it can be a bit challenging to get back into the routine after the weekend. There's often a lot to catch up on, and it can feel a bit overwhelmingat times.\",\"However, once I get into the groove of the week, it usually gets better, but Monday mornings can be a bit tough for me.\",\"overwhelming 压倒性的\",\"get into the groove of 进入 ... 的最佳状态\"]},\"395\":{\"h\":\"2.3 What is the busiest day of the week for you?\",\"t\":[\"The busiest day of the week for me would typically be Wednesday.\",\"It's right in the middle of the workweek, and by that time, I've accumulated various tasks and responsibilities. I often have deadlines to meet, and projects to manage during the middle of the week.\",\"So, Wednesday tends to be the day when my schedule is the most packed, and I need to be highly productiveto stay on top of my work.\"]},\"396\":{\"h\":\"2.4 Is there anything that you do every day?\",\"t\":[\"Yes, there are a few things that I do every day. One of the most important daily routines for me is coding or programming.\",\"Also, I make it a pointto engage inphysical exercise every day, even if it's just a short workout or a brisk walk.\",\"Additionally, I try to learn something new every day, whether it's reading articles, watching educational videos, or studying new programming techniques.\",\"Oh, I also dedicate some time to learning English.\"]},\"397\":{\"h\":\"2.5 What do you usually do on weekends?\",\"t\":[\"On weekends, I typically follow a relaxed routine. On Saturdays, I like to sleep in until noon to catch up on rest. After waking up, I often spend some time cleaning and organizing my room, which helps me start the weekend with a fresh environment. I also like to make plans for Sunday, whether it's deciding on activities, places to visit, or simply scheduling some leisure time.\",\"Sundays are more social for me. I usually go out with friends to explore new places, try out different restaurants, or engage in outdoor activities like hiking or cycling. It's a great way to unwind and connect with friends after a busy workweek.\",\"Overall, my weekends strike a balance between relaxation and socializing, allowing me to recharge for the upcoming week.\"]},\"398\":{\"h\":\"2.6 Are weekdays and weekends the same for you?\",\"t\":[\"No, weekdays and weekends are not the same for me.\",\"Weekdays are typically focused on work-related tasks, such as software development, meetings, and project management. I have a structured routine during the workweek to meet professional commitments.\",\"In contrast, weekends are a time forrelaxation, leisure, and social activities. I take advantage of the weekend to unwind, rspend time with friends, pursue hobbies, and explore new experiences.\",\"So, there's a clear distinction between the two, with weekdays being more work-oriented and weekends being a time for personal enjoyment and socializing.\"]},\"399\":{\"h\":\"Part 1 - TV programmes\",\"t\":[\"Part 1 - TV programmes\",\"What kind of TV programmes do you like?\",\"Do you prefer to watch TV programmes on a TV or your mobile phone?\",\"Do you always watch the same kinds of programmes?\",\"Do you talk with friends about TV programmes you have watched?\",\"... to boot\",\"= as an extra bonus\",\"The emergence (= appearance) of ...\",\"Streaming services\",\"Subscription services\",\"Monthly fees\",\"Types of programmes\",\"thrillers\",\"suspense series\",\"period dramas\",\"sci-fi programmes\",\"romantic series\",\"viewing experience\",\"You get a (high/top/superb [suˈpɜrb]/low/bad ) quality viewing experience on a mobile phone.\",\"have a great sound\",\"The speakers on my TV have a great/a terrible/an awful sound.\"]},\"400\":{\"h\":\"3.1 Do you prefer to watch TV programmes on a TV or your mobile phone?\",\"t\":[\"I don't really mind, probably a mix of both, to be honest.\",\"The TV, obviously, has a bigger screen and better quality sound, so it's overall a better viewing experience.\",\"That said, I am quite happy to watch a short episodeon my phone. And I've got some nifty, bluetooth headphones too, over-ear headphones which have a great sound.\",\"I don't mind\",\"= I'm happy with both choices\",\"screen\",\"big/wide/small screen\",\"good/bad quality sound\",\"a good/optimal 最好的/bad/terrible viewing experience\",\"a mobile phone with a cracked screen, a bad internet connection -> you're gonna get a terrible viewing experience\",\"TV serious, films\",\"episode\",\"nifty 灵便的，漂亮的\",\"headphones/headsets 耳机\",\"bluetooth headphones, wired headphones 有线耳机, over-ear headphones, in-ear headphones\"]},\"401\":{\"h\":\"3.2 Do you always watch the same kinds of programmes?\",\"t\":[\"Yes, I'm guilty of often watching the same kinds of programmes.\",\"I'm really into crime and action series. They're just so easy to watch. And they always keep you engaged and on tenterhooksabout what's going to happen next. Yes, I'm a big fan of that kind of programme.\",\"guilty (adj.)\",\"= not innocent (adj.)\",\"I'm guilty of always watching the same programmes (with eating too much)/eating too much (fast food)/sleeping too much.\",\"on tenterhooks 提心吊胆；焦虑不安；如坐针毡\",\"keep you engaged\",\"= keep your attention\",\"I reckon some good action movies/Thrillers/Suspense movies keep me engaged.\",\"Action movies make me switch off.\",\"to be on tenterhooks\",\"= to be in suspense waiting for something to happen\",\"I am on tenterhooks when I watch a horror movie. / I am totally relaxed when I watch I horror movie.\",\"I'm on tenterhooks when I watch a horror movie./I will be on tenterhooks if I watch that horror movie next week.\"]},\"402\":{\"h\":\"4.1 Do you prefer to watch TV programmes on your TV or mobile phone?\",\"t\":[\"I prefer to watch TV programs on my TV rather than my mobile phone.\",\"The larger screen and better audio quality of a TV enhance the overall viewing experience, especially for movies and shows that are visually engaging.\",\"That said, I do use my mobile phone to catch up on shows or news when I'm on the go or when I want to watch something quickly.\",\"So, it depends on the situation, but if given the choice, I'd opt for the TV for a more immersive experience.\",\"enhance the experience\",\"on the go 忙的时候，在路上\",\"Mobile phones provide the convenience of portability and flexibility\",\"immersive [ɪ'mɜ:sɪv] 沉浸的\"]},\"403\":{\"h\":\"4.2 Do you always watch the same kind of programmes?\",\"t\":[\"No, I don't always watch the same kind of programs. I enjoy a variety of TV programs depending on my mood and interests.\",\"For example, I like to watch documentaries to learn about different cultures and historical events.\",\"I also enjoy watching movies, especially those in the science fiction and fantasy genres.\",\"Additionally, I follow some TV series, both drama and comedy, for entertainment.\",\"Furthermore, I occasionally watch educational programs or news to stay informedaboutcurrent events.\",\"So, my viewing habits are quite diverse, and I like to explore different types of TV programs to keep things interesting.\",\"genres [ˈʒɑnrə] 体裁\",\"No, I don't always watch the same kind of programs. I enjoy a variety of genres and like to switch things up depending on my mood and interests. Sometimes I watch dramas or crime series for their compelling stories, while other times I might tune into documentaries to learn something new. I also enjoy comedy shows for some lighthearted entertainment. So, I like to explore different types of TV programs to keep things interesting and diverse in my viewing habits.\",\"switch things up 尝试新东西\",\"compelling stories\",\"tune into 调到某频道\",\"lighthearted 轻松愉快的\",\"Chapter 3: TV\",\"After the walk in the park, Tom and Emily got home and settled in to watch some TV. It’s true, they were both guilty of watching rather too much TV. They were huge fans of all those new crime series on Netflix.\",\"\\\"Let's watch something on our own big screen and we can try out our new headphones,\\\" Tom said, handing Emily some nifty Bose headphones.\",\"They each put on their bluetooth headphones to get the full surround sound experience. They really appreciated the high-quality sound and it was incredible how it could make the programmes seem more immersive.\",\"They started watching a great crime thriller that they both enjoyed. The plot was full of surprises, and kept them on tenterhooksall the way through.\",\"Towards the end of the episode, Tom suddenly turned to face Emily, and out of the blue said, \\\"Emily, I know we've been together for a while, but I still feel like there's so much I don't know about you,\\\"\",\"Emily looked at him with surprise, \\\"What do you mean?\\\"\",\"\\\"I mean, what are your hopes and dreams for the future? Where do you see yourself in ten years?\\\" Tom asked, taking her hand.\",\"Emily smiled, \\\"I don’t think that far into the future Tom, but I guess I see myself with you. That’s the most important thing, right?\\\"\",\"That was it, Tom realized what he had to do!\",\"settle in\",\"out of the blue\",\"put on headphones\",\"sound experience\",\"full surround sound experience\",\"Where do you see yourself in ten years? 你认为自己十年后会怎样\"]},\"404\":{\"h\":\"Part 1 - Concentration\",\"t\":[\"Concentration and concentrating. being focus.\",\"What helps you concentrate?\",\"What stops you from concentrating?\",\"What do you do when you can't concentrate?\",\"distract v. - disturb v. - interrupt v.\",\"distraction n. - disturbance - interruption Noise/Bad lighting can distract me.\",\"focus/concentrate on\",\"related reasons\",\"silence\",\"a quiet room\",\"the right lighting, not too bright, not too dark\",\"a cup of tea\",\"listen to music\",\"eating before studying or working\",\"talk to each other and share ideas\",\"If ... then ... + example\"]},\"405\":{\"h\":\"3.1 What helps you concentrate?\",\"t\":[\"Peace and quiet.\",\"If there's lots of background noisegoing on, even if it's not really loud, then it distracts me and I just can't focus on whatever I am doing.\",\"So when I am reading or studying for example, I'm a stickler for silence.\",\"background sound\",\"the people in the building block who are drilling and make a noise, sb. is cooking\",\"be a stickler for ...\",\"= insist on something\",\"I'm a stickler for being on time./I'm stickler for punctuality/rules/details/accuracy\"]},\"406\":{\"h\":\"3.2 What do you do when you can't concentrate?\",\"t\":[\"I find the best thing to do is stop whatever I am doing and go and do something else.\",\"I mean I have some techniques I try, lke breaking my work down into 20 minute chunks, or drinking water, and that helps.\",\"But, more often than not, I just change activity.\",\"chunks\",\"a piece of something\",\"a chunk of language, a piece/chunk of bread, break our work down into chunks/pieces\",\"break down\",\"break down my work/a problem/a project into pieces/into smaller, manageable chunks\",\"more often than not\",\"= usually\",\"More often than not, I have a siesta in the afternoon\",\"Chapter 6: Concentration\",\"That strange feeling that someone is watching you, stayed with Emily for a few minutes but then disappeared as they watched the programme. The next day, Sunday, they decided to go out for brunch, and then spend some time in their favorite coffee bar.\",\"After eating, Tom wanted to read his new novel and Emily opted tocatch up on some tasks that she had fallen behind with.\",\"As they sat in the coffee shop, more and more people came in, and it became a hive of activity. Emily tried to focus on her work, but the background noise was proving to be too distracting.\",\"\\\"I'm such a stickler for concentration,\\\" she said, frustrated. \\\"I’m trying to plan my work for the next week, you know, breaking down my work into small chunks. But how can I do that with all this noise?\\\"\",\"One of the waiters seemed to have turned up the background music. Tom nodded sympathetically, \\\"Yeah, I know how you feel. More often than not, I need perfect silence to concentrate on my work. I don’t mean to be smug, but that’s why I never take my work to a coffee shop.\\\"\",\"Emily took a deep breath, trying to block out the noise. \\\"I'll just have to try harder,\\\" she said.\",\"But as she struggled to focus, that strange feeling she had had the previous day returned. She couldn't shake the feeling that again someone was watching her every move.\",\"go out for brunch\",\"opt to\",\"catch up on\",\"fall behind with\",\"a hive of activity   一片繁忙的景象\"]},\"407\":{\"h\":\"Part 1 - Flowers\",\"t\":[\"Part 1 - Flowers\",\"What kinds of flowers do you like?\",\"Have you planted any flowers?\",\"Have you ever sent flowers to anyone?\",\"Are there any flowers that have special meanings in your country?\",\"the florist/florist's\",\"the shop where you buy flowers\",\"some common flowers:\",\"roses\",\"on Valentine's Day\",\"Roses are renowned for their beauty\",\"symbolize love and affection\",\"They come in various colors, each with its own significance, which adds to their charm.\",\"tulips 郁金香 🌷\",\"Tulips from Holland\",\"jasmine ['dʒæzmɪn] 茉莉\",\"carnations [kɑː(r)ˈneɪʃ(ə)n] 康乃馨\",\"popular in wedding\",\"sunflowers\",\"Van Gogh, in his impressionist paintings\",\"are vibrant and exude a sense of happiness and positivitywith their bright yellow petals and distinctive appearance.\",\"cheerful, uplifting\",\"radiate positivity & warmth\",\"lotus [ˈləʊtəs] 莲，荷花\",\"a symbol of purity, enlightenment, and rebirth in my culture.\",\"It grows in muddy waters but emerges clean and beautiful, symbolizing spiritual growth and transformation.\",\"a bunch of flowers\",\"to water a flower\",\"petals 花瓣, stem 茎\",\"soft petals\",\"bright/dull petals\",\"I'm really partial to/I adore roses because of the bright petals.\",\"to have green fingers\"]},\"408\":{\"h\":\"3.1 What kinds of flowers do you like?\",\"t\":[\"I am not really a flower person, but I do buy flowers for our home now and again, and I usually go for carnations or roses.\",\"I find the bright colors and soft petals can give a fresh and relaxed feeling to the room.\",\"now and again\",\"now and then\",\"sometimes\",\"from time to time\",\"to go for\",\"= to choose or select\",\"If I buy flowers, I go for sunflowers.\"]},\"409\":{\"h\":\"3.2 Are there any flowers that have special meanings in your country?\",\"t\":[\"That's a good question, I think the most well-known one is the rose.\",\"A rose usually symbolizes love and passion, so we would give a red rose to someone to express our lovefor that person, or you might give it to someone you want to go out with/to go on a date with.\",\"symbolize\",\"represents\",\"expresses\"]},\"410\":{\"h\":\"4.1 What kinds of flowers do you like?\",\"t\":[\"I am not really a flower person. But when I buy flowers, I go for sunflowers and roses.\",\"Sunflowers are vibrant, and convey a sense of happiness and warmth with their bright yellow petals and distinctive appearance.\",\"Roses, on the other hand, represent love and affection. They have timeless elegance, come in a wide range of colors, each with its own unique symbolism.\"]},\"411\":{\"h\":\"4.2 Are there any flowers that have a special meaning in your country?\",\"t\":[\"Of course. Actually I think many well-known flowers have their own special meanings.\",\"For example, roses symbolize the love and passion. Sunflowers represent the positivity and warmth. And Lotus is a symbol of purity in my culture.\",\"Chapter 2: Flowers\",\"The next day, Tom surprised Emily with a bunch of fresh flowers, including a rose, colorful carnations, and some sunflowers.\",\"\\\"This is lovely, but is this the surprise he was talking about?\\\" Emily thought to herself.\",\"She immediately put them in a vase and put them alongside the indoor plants they already had. She realized she hadn't watered them for a few days; they were looking dry and withered.\",\"Tom interrupted her, \\\"I thought we could go for a walk in our favorite park. You know there is a special place I want to show you,\\\" he said.\",\"They jumped in the car and headed out to Heaton park. As they were walking around the park, they came across a well-known flower bed that symbolized love and friendship.\",\"\\\"I think these petals would express our feelings perfectly,\\\" Tom said as he picked some pink and white blooms.\",\"\\\"You can’t pick them Tom, just take a photo of me with the flowers in the background,\\\" said Emily.\",\"Tom took a few snaps and as they walked through the park, Emily couldn't help but wonder what other surprises Tom had in store for her.\",\"withered [ˈwɪðə(r)d] 干枯的，憔悴的\",\"think to oneself\",\"head to + place\",\"walk around the park\",\"come across\",\"flower bed 花坛\",\"bloom n. v. 花，开花\",\"take snaps/photos/pictures\"]},\"412\":{\"h\":\"Part 1 - Handwriting\",\"t\":[\"Writing, letters, computers\",\"zone in on a very specific topic of handwriting\",\"Do you often write with a pen?\",\"Can you tell someone's personality from his or her handwriting?\",\"Do you think people will still write letters in the future?\",\"What do you think are the differences between writing with a pen and typing on a computer?\",\"typing with/on a keyboard\",\"typing on a computer\",\"writing with a pen\",\"calligraphy\",\"= the art of writing\",\"graphology\",\"= the study of handwriting (and what it reveals/shows about you)\"]},\"413\":{\"h\":\"3.1 Do you think people will still write letters in the future?\",\"t\":[\"I'd say so yes, I don't think we are about togive upwriting letters completely.\",\"To my mind, many people feel they can express their emotions better in a letter, and handwriting is more personal, so I think we will still be writing lettersin the years to come.\",\"be about to\",\"going to\",\"will\",\"will be doing\",\"will have done\",\"to my mind\",\"in my opinion\",\"it seems to me\",\"I think\",\"to give up\",\"expression one's emotions\"]},\"414\":{\"h\":\"3.2 What do you think are the differences between writing with a pen and typing on a computer?\",\"t\":[\"Well, the way I see it, writing with a pen is more expressive, because everyone has their own style of handwriting which apparently can reveal a lot about themselves.\",\"That said, typing is much neater and it's easier to edit, you don't need to rub things out.\",\"To my mind\",\"It seems to me\",\"The way I see it\",\"It's much neater\",\"It's far neater\",\"It's way neater\",\"style of handwriting\",\"reveal a lot about themselves\",\"rub out\"]},\"415\":{\"h\":\"Part 1 - History\",\"t\":[\"This can quite a tricky topic, not only for ideas, but also for language.\",\"Do you like history?\",\"Did you enjoy learning history when you were a child?\",\"When was the last time you read about history?\",\"Do you think history is important?\",\"in past times (= in the past)\",\"I am fascinated/intrigued/captivated/engrossed by the lifestyle of people in past times\",\"I am bored/uninterested by the lifestyle of people in past times\"]},\"416\":{\"h\":\"3.1 Do you like history?\",\"t\":[\"I wouldn't say I am a big fan of history, but I do enjoy watching historical films or period dramas on TV.\",\"I find it fascinating to see the costumes and lifestyle of peoplein past times.\",\"For example, I used to watch Downtown Abbey and loved seeing how different society was then.\",\"I wouldn't say ...\",\"historical (adj.) = related to history\",\"historic (adj.) = famous in history, important or will be important in history\",\"a period drama = show/film set in the past\",\"in past times\",\"in the past\"]},\"417\":{\"h\":\"3.2 Did you enjoy learning history when you were a child at school?\",\"t\":[\"To be honest, not much.\",\"It tended to be all facts and figures that I couldn't remember very well.So it was a bit tedious.\",\"It was only when I left school and started traveling that I started to get a taste for history.\",\"it tended to be ...\",\"= it usually was ...\",\"facts and figures\",\"dates or names\",\"History at school was/has always been all facts and figures\",\"tedious adj.\",\"= boring, monotonous\",\"it was only when ...\",\"to get a taste for ...\",\"= to begin to love something\",\"When I first traveled abroad, I got a taste for history/foreign food/foreign culture/learning languages.\"]},\"418\":{\"h\":\"4.1 Do you like history?\"},\"419\":{\"h\":\"4.2 Did you enjoy learning history as a child?\",\"t\":[\"Chapter 5: History\",\"From the comfort of their tent, they heard a rustling sound in the trees. A wild cat, a caracal, had wandered close to their tent. It seemed to be looking for food.\",\"Fortunately, the local guide had told them what to do if they stumbled upon one.\",\"They both stayed perfectly still, without saying a word, or moving an inch. The cat finally just walked past their tent, not even noticing them.They breathed a sigh of relief and then laughed.\",\"Undoubtedly, they were really getting a taste for adventure. What an amazing experience they could tell their friends about when they got home.\",\"At the end of the week, it was time to go home. They had had an amazing adventure, but they were also ready for some home comforts.\",\"They were back home, it was Friday night, and they decided it was film night.\",\"\\\"What do you fancywatching?\\\" Tom asked, \\\"Planet Earth?\\\"\",\"\\\"Not more animals Tom, how about Downton Abbey! You know I've always been a big fan ofhistorical films and period dramas,\\\" Emily said as they settled in for a cozy night in.\",\"\\\"I love getting a taste for what life was like in past times.\\\"\",\"Tom nodded, \\\"Sure, if you want. I mean, I’m not really into history,\\\" he said, \\\"it just seems to be all facts and figures to me, but I can see the appeal of some period dramas, although most of them are rather boring.\\\"\",\"\\\"Well, I suppose it's all about how you look at it,\\\" Emily said with a smile. \\\"I love the way these stories reveal so much about society and human nature. I don’t think they are tedious at all.\\\"\",\"\\\"Ok, Downtown Abbey it is!\\\" Exclaimed Tom.\",\"But as they started watching, Emily started to get edgy.\",\"She suddenly had a strange feeling that someone was watching them.\",\"rustling n. 沙沙声\",\"caracal ['kærəˌkæl] 野猫\",\"stumble upon/on/across 偶然发现，遇上\",\"stumble n. 绊倒，失足，失误，失败 v. 绊脚，蹒跚而行，演奏\",\"breathe the sigh of relief 松了一口气\",\"exclaim v. 喊叫，惊呼\",\"edgy  ['edʒi] adj. 紧张的，激动人心的\"]},\"420\":{\"h\":\"Part 1 - Weather\",\"t\":[\"Do you like singing?\",\"Did you enjoy singing when you were a child?\",\"Will you take singing lessons in the future?\",\"Would you like to be a singer?\"]},\"421\":{\"h\":\"3.1 Do you like singing?\",\"t\":[\"Well, I enjoy listening to others sing, but me personally, I think I'm tone deaf.\",\"As much as I might try, I just can't hit the right notes; I am totally out of tune,every time, without fail.\",\"tone deaf\",\"can't hear different musical notes\",\"As much as I try, I just can't get up in the morning.\",\"As much as I try, I just can't do this homework.\",\"As much as I try, I just can't speak English.\",\"Yes, I love singing, you know, when I am pottering about at home, doing the housework or even in the shower, but that said, I have never sung in front of an audience. I wouldn't have the stomach to do so.\"]},\"422\":{\"h\":\"3.2\"},\"423\":{\"h\":\"Part 1 - Sky and Starts\",\"t\":[\"This can be related to other topic, particularly about the environment.\",\"Do you like to look at the sky?\",\"Do you know much about the stars?\",\"How did you learn about the stars?\",\"constellation\",\"Constellations are patterns of stars, or a group of stars that make a shape.\",\"the Big Bear 北斗七星, Orion 猎户座, Pegasus 飞马座, Gemini [ˈdʒemɪnaɪ] 双子座, Leo 狮子座, Capricorn 摩羯座\",\"horoscope [ˈhɒrəˌskəʊp] 星座；天宫图；占星术\",\"I saw a constellation in the night sky yesterday/last week.\",\"the night sky\",\"with a telescope\",\"with my naked eye\",\"a sunrise at dawn [dɔːn]\",\"a sunset at dusk\",\"the horizon = the skyline\"]},\"424\":{\"h\":\"3.1 Do you like to look at the sky?\",\"t\":[\"Yes, for sure.\",\"Whenever I get the chance, I love to take in a beautiful sunrise or sunset.\",\"Mind you, I do live in a city, so the sky is often overcast or polluted and it's not so easy to catch sight of the sun or the stars.\",\"to take in\",\"to enjoy a view\",\"Mind you\",\"connector, showing that something opposite is coming\",\"But/However\",\"overcast\",\"= dull and cloudy\",\"n. 覆盖；阴暗的天空；【矿】风桥；(网等)过远的一撒\",\"v. 使阴；使暗；包边缝拢；过远地撒(鱼网等)\",\"adj. 阴天的；多云的；阴暗的\",\"The sky over my hometown is , more often than not, overcast/clear 通常\",\"to catch sight of\",\"= to see\",\"It's hard to catch sight of the stars where I live.\"]},\"425\":{\"h\":\"3.2 Do you know much about the stars?\",\"t\":[\"To be honest, not a great deal.\",\"I mean, I learnt about the milky way at school, and actually I have picked up the names of a few common constellations from a mobile app. So, I learnt about the Great Bear and Orion, things like that.\",\"the milky way\",\"银河\",\"to pick up\",\"= to learn informally\"]},\"426\":{\"h\":\"4.1 Do you like to look at the sky?\",\"t\":[\"Yes, I do enjoy looking at the sky.\",\"It's a fascinating and beautiful part of nature that often inspires awe and wonder. Whether it's during the day when I can admire the blue sky or at night when I can gaze at the stars, the sky has always captivated me.\",\"It's a great way to relax and contemplate the universe's vastness and mysteries.\",\"a ... part of nature\",\"awe [ɔː] 敬畏、惊叹\",\"inspire awe and wonder\",\"admire 欣赏\",\"gaze at 注视, observe\",\"universe's vastness and mysteries\"]},\"427\":{\"h\":\"4.2 Do you know much about the stars?\",\"t\":[\"To be honest, I don't know much about the stars.\",\"While I find them captivating, I haven't delved intoin-depthastronomical knowledge or stargazing.\",\"However, I do appreciate their beauty and the sense of wonder they inspire.\",\"find it captivating\",\"delve into\",\"in-depth\",\"astronomical knowledge, stargazing\"]},\"428\":{\"h\":\"4.3 How did you learn about the stars\",\"t\":[\"I have learned about the stars primarily through casual observation and popular science documentaries.\",\"I haven't undergoneformal education or training in astronomy, but I've picked up basic knowledge about stars, constellations, and celestial phenomenathrough books, documentaries, and online resources.\",\"My interest in the topic has been more of a hobby than a structured study.\",\"undergo 经历\",\"formal education or training\",\"online resources\",\"A tale of love, danger and survival, Chapter 1: The Sky and Stars\",\"Tom and Emily had been friends since they were children. Growing up in the small town of Glossop, in the north of England, they had spent countless days exploring the nearby woods, riding bikes down the winding roads, and imagining all the adventures they would one day have.\",\"At the age of 21, their friendship blossomed into something more, and they started going out together. Tom was always there for Emily, through the ups and downs of life, and she knew that she could always count on him.\",\"Now, as they approached their mid-twenties, Tom and Emily were living together in a cozy apartment in the heart of Manchester.\",\"They both worked hard, Tom as a software engineer and Emily as a graphic designer, but they always found time for each other, whether it was cooking dinner together, going for walks in the park, or just binge-watching their favorite TV shows.\",\"Despite the busy city life, Tom and Emily still longed for the quiet nights and star-filled skies of their childhood. They often talked about taking a trip to the countryside to stargaze and get away from the hustle and bustle of city life.\",\"Little did Emily know, Tom had a surprise planned that would make all of her dreams come true.\",\"One spring morning, as the sunrise slowly peeked through the overcast sky of Manchester, Tom and Emily were already up and about, taking in the beauty of the morning sky. They loved to take the time to look up at the sky, whenever they got the chance.\",\"\\\"This sunrise is more beautiful than any sunset I have seen.\\\" Tom said smiling, \\\"and those fading constellations are amazing, but Emily none of them compare to your beauty.\\\"\",\"Emily blushed, \\\"Come on Mr. Romantic, time for breakfast!\\\"\",\"Secretly though, she loved this side of Tom.\",\"\\\"Emily, there's something I've been meaning to tell you,\\\" Tom said, taking her hand. \\\"I know we've talked about seeing the Milky Way together someday, but I want to make that happen sooner, rather than later. I have a surprise planned for us.\\\"\",\"Emily's eyes widened with excitement, \\\"What is it?\\\"\",\"\\\"You'll have to wait and see,\\\" Tom replied with a smile.\",\"ride bikes down the winding roads 弯曲的\",\"blossomed into something more\",\"blossom [ˈblɒs(ə)m] v. n. 开花；繁荣；兴旺；发展成\",\"count on 指望，信赖，依靠\",\"binge-watch [ˈbɪndʒ wɑːtʃ] 刷剧，一口气看完\",\"binge-watching 现在进行时\",\"long for\",\"star-filled skies of my childhood\",\"take a trip\",\"get away from the hustle and bustle of the city life\",\"the sunrise slowly peeked through the overcast sky\",\"to be up and about 起床走动\",\"(cannot) compare to 比不上\",\"mean to do 打算做\",\"my eyes widened with excitement 兴奋地瞪大了双眼\"]},\"429\":{\"h\":\"Part 1 - Weather\",\"t\":[\"erratic weather = changeable\",\"flood\",\"hailstorms\",\"snowstorms\",\"What kind of weather do you like?\",\"What's the weather like where you live?\",\"What do you do when it rains?\",\"Do you prefer dry or wet weather?\"]},\"430\":{\"h\":\"3.1 What kind of weather do you like?\",\"t\":[\"It rains a lot, and many days, it just pours down, non-stop.\",\"In the summer though, it can get quite hot, temperatures get up to 40 degrees, sweltering heat. It's too hot for me, to be honest.\",\"pour down\",\"to rain a lot\",\"non-stop without stopping\",\"temperatures get/go up to 40 degrees\",\"temperatures go down to minus 5 degrees\",\"temperatures get as low as minus 5 degrees\",\"sweltering heat\",\"sweltering adj. 闷热的；热得难受的\",\"overwhelming heat, too much heat\"]},\"431\":{\"h\":\"3.2 Do you prefer dry or wet weather?\",\"t\":[\"I prefer dry weather.\",\"You can do so much more when it's not raining.\",\"I can go walking or do any kind of outdoor sports.\",\"When it rains, it just puts me offgoing out and I end upwasting time doing nothing in particular at home.\",\"to put you off doing it\",\"= to make you feel like not doing it\",\"end up\",\"doing nothing in particular\"]},\"432\":{\"h\":\"Part 1 - Wild animals\",\"t\":[\"wild animals = not tame, not domesticated\",\"to think on my feet = to think quickly\",\"Wild Animals QA\",\"Have you ever seen wild animals before?\",\"Which wild animals do you like the most?\",\"Do you like to go to the zoo?\",\"in the wild\",\"I think we should/ought to/it'd be a good idea to let tigers to live in the wild.\",\"extinction\",\"in danger of extinction <-> be safe from distinction\",\"Many animals are in danger of extinction/dying out/disappearing.\"]},\"433\":{\"h\":\"3.1 Have you ever seen wild animals before?\",\"t\":[\"Well, I have seen lots in the zoo, such as lions and elephants, but I've never seen those kinds of animals in the wild.\",\"When I was a kid growing up, I saw lots of foxes, because there were plenty of them in the forests near where I used to live.\"]},\"434\":{\"h\":\"3.2 Do you like to go to the zoo?\",\"t\":[\"Yes an no.\",\"I guess on the one hand, zoos are fun and it's amazing to get up close to those magnificent creatures like the lions.\",\"But, on the other hand, the cages in many zoos are too cramped and the living conditions of many animals leave a lot to be desired.\",\"get up close, get close up <-> get far away\",\"I'd love to get close up to a panda.\",\"I would love to get far away from a lion.\",\"cramped adj .\",\"= not enough space\",\"leave a lot to be desired\",\"= not good enough\",\"Chapter 4: Animals\",\"The following weekend, Tom took Emily to Chester zoo. He had something in mind.\",\"He knew Emily loved animals and had always wanted to go on Safari in Africa, but they had never got round toorganizing it. Not to mention it would cost an arm and a leg.\",\"Strolling round the zoo, they saw the tigers, monkeys, giraffes and many more wild animals.\",\"As they sat on a bench opposite the lions, having a coffee, Tom fumbled for something in his pocket. He took out a little box and suddenly went down on one knee. He popped the question.\",\"\\\"Emily, will you marry me?\\\"\",\"Emily was initially in shock, then smiled and accepted without giving it a second thought.\",\"The lions also stopped and smiled, as if posing for a photo.\",\"What a beautiful day!\",\"Not wanting to waste any time, they got married within a month.\",\"For their honeymoon, they choose, of course, to go on a Safari to Kenya. Finally, they would see all those beautiful animals in the wild.\",\"When they finally arrived in Kenya, they were so excited, they could hardly believe it. They stayed some nights in a hotel, and some nights in a tent, getting close to nature.\",\"One evening, as they sat in their tent, deep in the wild, Tom and Emily looked out at the vast expanse of nature surrounding them. They cold see giraffes chewing leaves on treetops in the distance.\",\"\\\"It's amazing to get close up to these animals in their natural habitats,\\\" Tom said. \\\"It's so different from seeing them in those cramped cages at the zoo.” \\\"I agree,\\\" Emily replied. \\\"Those zoo enclosures leave a lot to be desired. You know, many of these animals are in danger of extinction, and I know zoos try to help, but there is so much more we should be doing to protect them.\\\"\",\"Tom smiled, \\\"That's why I love you, Emily. You're always thinking of others.\\\"\",\"But little did they know, danger was lurking just beyond the trees.\",\"have something in mind\",\"get round to doing something 找时间做\",\"Not to mention\",\"cost an arm and a leg 非常昂贵\",\"stroll round 漫步\",\"fumble for 搜寻，摸索\",\"go down on one knee\",\"to be in shock\",\"without giving it a second thought\",\"honeymoon 蜜月, enclosures 围栏, lurk 潜伏\"]},\"435\":{\"h\":\"Topics\",\"t\":[\"Animals\",\"详情\",\"different species\",\"Animals are kept in captivity in cages, caged animals\",\"Tigers are an endangered animal. save endangered animals\",\"become extinct, on the brick/verge of extinction\",\"conservation/natural/safari park, roam freely\",\"We can protect animals from poaching (= illegal hunting)\",\"种类：\",\"herbivores [ˈhɜː(r)bɪˌvɔː(r)] = animals that eat plants e.g. Cows, rabbits, horses\",\"carnivores [ˈkɑː(r)nɪvɔː(r)] are meat-eating animals e.g. Lions, tigers, snakes\",\"mammals are warm-blooded, and the young feed on milk e.g. Humans, whales, dogs, dolphins, bears\",\"marsupials [mɑː(r)ˈsuːpiəl] - the young lives in a pouch (native to Australia) e.g. Kangaroo, koala, wombats [ˈwɒmˌbæt] 袋熊, platypus [ˈplætɪpəs] 鸭嘴兽, possums [ˈpɒs(ə)m] 负鼠, wallabies [ˈwɒləbi] 小袋鼠\",\"Animals that eat other animals are called predators\",\"pet:\",\"for security/company/companionship, keep you company, in today's isolated life they want a companion\",\"to curb loneliness\",\"symbolize a sense of welfare/well-being\",\"help us meet other people, Pets give us a great chance to socialize with others. to mingle with others and make new friends\",\"zoos: the good and the bad\",\"有好有坏： \",\"I am on the fence on this one\",\"I am in two minds about this\",\"坏： \",\"cages and living conditions are too cramped [kræmpt] 狭窄的； wild animals need liberty and freedom\",\"Animals lose their instincts, for example how to hunt, and often become depresses.\",\"They might be good for people but if we think of animals, zoos limit their activities and natural way of spending their life.\",\"By keeping animals cooped up (= in a small cage), there are more chances of extinction, as they don’t get the conditions they need to mate and reproduce.\",\"By keeping animals in captivity, ecosystems can be badly affected.\",\"Some zoos abuse animals, for example, training elephants for entertainment.\",\"Zoos pose a risk, if animals can escape, they can harm people.\",\"好： \",\"educate children. can be good for educational purposes to let children know about a wide range of animals.\",\"That said, we should protect the natural habitats where the endangered species live.\",\"I think, if worker treat animals kindly, zoos are good.\",\"Well, it really depends on how well zoos are managed, and how much protection can be provided to the animals.\",\"It's good to keep some of the animals in zoos, as otherwise their predators will eat them and their numbers will decrease.\",\"I think zoos are good to provide favorable conditions to endangered species and so help save them.\",\"Zoos can help us understand the biodiversity on our planet.\",\"elephant:\",\"elephants are amazing creatures.\",\"I have seen elephants on the television, not in real life, where they are trained to do amazing things, from almost acrobatics to painting with their trunk.\",\"I just think they're lovely creatures and they seem sociable and very friendly\",\"They are typically an animal that humans like to tame.\",\"pandas:\",\"cute and interesting\",\"on the internet and in books, where they are doing various activities, from eating bamboo to playing with their cubs (幼崽).\",\"adorable (可爱的，极讨人喜爱的). gentle, peaceful\",\"Books\",\"详情\",\"curl up with books/a book\",\"I am fond of flicking through a book in a bookshop. \",\"skim/flip/leaf through books in a bookstore\",\"turn over a new leaf -> to begin a new if you've done lots of mistakes in your life and you think I'm going to start fresh start = to start new / fresh\",\"I am a voracious/an avid reader of thriller novel books. (对知识渴求的) \",\"A bookworm\",\"Reading books promote literacy.\",\"expand your knowledge\",\"practical, hands-on (动手的 = practical)\",\"engaging, compelling\",\"It has you on the edge of your seat 坐立不安\",\"a heavy read (n.)\",\"It's a good read.\",\"This book is easy reading. \",\"This book makes easy reading\",\"It's easy to read.\",\"I could’t put it down. \",\"It was so exciting I couldn't put it down.\",\"It had me spellbound (着迷) - I was engaged like under a spell.\",\"It was a gripping novel - gripping 扣人心弦的\",\"I read it from cover to cover 从头读到尾\",\"It’s a captivating/great read\",\"It had an intriguing plot\",\"Copyright.\",\"pirate books (copy books)\",\"I love the smell both of old books and newly-printed ones.\",\"Types of books\",\"fictional or non-fictional books\",\"Fictional novels- think of the different genres [ˈʒɒnrə] 体裁，类型 – \",\"Crime novels\",\"Romance\",\"Thriller – suspense\",\"Comedy\",\"Action\",\"Sci-fi\",\"Books that have been made into a film\",\"Non-fictional \",\"Biographies\",\"Autobiographies\",\"Hobbies\",\"Historical (adj.)\",\"Personal development = self help\",\"Books related to your field of work\",\"Recipe book\",\"Travel guide\",\"xxx is my all time favorite\",\"On my bookshelf, I have got books which are related to classic literature and my favorite one is \\\"War and peace\\\" by L...\",\"Key words:\",\"plot - storyline\",\"setting - background (where - when)\",\"characters\",\"protagonist (main character / hero)\",\"I'm not very fond of reading books, but if I have some spare time, I make sure to read books which can enhance my communication skills.\",\"I am partial to ... = I am fond of ...\",\"Q: Do people nowadays read more than in the past ? - more books are available these days - people read less nowadays. read fewer books. - Maybe we do. We're actually reading on our phones and tablets a lot more. We are actually reading more than we did in the past, cause in the past we only had books. Right. We didn't have digital reading. - People can find more options for reading sources. - people might become less inclined to do ... - With development of technology, people nowadays prefer to listen to audio books or watch movies rather than reading books. - Compared to the past, people read more due to the internet.\",\"Q: In what ways has the way we read changed in recent years? - Compared to the past, people used to be illiterate, only rich people could be educated. - We read a lot nowadays due to explosion of internet as compared to the earlier time.\",\"Gifts\",\"详情\",\"expense\",\"on special/significant occasions (birthdays, marriages, festivals - Double Seventh Festival, Valentine's Day)\",\"for the first time or for a special occasion\",\"see someone's face light/brighten up when they receive something thoughtful or meaningful.\",\"demonstrate our love for the receiver\",\"commemorate the significance of the event for that person\",\"纪念\",\"It could be something simple like a box of chocolates, a bouquet [buːˈkeɪ] of flowers, or even a small decorative item. a bottle of wine\",\"visit the elders\",\"it's a nice gesture to bring a small gift.\",\"make the visit more pleasant\",\"express my gratitude for being invited into their home\",\"appreciate their hospitality [ˌhɒspɪˈtæləti]\",\"it's a way to show my appreciation and care for others\",\"strengthen relationships\",\"make someone's day a little brighter.\",\"spend a few extra minutes to wrap it. It add a gesture.\",\"I believe that the thought behind a gift matters more than its monetary value.\",\"thought and sentiment behind the gift matter more than its price tag\",\"I appreciate beautiful items.\",\"such as elegant artwork, stylish accessories, and aesthetically pleasing decorations.\",\"Also, I enjoy receiving books related to my work, that can enhance my productivity\",\"celebrate the birthday/occasion\",\"wedding anniversaries, birthdays\",\"a necklace of gold\",\"greeting cards\",\"recipients\",\"affordable\",\"find a balance of the sentiment of the gift and its cost, focusing on making the recipient feel appreciated and cared for.\",\"什么礼物 depends on occasions and cultural preferences\",\"Chinese New Year - money, cloths\",\"weddings - beautifully designed clothing, jewelry are quite popular\",\"handmade crafts are also well-received\"]},\"436\":{\"h\":\"Other\"},\"437\":{\"h\":\"Post\"},\"438\":{\"h\":\"Ai\"},\"439\":{\"h\":\"Character Encoding\"},\"440\":{\"h\":\"Basic\"},\"441\":{\"h\":\"Os\"},\"442\":{\"h\":\"Code\"},\"443\":{\"h\":\"Spoken English\"},\"444\":{\"h\":\"English Study\"},\"445\":{\"h\":\"Machine Learning\"},\"446\":{\"h\":\"Section1\"},\"447\":{\"h\":\"Section2\"},\"448\":{\"h\":\"Section1\"},\"449\":{\"h\":\"Javascript\"},\"450\":{\"h\":\"Front End\"},\"451\":{\"h\":\"Breakout Room\"},\"452\":{\"h\":\"Question Bank\"},\"453\":{\"h\":\"Topics\"}},\"dirtCount\":0,\"index\":[[\"什么礼物\",{\"1\":{\"435\":1}}],[\"什么是互信息\",{\"0\":{\"254\":1}}],[\"纪念\",{\"1\":{\"435\":1}}],[\"扣人心弦的\",{\"1\":{\"435\":1}}],[\"着迷\",{\"1\":{\"435\":1}}],[\"坐立不安\",{\"1\":{\"435\":1}}],[\"极讨人喜爱的\",{\"1\":{\"435\":1}}],[\"极端情况比如只有一个词\",{\"1\":{\"346\":1}}],[\"极端情况下\",{\"1\":{\"154\":1,\"200\":1,\"212\":1}}],[\"极端情况下需要探测整个散列表\",{\"1\":{\"149\":1}}],[\"幼崽\",{\"1\":{\"435\":1}}],[\"好\",{\"1\":{\"435\":1}}],[\"狭窄的\",{\"1\":{\"435\":1}}],[\"坏\",{\"1\":{\"435\":1}}],[\"鸭嘴兽\",{\"1\":{\"435\":1}}],[\"袋熊\",{\"1\":{\"435\":1}}],[\"详情\",{\"1\":{\"435\":3}}],[\"潜伏\",{\"1\":{\"434\":1}}],[\"围栏\",{\"1\":{\"434\":1}}],[\"蜜月\",{\"1\":{\"434\":1}}],[\"摸索\",{\"1\":{\"434\":1}}],[\"搜寻\",{\"1\":{\"434\":1}}],[\"搜索\",{\"1\":{\"128\":1}}],[\"搜索工具或\",{\"1\":{\"127\":1}}],[\"漫步\",{\"1\":{\"434\":1}}],[\"热得难受的\",{\"1\":{\"430\":1}}],[\"热身\",{\"0\":{\"240\":1}}],[\"闷热的\",{\"1\":{\"430\":1}}],[\"兴奋地瞪大了双眼\",{\"1\":{\"428\":1}}],[\"兴旺\",{\"1\":{\"428\":1}}],[\"起床走动\",{\"1\":{\"428\":1}}],[\"起源于\",{\"1\":{\"112\":1}}],[\"刷剧\",{\"1\":{\"428\":1}}],[\"依靠\",{\"1\":{\"428\":1}}],[\"依次类推\",{\"1\":{\"151\":1}}],[\"依次向后查找\",{\"1\":{\"149\":1}}],[\"弯曲的\",{\"1\":{\"428\":1}}],[\"欣赏\",{\"1\":{\"426\":1}}],[\"惊叹\",{\"1\":{\"426\":1}}],[\"惊呼\",{\"1\":{\"419\":1}}],[\"敬畏\",{\"1\":{\"426\":1}}],[\"ɔː\",{\"1\":{\"426\":1}}],[\"银河\",{\"1\":{\"425\":1}}],[\"阴暗的\",{\"1\":{\"424\":1}}],[\"阴暗的天空\",{\"1\":{\"424\":1}}],[\"阴天的\",{\"1\":{\"424\":1}}],[\"鱼网等\",{\"1\":{\"424\":1}}],[\"风桥\",{\"1\":{\"424\":1}}],[\"风险管理和绩效分析的工具\",{\"1\":{\"7\":1}}],[\"矿\",{\"1\":{\"424\":1}}],[\"占星术\",{\"1\":{\"423\":1}}],[\"占用了\",{\"1\":{\"375\":1}}],[\"天宫图\",{\"1\":{\"423\":1}}],[\"天然地支持动态扩容\",{\"1\":{\"173\":1}}],[\"星座\",{\"1\":{\"423\":1}}],[\"摩羯座\",{\"1\":{\"423\":1}}],[\"狮子座\",{\"1\":{\"423\":1}}],[\"飞马座\",{\"1\":{\"423\":1}}],[\"猎户座\",{\"1\":{\"423\":1}}],[\"北斗七星\",{\"1\":{\"423\":1}}],[\"激动人心的\",{\"1\":{\"419\":1}}],[\"紧张的\",{\"1\":{\"419\":1}}],[\"喊叫\",{\"1\":{\"419\":1}}],[\"松了一口气\",{\"1\":{\"419\":1}}],[\"演奏\",{\"1\":{\"419\":1}}],[\"蹒跚而行\",{\"1\":{\"419\":1}}],[\"绊脚\",{\"1\":{\"419\":1}}],[\"绊倒\",{\"1\":{\"419\":1}}],[\"失败\",{\"1\":{\"419\":1}}],[\"失误\",{\"1\":{\"419\":1}}],[\"失足\",{\"1\":{\"419\":1}}],[\"遇上\",{\"1\":{\"419\":1}}],[\"遇到运算符时\",{\"1\":{\"220\":1}}],[\"遇到数字时\",{\"1\":{\"220\":1}}],[\"遇到标记为\",{\"1\":{\"149\":1}}],[\"偶然发现\",{\"1\":{\"419\":1}}],[\"野猫\",{\"1\":{\"419\":1}}],[\"沙沙声\",{\"1\":{\"419\":1}}],[\"憔悴的\",{\"1\":{\"411\":1}}],[\"干枯的\",{\"1\":{\"411\":1}}],[\"茎\",{\"1\":{\"407\":1}}],[\"花\",{\"1\":{\"411\":1}}],[\"花坛\",{\"1\":{\"411\":1}}],[\"花瓣\",{\"1\":{\"407\":1}}],[\"花费长达数周的时间\",{\"1\":{\"272\":1}}],[\"荷花\",{\"1\":{\"407\":1}}],[\"莲\",{\"1\":{\"407\":1}}],[\"康乃馨\",{\"1\":{\"407\":1}}],[\"茉莉\",{\"1\":{\"407\":1}}],[\"🌷\",{\"1\":{\"407\":1}}],[\"郁金香\",{\"1\":{\"407\":1}}],[\"轻松愉快的\",{\"1\":{\"403\":1}}],[\"调到某频道\",{\"1\":{\"403\":1}}],[\"调用会抛出错误\",{\"1\":{\"377\":1}}],[\"调用层次很深\",{\"1\":{\"192\":1}}],[\"调用命令\",{\"1\":{\"133\":1}}],[\"调用的\",{\"1\":{\"28\":1}}],[\"调用\",{\"1\":{\"20\":1,\"315\":1}}],[\"尝试新东西\",{\"1\":{\"403\":1}}],[\"尝试了多种可配置的\",{\"1\":{\"308\":1}}],[\"体裁\",{\"1\":{\"403\":1,\"435\":1}}],[\"体系用的是\",{\"1\":{\"127\":1}}],[\"体系使用的是\",{\"1\":{\"127\":1}}],[\"沉浸的\",{\"1\":{\"402\":1}}],[\"ɪ\",{\"1\":{\"402\":1}}],[\"忙的时候\",{\"1\":{\"402\":1}}],[\"焦虑不安\",{\"1\":{\"401\":1}}],[\"耳机\",{\"1\":{\"400\":1}}],[\"漂亮的\",{\"1\":{\"400\":1}}],[\"灵便的\",{\"1\":{\"400\":1}}],[\"布尔转换\",{\"1\":{\"381\":1}}],[\"布林带或成交量指标等\",{\"1\":{\"4\":1}}],[\"布林带的上轨会在趋势结束前收口\",{\"1\":{\"3\":1}}],[\"布林带的下轨会在趋势结束前收口\",{\"1\":{\"3\":1}}],[\"布林带指标是什么\",{\"1\":{\"3\":1}}],[\"布林线指标怎么用\",{\"1\":{\"3\":1}}],[\"布林线包括上中下三条轨道线\",{\"1\":{\"3\":1}}],[\"布林线\",{\"0\":{\"3\":1}}],[\"拆箱转换\",{\"0\":{\"381\":1}}],[\"科学计数法\",{\"1\":{\"379\":1}}],[\"八进制\",{\"1\":{\"379\":1}}],[\"搭配时\",{\"1\":{\"377\":1}}],[\"浮点数精度问题\",{\"1\":{\"375\":1}}],[\"全\",{\"1\":{\"375\":3}}],[\"全局变量\",{\"1\":{\"192\":1}}],[\"全局注册表中的\",{\"1\":{\"14\":1}}],[\"永远无法变更\",{\"1\":{\"374\":1}}],[\"局部变量中的\",{\"1\":{\"373\":1}}],[\"局限性和偏见\",{\"1\":{\"338\":1}}],[\"局限性和\",{\"1\":{\"328\":1}}],[\"局限性\",{\"0\":{\"268\":1}}],[\"局限在一个子网里\",{\"1\":{\"112\":1}}],[\"七种类型\",{\"0\":{\"372\":1}}],[\"七层高的建筑\",{\"1\":{\"246\":1}}],[\"边界路由器如何将\",{\"1\":{\"370\":1}}],[\"边界路由器之间使用\",{\"1\":{\"370\":1}}],[\"走另外一条路\",{\"1\":{\"370\":1}}],[\"路径最短往往最优\",{\"1\":{\"370\":1}}],[\"路由可以配置成这样\",{\"1\":{\"367\":1}}],[\"路由表\",{\"1\":{\"367\":2}}],[\"路由器中维护路由表\",{\"1\":{\"367\":1}}],[\"路由器\",{\"1\":{\"366\":2}}],[\"路由器询问与通告\",{\"1\":{\"360\":1}}],[\"跳\",{\"1\":{\"369\":1}}],[\"跳表是通过随机函数来维护前面提到的\",{\"1\":{\"200\":1}}],[\"跳表还会退化成单链表\",{\"1\":{\"200\":1}}],[\"跳表索引动态更新\",{\"0\":{\"200\":1}}],[\"跳表类似于在链表中实现二分查找\",{\"1\":{\"196\":1}}],[\"跳表\",{\"0\":{\"195\":1,\"196\":1},\"1\":{\"195\":1}}],[\"拥塞和环路\",{\"1\":{\"369\":1}}],[\"慢收敛\",{\"1\":{\"369\":1}}],[\"慢速线是对快速线进行平滑处理得到的\",{\"1\":{\"5\":1}}],[\"节点之间仅交换距离向量信息\",{\"1\":{\"369\":1}}],[\"节点周期性地将其向量表发送给相邻节点\",{\"1\":{\"369\":1}}],[\"容易实现和部署\",{\"1\":{\"369\":1}}],[\"容易造成内存碎片\",{\"1\":{\"173\":1}}],[\"容易造成属性名的冲突\",{\"1\":{\"11\":1,\"376\":1}}],[\"距离值可能会趋向于无穷大\",{\"1\":{\"369\":1}}],[\"距离向量算法不能有效处理网络拥塞或环路情况\",{\"1\":{\"369\":1}}],[\"距离向量算法的一个缺点是慢收敛性\",{\"1\":{\"369\":1}}],[\"距离向量路由算法相对较简单\",{\"1\":{\"369\":1}}],[\"距离矢量路由算法\",{\"1\":{\"369\":1}}],[\"叫\",{\"1\":{\"367\":1}}],[\"房东家里从不同的运营商哪里拉了两根网线\",{\"1\":{\"367\":1}}],[\"权重是\",{\"1\":{\"367\":2}}],[\"权重的更新既会使\",{\"1\":{\"46\":1}}],[\"讲经过\",{\"1\":{\"367\":1}}],[\"号口出去\",{\"1\":{\"365\":2}}],[\"静态路由就是在路由器上配置一条一条规则\",{\"1\":{\"365\":1}}],[\"静态路由\",{\"0\":{\"365\":1}}],[\"静僻处\",{\"1\":{\"248\":1}}],[\"剩下的就交给网关了\",{\"1\":{\"364\":1}}],[\"剩余的位数\",{\"1\":{\"111\":1}}],[\"放入\",{\"1\":{\"364\":1,\"366\":1}}],[\"放到\",{\"1\":{\"364\":1}}],[\"放在\",{\"1\":{\"124\":1}}],[\"服务类型\",{\"1\":{\"364\":1}}],[\"服务器会给\",{\"1\":{\"122\":1}}],[\"服务器请求计算机的配置信息\",{\"1\":{\"122\":1}}],[\"服务器请求下载这个文件\",{\"1\":{\"122\":1}}],[\"服务器将文件传给它\",{\"1\":{\"122\":1}}],[\"服务器上\",{\"1\":{\"122\":1}}],[\"服务器上下载某个文件\",{\"1\":{\"121\":1}}],[\"服务器下载启动文件\",{\"1\":{\"122\":1}}],[\"服务器在哪\",{\"1\":{\"121\":1}}],[\"服务器在哪呢\",{\"1\":{\"121\":1}}],[\"服务器的地址\",{\"1\":{\"121\":1,\"122\":1}}],[\"服务器\",{\"1\":{\"118\":1,\"122\":1,\"366\":3}}],[\"服务器地址等\",{\"1\":{\"118\":1}}],[\"错误码来确定经过的\",{\"1\":{\"362\":1}}],[\"追踪路由\",{\"1\":{\"362\":1}}],[\"制造一些能够产生错误的场景\",{\"1\":{\"362\":1}}],[\"制定为\",{\"1\":{\"94\":1}}],[\"点此阅读\",{\"1\":{\"361\":1}}],[\"点此查看\",{\"1\":{\"136\":1}}],[\"外网路由协议\",{\"1\":{\"370\":1}}],[\"外\",{\"1\":{\"361\":1}}],[\"外连接\",{\"1\":{\"260\":1}}],[\"端口出去\",{\"1\":{\"367\":1}}],[\"端口号\",{\"1\":{\"362\":1}}],[\"端口不可达\",{\"1\":{\"360\":1,\"362\":1}}],[\"端口什么都接受什么都转发的话\",{\"1\":{\"354\":1}}],[\"未运行\",{\"1\":{\"360\":1}}],[\"未定义\",{\"1\":{\"97\":1,\"111\":8}}],[\"询问报文\",{\"1\":{\"360\":1}}],[\"差错时就减小分组的长度\",{\"1\":{\"362\":1}}],[\"差错报文的使用\",{\"0\":{\"362\":1}}],[\"差错报告报文\",{\"1\":{\"360\":2,\"363\":1}}],[\"差异可能会影响\",{\"1\":{\"261\":1}}],[\"校验和\",{\"1\":{\"360\":1}}],[\"肯呢个出现的不可靠问题\",{\"1\":{\"360\":1}}],[\"口\",{\"1\":{\"358\":1}}],[\"口以外的其他口\",{\"1\":{\"354\":1}}],[\"虚拟局域网\",{\"1\":{\"358\":1}}],[\"虚拟隔离\",{\"1\":{\"358\":1}}],[\"虚拟助手和游戏智能角色\",{\"1\":{\"38\":1}}],[\"物理隔离\",{\"1\":{\"358\":1}}],[\"物理层\",{\"0\":{\"349\":1,\"350\":1}}],[\"物理层面的字节序列\",{\"1\":{\"83\":1}}],[\"安全问题\",{\"0\":{\"358\":1}}],[\"安装\",{\"1\":{\"127\":1,\"128\":1,\"129\":1,\"133\":2,\"336\":1}}],[\"安装软件\",{\"0\":{\"126\":1}}],[\"互联网控制报文协议\",{\"1\":{\"360\":1}}],[\"互相比较实例\",{\"1\":{\"356\":1}}],[\"互信息是无法检测出特征之间的相互作用的\",{\"1\":{\"255\":1}}],[\"互信息最小是\",{\"1\":{\"255\":1}}],[\"互信息分数\",{\"0\":{\"255\":1}}],[\"互信息用不确定性\",{\"1\":{\"254\":1}}],[\"互信息就显得非常重要了\",{\"1\":{\"253\":1}}],[\"互信息\",{\"0\":{\"253\":1},\"1\":{\"254\":1}}],[\"根交换机\",{\"1\":{\"356\":1}}],[\"根据里面的内容\",{\"1\":{\"364\":1}}],[\"根据输入文本生成新的句子\",{\"1\":{\"264\":1}}],[\"根据上下文中提供的信息提取问题的答案\",{\"1\":{\"264\":1}}],[\"根据每一位来排序\",{\"1\":{\"214\":1}}],[\"根据要找的值与\",{\"1\":{\"171\":1}}],[\"根据\",{\"1\":{\"64\":1,\"353\":1,\"364\":1}}],[\"根据现在的\",{\"1\":{\"54\":1}}],[\"根据该状态为每一个\",{\"1\":{\"41\":1}}],[\"根据数组计算单个值\",{\"1\":{\"28\":1}}],[\"电脑\",{\"1\":{\"354\":2}}],[\"电话号码\",{\"1\":{\"259\":1}}],[\"操作代码\",{\"1\":{\"353\":1}}],[\"操作系统给每个线程分配了一块独立的内存空间\",{\"1\":{\"219\":1}}],[\"硬件地址长度\",{\"1\":{\"353\":1}}],[\"硬件类型\",{\"1\":{\"353\":1}}],[\"报文大类\",{\"1\":{\"360\":1}}],[\"报文类型\",{\"1\":{\"360\":2}}],[\"报文前\",{\"1\":{\"360\":1}}],[\"报文是封装在\",{\"1\":{\"360\":1}}],[\"报文格式\",{\"1\":{\"353\":1}}],[\"报文\",{\"1\":{\"353\":1,\"360\":2,\"362\":1}}],[\"答案\",{\"1\":{\"353\":1}}],[\"怎么知道每台机器的\",{\"1\":{\"353\":1}}],[\"怎么办\",{\"1\":{\"340\":1}}],[\"台机器\",{\"1\":{\"353\":1}}],[\"异或来计算整个包是否在发送的过程中出现了了错误\",{\"1\":{\"352\":1}}],[\"链路状态路由算法\",{\"1\":{\"369\":1}}],[\"链路层地址\",{\"1\":{\"352\":1}}],[\"链表中环的检测\",{\"1\":{\"183\":1}}],[\"链表中的结点是零散分布在内存中的\",{\"1\":{\"154\":1}}],[\"链表只包含两个结点时\",{\"1\":{\"181\":1}}],[\"链表只包含一个结点时\",{\"1\":{\"181\":1}}],[\"链表为空时\",{\"1\":{\"181\":1}}],[\"链表的典型应用场景\",{\"1\":{\"175\":1}}],[\"链表的结构五花八门\",{\"1\":{\"168\":1}}],[\"链表本身没有大小的限制\",{\"1\":{\"173\":1}}],[\"链表\",{\"0\":{\"167\":1,\"173\":1}}],[\"链表就转换为红黑树\",{\"1\":{\"158\":1}}],[\"链表要存指针\",{\"1\":{\"154\":1}}],[\"链表法包含指针\",{\"1\":{\"154\":1}}],[\"链表法\",{\"0\":{\"152\":1},\"1\":{\"154\":1}}],[\"谁接收\",{\"1\":{\"352\":1}}],[\"谁能租给我个\",{\"1\":{\"116\":1}}],[\"堵的话就回去\",{\"1\":{\"352\":1}}],[\"管他三七二十一\",{\"1\":{\"352\":1}}],[\"信赖\",{\"1\":{\"428\":1}}],[\"信道划分\",{\"1\":{\"352\":1}}],[\"信息\",{\"1\":{\"129\":2}}],[\"信息技术中文编码字符集\",{\"1\":{\"102\":1}}],[\"信息从一种形式转换为另一种形式的过程\",{\"1\":{\"83\":1}}],[\"媒体访问控制\",{\"0\":{\"352\":1}}],[\"集线器是广播的\",{\"1\":{\"354\":1}}],[\"集线器\",{\"1\":{\"350\":1}}],[\"集群上进行训练\",{\"1\":{\"326\":1}}],[\"集群或\",{\"1\":{\"326\":1}}],[\"成为一批\",{\"1\":{\"347\":1}}],[\"成正比\",{\"1\":{\"152\":1,\"162\":1}}],[\"混有\",{\"1\":{\"345\":1}}],[\"各类\",{\"1\":{\"345\":1}}],[\"各国对于\",{\"1\":{\"95\":1}}],[\"切片\",{\"0\":{\"344\":1}}],[\"属于\",{\"1\":{\"360\":1}}],[\"属于特定的类型\",{\"1\":{\"339\":1}}],[\"属性来查看对应的\",{\"1\":{\"283\":1}}],[\"属性的对象\",{\"1\":{\"22\":1,\"24\":1}}],[\"属性的对象叫类数组\",{\"1\":{\"19\":1}}],[\"属性的顺序\",{\"0\":{\"10\":1}}],[\"属性只能是\",{\"1\":{\"9\":1}}],[\"属性名没有这个限制\",{\"1\":{\"9\":1}}],[\"属性\",{\"1\":{\"9\":1,\"13\":2,\"18\":1,\"20\":1,\"28\":1}}],[\"描述健康状况的标签\",{\"1\":{\"345\":1}}],[\"描述\",{\"1\":{\"338\":1}}],[\"建议使用\",{\"1\":{\"373\":1}}],[\"建议把所有的数据填充到固定的长度\",{\"1\":{\"325\":1}}],[\"建立\",{\"0\":{\"338\":1},\"1\":{\"338\":1}}],[\"仓库\",{\"1\":{\"337\":1}}],[\"仓库名称为你选择的输出路径\",{\"1\":{\"331\":1}}],[\"工作\",{\"1\":{\"360\":1}}],[\"工作流将他们推到远端\",{\"1\":{\"336\":1}}],[\"工业级散列表\",{\"0\":{\"155\":1}}],[\"确认\",{\"1\":{\"362\":1}}],[\"确保我们本地\",{\"1\":{\"336\":1}}],[\"确定路径的\",{\"1\":{\"362\":1}}],[\"确定是在输入的左侧还是右侧进行\",{\"1\":{\"313\":1}}],[\"确定句子在语法上是否正确或两个句子在逻辑上是否相关\",{\"1\":{\"264\":1}}],[\"确定数据范围\",{\"1\":{\"213\":1}}],[\"页面\",{\"0\":{\"333\":1}}],[\"页面上创建\",{\"1\":{\"329\":1}}],[\"推到仓库中\",{\"1\":{\"331\":1}}],[\"推荐阅读\",{\"1\":{\"276\":1}}],[\"推荐\",{\"1\":{\"273\":1}}],[\"较底层实现\",{\"1\":{\"326\":1}}],[\"较早出现的奖励比远期的奖励更有可能发生\",{\"1\":{\"49\":1}}],[\"累积\",{\"1\":{\"324\":1}}],[\"累加\",{\"1\":{\"213\":1}}],[\"轮着来\",{\"1\":{\"352\":1}}],[\"轮流协议\",{\"1\":{\"352\":1}}],[\"轮\",{\"1\":{\"322\":1}}],[\"乘\",{\"1\":{\"322\":1}}],[\"乘法或其他方式来实现\",{\"1\":{\"250\":1}}],[\"准备\",{\"0\":{\"318\":1}}],[\"准确性\",{\"0\":{\"78\":1}}],[\"章介绍这些配置项\",{\"1\":{\"316\":1}}],[\"构建\",{\"1\":{\"316\":1}}],[\"构建的\",{\"1\":{\"292\":1}}],[\"评估结果\",{\"1\":{\"338\":1}}],[\"评估指标\",{\"1\":{\"338\":1}}],[\"评估\",{\"0\":{\"316\":1}}],[\"评估时会直接输出\",{\"1\":{\"315\":1}}],[\"哪一个是第二个句子\",{\"1\":{\"312\":1}}],[\"哪怕牺牲一部分recall\",{\"1\":{\"81\":1}}],[\"哪怕牺牲一部分precision\",{\"1\":{\"81\":1}}],[\"截断序列\",{\"1\":{\"304\":1}}],[\"像\",{\"1\":{\"304\":1}}],[\"至此\",{\"1\":{\"319\":1}}],[\"至\",{\"1\":{\"304\":1,\"375\":1}}],[\"长短不一\",{\"1\":{\"345\":1}}],[\"长序列\",{\"0\":{\"304\":1}}],[\"长度非\",{\"1\":{\"75\":1}}],[\"长度为\",{\"1\":{\"75\":1}}],[\"元素只有\",{\"1\":{\"303\":1}}],[\"元素满足\",{\"1\":{\"28\":1}}],[\"忽略非数字字符\",{\"1\":{\"379\":1}}],[\"忽略\",{\"1\":{\"302\":1}}],[\"造成不一致是因为\",{\"1\":{\"302\":1}}],[\"造字码位\",{\"1\":{\"101\":1}}],[\"观察上面的结果\",{\"1\":{\"302\":1}}],[\"观察结果\",{\"1\":{\"268\":1}}],[\"批处理\",{\"0\":{\"301\":1}}],[\"词汇表索引是唯一能够使模型正常工作的输入吗\",{\"1\":{\"300\":1}}],[\"词表将有效地减小\",{\"1\":{\"292\":1}}],[\"方不仅将索引转化为了\",{\"1\":{\"298\":1}}],[\"方法了\",{\"1\":{\"324\":1}}],[\"方法进行预测\",{\"1\":{\"316\":1}}],[\"方法实现\",{\"1\":{\"296\":1}}],[\"方法来访问\",{\"1\":{\"331\":1}}],[\"方法来构建数据集\",{\"1\":{\"312\":1}}],[\"方法来实现\",{\"1\":{\"298\":1}}],[\"方法来保存模型\",{\"1\":{\"287\":1}}],[\"方法来进行判断\",{\"1\":{\"258\":1}}],[\"方法上加锁\",{\"1\":{\"187\":1}}],[\"方法训练来训练\",{\"1\":{\"69\":1}}],[\"方法就是\",{\"1\":{\"61\":1}}],[\"方法收敛到\",{\"1\":{\"60\":1}}],[\"方法中\",{\"1\":{\"59\":1,\"64\":1}}],[\"方法不能正确处理\",{\"1\":{\"23\":1}}],[\"方法返回的结果的搁置必须是\",{\"1\":{\"20\":1}}],[\"方法的对象\",{\"1\":{\"20\":1,\"22\":1}}],[\"方法\",{\"0\":{\"55\":1,\"56\":2,\"335\":1,\"337\":1,\"347\":1},\"1\":{\"12\":1,\"20\":2,\"24\":1,\"57\":2,\"69\":1,\"260\":3,\"280\":1,\"286\":1,\"308\":1,\"315\":1,\"316\":1,\"336\":1}}],[\"过远地撒\",{\"1\":{\"424\":1}}],[\"过远的一撒\",{\"1\":{\"424\":1}}],[\"过程\",{\"1\":{\"353\":1}}],[\"过程中需要在\",{\"1\":{\"312\":1}}],[\"过程可以使用\",{\"1\":{\"296\":1}}],[\"过多的函数调用会耗时等问题\",{\"1\":{\"194\":1}}],[\"考虑到上面两种技术\",{\"1\":{\"292\":1}}],[\"考虑到一个字节能够表示的编码实际上有\",{\"1\":{\"95\":1}}],[\"产生了大量\",{\"1\":{\"291\":1}}],[\"产生信号\",{\"1\":{\"5\":1}}],[\"英语中有\",{\"1\":{\"291\":1}}],[\"英文字母的排列是不连续的\",{\"1\":{\"93\":1}}],[\"经历\",{\"1\":{\"428\":1}}],[\"经常使用的词不应该再被切分为更小的子词\",{\"1\":{\"293\":1}}],[\"经\",{\"1\":{\"288\":1}}],[\"经过\",{\"1\":{\"313\":1}}],[\"经过散列函数得到的散列值对应的位置已经被占用了\",{\"1\":{\"149\":1}}],[\"经过内核处理后直接返回\",{\"1\":{\"112\":1}}],[\"经过编码后的字符能在计算机中进行处理\",{\"1\":{\"88\":1}}],[\"经过几个\",{\"1\":{\"43\":1}}],[\"版本号目前主流还是\",{\"1\":{\"364\":1}}],[\"版本错误解决方案\",{\"1\":{\"315\":1}}],[\"版本\",{\"1\":{\"287\":1}}],[\"版本中\",{\"1\":{\"158\":1}}],[\"替换为\",{\"1\":{\"286\":1}}],[\"得到最后的结果\",{\"1\":{\"324\":1}}],[\"得到最终的结论\",{\"1\":{\"283\":1}}],[\"得到的输入传递给\",{\"1\":{\"281\":1}}],[\"得出的差值\",{\"1\":{\"5\":1}}],[\"架构\",{\"1\":{\"280\":1}}],[\"架构于\",{\"1\":{\"269\":1}}],[\"部分\",{\"1\":{\"280\":1}}],[\"模块将产生\",{\"1\":{\"362\":1}}],[\"模块输出的张量通常很大\",{\"1\":{\"281\":1}}],[\"模块\",{\"1\":{\"280\":1}}],[\"模型都用\",{\"1\":{\"327\":1}}],[\"模型都是语言模型\",{\"1\":{\"270\":1}}],[\"模型在\",{\"1\":{\"310\":1}}],[\"模型能处理的序列长度是有限的\",{\"1\":{\"304\":1}}],[\"模型默认接收多个句子作为输入\",{\"1\":{\"301\":1}}],[\"模型需要处理大量\",{\"1\":{\"292\":1}}],[\"模型需要关注\",{\"1\":{\"274\":1}}],[\"模型使用这些\",{\"1\":{\"291\":1}}],[\"模型只能处理数字\",{\"1\":{\"289\":1}}],[\"模型只接收\",{\"1\":{\"279\":1}}],[\"模型的更多细节\",{\"1\":{\"286\":1}}],[\"模型的第一步是加载配置对象\",{\"1\":{\"285\":1}}],[\"模型输出的都是\",{\"1\":{\"283\":1}}],[\"模型不能直接处理原始文本\",{\"1\":{\"279\":1}}],[\"模型一般都很大\",{\"1\":{\"277\":1}}],[\"模型分为三类\",{\"1\":{\"269\":1}}],[\"模型中发生的每个操作的定义\",{\"1\":{\"265\":1}}],[\"模型框架\",{\"1\":{\"265\":1}}],[\"模型\",{\"1\":{\"186\":1,\"269\":3,\"273\":3,\"277\":1}}],[\"名称\",{\"1\":{\"279\":1}}],[\"名词\",{\"0\":{\"228\":1},\"1\":{\"264\":1}}],[\"完整的目标\",{\"1\":{\"275\":1}}],[\"完全不可能\",{\"1\":{\"113\":1}}],[\"完全兼容\",{\"1\":{\"103\":1}}],[\"连同\",{\"1\":{\"275\":1}}],[\"翻译\",{\"1\":{\"274\":1}}],[\"翻译成中文\",{\"1\":{\"274\":1}}],[\"设备\",{\"1\":{\"350\":1}}],[\"设备成本\",{\"1\":{\"272\":1}}],[\"设置不分片\",{\"1\":{\"362\":1}}],[\"设置成\",{\"1\":{\"362\":2}}],[\"设置为\",{\"1\":{\"343\":1}}],[\"设置\",{\"1\":{\"312\":1,\"362\":2}}],[\"设置matplotlib的默认样式和属性\",{\"1\":{\"255\":1}}],[\"设置一个合理的队列大小\",{\"1\":{\"188\":1}}],[\"设置开机启动\",{\"1\":{\"133\":1}}],[\"迁移学习\",{\"0\":{\"272\":1}}],[\"序列\",{\"1\":{\"305\":1}}],[\"序列的数字表示的长度\",{\"1\":{\"281\":1}}],[\"序列到序列\",{\"1\":{\"269\":1}}],[\"序列化起来没那么容易\",{\"1\":{\"154\":1}}],[\"序列化比较简单\",{\"1\":{\"154\":1}}],[\"女性工作\",{\"1\":{\"268\":1}}],[\"妓女成为了\",{\"1\":{\"268\":1}}],[\"研究员们会收集尽可能多的数据\",{\"1\":{\"268\":1}}],[\"偏见\",{\"0\":{\"268\":1}}],[\"见\",{\"1\":{\"267\":1,\"295\":1,\"345\":1}}],[\"团队为\",{\"1\":{\"265\":1}}],[\"范语\",{\"1\":{\"265\":1}}],[\"范围表示法\",{\"1\":{\"224\":1}}],[\"你认为自己十年后会怎样\",{\"1\":{\"403\":1}}],[\"你走你的\",{\"1\":{\"352\":1}}],[\"你能看到在\",{\"1\":{\"339\":1}}],[\"你需要使用\",{\"1\":{\"332\":1}}],[\"你需要使用预训练模型以及针对特定任务的数据集再次进行训练\",{\"1\":{\"272\":1}}],[\"你需要身份令牌一遍\",{\"1\":{\"331\":1}}],[\"你把代码贴到函数下面\",{\"1\":{\"325\":1}}],[\"你也可以用\",{\"1\":{\"331\":1}}],[\"你也可以使用\",{\"1\":{\"325\":1}}],[\"你也可以在\",{\"1\":{\"266\":1}}],[\"你将能够回答以下问题\",{\"1\":{\"340\":1}}],[\"你将了解到\",{\"1\":{\"309\":1}}],[\"你将会看到\",{\"1\":{\"265\":1}}],[\"你应该了解\",{\"1\":{\"299\":1}}],[\"你最后一次保存\",{\"1\":{\"287\":1}}],[\"你可以通过\",{\"1\":{\"339\":1}}],[\"你可以通过设置\",{\"1\":{\"286\":1,\"311\":1}}],[\"你可以阅读\",{\"1\":{\"338\":1}}],[\"你可以训练模型\",{\"1\":{\"331\":1}}],[\"你可以使用\",{\"1\":{\"331\":2}}],[\"你可以使用🤗\",{\"1\":{\"266\":1}}],[\"你可以自己去探索\",{\"1\":{\"327\":1}}],[\"你可以先看看数据\",{\"1\":{\"311\":1}}],[\"你可以在\",{\"1\":{\"287\":1,\"325\":1}}],[\"你可以在这个\",{\"1\":{\"286\":1}}],[\"你可以在模型中心中查找模型\",{\"1\":{\"276\":1}}],[\"你可以在模型中心中查找预训练模型\",{\"1\":{\"266\":1}}],[\"你可以直接使用随机初始化的\",{\"1\":{\"286\":1}}],[\"你可以直接使用对应的\",{\"1\":{\"284\":1}}],[\"你可以用\",{\"1\":{\"12\":1}}],[\"生成上下文\",{\"1\":{\"264\":1}}],[\"生产者\",{\"1\":{\"186\":2}}],[\"识别句子的语法成分\",{\"1\":{\"264\":1}}],[\"检查下目标\",{\"1\":{\"354\":1}}],[\"检查是否\",{\"1\":{\"28\":1}}],[\"检测电子邮件是否为垃圾邮件\",{\"1\":{\"264\":1}}],[\"聚类对数据的尺度\",{\"1\":{\"261\":1}}],[\"簇与簇之间的距离更大\",{\"1\":{\"261\":1}}],[\"帮助模型更好地理解数据\",{\"1\":{\"260\":1}}],[\"树模型通常具有很高的灵活性\",{\"1\":{\"260\":1}}],[\"树模型可以学习几乎任何特征组合\",{\"1\":{\"260\":1}}],[\"明确地提供关键特征可以帮助它们更好地捕捉关系\",{\"1\":{\"260\":1}}],[\"明确创建这个组合特征仍然会有益\",{\"1\":{\"260\":1}}],[\"明确字符的范围\",{\"1\":{\"85\":1}}],[\"尤其是在数据有限的情况下\",{\"1\":{\"260\":1}}],[\"尤其是训练开始的时候\",{\"1\":{\"47\":1}}],[\"右连接\",{\"1\":{\"260\":1}}],[\"右边的数据\",{\"1\":{\"209\":1}}],[\"右边是数组\",{\"1\":{\"27\":1}}],[\"按州计算的平均收入\",{\"1\":{\"260\":1}}],[\"按照页面提示进行即可\",{\"1\":{\"333\":1}}],[\"按照上面的配置\",{\"1\":{\"331\":1}}],[\"按照\",{\"1\":{\"276\":1}}],[\"按照其顺序\",{\"1\":{\"222\":1}}],[\"按照我们的策略行动\",{\"1\":{\"56\":1}}],[\"按照它的计算会得到最大的\",{\"1\":{\"54\":1}}],[\"区分他们的方法是检验\",{\"1\":{\"375\":1}}],[\"区号\",{\"1\":{\"259\":1}}],[\"区间的元素复制到新的数组中\",{\"1\":{\"28\":1}}],[\"地点\",{\"1\":{\"264\":1}}],[\"地区\",{\"1\":{\"259\":1}}],[\"地址为\",{\"1\":{\"367\":1}}],[\"地址可能变\",{\"1\":{\"366\":1}}],[\"地址就一定会改变\",{\"1\":{\"366\":1}}],[\"地址就不行了\",{\"1\":{\"112\":1}}],[\"地址在局域网内才有效\",{\"1\":{\"366\":1}}],[\"地址掩码请求和应答\",{\"1\":{\"360\":1}}],[\"地址时\",{\"1\":{\"354\":1}}],[\"地址缓存过一段时间就会过期\",{\"1\":{\"353\":1}}],[\"地址找\",{\"1\":{\"353\":1}}],[\"地址呢\",{\"1\":{\"353\":1,\"354\":1}}],[\"地址以外\",{\"1\":{\"121\":1}}],[\"地址回收和续租\",{\"0\":{\"120\":1}}],[\"地址的协议\",{\"1\":{\"353\":1}}],[\"地址的合法租用信息和其他的配置信息都放入该广播包\",{\"1\":{\"119\":1}}],[\"地址的上一行是\",{\"1\":{\"112\":1}}],[\"地址租用期等信息\",{\"1\":{\"117\":1}}],[\"地址是这个\",{\"1\":{\"116\":1}}],[\"地址是唯一的标识\",{\"1\":{\"112\":1}}],[\"地址里申请\",{\"1\":{\"114\":1}}],[\"地址不是它的\",{\"1\":{\"113\":1}}],[\"地址配置路由外\",{\"1\":{\"367\":1}}],[\"地址配置\",{\"0\":{\"113\":1}}],[\"地址具有一定定位功能\",{\"1\":{\"112\":1}}],[\"地址次具有远程定位功能\",{\"1\":{\"112\":1}}],[\"地址全局全局唯一\",{\"1\":{\"112\":1}}],[\"地址\",{\"0\":{\"178\":1},\"1\":{\"111\":3,\"112\":3,\"113\":3,\"114\":1,\"116\":3,\"117\":3,\"118\":6,\"121\":5,\"122\":1,\"352\":2,\"354\":1,\"355\":1,\"362\":1,\"366\":3,\"367\":1}}],[\"地址分为两部分\",{\"1\":{\"111\":1}}],[\"地址范围\",{\"1\":{\"111\":2}}],[\"冲程比\",{\"1\":{\"257\":1}}],[\"冲突越多\",{\"1\":{\"151\":1}}],[\"冲突\",{\"1\":{\"99\":1}}],[\"横坐标分别对应\",{\"1\":{\"255\":1}}],[\"横向条形图\",{\"1\":{\"255\":1}}],[\"横向模糊匹配\",{\"1\":{\"224\":1}}],[\"散点图\",{\"1\":{\"255\":1}}],[\"散列到每个槽里的数据也会比较平均\",{\"1\":{\"154\":1}}],[\"散列冲突解决方法\",{\"0\":{\"158\":1}}],[\"散列冲突的概率就会大大提高\",{\"1\":{\"151\":1}}],[\"散列冲突发生的可能性就会越来越大\",{\"1\":{\"149\":1}}],[\"散列值\",{\"1\":{\"146\":1}}],[\"散列函数生成的值要尽可能随机且均匀分布\",{\"1\":{\"154\":1}}],[\"散列函数不能太复杂\",{\"1\":{\"154\":1}}],[\"散列函数\",{\"0\":{\"159\":1},\"1\":{\"146\":1}}],[\"散列表中的数据会越来越少\",{\"1\":{\"154\":1}}],[\"散列表装载因子过高\",{\"1\":{\"154\":1}}],[\"散列表的性能会下降\",{\"1\":{\"151\":1}}],[\"散列表的长度\",{\"1\":{\"151\":1}}],[\"散列表的装载因子\",{\"1\":{\"151\":1}}],[\"散列表\",{\"0\":{\"146\":1}}],[\"绘制\",{\"1\":{\"255\":2}}],[\"衡量的就是这种关系\",{\"1\":{\"254\":1}}],[\"衡量每个特征和目标之间的关联程度\",{\"1\":{\"253\":1}}],[\"离散化\",{\"1\":{\"250\":1}}],[\"归一化\",{\"1\":{\"250\":1}}],[\"归并排序的处理过程是由下到上的\",{\"1\":{\"210\":1}}],[\"归并排序和快速排序用的都是分治思想\",{\"1\":{\"210\":1}}],[\"归并排序和快速排序都用到了分治思想\",{\"1\":{\"207\":1}}],[\"归并排序不是原地排序算法\",{\"1\":{\"208\":1}}],[\"归并排序使用的是分治思想\",{\"1\":{\"208\":1}}],[\"归并排序\",{\"0\":{\"207\":1},\"1\":{\"215\":1}}],[\"去掉\",{\"1\":{\"346\":1}}],[\"去掉了\",{\"1\":{\"313\":1}}],[\"去掉这两列中重复的行\",{\"1\":{\"260\":1}}],[\"去除训练集中的部分作为验证集\",{\"1\":{\"260\":1}}],[\"去除不相关或冗余的特征\",{\"1\":{\"250\":1}}],[\"去初始化操作系统\",{\"1\":{\"121\":1}}],[\"处理\",{\"1\":{\"374\":1}}],[\"处理不在\",{\"0\":{\"341\":1}}],[\"处理数据\",{\"0\":{\"310\":1}}],[\"处理多个序列\",{\"0\":{\"300\":1}}],[\"处理原始数据中的缺失值\",{\"1\":{\"250\":1}}],[\"处理缺失值\",{\"1\":{\"250\":1}}],[\"处理头结点\",{\"1\":{\"181\":1}}],[\"处处\",{\"1\":{\"248\":1}}],[\"裂缝\",{\"1\":{\"248\":1}}],[\"角落\",{\"1\":{\"248\":1}}],[\"ˈʒɒnrə\",{\"1\":{\"435\":1}}],[\"ˈʒɑnrə\",{\"1\":{\"403\":1}}],[\"ˈpɒs\",{\"1\":{\"435\":1}}],[\"ˈplætɪpəs\",{\"1\":{\"435\":1}}],[\"ˈwɒləbi\",{\"1\":{\"435\":1}}],[\"ˈwɒmˌbæt\",{\"1\":{\"435\":1}}],[\"ˈwɪðə\",{\"1\":{\"411\":1}}],[\"ˈsuːpiəl\",{\"1\":{\"435\":1}}],[\"ˈsed\",{\"1\":{\"244\":1}}],[\"ˈkɑː\",{\"1\":{\"435\":1}}],[\"ˈhɜː\",{\"1\":{\"435\":1}}],[\"ˈhɒrəˌskəʊp\",{\"1\":{\"423\":1}}],[\"ˈbɪndʒ\",{\"1\":{\"428\":1}}],[\"ˈblɒs\",{\"1\":{\"428\":1}}],[\"ˈdʒemɪnaɪ\",{\"1\":{\"423\":1}}],[\"ˈləʊtəs\",{\"1\":{\"407\":1}}],[\"ˈneɪʃ\",{\"1\":{\"407\":1}}],[\"ˈɡɪɡ\",{\"1\":{\"383\":1}}],[\"ˈəʊvə\",{\"1\":{\"248\":1}}],[\"刻板印象的\",{\"1\":{\"248\":1}}],[\"ˌhɒspɪˈtæləti\",{\"1\":{\"435\":1}}],[\"ˌhɔːl\",{\"1\":{\"248\":1}}],[\"ˌsteriəˈtɪpɪkl\",{\"1\":{\"248\":1}}],[\"ˌɜː\",{\"1\":{\"244\":1}}],[\"稀少的\",{\"1\":{\"246\":1}}],[\"熙熙攘攘\",{\"1\":{\"246\":1}}],[\"繁荣\",{\"1\":{\"428\":1}}],[\"繁忙和喧嚣\",{\"1\":{\"246\":1}}],[\"繁体字融于一体\",{\"1\":{\"101\":1}}],[\"乡下的\",{\"1\":{\"246\":1}}],[\"临床的\",{\"1\":{\"246\":1}}],[\"冷淡的\",{\"1\":{\"246\":1}}],[\"园艺\",{\"1\":{\"246\":1}}],[\"悠闲的\",{\"1\":{\"244\":1}}],[\"人\",{\"1\":{\"264\":1}}],[\"人体工学椅\",{\"1\":{\"244\":1}}],[\"人数\",{\"1\":{\"244\":1}}],[\"ɡəˈnɒmɪk\",{\"1\":{\"244\":1}}],[\"久坐的\",{\"1\":{\"244\":1}}],[\"ə\",{\"1\":{\"244\":2,\"383\":1,\"407\":1,\"428\":1,\"435\":1}}],[\"说\",{\"0\":{\"232\":1}}],[\"说明\",{\"1\":{\"364\":1}}],[\"说明目的主机不可达\",{\"1\":{\"361\":1}}],[\"说明不能再前进了\",{\"1\":{\"222\":1}}],[\"说明不能再回退了\",{\"1\":{\"222\":1}}],[\"说明空闲位置越少\",{\"1\":{\"151\":1}}],[\"说明市场处于空头\",{\"1\":{\"3\":1}}],[\"说明市场处于多头\",{\"1\":{\"3\":1}}],[\"副词\",{\"0\":{\"229\":1}}],[\"锚\",{\"1\":{\"225\":1}}],[\"单元被认为是\",{\"1\":{\"374\":1}}],[\"单词边界\",{\"1\":{\"225\":1}}],[\"单链表反转\",{\"1\":{\"183\":1}}],[\"单链表需要从头结点开始找\",{\"1\":{\"171\":1}}],[\"单链表\",{\"0\":{\"169\":1},\"1\":{\"168\":1}}],[\"贪婪量词\",{\"1\":{\"224\":1}}],[\"惰性量词\",{\"1\":{\"224\":1}}],[\"惰性\",{\"1\":{\"224\":2}}],[\"量词\",{\"1\":{\"224\":2}}],[\"量价分析\",{\"1\":{\"6\":1}}],[\"匹配所有的\",{\"1\":{\"342\":1}}],[\"匹配任意字符\",{\"1\":{\"224\":1}}],[\"匹配完之后\",{\"1\":{\"221\":1}}],[\"换用支持更长序列的模型\",{\"1\":{\"304\":1}}],[\"换页符\",{\"1\":{\"224\":1}}],[\"换行符\",{\"1\":{\"224\":2}}],[\"回复的包到达了哪个点\",{\"1\":{\"361\":1}}],[\"回送请求和应答\",{\"1\":{\"360\":1}}],[\"回顾一下之前获得\",{\"1\":{\"337\":1}}],[\"回顾本章\",{\"1\":{\"326\":1}}],[\"回答弹出的问题\",{\"1\":{\"325\":1}}],[\"回车符\",{\"1\":{\"224\":2}}],[\"回合结束后学习\",{\"0\":{\"67\":1}}],[\"垂直制表符\",{\"1\":{\"224\":1}}],[\"水平制表符\",{\"1\":{\"224\":1}}],[\"含义\",{\"1\":{\"224\":2}}],[\"三层设备\",{\"0\":{\"364\":1}}],[\"三个字符中的一个\",{\"1\":{\"224\":1}}],[\"三数取中法\",{\"1\":{\"216\":1}}],[\"纵向模糊匹配\",{\"1\":{\"224\":1}}],[\"浏览器回退\",{\"0\":{\"222\":1}}],[\"浏览文件\",{\"0\":{\"125\":1}}],[\"判定括号不匹配\",{\"1\":{\"221\":1}}],[\"判断应该从\",{\"1\":{\"366\":1}}],[\"判断发给谁\",{\"1\":{\"352\":1}}],[\"判断每个句子是\",{\"1\":{\"282\":1}}],[\"判断能否匹配\",{\"1\":{\"221\":1}}],[\"判断环的起点\",{\"1\":{\"176\":1}}],[\"判断是否有环\",{\"1\":{\"176\":1}}],[\"判断\",{\"1\":{\"28\":1}}],[\"判断属性是否存在\",{\"1\":{\"9\":1}}],[\"括号匹配\",{\"0\":{\"221\":1}}],[\"五数取中\",{\"1\":{\"216\":1}}],[\"尾数\",{\"1\":{\"375\":1}}],[\"尾\",{\"1\":{\"216\":1}}],[\"尾结点时\",{\"1\":{\"181\":1}}],[\"尾结点\",{\"1\":{\"169\":1}}],[\"优缺点\",{\"1\":{\"369\":1}}],[\"优先级向量\",{\"1\":{\"356\":1}}],[\"优化器\",{\"0\":{\"321\":1}}],[\"优化排序\",{\"0\":{\"216\":1}}],[\"优点\",{\"0\":{\"59\":1},\"1\":{\"154\":2,\"170\":1,\"194\":1}}],[\"赋初值\",{\"1\":{\"213\":1}}],[\"申请数组\",{\"1\":{\"213\":1}}],[\"省掉了桶内排序的时间\",{\"1\":{\"213\":1}}],[\"省掉的一个比较语句积累的时间会比较明显\",{\"1\":{\"180\":1}}],[\"退化到了\",{\"1\":{\"209\":1}}],[\"递推公式\",{\"1\":{\"209\":1}}],[\"递归代码的时间复杂度分析\",{\"1\":{\"208\":1}}],[\"递归代码要警惕堆栈溢出\",{\"0\":{\"192\":1}}],[\"递归需要满足的\",{\"0\":{\"190\":1}}],[\"递归\",{\"0\":{\"189\":1},\"1\":{\"194\":2}}],[\"左边的数据和\",{\"1\":{\"209\":1}}],[\"左边是基本类型\",{\"1\":{\"27\":1}}],[\"带入上式得\",{\"1\":{\"208\":1}}],[\"合并两个有序子数组的时间复杂度已知是\",{\"1\":{\"208\":1}}],[\"合并\",{\"1\":{\"208\":1}}],[\"合并到\",{\"1\":{\"132\":1,\"259\":1}}],[\"整数范围\",{\"1\":{\"375\":1}}],[\"整数属性\",{\"1\":{\"10\":1}}],[\"整数属性会进行排序\",{\"1\":{\"10\":1}}],[\"整体指\",{\"1\":{\"225\":1}}],[\"整个数组就有序了\",{\"1\":{\"208\":1}}],[\"移动质心\",{\"1\":{\"261\":1}}],[\"移动数据\",{\"1\":{\"204\":1}}],[\"移动的次数是固定的\",{\"1\":{\"204\":1}}],[\"移动\",{\"1\":{\"204\":1}}],[\"移动平均线之间的聚合与分离状况\",{\"1\":{\"5\":1}}],[\"移动平均线与长期\",{\"1\":{\"5\":1}}],[\"已知其\",{\"1\":{\"355\":1}}],[\"已经生成了3个单词\",{\"1\":{\"275\":1}}],[\"已经有序\",{\"1\":{\"203\":1}}],[\"已排序区间和未排序区间\",{\"1\":{\"204\":1}}],[\"满序度\",{\"1\":{\"203\":1}}],[\"逆序度\",{\"1\":{\"203\":1}}],[\"倒序\",{\"1\":{\"203\":1,\"204\":1}}],[\"交通便利\",{\"1\":{\"246\":1}}],[\"交换机之间可以通过这种口互相连接\",{\"1\":{\"358\":1}}],[\"交换机如何区别某个机器属于哪个局域网呢\",{\"1\":{\"358\":1}}],[\"交换机如何知道每个口的电脑的\",{\"1\":{\"354\":1}}],[\"交换机通过互相发送\",{\"1\":{\"357\":1}}],[\"交换机已经知道了机器\",{\"1\":{\"355\":1}}],[\"交换机与\",{\"0\":{\"355\":1}}],[\"交换机就有了整个网络的结构了\",{\"1\":{\"354\":1}}],[\"交换机聪明之处在于\",{\"1\":{\"354\":1}}],[\"交换机\",{\"0\":{\"354\":1},\"1\":{\"354\":1,\"355\":2}}],[\"交换次数=逆序度=2n\",{\"1\":{\"203\":1}}],[\"交换\",{\"1\":{\"203\":1,\"209\":1}}],[\"交叉信号\",{\"1\":{\"4\":1,\"5\":1}}],[\"低阶\",{\"1\":{\"201\":1}}],[\"✗\",{\"1\":{\"201\":1,\"206\":1,\"215\":6}}],[\"计数到无穷\",{\"1\":{\"369\":1}}],[\"计数特征可以提供有关数据的聚合信息\",{\"1\":{\"260\":1}}],[\"计数特征对于树模型尤其有帮助\",{\"1\":{\"260\":1}}],[\"计数排序只能对非负数进行排序\",{\"1\":{\"213\":1}}],[\"计数排序只能用在数据范围不大的场景中\",{\"1\":{\"213\":1}}],[\"计数排序算是桶排序的一种特殊情况\",{\"1\":{\"213\":1}}],[\"计数排序\",{\"0\":{\"211\":1},\"1\":{\"215\":1}}],[\"计数\",{\"0\":{\"258\":1},\"1\":{\"201\":1}}],[\"计算加权平均\",{\"1\":{\"165\":1}}],[\"计算复杂\",{\"1\":{\"154\":1}}],[\"计算出现后\",{\"1\":{\"95\":1}}],[\"计算机网络中生成树算法是stp\",{\"1\":{\"356\":1}}],[\"计算机启动是\",{\"1\":{\"121\":1}}],[\"计算机普遍采用8位作为一个字节来进行存取与处理\",{\"1\":{\"94\":1}}],[\"计算机才能够正确地进行处理\",{\"1\":{\"88\":1}}],[\"计算机可以最高效处理的数据大小应该与其字长相同\",{\"1\":{\"83\":1}}],[\"计算得到的回报\",{\"1\":{\"67\":1}}],[\"计算一个状态或状态\",{\"1\":{\"64\":1}}],[\"计算量很大\",{\"1\":{\"63\":1}}],[\"计算量的问题\",{\"1\":{\"63\":1}}],[\"计算执行该行动后的目标\",{\"1\":{\"47\":1}}],[\"计算相对强弱指标\",{\"1\":{\"4\":1}}],[\"计算相对强度\",{\"1\":{\"4\":1}}],[\"计算平均收盘价上涨和下跌的幅度\",{\"1\":{\"4\":1}}],[\"计算\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"47\":1,\"63\":1,\"193\":1}}],[\"✓\",{\"1\":{\"201\":2,\"206\":5,\"215\":10}}],[\"冒泡中元素交换\",{\"1\":{\"206\":1}}],[\"冒泡排序\",{\"1\":{\"206\":1,\"215\":1}}],[\"冒泡排序要进行\",{\"1\":{\"206\":1}}],[\"冒泡排序的元素交换次数是固定值\",{\"1\":{\"206\":1}}],[\"冒泡排序有两个原子操作\",{\"1\":{\"203\":1}}],[\"冒泡和插入排序都是稳定的\",{\"1\":{\"206\":1}}],[\"冒泡\",{\"0\":{\"202\":1},\"1\":{\"201\":1}}],[\"级\",{\"1\":{\"197\":1}}],[\"索引结点就相应地增加一些\",{\"1\":{\"200\":1}}],[\"索引\",{\"1\":{\"196\":1}}],[\"甚至可以代替红黑树\",{\"1\":{\"195\":1}}],[\"手动\",{\"1\":{\"194\":1}}],[\"手动执行\",{\"1\":{\"129\":1}}],[\"警惕重复计算\",{\"0\":{\"193\":1}}],[\"警惕指针丢失和内存泄漏\",{\"0\":{\"179\":1}}],[\"事先无法计算\",{\"1\":{\"192\":1}}],[\"终止条件\",{\"1\":{\"191\":1,\"208\":1,\"209\":1}}],[\"阶后\",{\"1\":{\"191\":2}}],[\"阶乘阶\",{\"1\":{\"162\":1}}],[\"请确保安装了\",{\"1\":{\"337\":1}}],[\"请看这里\",{\"1\":{\"325\":1}}],[\"请直接从\",{\"1\":{\"310\":1}}],[\"请查看\",{\"1\":{\"259\":2,\"339\":1}}],[\"请问走\",{\"1\":{\"191\":1}}],[\"请求数据包\",{\"1\":{\"361\":1}}],[\"请求爆炸\",{\"1\":{\"356\":1}}],[\"请求就完成了\",{\"1\":{\"355\":1}}],[\"请求将文件直接传到\",{\"1\":{\"335\":1}}],[\"请求处理的时间过长\",{\"1\":{\"188\":1}}],[\"请求\",{\"1\":{\"113\":1,\"121\":1,\"352\":1,\"353\":1}}],[\"接着打开\",{\"1\":{\"352\":1}}],[\"接下来就是源\",{\"1\":{\"364\":1}}],[\"接下来将\",{\"1\":{\"362\":1}}],[\"接下来我们使用的数据集为\",{\"1\":{\"345\":1}}],[\"接下来我们将介绍如何在自己的数据集上进行微调\",{\"1\":{\"309\":1}}],[\"接下来使用常规的\",{\"1\":{\"337\":1}}],[\"接下来\",{\"1\":{\"337\":1}}],[\"接下来可以使用传统的\",{\"1\":{\"336\":1}}],[\"接下来在定义\",{\"1\":{\"318\":1}}],[\"接下来还有\",{\"1\":{\"277\":1}}],[\"接下来的请求就会被拒绝\",{\"1\":{\"188\":1}}],[\"接近数据个数\",{\"1\":{\"212\":1}}],[\"接受的值可以是\",{\"1\":{\"332\":1}}],[\"接受的租约中的\",{\"1\":{\"118\":1}}],[\"接受某个\",{\"1\":{\"118\":1}}],[\"接受任意数量的参数\",{\"1\":{\"28\":1}}],[\"针对的都是\",{\"1\":{\"374\":1}}],[\"针对响应时间比较敏感的系统\",{\"1\":{\"188\":1}}],[\"针对这种动态数据集合\",{\"1\":{\"140\":1}}],[\"取出栈顶的左括号\",{\"1\":{\"221\":1}}],[\"取出排队的请求继续处理\",{\"1\":{\"188\":1}}],[\"取决于\",{\"1\":{\"208\":1}}],[\"取决于用户使用的字体文件\",{\"1\":{\"106\":1}}],[\"取未排序区间中的元素\",{\"1\":{\"204\":1}}],[\"取中间值\",{\"1\":{\"203\":1}}],[\"另一个是希望聚合的数值特征\",{\"1\":{\"260\":1}}],[\"另一类是第一步走了\",{\"1\":{\"191\":1}}],[\"另一种是阻塞的处理方式\",{\"1\":{\"188\":1}}],[\"另外两个几乎包含了整个第\",{\"1\":{\"106\":1}}],[\"另外\",{\"1\":{\"106\":1,\"193\":1,\"257\":1,\"291\":1,\"292\":1,\"327\":1}}],[\"底层申请锁资源\",{\"1\":{\"187\":1}}],[\"底层采用链表法来解决冲突\",{\"1\":{\"158\":1}}],[\"知道属于哪个网段\",{\"1\":{\"365\":2}}],[\"知道目的\",{\"1\":{\"355\":1}}],[\"知道你的权限\",{\"1\":{\"331\":1}}],[\"知道队列中有空闲位置后再插入数据\",{\"1\":{\"186\":1}}],[\"知道队列中有了数据才能返回\",{\"1\":{\"186\":1}}],[\"知道来了个\",{\"1\":{\"117\":1}}],[\"阻塞队列是在队列的基础上增加了阻塞操作\",{\"1\":{\"186\":1}}],[\"阻塞队列\",{\"0\":{\"186\":1},\"1\":{\"185\":1}}],[\"队满\",{\"1\":{\"185\":1}}],[\"队空\",{\"1\":{\"185\":1}}],[\"队首出队\",{\"1\":{\"185\":1}}],[\"队尾入队\",{\"1\":{\"185\":1}}],[\"队列可以应用在任何有限资源池中\",{\"1\":{\"188\":1}}],[\"队列太小会导致无法充分利用系统资源\",{\"1\":{\"188\":1}}],[\"队列太大导致等待的请求太多\",{\"1\":{\"188\":1}}],[\"队列大小有限\",{\"1\":{\"188\":1}}],[\"队列\",{\"0\":{\"184\":1},\"1\":{\"185\":1,\"188\":1}}],[\"出错\",{\"1\":{\"375\":1}}],[\"出口设备\",{\"1\":{\"367\":1}}],[\"出口网络\",{\"1\":{\"367\":1}}],[\"出生日期\",{\"1\":{\"259\":1}}],[\"出队\",{\"1\":{\"185\":1}}],[\"出栈\",{\"1\":{\"185\":1}}],[\"入口设备\",{\"1\":{\"367\":1}}],[\"入队\",{\"1\":{\"185\":1}}],[\"入栈\",{\"1\":{\"185\":1}}],[\"栈为空\",{\"1\":{\"221\":1}}],[\"栈的应用\",{\"0\":{\"218\":1}}],[\"栈\",{\"0\":{\"217\":1},\"1\":{\"185\":1,\"219\":1,\"222\":2}}],[\"求解思路完全一样\",{\"1\":{\"190\":1}}],[\"求链表的中间结点\",{\"1\":{\"183\":1}}],[\"求导的时候有两方面问题\",{\"1\":{\"63\":1}}],[\"固定步数差值\",{\"1\":{\"183\":1}}],[\"固件\",{\"1\":{\"121\":1}}],[\"两台交换机都学到了这样的信息\",{\"1\":{\"355\":1}}],[\"两者都行\",{\"1\":{\"233\":1}}],[\"两个有序链表的合并\",{\"1\":{\"183\":1}}],[\"两边一个是对象\",{\"1\":{\"27\":1}}],[\"辅助思考\",{\"0\":{\"182\":1}}],[\"举例画图\",{\"0\":{\"182\":1}}],[\"恢复\",{\"1\":{\"180\":1}}],[\"少了\",{\"1\":{\"180\":1}}],[\"记录每个元素的个数\",{\"1\":{\"213\":1}}],[\"记录链表的基地址\",{\"1\":{\"169\":1}}],[\"记得手动释放内存空间\",{\"1\":{\"179\":1}}],[\"先通过\",{\"1\":{\"355\":1}}],[\"先出门\",{\"1\":{\"352\":1}}],[\"先分区\",{\"1\":{\"210\":1}}],[\"先处理子问题\",{\"1\":{\"210\":1}}],[\"先写递推公式\",{\"1\":{\"208\":1}}],[\"先去散列表中取\",{\"1\":{\"193\":1}}],[\"先进者先服务\",{\"1\":{\"188\":1}}],[\"先后接\",{\"1\":{\"179\":1}}],[\"先回顾一下\",{\"1\":{\"57\":1}}],[\"理解指针或引用的含义\",{\"0\":{\"178\":1}}],[\"理论上来讲\",{\"1\":{\"152\":1}}],[\"找时间做\",{\"1\":{\"434\":1}}],[\"找下一跳\",{\"1\":{\"365\":1}}],[\"找中点\",{\"1\":{\"176\":1}}],[\"找到符合的\",{\"1\":{\"365\":1}}],[\"找到最小元素的时间复杂度是\",{\"1\":{\"205\":1}}],[\"找到最小值和目标位置做交换\",{\"1\":{\"205\":1}}],[\"找到合适的位置插入\",{\"1\":{\"204\":1}}],[\"找到终止条件\",{\"1\":{\"191\":1}}],[\"找到使得\",{\"1\":{\"63\":1}}],[\"找到\",{\"1\":{\"28\":1}}],[\"快排\",{\"1\":{\"201\":1}}],[\"快慢指针\",{\"0\":{\"176\":1},\"1\":{\"183\":2}}],[\"快速检验下是否有错\",{\"1\":{\"319\":1,\"320\":1}}],[\"快速体验\",{\"0\":{\"267\":1}}],[\"快速排序在最坏情况下的时间复杂度是\",{\"1\":{\"216\":1}}],[\"快速排序最差情况下的时间复杂度是\",{\"1\":{\"208\":1}}],[\"快速排序\",{\"0\":{\"207\":1},\"1\":{\"162\":1,\"215\":1}}],[\"快速介绍\",{\"0\":{\"9\":1,\"26\":1}}],[\"快速线是由短期移动平均线\",{\"1\":{\"5\":1}}],[\"越靠近链表尾部的结点是越早之前访问的\",{\"1\":{\"175\":1}}],[\"越大\",{\"1\":{\"3\":1}}],[\"垃圾回收\",{\"1\":{\"173\":1}}],[\"垃圾邮件分类的目标是\",{\"1\":{\"81\":1}}],[\"垃圾邮件分类时\",{\"1\":{\"81\":1}}],[\"垃圾邮件为positive\",{\"1\":{\"81\":1}}],[\"导致\",{\"1\":{\"173\":1}}],[\"导出了\",{\"1\":{\"36\":2}}],[\"导出时\",{\"1\":{\"35\":1}}],[\"预期用途和限制\",{\"1\":{\"338\":1}}],[\"预测用了多长时间\",{\"1\":{\"316\":1}}],[\"预处理数据\",{\"1\":{\"340\":1}}],[\"预处理数据集\",{\"1\":{\"326\":1}}],[\"预处理\",{\"1\":{\"278\":1}}],[\"预训练这类模型可以使用\",{\"1\":{\"273\":1}}],[\"预训练\",{\"1\":{\"272\":1}}],[\"预读数组中的数据\",{\"1\":{\"173\":1}}],[\"预启动执行环境\",{\"0\":{\"121\":1}}],[\"头都取下来\",{\"1\":{\"364\":1}}],[\"头中的字段哪些会改变\",{\"0\":{\"366\":1}}],[\"头中的一个字段\",{\"1\":{\"112\":1}}],[\"头中\",{\"1\":{\"364\":3}}],[\"头和\",{\"1\":{\"360\":1,\"364\":2}}],[\"头\",{\"0\":{\"366\":1},\"1\":{\"354\":1,\"364\":1,\"366\":1}}],[\"头结点\",{\"1\":{\"169\":1}}],[\"结束时输出\",{\"1\":{\"316\":1}}],[\"结构相同\",{\"1\":{\"303\":1}}],[\"结构如下\",{\"1\":{\"275\":1}}],[\"结构\",{\"0\":{\"273\":1}}],[\"结果\",{\"1\":{\"267\":2}}],[\"结点的总和\",{\"1\":{\"198\":1}}],[\"结点\",{\"1\":{\"169\":1}}],[\"结合其他技术指标和趋势分析工具\",{\"1\":{\"5\":1}}],[\"结合移动平均线\",{\"1\":{\"4\":1}}],[\"看来我们还需要把\",{\"1\":{\"345\":1}}],[\"看来是患者\",{\"1\":{\"345\":1}}],[\"看看它的输出\",{\"1\":{\"281\":1}}],[\"看一看\",{\"1\":{\"277\":1}}],[\"看到\",{\"1\":{\"275\":1}}],[\"看是否能将较高时间复杂度那次操作的耗时\",{\"1\":{\"166\":1}}],[\"看起来相同或者实际上相同\",{\"1\":{\"59\":1}}],[\"摊还分析\",{\"1\":{\"166\":1}}],[\"期望\",{\"1\":{\"165\":1}}],[\"期后结束\",{\"1\":{\"3\":1}}],[\"假设在数组中的概率和不在数组中的概率都是\",{\"1\":{\"165\":1}}],[\"假设数据大小是\",{\"1\":{\"138\":1}}],[\"​=c\",{\"1\":{\"208\":1}}],[\"​\",{\"1\":{\"203\":3}}],[\"​−初始有序度\",{\"1\":{\"203\":1}}],[\"​o\",{\"1\":{\"165\":1}}],[\"​y1​αyt​+\",{\"1\":{\"3\":1}}],[\"步\",{\"1\":{\"164\":1}}],[\"均摊时间复杂度\",{\"0\":{\"163\":1,\"166\":1}}],[\"均摊情况下\",{\"1\":{\"154\":1}}],[\"次\",{\"1\":{\"224\":2}}],[\"次桶排序或者计数排序\",{\"1\":{\"214\":1}}],[\"次分区\",{\"1\":{\"209\":1}}],[\"次插入操作\",{\"1\":{\"204\":1}}],[\"次交换\",{\"1\":{\"203\":1}}],[\"次数\",{\"1\":{\"201\":1}}],[\"次方阶\",{\"1\":{\"162\":1}}],[\"次广播\",{\"1\":{\"115\":1}}],[\"立方阶\",{\"1\":{\"162\":1}}],[\"遍\",{\"1\":{\"162\":1}}],[\"遍历数组\",{\"1\":{\"209\":1,\"213\":1}}],[\"遍历呢\",{\"1\":{\"19\":1}}],[\"遍历\",{\"1\":{\"13\":1,\"18\":1,\"21\":1}}],[\"渐进\",{\"1\":{\"162\":2}}],[\"空间不足将会有问题\",{\"1\":{\"312\":1}}],[\"空间上也要考虑压栈出栈的开销\",{\"1\":{\"193\":1}}],[\"空间复杂度高\",{\"1\":{\"194\":1}}],[\"空间复杂度\",{\"0\":{\"162\":1,\"198\":1},\"1\":{\"162\":1,\"201\":1,\"208\":1,\"209\":1}}],[\"空闲空间会越来越多\",{\"1\":{\"154\":1}}],[\"空闲位置越来越少\",{\"1\":{\"149\":1}}],[\"^|$\",{\"1\":{\"225\":1}}],[\"^0\",{\"1\":{\"224\":2}}],[\"^abc\",{\"1\":{\"224\":1}}],[\"^\",{\"1\":{\"159\":1,\"224\":3,\"225\":3}}],[\"^first\",{\"1\":{\"81\":1}}],[\"性能上的优势并不明显\",{\"1\":{\"158\":1}}],[\"初始已排序区间是数组的第一个元素\",{\"1\":{\"204\":1}}],[\"初始有序度是\",{\"1\":{\"203\":1}}],[\"初始大小\",{\"0\":{\"156\":1}}],[\"初始化为\",{\"1\":{\"70\":1}}],[\"初始化\",{\"1\":{\"70\":1,\"285\":1,\"337\":1}}],[\"红黑树要维护平衡\",{\"1\":{\"158\":1}}],[\"红黑树\",{\"1\":{\"154\":1}}],[\"缓存\",{\"1\":{\"353\":2}}],[\"缓存路径为\",{\"1\":{\"286\":1,\"311\":1}}],[\"缓存淘汰算法\",{\"1\":{\"175\":1}}],[\"缓存不友好\",{\"1\":{\"154\":1,\"173\":1}}],[\"缓存加快查询进度\",{\"1\":{\"154\":1}}],[\"适用于较小规模的网络\",{\"1\":{\"369\":1}}],[\"适用于需要根据输入进行生成的任务\",{\"1\":{\"273\":1}}],[\"适用于需要理解输入的任务\",{\"1\":{\"273\":1}}],[\"适用于生成任务\",{\"1\":{\"273\":1}}],[\"适用于普通对象并做了对应优化\",{\"1\":{\"26\":1}}],[\"适合采用开放寻址法\",{\"1\":{\"154\":1}}],[\"扩展阅读\",{\"1\":{\"273\":1}}],[\"扩展二进制编码的十进制交换码\",{\"1\":{\"93\":1}}],[\"扩容的开销会让用户崩溃\",{\"1\":{\"154\":1}}],[\"扩容\",{\"1\":{\"154\":1}}],[\"变成了\",{\"1\":{\"154\":1}}],[\"变量名不能是保留字\",{\"1\":{\"9\":1}}],[\"槽\",{\"1\":{\"152\":2}}],[\"桶与桶之间有着天然的大小顺序\",{\"1\":{\"212\":1}}],[\"桶排序比较适合用在外部排序中\",{\"1\":{\"212\":1}}],[\"桶排序\",{\"0\":{\"211\":1},\"1\":{\"215\":1}}],[\"桶\",{\"1\":{\"152\":1,\"201\":1}}],[\"装箱转换\",{\"0\":{\"382\":1}}],[\"装在因子和动态扩容\",{\"0\":{\"157\":1}}],[\"装载因子小时\",{\"1\":{\"154\":1}}],[\"装载因子的上限不能太大\",{\"1\":{\"154\":1}}],[\"装载因子越大\",{\"1\":{\"151\":1}}],[\"装好系统之后自动分配\",{\"1\":{\"121\":1}}],[\"填充\",{\"0\":{\"302\":1}}],[\"填充的内容无意义\",{\"1\":{\"275\":1}}],[\"填充数组\",{\"1\":{\"28\":1}}],[\"填入表中的元素个数\",{\"1\":{\"151\":1}}],[\"双子座\",{\"1\":{\"423\":1}}],[\"双指针\",{\"1\":{\"183\":1}}],[\"双向循环链表\",{\"0\":{\"172\":1}}],[\"双向链表的按值查询的效率要比单链表高一些\",{\"1\":{\"171\":1}}],[\"双向链表可以支持\",{\"1\":{\"171\":1}}],[\"双向链表\",{\"0\":{\"171\":1},\"1\":{\"168\":1}}],[\"双重散列\",{\"0\":{\"151\":1}}],[\"双字\",{\"1\":{\"83\":1}}],[\"继续比较当前运算符和新的栈顶运算符\",{\"1\":{\"220\":1}}],[\"继续向下探测\",{\"1\":{\"149\":1}}],[\"继续以癌症诊断场景为\",{\"1\":{\"81\":1}}],[\"特殊\",{\"0\":{\"306\":1}}],[\"特殊标记为\",{\"1\":{\"149\":1}}],[\"特别是在大规模和复杂网络中\",{\"1\":{\"369\":1}}],[\"特别是在状态空间较大且奖励函数复杂的情况下\",{\"1\":{\"64\":1}}],[\"特别是神经网络需要特征缩放到接近0的值\",{\"1\":{\"260\":1}}],[\"特征可能在与其他特征的交互时具有信息量\",{\"1\":{\"255\":1}}],[\"特征缩放\",{\"1\":{\"250\":1}}],[\"特征\",{\"1\":{\"250\":1,\"252\":1,\"273\":1}}],[\"特征创建\",{\"0\":{\"256\":1},\"1\":{\"250\":1}}],[\"特征组合\",{\"1\":{\"250\":1}}],[\"特征转换\",{\"1\":{\"250\":1}}],[\"特征选择\",{\"1\":{\"250\":1}}],[\"特征工程的目标\",{\"0\":{\"251\":1}}],[\"特征工程包括以下主要方面\",{\"1\":{\"250\":1}}],[\"特征工程是机器学习模型构建过程中的重要步骤之一\",{\"1\":{\"250\":1}}],[\"特征工程\",{\"0\":{\"249\":1}}],[\"≠\",{\"1\":{\"146\":2}}],[\"哈希值\",{\"1\":{\"146\":1}}],[\"哈希函数\",{\"1\":{\"146\":1}}],[\"键\",{\"1\":{\"146\":1}}],[\"查询报文\",{\"1\":{\"360\":1,\"363\":1}}],[\"查到对应的位置\",{\"1\":{\"199\":1}}],[\"查找插入位置\",{\"1\":{\"204\":1}}],[\"查找起来会快一些\",{\"1\":{\"196\":1}}],[\"查找操作\",{\"1\":{\"195\":1}}],[\"查找\",{\"1\":{\"152\":1,\"180\":1}}],[\"查找元素时\",{\"1\":{\"149\":1}}],[\"查找最后一个小于等于给定值的元素\",{\"0\":{\"145\":1}}],[\"查找最后一个值等于给定值的元素\",{\"0\":{\"143\":1}}],[\"查找第一个大于等于给定值的元素\",{\"0\":{\"144\":1}}],[\"查找第一个值等于给定值的元素\",{\"0\":{\"142\":1}}],[\"查找数据用二叉树\",{\"1\":{\"140\":1}}],[\"查看自己的出口\",{\"1\":{\"366\":1}}],[\"查看包有没有到达某个点\",{\"1\":{\"361\":1}}],[\"查看更多\",{\"1\":{\"133\":1}}],[\"查看软件列表\",{\"1\":{\"127\":1}}],[\"查看\",{\"1\":{\"112\":1}}],[\"才会退化到\",{\"1\":{\"209\":1}}],[\"才会计算\",{\"1\":{\"67\":1}}],[\"才出栈\",{\"1\":{\"192\":1}}],[\"才停止\",{\"1\":{\"138\":1}}],[\"二进制\",{\"1\":{\"379\":1}}],[\"二次方\",{\"1\":{\"150\":1}}],[\"二次探测\",{\"0\":{\"150\":1},\"1\":{\"150\":1}}],[\"二分查找的底层需要依赖数组这种数据结构\",{\"1\":{\"140\":1}}],[\"二分查找的递归与非递归实现\",{\"0\":{\"139\":1}}],[\"二分查找针对的是有序数据\",{\"1\":{\"140\":1}}],[\"二分查找针对的是有序集合\",{\"1\":{\"137\":1}}],[\"二分查找依赖的是顺序表\",{\"1\":{\"140\":1}}],[\"二分查找应用场景的局限性\",{\"0\":{\"140\":1}}],[\"二分查找\",{\"0\":{\"137\":1}}],[\"二级汉字\",{\"1\":{\"100\":1}}],[\"插入排序\",{\"1\":{\"206\":1,\"215\":1}}],[\"插入排序中的元素移动\",{\"1\":{\"206\":1}}],[\"插入排序的元素移动次数也是固定值\",{\"1\":{\"206\":1}}],[\"插入数据\",{\"1\":{\"204\":1}}],[\"插入点之后的元素都需要往后移动腾出位置\",{\"1\":{\"204\":1}}],[\"插入第一个结点\",{\"1\":{\"180\":1}}],[\"插入第一个节点\",{\"1\":{\"180\":1}}],[\"插入一个数据\",{\"1\":{\"154\":1}}],[\"插入\",{\"0\":{\"202\":1},\"1\":{\"136\":1,\"152\":1,\"169\":1,\"180\":1,\"200\":1,\"201\":1}}],[\"插入和删除比较低效\",{\"1\":{\"136\":1}}],[\"插入都可以完成\",{\"1\":{\"28\":1}}],[\"重定向\",{\"1\":{\"360\":2}}],[\"重点留意边界条件处理\",{\"0\":{\"181\":1}}],[\"重启\",{\"0\":{\"134\":1},\"1\":{\"134\":1}}],[\"重新计算哈希位置\",{\"1\":{\"154\":1}}],[\"重新申请一个更大的散列表\",{\"1\":{\"154\":1}}],[\"重新打开一个\",{\"1\":{\"129\":1}}],[\"重新编码为多字节\",{\"1\":{\"99\":1}}],[\"关注\",{\"1\":{\"274\":1}}],[\"关键原则\",{\"0\":{\"252\":1}}],[\"关键在于写出递推公式\",{\"1\":{\"191\":1}}],[\"关键字\",{\"1\":{\"132\":1}}],[\"关机\",{\"0\":{\"134\":1}}],[\"开花\",{\"1\":{\"411\":1,\"428\":1}}],[\"开头的八进制前缀\",{\"1\":{\"379\":1}}],[\"开头的一些口语化表达\",{\"0\":{\"234\":1}}],[\"开放式最短路径优先\",{\"1\":{\"370\":1}}],[\"开放寻址法只适用装载因子小于1的情况\",{\"1\":{\"154\":1}}],[\"开放寻址法\",{\"0\":{\"148\":1},\"1\":{\"154\":1}}],[\"开玩笑\",{\"1\":{\"246\":1}}],[\"开机启动\",{\"1\":{\"133\":1}}],[\"开始阅读\",{\"1\":{\"310\":1}}],[\"开始执行该文件\",{\"1\":{\"122\":1}}],[\"开始\",{\"1\":{\"70\":1}}],[\"开始修改\",{\"1\":{\"28\":1}}],[\"改为\",{\"1\":{\"318\":1}}],[\"改为使用\",{\"1\":{\"133\":1}}],[\"改造\",{\"1\":{\"248\":1}}],[\"改成位操作\",{\"1\":{\"139\":1}}],[\"改进\",{\"1\":{\"139\":1}}],[\"改变的地方\",{\"1\":{\"244\":1}}],[\"改变所属组\",{\"1\":{\"125\":1}}],[\"改变所属用户\",{\"1\":{\"125\":1}}],[\"改变\",{\"1\":{\"57\":1,\"366\":1}}],[\"改变原数组\",{\"1\":{\"28\":1}}],[\"原始模型\",{\"0\":{\"275\":1}}],[\"原始模型中很容易掺杂性别歧视\",{\"1\":{\"268\":1}}],[\"原始链表中存储的有可能是很大的对象\",{\"1\":{\"198\":1}}],[\"原数组有序\",{\"1\":{\"209\":1}}],[\"原地\",{\"1\":{\"206\":1,\"209\":1,\"215\":1}}],[\"原地排序\",{\"1\":{\"201\":1}}],[\"原子操作\",{\"1\":{\"187\":1}}],[\"原来装载因子为\",{\"1\":{\"154\":1}}],[\"原本可以利用命令行进行输出\",{\"1\":{\"132\":1}}],[\"原位\",{\"1\":{\"28\":1}}],[\"运算会进行跨类型的比较\",{\"1\":{\"378\":1}}],[\"运算符号等\",{\"1\":{\"94\":1}}],[\"运行结果\",{\"1\":{\"345\":1}}],[\"运行上面代码后\",{\"1\":{\"315\":1}}],[\"运行程序\",{\"0\":{\"130\":1}}],[\"几乎任意字符\",{\"1\":{\"224\":1}}],[\"几乎所有函数的数组方法\",{\"1\":{\"28\":1}}],[\"几十万次时\",{\"1\":{\"180\":1}}],[\"几种常见的链表结构\",{\"0\":{\"168\":1}}],[\"几个配置文件的区别\",{\"1\":{\"129\":1}}],[\"文本编辑器来编辑\",{\"1\":{\"129\":1}}],[\"文件路径\",{\"1\":{\"342\":1}}],[\"文件夹\",{\"1\":{\"337\":1}}],[\"文件夹下其他的\",{\"1\":{\"36\":1}}],[\"文件直接推到仓库中\",{\"1\":{\"331\":1}}],[\"文件描述符\",{\"1\":{\"132\":2}}],[\"文件中加入\",{\"1\":{\"129\":1}}],[\"文件中看到了新创建的用户\",{\"1\":{\"124\":1}}],[\"文件\",{\"1\":{\"129\":3,\"331\":1,\"336\":1,\"342\":1}}],[\"文件所属的组权限\",{\"1\":{\"125\":1}}],[\"文件里\",{\"1\":{\"124\":1}}],[\"默认走\",{\"1\":{\"367\":1}}],[\"默认情况下为\",{\"1\":{\"347\":1}}],[\"默认情况下按照字符串进行排序\",{\"1\":{\"28\":1}}],[\"默认训练\",{\"1\":{\"322\":1}}],[\"默认的\",{\"1\":{\"322\":1}}],[\"默认的初始的大小是\",{\"1\":{\"156\":1}}],[\"默认是一个函数\",{\"1\":{\"313\":1}}],[\"默认超过\",{\"1\":{\"158\":1}}],[\"默认有\",{\"1\":{\"129\":1}}],[\"程序还要在\",{\"1\":{\"132\":1}}],[\"程序就停止运行了\",{\"1\":{\"131\":1}}],[\"程序\",{\"1\":{\"129\":2}}],[\"程序员更多接触到的是\",{\"1\":{\"88\":1}}],[\"官网中的安装目录里\",{\"1\":{\"129\":1}}],[\"官方示例时\",{\"1\":{\"315\":1}}],[\"官方示例\",{\"1\":{\"315\":1,\"345\":1}}],[\"官方之外的个人和机构自由定义字符的特殊区域\",{\"1\":{\"106\":1}}],[\"官方未将之分配给任何\",{\"1\":{\"106\":1}}],[\"允许版本控制和重现\",{\"1\":{\"327\":1}}],[\"允许我们配置从哪里下载这些软件\",{\"1\":{\"128\":1}}],[\"允许负向索引\",{\"1\":{\"28\":1}}],[\"配置多个路由表\",{\"1\":{\"367\":1}}],[\"配置路由\",{\"0\":{\"367\":1}}],[\"配置\",{\"1\":{\"325\":1}}],[\"配置运行环境\",{\"1\":{\"314\":1}}],[\"配置中包含很多建立模型要用到的属性\",{\"1\":{\"285\":1}}],[\"配置文件在\",{\"1\":{\"129\":1}}],[\"配置环境\",{\"0\":{\"129\":1}}],[\"配置源\",{\"1\":{\"128\":1}}],[\"配合其他指标使用\",{\"1\":{\"4\":1}}],[\"卸载\",{\"1\":{\"128\":1}}],[\"选取前面几个样本\",{\"1\":{\"345\":1}}],[\"选取最后一个元素做\",{\"1\":{\"210\":1}}],[\"选取要排序数组中的任意一个元素最为\",{\"1\":{\"209\":1}}],[\"选中对应的版本就可以进行安装了\",{\"1\":{\"128\":1}}],[\"选择任务\",{\"1\":{\"267\":1}}],[\"选择其中最有用的一些特征进行开发\",{\"1\":{\"253\":1}}],[\"选择其一\",{\"1\":{\"233\":1}}],[\"选择这三个数的中间值作为分区点\",{\"1\":{\"216\":1}}],[\"选择排序\",{\"1\":{\"206\":1,\"215\":1}}],[\"选择排序不稳定\",{\"1\":{\"206\":1}}],[\"选择某个\",{\"1\":{\"64\":1}}],[\"选择\",{\"0\":{\"202\":1},\"1\":{\"64\":1,\"201\":1}}],[\"选择最佳\",{\"1\":{\"47\":1}}],[\"||\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"180\":2}}],[\"|xargs\",{\"1\":{\"132\":1}}],[\"|awk\",{\"1\":{\"132\":1}}],[\"|grep\",{\"1\":{\"132\":1}}],[\"|\",{\"1\":{\"127\":4}}],[\"修改对象的内建行为\",{\"1\":{\"376\":1}}],[\"修改后需要\",{\"1\":{\"129\":1}}],[\"修改这个文件不用重启\",{\"1\":{\"129\":1}}],[\"修改这个文件需要\",{\"1\":{\"129\":1}}],[\"修改才会生效\",{\"1\":{\"129\":1}}],[\"修改权限\",{\"1\":{\"125\":2}}],[\"修改密码\",{\"1\":{\"124\":1}}],[\"写起来也不复杂\",{\"1\":{\"195\":1}}],[\"写起来很简洁\",{\"1\":{\"194\":1}}],[\"写代码时不必写成第二段那样\",{\"1\":{\"180\":1}}],[\"写\",{\"1\":{\"125\":1}}],[\"组合在一起了\",{\"1\":{\"298\":1}}],[\"组织\",{\"1\":{\"264\":1}}],[\"组的信息在\",{\"1\":{\"124\":1}}],[\"组播地址\",{\"1\":{\"111\":1}}],[\"命令中提到过\",{\"1\":{\"364\":1}}],[\"命令执行时\",{\"1\":{\"361\":1}}],[\"命令将前面的输入作为后面命令\",{\"1\":{\"132\":1}}],[\"命令仅在当前命令行的会话中管用\",{\"1\":{\"129\":1}}],[\"命令来配置\",{\"1\":{\"129\":1}}],[\"命令只能由\",{\"1\":{\"125\":1}}],[\"命令查看\",{\"1\":{\"124\":1}}],[\"命令\",{\"0\":{\"123\":1},\"1\":{\"337\":2}}],[\"命令加后面的子命令\",{\"1\":{\"112\":1}}],[\"启动动态缩容\",{\"1\":{\"154\":1}}],[\"启动扩容\",{\"1\":{\"154\":1}}],[\"启动\",{\"1\":{\"122\":1,\"133\":2}}],[\"启动文件\",{\"1\":{\"122\":1}}],[\"启动之后才能安装操作系统\",{\"1\":{\"121\":1}}],[\"租给他一个\",{\"1\":{\"122\":1}}],[\"租用期更新就完成了\",{\"1\":{\"120\":1}}],[\"租用请求者\",{\"1\":{\"118\":1}}],[\"那样返回\",{\"1\":{\"362\":1}}],[\"那段代码\",{\"1\":{\"325\":1}}],[\"那将会生成大量\",{\"1\":{\"291\":1}}],[\"那索引占用的额外空间就可以忽略了\",{\"1\":{\"198\":1}}],[\"那数组就更适合你\",{\"1\":{\"173\":1}}],[\"那最终退化成的散列表的查找时间也只不过是\",{\"1\":{\"154\":1}}],[\"那就退化为\",{\"1\":{\"212\":1}}],[\"那就是\",{\"1\":{\"154\":1}}],[\"那就可以不用费劲来缩容了\",{\"1\":{\"154\":1}}],[\"那就需要\",{\"1\":{\"140\":1}}],[\"那它探测的下标序列就是\",{\"1\":{\"150\":1}}],[\"那它怎么知道\",{\"1\":{\"121\":1}}],[\"那么该字段还会包括\",{\"1\":{\"316\":1}}],[\"那么该对象会被转换为原始类型\",{\"1\":{\"27\":1}}],[\"那么知道一个变量的取值\",{\"1\":{\"254\":1}}],[\"那么就需要\",{\"1\":{\"214\":1}}],[\"那么就从当前位置开始\",{\"1\":{\"149\":1}}],[\"那么到\",{\"1\":{\"210\":2}}],[\"那么索引中的结点也要跟着删除\",{\"1\":{\"199\":1}}],[\"那么总的索引数大概是\",{\"1\":{\"198\":1}}],[\"那么第一级索引的结点个数是\",{\"1\":{\"197\":1}}],[\"那么插入数据的操作会被阻塞\",{\"1\":{\"186\":1}}],[\"那么出现在每个位置的概率为\",{\"1\":{\"165\":1}}],[\"那么需要将整个数组遍历一遍\",{\"1\":{\"164\":1}}],[\"那么循环只执行\",{\"1\":{\"164\":1}}],[\"那么在下次查找某个元素时\",{\"1\":{\"149\":1}}],[\"那么可以将要插入位置的元素插入到最后\",{\"1\":{\"136\":1}}],[\"那么可以在股价触碰布林带上轨时卖出\",{\"1\":{\"3\":1}}],[\"那么如何关闭这个进程呢\",{\"1\":{\"132\":1}}],[\"那么直接调\",{\"1\":{\"131\":1}}],[\"那么包完全发不出去\",{\"1\":{\"113\":1}}],[\"那么这个字节的含义与\",{\"1\":{\"99\":1}}],[\"那么即使估计的\",{\"1\":{\"59\":1}}],[\"那么\",{\"1\":{\"28\":1,\"146\":2,\"210\":1,\"302\":1,\"362\":1}}],[\"那么会将数组的第一个元素作为初始值\",{\"1\":{\"28\":1}}],[\"那么它在之前已经被缓存了\",{\"1\":{\"280\":1}}],[\"那么它会企图把包发送到网关\",{\"1\":{\"113\":1}}],[\"那么它会被当做一个数组来处理\",{\"1\":{\"28\":1}}],[\"那么它就是整数属性\",{\"1\":{\"10\":1}}],[\"那么我们会很自然地想使用\",{\"1\":{\"19\":1}}],[\"给定文本\",{\"1\":{\"288\":1}}],[\"给定问题和上下文\",{\"1\":{\"264\":1}}],[\"给定数组\",{\"1\":{\"180\":1}}],[\"给定当前的状态\",{\"1\":{\"54\":1}}],[\"给它分配一个地址\",{\"1\":{\"121\":1}}],[\"啥都没有\",{\"1\":{\"121\":1}}],[\"参数问题\",{\"1\":{\"360\":1}}],[\"参数很灵活\",{\"1\":{\"342\":1}}],[\"参数给\",{\"1\":{\"312\":1}}],[\"参数去掉了\",{\"1\":{\"312\":1}}],[\"参数设置\",{\"1\":{\"301\":1}}],[\"参数传递对应的模型名称\",{\"1\":{\"267\":1}}],[\"参数查看帮助\",{\"1\":{\"124\":1}}],[\"参数\",{\"1\":{\"120\":1}}],[\"参考文档\",{\"1\":{\"336\":1}}],[\"参考\",{\"1\":{\"81\":1,\"336\":1}}],[\"参考链接\",{\"1\":{\"38\":1}}],[\"客户端会请求这些文件\",{\"1\":{\"122\":1}}],[\"客户端一个配置文件\",{\"1\":{\"122\":1}}],[\"客户端向\",{\"1\":{\"122\":1}}],[\"客户端去\",{\"1\":{\"122\":1}}],[\"客户端启动\",{\"1\":{\"122\":1}}],[\"客户端启动后\",{\"1\":{\"121\":1}}],[\"客户端启动的时候\",{\"1\":{\"121\":1}}],[\"客户端有了自己的地址\",{\"1\":{\"121\":1}}],[\"客户端自己需要有\",{\"1\":{\"121\":1}}],[\"客户端\",{\"1\":{\"121\":1,\"122\":1}}],[\"客户端调入内存里\",{\"1\":{\"121\":1}}],[\"客户端仍然使用\",{\"1\":{\"118\":1}}],[\"客户机接收到该服务器回应的\",{\"1\":{\"120\":1}}],[\"客户机在租期过去\",{\"1\":{\"120\":1}}],[\"欢迎它加入网络大家庭\",{\"1\":{\"119\":1}}],[\"消费者\",{\"1\":{\"186\":2}}],[\"消息包\",{\"1\":{\"119\":1,\"120\":2}}],[\"消除了\",{\"1\":{\"45\":1}}],[\"收入\",{\"1\":{\"260\":1}}],[\"收购后\",{\"1\":{\"133\":1}}],[\"收到了这个文件\",{\"1\":{\"122\":1}}],[\"收到客户机的\",{\"1\":{\"119\":1}}],[\"收录的汉字不足\",{\"1\":{\"99\":1}}],[\"收录了西欧常用字符\",{\"1\":{\"97\":1}}],[\"谢谢你们的接纳\",{\"1\":{\"118\":1}}],[\"告诉其他\",{\"1\":{\"118\":1}}],[\"仍然使用广播地址作为目的地址\",{\"1\":{\"117\":1}}],[\"仍然表示之前的\",{\"1\":{\"96\":1}}],[\"新的字段即预处理函数返回的字典中的每个键\",{\"1\":{\"312\":1}}],[\"新的任务请求线程资源时\",{\"0\":{\"188\":1}}],[\"新人\",{\"1\":{\"117\":1,\"122\":1}}],[\"新来的机器使用\",{\"1\":{\"116\":1}}],[\"封装了\",{\"1\":{\"116\":1}}],[\"发展成\",{\"1\":{\"428\":1}}],[\"发出后是没有办法确定有没有收到的\",{\"1\":{\"362\":1}}],[\"发起广播\",{\"1\":{\"355\":1}}],[\"发现端口是\",{\"1\":{\"352\":1}}],[\"发现\",{\"1\":{\"352\":1}}],[\"发挥最大性能\",{\"1\":{\"188\":1}}],[\"发送到网关\",{\"1\":{\"366\":1}}],[\"发送的第一个分组的长度正好与出口\",{\"1\":{\"362\":1}}],[\"发送数据包\",{\"1\":{\"355\":1}}],[\"发送包的时候\",{\"1\":{\"355\":1}}],[\"发送一个包\",{\"1\":{\"354\":1}}],[\"发送者\",{\"1\":{\"353\":2}}],[\"发送\",{\"1\":{\"120\":1,\"121\":1}}],[\"发送了一个广播包\",{\"1\":{\"116\":1}}],[\"发给客户机\",{\"1\":{\"119\":1}}],[\"发行版已经停止支持\",{\"1\":{\"112\":1}}],[\"我走我的\",{\"1\":{\"352\":1}}],[\"我来了\",{\"1\":{\"122\":1}}],[\"我来啦\",{\"1\":{\"116\":1}}],[\"我是\",{\"1\":{\"122\":1}}],[\"我是新来的\",{\"1\":{\"116\":1}}],[\"我没\",{\"1\":{\"116\":1}}],[\"我的\",{\"1\":{\"116\":1,\"337\":1,\"355\":1}}],[\"我们看一下\",{\"1\":{\"337\":1}}],[\"我们仍然使用\",{\"1\":{\"324\":1}}],[\"我们假定你已经完成了这步\",{\"1\":{\"317\":1}}],[\"我们最终得到了\",{\"1\":{\"316\":1}}],[\"我们最终会得到一个非常大的词汇表\",{\"1\":{\"291\":1}}],[\"我们来看一下如何构建\",{\"1\":{\"316\":1}}],[\"我们来看一下代码实现\",{\"1\":{\"20\":1}}],[\"我们没有为\",{\"1\":{\"315\":1}}],[\"我们没有配置\",{\"1\":{\"315\":1}}],[\"我们快速回顾一下上一部分的预处理\",{\"1\":{\"314\":1}}],[\"我们已经将原数数据转化成模型可处理的\",{\"1\":{\"313\":1}}],[\"我们已经过如何使用\",{\"1\":{\"288\":1}}],[\"我们取了\",{\"1\":{\"313\":1}}],[\"我们得到了一个\",{\"1\":{\"311\":1}}],[\"我们无法将这个\",{\"1\":{\"302\":1}}],[\"我们详细介绍下\",{\"1\":{\"284\":1}}],[\"我们预测的是\",{\"1\":{\"283\":1}}],[\"我们分析的是两个句子\",{\"1\":{\"282\":1}}],[\"我们分别排序\",{\"1\":{\"209\":1}}],[\"我们还会使用一些传统的\",{\"1\":{\"336\":1}}],[\"我们还会展示如何批处理多个句子\",{\"1\":{\"277\":1}}],[\"我们还需要自定义一个\",{\"1\":{\"291\":1}}],[\"我们还可以使用\",{\"1\":{\"346\":2}}],[\"我们还可以使用注意力遮罩层\",{\"1\":{\"275\":1}}],[\"我们还可以在分组下聚合多行信息\",{\"1\":{\"260\":1}}],[\"我们还可以通过协调\",{\"1\":{\"186\":1}}],[\"我们简单介绍了\",{\"1\":{\"276\":1}}],[\"我们正在预测第4个单词\",{\"1\":{\"275\":1}}],[\"我们确定\",{\"1\":{\"261\":1}}],[\"我们主要关注\",{\"1\":{\"261\":1}}],[\"我们经常使用数学公式来对特征进行处理\",{\"1\":{\"257\":1}}],[\"我们要尽量避免\",{\"1\":{\"216\":1}}],[\"我们习惯性地把要处理的数据看成整数\",{\"1\":{\"198\":1}}],[\"我们希望\",{\"1\":{\"291\":1}}],[\"我们希望公平地处理每个排队的需求\",{\"1\":{\"188\":1}}],[\"我们希望遍历该对象获取该数字区间的值\",{\"1\":{\"20\":1}}],[\"我们遍历得到这个数据对应的结点\",{\"1\":{\"175\":1}}],[\"我们从链表头开始顺序遍历链表\",{\"1\":{\"175\":1}}],[\"我们从新的\",{\"1\":{\"70\":1}}],[\"我们维护一个有序单链表\",{\"1\":{\"175\":1}}],[\"我们才会使用这三种复杂度表示法来区分\",{\"1\":{\"165\":1}}],[\"我们循环执行\",{\"1\":{\"162\":1}}],[\"我们引入了红黑树\",{\"1\":{\"158\":1}}],[\"我们对起初的代码进行修改\",{\"1\":{\"301\":1}}],[\"我们对小长度的序列进行了处理\",{\"1\":{\"300\":1}}],[\"我们对链表法稍加改造\",{\"1\":{\"154\":1}}],[\"我们对输入进行降维\",{\"1\":{\"43\":1}}],[\"我们用装载因子\",{\"1\":{\"151\":1}}],[\"我们用于估计\",{\"1\":{\"46\":1}}],[\"我们会在第\",{\"1\":{\"316\":1}}],[\"我们会喂给\",{\"1\":{\"275\":1}}],[\"我们会把前三个单词也作为输入\",{\"1\":{\"275\":1}}],[\"我们会感觉不知道何从下手\",{\"1\":{\"253\":1}}],[\"我们会尽可能保证散列表中有一定比例的空闲槽位\",{\"1\":{\"151\":1}}],[\"我们会将所有的功能在统一的位置进行\",{\"1\":{\"36\":1}}],[\"我们先用第一个散列函数\",{\"1\":{\"151\":1}}],[\"我们也称散列表为哈希表或\",{\"1\":{\"146\":1}}],[\"我们也可以截掉屏幕的一部分\",{\"1\":{\"43\":1}}],[\"我们有\",{\"1\":{\"140\":1}}],[\"我们有这样一个对象\",{\"1\":{\"20\":1}}],[\"我们再出发执行一次真正的删除操作\",{\"1\":{\"136\":1}}],[\"我们在之前的代码上进行简单修改即可完成\",{\"1\":{\"325\":1}}],[\"我们在上一篇文章中介绍了\",{\"1\":{\"312\":1}}],[\"我们在使用\",{\"1\":{\"295\":1}}],[\"我们在\",{\"1\":{\"124\":1}}],[\"我们在拷贝或者合并对象时是希望对所有的属性做操作的\",{\"1\":{\"13\":1}}],[\"我们平常用到的大多数常见字符\",{\"1\":{\"106\":1}}],[\"我们宁可把垃圾邮件标记为正常邮件\",{\"1\":{\"81\":1}}],[\"我们宁可把健康人误诊为癌症\",{\"1\":{\"81\":1}}],[\"我们通过三个步骤\",{\"1\":{\"283\":1}}],[\"我们通过一个随机函数\",{\"1\":{\"200\":1}}],[\"我们通过最大化\",{\"1\":{\"59\":1}}],[\"我们通常可以选择\",{\"1\":{\"77\":1}}],[\"我们逐渐减小\",{\"1\":{\"70\":1}}],[\"我们就增加了\",{\"1\":{\"346\":1}}],[\"我们就简单基于空格来进行词数统计\",{\"1\":{\"346\":1}}],[\"我们就可以在自己的数据集上微调模型了\",{\"1\":{\"315\":1}}],[\"我们就可以把数据划分成\",{\"1\":{\"213\":1}}],[\"我们就可以将这一组操作放在一块儿分析\",{\"1\":{\"166\":1}}],[\"我们就可以像\",{\"1\":{\"42\":1}}],[\"我们就有了\",{\"1\":{\"69\":1}}],[\"我们的目标就是找到让\",{\"1\":{\"62\":1}}],[\"我们的目标就是找到最佳的\",{\"1\":{\"54\":1}}],[\"我们使用刚刚建好的仓库\",{\"1\":{\"336\":1}}],[\"我们使用了\",{\"1\":{\"279\":1,\"307\":1}}],[\"我们使用人工标注的数据以有监督的方式进行精调\",{\"1\":{\"270\":1}}],[\"我们使用的指标就叫做互信息\",{\"1\":{\"253\":1}}],[\"我们使用\",{\"1\":{\"57\":1,\"282\":1,\"302\":1,\"312\":1,\"321\":1,\"342\":1,\"345\":1}}],[\"我们直接训练\",{\"1\":{\"57\":1}}],[\"我们训练\",{\"1\":{\"57\":1,\"64\":1}}],[\"我们只能看到玩家附近的地图\",{\"1\":{\"49\":1}}],[\"我们如何确定执行哪个行动会得到最高的\",{\"1\":{\"47\":1}}],[\"我们需要稍微智能一点的设备\",{\"1\":{\"354\":1}}],[\"我们需要知道要进行多少\",{\"1\":{\"322\":1}}],[\"我们需要将文本转化成数字表示\",{\"1\":{\"312\":1}}],[\"我们需要思考以下问题\",{\"1\":{\"300\":1}}],[\"我们需要一个有序列分类\",{\"1\":{\"282\":1}}],[\"我们需要一个可以永远起作用的配置\",{\"1\":{\"129\":1}}],[\"我们需要某种手段来维护索引与原始链表大小之间的平衡\",{\"1\":{\"200\":1}}],[\"我们需要额外接近\",{\"1\":{\"198\":1}}],[\"我们需要重新申请内存空间\",{\"1\":{\"154\":1}}],[\"我们需要自动配置的协议\",{\"1\":{\"114\":1}}],[\"我们需要对其进行估计\",{\"1\":{\"46\":1}}],[\"我们需要使用全局\",{\"1\":{\"14\":1}}],[\"我们初始化了\",{\"1\":{\"45\":1}}],[\"我们采取了下面的措施\",{\"1\":{\"44\":1}}],[\"我们将该列重命名为\",{\"1\":{\"345\":1}}],[\"我们将深入了解\",{\"1\":{\"340\":1}}],[\"我们将上面检验\",{\"1\":{\"320\":1}}],[\"我们将上面使用\",{\"1\":{\"281\":1}}],[\"我们将开始微调\",{\"1\":{\"315\":1}}],[\"我们将其进行\",{\"1\":{\"306\":1}}],[\"我们将填充\",{\"1\":{\"302\":1}}],[\"我们将在\",{\"1\":{\"294\":1,\"315\":1}}],[\"我们将在未来在讨论其他参数\",{\"1\":{\"288\":1}}],[\"我们将使用\",{\"1\":{\"277\":1,\"310\":1}}],[\"我们将链表法中的链表改造为其他高效的动态数据结构\",{\"1\":{\"154\":1}}],[\"我们将介绍贝尔曼方程\",{\"1\":{\"64\":1}}],[\"我们将\",{\"1\":{\"43\":1,\"303\":1,\"312\":1}}],[\"我们输入\",{\"1\":{\"42\":1}}],[\"我们不妨加载已经训练好的模型\",{\"1\":{\"286\":1}}],[\"我们不希望模型关注它\",{\"1\":{\"275\":1}}],[\"我们不必太在意索引占用的额外空间\",{\"1\":{\"198\":1}}],[\"我们不用手动实现\",{\"1\":{\"59\":1}}],[\"我们不再使用\",{\"1\":{\"41\":1}}],[\"我们不能使用同时运行两个\",{\"1\":{\"20\":1}}],[\"我们应该使用\",{\"1\":{\"36\":1}}],[\"我们可能需要首先对特征进行变换\",{\"1\":{\"255\":1}}],[\"我们可能会陷入一个常见的陷阱中\",{\"1\":{\"53\":1}}],[\"我们可能会很自然地想到\",{\"1\":{\"22\":1}}],[\"我们可以用集线器组网\",{\"1\":{\"354\":1}}],[\"我们可以用它们来微调对象的各个方面\",{\"1\":{\"17\":1}}],[\"我们可以看出数据集的一些特点了\",{\"1\":{\"345\":1}}],[\"我们可以看到模型需要的输入形式是\",{\"1\":{\"312\":1}}],[\"我们可以抽取一些样本来观察\",{\"1\":{\"345\":1}}],[\"我们可以直接通过\",{\"1\":{\"331\":1}}],[\"我们可以设置\",{\"1\":{\"323\":1}}],[\"我们可以传递通过\",{\"1\":{\"315\":1}}],[\"我们可以验证一下\",{\"1\":{\"313\":1}}],[\"我们可以为\",{\"1\":{\"312\":1}}],[\"我们可以说\",{\"1\":{\"265\":1}}],[\"我们可以先用特征效用指标\",{\"1\":{\"253\":1}}],[\"我们可以\",{\"1\":{\"251\":1}}],[\"我们可以选择同时将这个数据插入到部分索引层中\",{\"1\":{\"200\":1}}],[\"我们可以实现一个支持无限排队的无界队列\",{\"1\":{\"188\":1}}],[\"我们可以记录上次查找的位置\",{\"1\":{\"171\":1}}],[\"我们可以在里面找到各种最新的模型和数据集\",{\"1\":{\"327\":1}}],[\"我们可以在多个\",{\"1\":{\"325\":1}}],[\"我们可以在\",{\"1\":{\"316\":1}}],[\"我们可以在训练集上使用\",{\"1\":{\"260\":1}}],[\"我们可以在训练过程中重复使用\",{\"1\":{\"45\":1}}],[\"我们可以在装载因子小于某个值之后\",{\"1\":{\"154\":1}}],[\"我们可以将删除的元素\",{\"1\":{\"149\":1}}],[\"我们可以通过下标查看几个示例如\",{\"1\":{\"342\":1}}],[\"我们可以通过查看\",{\"1\":{\"283\":1}}],[\"我们可以通过一个数据结构\",{\"1\":{\"193\":1}}],[\"我们可以通过在代码中限制递归调用的最大深度的方式来解决这个问题\",{\"1\":{\"192\":1}}],[\"我们可以通过\",{\"1\":{\"124\":1}}],[\"我们可以利用红黑树快速增删改查的特点\",{\"1\":{\"158\":1}}],[\"我们可以利用\",{\"1\":{\"23\":1}}],[\"我们可以迭代一部分\",{\"1\":{\"21\":1}}],[\"我们可以使用特殊的对象方法来实现字符串和数值转换\",{\"1\":{\"381\":1}}],[\"我们可以使用交叉验证等方法来对这个参数进行调优\",{\"1\":{\"261\":1}}],[\"我们可以使用之前的\",{\"1\":{\"41\":1}}],[\"我们可以使用\",{\"1\":{\"20\":1,\"133\":1,\"279\":1,\"305\":1,\"316\":1}}],[\"我们为对象增加一个名为\",{\"1\":{\"20\":1}}],[\"我们定义对象的时候\",{\"1\":{\"13\":1}}],[\"吼\",{\"1\":{\"116\":1,\"353\":1}}],[\"动手的\",{\"1\":{\"435\":1}}],[\"动物世界\",{\"1\":{\"392\":1}}],[\"动词\",{\"1\":{\"264\":1}}],[\"动词搭配\",{\"0\":{\"227\":1}}],[\"动态路由协议\",{\"0\":{\"370\":1}}],[\"动态路由算法\",{\"0\":{\"369\":1}}],[\"动态路由\",{\"0\":{\"368\":1}}],[\"动态填充\",{\"0\":{\"313\":1}}],[\"动态缩容\",{\"1\":{\"154\":2}}],[\"动态扩容\",{\"1\":{\"154\":2}}],[\"动态主机配置协议\",{\"0\":{\"114\":1}}],[\"动作对的\",{\"1\":{\"69\":1}}],[\"动作对的估值\",{\"1\":{\"69\":1}}],[\"动作对的价值\",{\"1\":{\"64\":1}}],[\"动作对\",{\"1\":{\"69\":1}}],[\"源服务器\",{\"1\":{\"366\":1}}],[\"源主机到网关的发送过程和上面同一网段的情况一样\",{\"1\":{\"364\":1}}],[\"源主机会用当前时刻减去该数据包最初从源主机上发出的时刻\",{\"1\":{\"361\":1}}],[\"源主机会构建\",{\"1\":{\"361\":1}}],[\"源主机没有收到\",{\"1\":{\"361\":1}}],[\"源路由失败\",{\"1\":{\"360\":1}}],[\"源抑制\",{\"1\":{\"360\":2}}],[\"源配置文件内容示例\",{\"1\":{\"128\":1}}],[\"源\",{\"1\":{\"113\":1,\"352\":1,\"353\":1,\"366\":5}}],[\"周围的机器都是\",{\"1\":{\"113\":1}}],[\"包边缝拢\",{\"1\":{\"424\":1}}],[\"包想去哪\",{\"1\":{\"367\":1}}],[\"包的数据部分是\",{\"1\":{\"364\":1}}],[\"包的\",{\"1\":{\"360\":1}}],[\"包里的\",{\"1\":{\"360\":1}}],[\"包也是自己的\",{\"1\":{\"352\":1}}],[\"包\",{\"1\":{\"352\":2,\"362\":1}}],[\"包含专属于自己的\",{\"1\":{\"129\":1}}],[\"包中包含客户端的\",{\"1\":{\"118\":1}}],[\"包就无法发送出去了\",{\"1\":{\"113\":1}}],[\"包括动态填充和\",{\"1\":{\"326\":1}}],[\"包括空格\",{\"1\":{\"224\":1}}],[\"包括德法两国的字母\",{\"1\":{\"97\":1}}],[\"包括自动驾驶汽车\",{\"1\":{\"38\":1}}],[\"包括\",{\"1\":{\"13\":1,\"18\":2,\"270\":1}}],[\"他会选择其中一个\",{\"1\":{\"118\":1}}],[\"他才会发送\",{\"1\":{\"113\":1}}],[\"他的队列包括三个波段\",{\"1\":{\"112\":1}}],[\"他们对应的单字节编码的\",{\"1\":{\"100\":1}}],[\"稍微复杂一点\",{\"1\":{\"112\":1}}],[\"数值转换\",{\"1\":{\"381\":1}}],[\"数值上等于数组初始状态的逆序度\",{\"1\":{\"206\":1}}],[\"数字转字符串完全符合你的直觉\",{\"1\":{\"380\":1}}],[\"数字\",{\"1\":{\"379\":1}}],[\"数决定\",{\"1\":{\"291\":1}}],[\"数学转换\",{\"0\":{\"257\":1}}],[\"数据部分\",{\"1\":{\"360\":1}}],[\"数据结构中有最小生成树\",{\"1\":{\"356\":1}}],[\"数据报\",{\"1\":{\"352\":1}}],[\"数据链路层\",{\"0\":{\"351\":1}}],[\"数据\",{\"0\":{\"345\":1},\"1\":{\"352\":1,\"360\":1}}],[\"数据加载器\",{\"0\":{\"319\":1}}],[\"数据预处理完成了\",{\"1\":{\"319\":1}}],[\"数据预处理\",{\"1\":{\"317\":1}}],[\"数据预处理的方式和之前介绍的一样\",{\"1\":{\"317\":1}}],[\"数据集不在\",{\"1\":{\"340\":1}}],[\"数据集预处理\",{\"0\":{\"312\":1}}],[\"数据集有关的\",{\"1\":{\"316\":1}}],[\"数据集有\",{\"1\":{\"310\":1}}],[\"数据集\",{\"1\":{\"310\":1}}],[\"数据集中的每个点都被分配到距离它最近的质心所属的聚类\",{\"1\":{\"261\":1}}],[\"数据可视化可以帮助我们选择对数据进行重塑的方式\",{\"1\":{\"257\":1}}],[\"数据在各个桶之间的分布是比较均匀的\",{\"1\":{\"212\":1}}],[\"数据都存在数组中\",{\"1\":{\"154\":1}}],[\"数据量比较大\",{\"1\":{\"212\":1}}],[\"数据量太大不适合二分查找\",{\"1\":{\"140\":1}}],[\"数据量太小不适合二分查找\",{\"1\":{\"140\":1}}],[\"数据量很小的时候\",{\"1\":{\"140\":1}}],[\"数据中心的管理员肯呢个一下子拿到几百台控的机器\",{\"1\":{\"121\":1}}],[\"数据包将使用此表中的路由规则\",{\"1\":{\"367\":1}}],[\"数据包将从主路由表中查找\",{\"1\":{\"367\":1}}],[\"数据包\",{\"1\":{\"362\":1}}],[\"数据包的时间延迟\",{\"1\":{\"361\":1}}],[\"数据包在链路上广播\",{\"1\":{\"352\":1}}],[\"数据包按照服务类型\",{\"1\":{\"112\":1}}],[\"数据包采用先进先出的方式通过队列\",{\"1\":{\"112\":1}}],[\"数组排序之后的数组\",{\"1\":{\"213\":1}}],[\"数组被分为三部分\",{\"1\":{\"210\":1}}],[\"数组的缺点是大小固定\",{\"1\":{\"173\":1}}],[\"数组的方法\",{\"0\":{\"28\":1}}],[\"数组简单易用\",{\"1\":{\"173\":1}}],[\"数组\",{\"0\":{\"136\":1,\"173\":1},\"1\":{\"140\":1,\"213\":1}}],[\"数组本身\",{\"1\":{\"28\":1}}],[\"数组或值都行\",{\"1\":{\"28\":1}}],[\"数组可以逐项比较\",{\"1\":{\"27\":1}}],[\"数组没有\",{\"1\":{\"26\":1}}],[\"数组和字符串都是可迭代的\",{\"1\":{\"19\":1}}],[\"排除字符组\",{\"1\":{\"224\":1}}],[\"排队规则\",{\"1\":{\"112\":2}}],[\"排序算法\",{\"1\":{\"201\":1}}],[\"排序的时间复杂度最低的是\",{\"1\":{\"140\":1}}],[\"排序\",{\"0\":{\"201\":1},\"1\":{\"28\":1}}],[\"呢\",{\"1\":{\"112\":1,\"113\":1}}],[\"往往会被分配到\",{\"1\":{\"112\":1}}],[\"往往会忘记以前的\",{\"1\":{\"45\":1}}],[\"环路问题会导致\",{\"1\":{\"356\":1}}],[\"环路问题\",{\"0\":{\"356\":1}}],[\"环境变量来自定义缓存路径\",{\"1\":{\"286\":1,\"311\":1}}],[\"环境中所有可能的\",{\"1\":{\"49\":1}}],[\"环形缓存\",{\"1\":{\"185\":1}}],[\"环回接口\",{\"1\":{\"112\":1}}],[\"套接字接口与内核通讯\",{\"1\":{\"112\":1}}],[\"旨在计算最短路径并支持大规模\",{\"1\":{\"370\":1}}],[\"旨在将数据分为\",{\"1\":{\"261\":1}}],[\"旨在取代\",{\"1\":{\"112\":1}}],[\"旨在衡量市场买入和卖出压力的相对强度\",{\"1\":{\"6\":1}}],[\"社区已经对其停止维护\",{\"1\":{\"112\":1}}],[\"自治系统间\",{\"1\":{\"370\":1}}],[\"自编码\",{\"1\":{\"269\":1}}],[\"自回归\",{\"1\":{\"269\":1}}],[\"自动布局图形\",{\"1\":{\"255\":1}}],[\"自动驾驶汽车是一个ai\",{\"1\":{\"39\":1}}],[\"自\",{\"1\":{\"112\":1}}],[\"公有\",{\"1\":{\"111\":1}}],[\"网等\",{\"1\":{\"424\":1}}],[\"网段来的\",{\"1\":{\"367\":1}}],[\"网站\",{\"1\":{\"365\":2}}],[\"网桥协议数据单元\",{\"1\":{\"356\":1}}],[\"网关的转发流程\",{\"1\":{\"366\":1}}],[\"网关的地址和源\",{\"1\":{\"364\":1}}],[\"网关一般是路由器\",{\"1\":{\"364\":1}}],[\"网关\",{\"0\":{\"364\":1},\"1\":{\"366\":4}}],[\"网关和\",{\"1\":{\"117\":1}}],[\"网关需要和当前的网络至少一个网卡是同一个网段的\",{\"1\":{\"113\":1}}],[\"网卡可以发送多播包\",{\"1\":{\"112\":1}}],[\"网卡处于启动状态\",{\"1\":{\"112\":1}}],[\"网路号\",{\"1\":{\"111\":1}}],[\"网络中的信息更新可能需要一些时间才能传播到整个网络\",{\"1\":{\"369\":1}}],[\"网络包先从服务器\",{\"1\":{\"366\":1}}],[\"网络包被网关接收后\",{\"1\":{\"364\":1}}],[\"网络差错包\",{\"1\":{\"362\":1}}],[\"网络不可达是知道目的网络存在\",{\"1\":{\"360\":1}}],[\"网络不可达报文只能由路由器产生\",{\"1\":{\"360\":1}}],[\"网络不可达\",{\"1\":{\"360\":1}}],[\"网络管理员为所有的交换机分配了优先级\",{\"1\":{\"357\":1}}],[\"网络管理员不仅能自动分配\",{\"1\":{\"121\":1}}],[\"网络管理员只需要配置一段共享的\",{\"1\":{\"114\":1}}],[\"网络设备的状态标识\",{\"1\":{\"112\":1}}],[\"网络号\",{\"1\":{\"111\":1}}],[\"网络数\",{\"1\":{\"111\":1}}],[\"网络地址位数\",{\"1\":{\"111\":1}}],[\"子问题解决了\",{\"1\":{\"208\":1}}],[\"子网掩码\",{\"1\":{\"111\":2,\"113\":1}}],[\"子集\",{\"1\":{\"86\":1}}],[\"广播路由\",{\"1\":{\"370\":1}}],[\"广播问题\",{\"0\":{\"358\":1}}],[\"广播\",{\"1\":{\"350\":1}}],[\"广播数据包\",{\"1\":{\"118\":1}}],[\"广播包内容如下\",{\"1\":{\"116\":1}}],[\"广播包封装了\",{\"1\":{\"116\":1}}],[\"广播地址和网关地址\",{\"1\":{\"113\":1}}],[\"广播地址\",{\"1\":{\"111\":1}}],[\"广义加性模型\",{\"1\":{\"74\":1}}],[\"主机不可达报文只能由路由器产生\",{\"1\":{\"360\":1}}],[\"主机不可达\",{\"1\":{\"360\":1}}],[\"主机号\",{\"1\":{\"111\":1}}],[\"主动响应\",{\"1\":{\"355\":1}}],[\"主执行文件会存放在\",{\"1\":{\"129\":1}}],[\"主要用于互联网核心路由器之间的路由决策\",{\"1\":{\"370\":1}}],[\"主要差异在于他们的权重衰减正则化\",{\"1\":{\"321\":1}}],[\"主要由两部分组成\",{\"1\":{\"273\":1}}],[\"主要代码\",{\"1\":{\"255\":1}}],[\"主要原因是\",{\"1\":{\"208\":1}}],[\"主要围绕以下四部分展开\",{\"1\":{\"71\":1}}],[\"主要是两步\",{\"1\":{\"261\":1}}],[\"主要是\",{\"1\":{\"70\":1}}],[\"保存\",{\"0\":{\"294\":1},\"1\":{\"294\":1}}],[\"保存方法\",{\"0\":{\"287\":1}}],[\"保存所有的\",{\"1\":{\"277\":1}}],[\"保留\",{\"1\":{\"111\":1}}],[\"保持\",{\"1\":{\"99\":1}}],[\"群播\",{\"1\":{\"111\":1}}],[\"私有\",{\"1\":{\"111\":2}}],[\"私用区相当于是可以由\",{\"1\":{\"106\":1}}],[\"顺序号为接收到的请求数据包中的顺序号\",{\"1\":{\"361\":1}}],[\"顺序号会自动加\",{\"1\":{\"361\":1}}],[\"顺序\",{\"0\":{\"110\":1}}],[\"顺应行情做好交易的准备\",{\"1\":{\"3\":1}}],[\"语言使用快速排序来实现排序函数\",{\"1\":{\"215\":1}}],[\"语言\",{\"1\":{\"173\":1}}],[\"语义\",{\"0\":{\"110\":1}}],[\"语法\",{\"0\":{\"110\":1},\"1\":{\"28\":1,\"36\":1}}],[\"协议使用的算法是路径矢量路由协议\",{\"1\":{\"370\":1}}],[\"协议中\",{\"1\":{\"364\":1}}],[\"协议中还有个细节\",{\"1\":{\"121\":1}}],[\"协议不可达\",{\"1\":{\"360\":1}}],[\"协议字段为\",{\"1\":{\"360\":1}}],[\"协议地址长度\",{\"1\":{\"353\":1}}],[\"协议类型\",{\"1\":{\"353\":1}}],[\"协议告诉\",{\"1\":{\"122\":1}}],[\"协议分为客户端和服务器端\",{\"1\":{\"121\":1}}],[\"协议\",{\"0\":{\"353\":1,\"356\":1},\"1\":{\"114\":1,\"115\":1,\"116\":1,\"122\":1,\"353\":1,\"360\":1,\"364\":1}}],[\"协议会涉及到\",{\"1\":{\"111\":1}}],[\"协议三要素\",{\"0\":{\"110\":1}}],[\"协议的设计仅能传输\",{\"1\":{\"89\":1}}],[\"趣谈网络协议\",{\"1\":{\"109\":1}}],[\"专栏\",{\"1\":{\"109\":1}}],[\"跟线性探测很像\",{\"1\":{\"150\":1}}],[\"跟\",{\"1\":{\"108\":1}}],[\"跟ascii字符集\",{\"1\":{\"108\":1}}],[\"共有\",{\"1\":{\"375\":1}}],[\"共享预训练模型\",{\"0\":{\"329\":1}}],[\"共享\",{\"0\":{\"327\":1}}],[\"共\",{\"1\":{\"106\":1,\"115\":1}}],[\"共6400个码点\",{\"1\":{\"106\":1}}],[\"共收录汉字\",{\"1\":{\"101\":1}}],[\"称之为保留区\",{\"1\":{\"106\":1}}],[\"称为质心\",{\"1\":{\"261\":1}}],[\"称为码点名称或字符名称\",{\"1\":{\"108\":1}}],[\"称为为按字节编址\",{\"1\":{\"83\":1}}],[\"称为\",{\"1\":{\"69\":1}}],[\"尚未被分配字符\",{\"1\":{\"106\":1}}],[\"尚未涉及到物理层面上\",{\"1\":{\"87\":1}}],[\"远古时期的文字等\",{\"1\":{\"106\":1}}],[\"增加顺序号\",{\"1\":{\"361\":1}}],[\"增加列\",{\"1\":{\"346\":1}}],[\"增加了大约一百个汉字及四位元组编码空间\",{\"1\":{\"102\":1}}],[\"增补平面要么用来表示一些非常特殊的字符\",{\"1\":{\"106\":1}}],[\"覆盖\",{\"1\":{\"424\":1}}],[\"覆盖缓存中的\",{\"1\":{\"332\":1}}],[\"覆盖当今世界上正在使用中的常用字符\",{\"1\":{\"106\":1}}],[\"覆盖现有元素\",{\"1\":{\"28\":1}}],[\"概述\",{\"0\":{\"105\":1}}],[\"概念\",{\"0\":{\"74\":1}}],[\"除此之外\",{\"1\":{\"291\":1}}],[\"除此之外还有\",{\"1\":{\"260\":1}}],[\"除保留全部\",{\"1\":{\"102\":1}}],[\"除了根据目的\",{\"1\":{\"367\":1}}],[\"除了直接\",{\"1\":{\"361\":1}}],[\"除了可以指定\",{\"1\":{\"332\":1}}],[\"除了数据规模不同\",{\"1\":{\"190\":1}}],[\"除了有后继指针\",{\"1\":{\"171\":1}}],[\"除了能得到\",{\"1\":{\"121\":1}}],[\"除了分配\",{\"1\":{\"121\":1}}],[\"除了需要确定的地址\",{\"1\":{\"112\":1}}],[\"除了汉字\",{\"1\":{\"100\":1}}],[\"除了最基本的美国使用的那\",{\"1\":{\"95\":1}}],[\"除了字符码点之外\",{\"1\":{\"86\":1}}],[\"除了\",{\"1\":{\"28\":1}}],[\"日推出了\",{\"1\":{\"102\":1}}],[\"日文\",{\"1\":{\"101\":1}}],[\"日文平假名及片假名字符\",{\"1\":{\"100\":1}}],[\"月推出\",{\"1\":{\"269\":1}}],[\"月\",{\"1\":{\"102\":1}}],[\"年起\",{\"1\":{\"112\":1}}],[\"年\",{\"1\":{\"102\":2,\"269\":1}}],[\"年被\",{\"1\":{\"94\":1}}],[\"微调模型\",{\"1\":{\"309\":1}}],[\"微调预训练模型\",{\"0\":{\"309\":1}}],[\"微调\",{\"1\":{\"272\":1}}],[\"微调对象\",{\"1\":{\"17\":1}}],[\"微软也为gb18030定义了专门的代码页\",{\"1\":{\"102\":1}}],[\"微软的cp936通常被视为等同于gbk\",{\"1\":{\"101\":1}}],[\"符号位\",{\"1\":{\"375\":1}}],[\"符号\",{\"1\":{\"101\":1}}],[\"里面有一个\",{\"1\":{\"358\":1}}],[\"里面有给新人分配的地址\",{\"1\":{\"117\":1}}],[\"里面定义了如何启动\",{\"1\":{\"133\":1}}],[\"里面会指明内核在哪里\",{\"1\":{\"122\":1}}],[\"里面\",{\"1\":{\"118\":1,\"121\":1}}],[\"里\",{\"1\":{\"112\":1,\"128\":2}}],[\"里的码点\",{\"1\":{\"105\":1}}],[\"里的码点数量要大于抽象字符表\",{\"1\":{\"86\":1}}],[\"里本来就有的数字\",{\"1\":{\"100\":1}}],[\"俄语西里尔字母在内的\",{\"1\":{\"100\":1}}],[\"希腊字母\",{\"1\":{\"100\":1}}],[\"希望尽量避免产生\",{\"1\":{\"81\":2}}],[\"种类\",{\"1\":{\"435\":1}}],[\"种类型\",{\"1\":{\"360\":1}}],[\"种族歧视等问题\",{\"1\":{\"268\":1}}],[\"种\",{\"1\":{\"165\":1}}],[\"种情况\",{\"1\":{\"165\":1}}],[\"种处理方式\",{\"1\":{\"99\":1}}],[\"种状态之多\",{\"1\":{\"41\":1}}],[\"万\",{\"1\":{\"99\":1}}],[\"系在启动文件使用的是\",{\"1\":{\"122\":1}}],[\"系列虽然除\",{\"1\":{\"99\":1}}],[\"系列编码方案每次扩展都完全保留之前版本的编码\",{\"1\":{\"99\":1}}],[\"系列编码方案中\",{\"1\":{\"99\":1}}],[\"系统栈或者虚拟机栈空间一般都不大\",{\"1\":{\"192\":1}}],[\"系统可能没有足够的连续内存空间分配给它\",{\"1\":{\"173\":1}}],[\"系统调用去访问和改变内核网络配置\",{\"1\":{\"112\":1}}],[\"系统中没有\",{\"1\":{\"112\":1}}],[\"系统\",{\"0\":{\"17\":1}}],[\"国际身份\",{\"1\":{\"366\":3}}],[\"国际化和标准化程度不够\",{\"1\":{\"96\":1}}],[\"国标\",{\"1\":{\"99\":1}}],[\"汉语\",{\"1\":{\"99\":1}}],[\"背景知识\",{\"0\":{\"269\":1}}],[\"背景\",{\"0\":{\"99\":1}}],[\"背离通常暗示着趋势可能发生反转\",{\"1\":{\"6\":1}}],[\"背离信号\",{\"1\":{\"6\":1}}],[\"十六进制\",{\"1\":{\"379\":1}}],[\"十分敏感\",{\"1\":{\"261\":1}}],[\"十数取中\",{\"1\":{\"216\":1}}],[\"十进制55296~57343\",{\"1\":{\"106\":1}}],[\"十进制\",{\"1\":{\"97\":1,\"106\":1,\"379\":1}}],[\"十字\",{\"1\":{\"83\":1}}],[\"目目\",{\"1\":{\"366\":1}}],[\"目录下会创建一个\",{\"1\":{\"133\":1}}],[\"目录下的配置文件中收集\",{\"1\":{\"129\":1}}],[\"目的主机的\",{\"1\":{\"362\":1}}],[\"目的主机不可知\",{\"1\":{\"360\":1}}],[\"目的网络不可知与网络不可达不同\",{\"1\":{\"360\":1}}],[\"目的网络不可知\",{\"1\":{\"360\":1}}],[\"目的不可达报文主要有以下\",{\"1\":{\"360\":1}}],[\"目的不可达\",{\"1\":{\"360\":1}}],[\"目的\",{\"1\":{\"113\":1,\"116\":1,\"355\":1,\"361\":1,\"364\":1,\"366\":1}}],[\"目的是用基本平面bmp中的两个码点\",{\"1\":{\"106\":1}}],[\"目前云计算厂商例绝对不止\",{\"1\":{\"358\":1}}],[\"目前支持的\",{\"1\":{\"267\":1}}],[\"目前unicode字符集的17个平面中尚有大量的保留区编号空间未被使用\",{\"1\":{\"106\":1}}],[\"目前共\",{\"1\":{\"106\":1}}],[\"目前\",{\"1\":{\"105\":1,\"336\":1}}],[\"目前使用最为普遍的是\",{\"1\":{\"97\":1}}],[\"目前已经被\",{\"1\":{\"96\":1}}],[\"目标地址应该是\",{\"1\":{\"366\":1}}],[\"目标函数\",{\"1\":{\"57\":1}}],[\"目标时\",{\"1\":{\"47\":1}}],[\"目标\",{\"1\":{\"20\":1,\"68\":1,\"352\":1,\"353\":3,\"366\":4}}],[\"形成新的两列\",{\"1\":{\"259\":1}}],[\"形成了多个\",{\"1\":{\"95\":1}}],[\"形容词\",{\"0\":{\"229\":1},\"1\":{\"264\":1}}],[\"形式\",{\"0\":{\"87\":1}}],[\"~~\",{\"1\":{\"393\":1}}],[\"~~my\",{\"1\":{\"393\":1}}],[\"~\",{\"1\":{\"95\":1,\"129\":3,\"286\":1,\"311\":1}}],[\"逐渐从美国发展到了欧洲\",{\"1\":{\"95\":1}}],[\"及\",{\"0\":{\"95\":1}}],[\"感觉上似乎有点怪\",{\"1\":{\"94\":1}}],[\"采用的是链表法解决冲突\",{\"1\":{\"154\":1}}],[\"采用的是多字节码元\",{\"1\":{\"99\":1}}],[\"采用\",{\"1\":{\"94\":1}}],[\"采取哪个\",{\"1\":{\"54\":1}}],[\"采取决策并执行相应的行动\",{\"1\":{\"38\":1}}],[\"于1968年正式制定\",{\"1\":{\"94\":1}}],[\"于是改为访问\",{\"1\":{\"366\":1}}],[\"于是就可以知道第二关有多远\",{\"1\":{\"362\":1}}],[\"于是就会返回一个\",{\"1\":{\"362\":1}}],[\"于是一旦遇到一个路由器\",{\"1\":{\"362\":1}}],[\"于是一个\",{\"1\":{\"355\":1}}],[\"于是这个广播信息不会广播到\",{\"1\":{\"355\":1}}],[\"于是这里我们没有启用多进程\",{\"1\":{\"312\":1}}],[\"于是它也按照广播策略将包转发到\",{\"1\":{\"355\":1}}],[\"于是它将该广播包转发给除了广播包来的方向之外的其他所有网口\",{\"1\":{\"355\":1}}],[\"于是它只能将包发送给除了连接电脑\",{\"1\":{\"354\":1}}],[\"于是将请求提交给\",{\"1\":{\"352\":1}}],[\"于是把包收进来\",{\"1\":{\"352\":1}}],[\"于是预训练模型的\",{\"1\":{\"315\":1}}],[\"于是构建每个单词到\",{\"1\":{\"291\":1}}],[\"于是要先将文本输入转换成数字表示\",{\"1\":{\"279\":1}}],[\"于是双向链表在某些情况下的插入\",{\"1\":{\"171\":1}}],[\"于是平均时间复杂度的全称是加权平均时间复杂度或期望时间复杂度\",{\"1\":{\"165\":1}}],[\"于是又引入了平均情况时间复杂度\",{\"1\":{\"165\":1}}],[\"于是又有了\",{\"1\":{\"102\":1}}],[\"于是相比链表法\",{\"1\":{\"154\":1}}],[\"于是后来又设计了\",{\"1\":{\"107\":1}}],[\"于是后来又进行了扩展\",{\"1\":{\"99\":1}}],[\"于是欧洲各国纷纷打起了后面\",{\"1\":{\"95\":1}}],[\"于是我们添加一个\",{\"1\":{\"367\":1}}],[\"于是我们将它输入至\",{\"1\":{\"283\":1}}],[\"于是我们不用\",{\"1\":{\"282\":1}}],[\"于是我们需要进行迁移学习\",{\"1\":{\"270\":1}}],[\"于是我们通过将当前时间步的奖励\",{\"1\":{\"68\":1}}],[\"于是我们定义了\",{\"1\":{\"49\":1}}],[\"于是\",{\"1\":{\"28\":1,\"46\":1,\"70\":1,\"81\":1,\"158\":1,\"197\":1,\"362\":1}}],[\"于是数组被转换成了基本类型\",{\"1\":{\"27\":1}}],[\"美国信息交换标准码\",{\"1\":{\"94\":1}}],[\"同一时刻仅允许一个存或取操作\",{\"1\":{\"187\":1}}],[\"同一个码元序列\",{\"1\":{\"90\":1}}],[\"同一个字符\",{\"1\":{\"90\":1}}],[\"同时也给它\",{\"1\":{\"122\":1}}],[\"同时为每个码点赋予了一个正式的名称\",{\"1\":{\"108\":1}}],[\"同时\",{\"1\":{\"100\":1}}],[\"同样收到了该广播包\",{\"1\":{\"355\":1}}],[\"同样地\",{\"1\":{\"295\":1}}],[\"同样\",{\"1\":{\"43\":1,\"133\":1,\"331\":1}}],[\"压倒性的\",{\"1\":{\"394\":1}}],[\"压入栈\",{\"1\":{\"222\":1}}],[\"压缩字节序列的值\",{\"1\":{\"89\":1}}],[\"压力线\",{\"1\":{\"3\":1}}],[\"进入\",{\"1\":{\"394\":1}}],[\"进一步进行适应性编码\",{\"1\":{\"89\":1}}],[\"进行托管\",{\"1\":{\"327\":1}}],[\"进行加速\",{\"0\":{\"325\":1}}],[\"进行评估\",{\"1\":{\"315\":1}}],[\"进行\",{\"1\":{\"312\":1}}],[\"进行截断\",{\"1\":{\"304\":1}}],[\"进行推理\",{\"0\":{\"288\":1}}],[\"进行预处理\",{\"0\":{\"279\":1},\"1\":{\"283\":1}}],[\"进行使用\",{\"1\":{\"276\":1}}],[\"进行微调\",{\"0\":{\"314\":1}}],[\"进行微调可以有效降低时间\",{\"1\":{\"272\":1}}],[\"进行微分\",{\"1\":{\"63\":1}}],[\"进行聚类\",{\"0\":{\"261\":1}}],[\"进行着色\",{\"1\":{\"255\":1}}],[\"进行运算后\",{\"1\":{\"220\":1}}],[\"进行原地分区\",{\"1\":{\"210\":1}}],[\"进行插入\",{\"1\":{\"199\":1}}],[\"进行保存\",{\"1\":{\"129\":1}}],[\"进行学习\",{\"0\":{\"68\":1}}],[\"进行更新\",{\"1\":{\"44\":1}}],[\"进行的\",{\"1\":{\"36\":1}}],[\"进行比较\",{\"1\":{\"28\":1,\"378\":1}}],[\"进行转换\",{\"1\":{\"26\":1}}],[\"进行操作\",{\"1\":{\"20\":1}}],[\"进行遍历的对象\",{\"1\":{\"24\":1}}],[\"进行遍历的都是\",{\"1\":{\"19\":1}}],[\"进行遍历时\",{\"1\":{\"19\":1}}],[\"进行访问\",{\"1\":{\"11\":1,\"18\":1}}],[\"打算做\",{\"1\":{\"428\":1}}],[\"打印\",{\"1\":{\"285\":1}}],[\"打造一个工业级水平的散列表\",{\"0\":{\"153\":1}}],[\"打破原来设计的几类地址的做法\",{\"1\":{\"111\":1}}],[\"打交道机会也比较少\",{\"1\":{\"88\":1}}],[\"打包到一起并进行优化以加速\",{\"1\":{\"32\":1}}],[\"第二层的网络包格式\",{\"1\":{\"352\":1}}],[\"第二层\",{\"0\":{\"351\":1}}],[\"第二层到第三层\",{\"0\":{\"348\":1}}],[\"第二步\",{\"1\":{\"315\":1}}],[\"第二步是将\",{\"1\":{\"295\":1}}],[\"第二个句子\",{\"1\":{\"283\":1}}],[\"第二个注意力层\",{\"1\":{\"275\":1}}],[\"第二个字段是硬链接\",{\"1\":{\"125\":1}}],[\"第二级\",{\"1\":{\"197\":1}}],[\"第六个字段是文件被修改的日期\",{\"1\":{\"125\":1}}],[\"第五个字段是文件的大小\",{\"1\":{\"125\":1}}],[\"第五层的\",{\"1\":{\"88\":1}}],[\"第四个字段是所属组\",{\"1\":{\"125\":1}}],[\"第三个字段是所属用户\",{\"1\":{\"125\":1}}],[\"第一层\",{\"0\":{\"350\":1}}],[\"第一步是克隆\",{\"1\":{\"337\":1}}],[\"第一步是将文本切分为\",{\"1\":{\"295\":1}}],[\"第一步\",{\"1\":{\"315\":1}}],[\"第一个句子\",{\"1\":{\"283\":1}}],[\"第一个注意力层关注所有\",{\"1\":{\"275\":1}}],[\"第一个字段的剩下\",{\"1\":{\"125\":1}}],[\"第一个字段的第一个字符是文件类型\",{\"1\":{\"125\":1}}],[\"第一次需要遍历\",{\"1\":{\"210\":1}}],[\"第一次等于\",{\"1\":{\"28\":1}}],[\"第一类是第一步走了\",{\"1\":{\"191\":1}}],[\"第一种是非阻塞的处理方式\",{\"1\":{\"188\":1}}],[\"第\",{\"1\":{\"106\":1}}],[\"零宽度不中断空格\",{\"1\":{\"88\":1}}],[\"必须提供的唯一参数是训练模型的存储路径\",{\"1\":{\"315\":1}}],[\"必须使用一个原先称之为\",{\"1\":{\"88\":1}}],[\"必须学会如何选择最佳的\",{\"1\":{\"52\":1}}],[\"虽然不能保证每次分区点都选得很好\",{\"1\":{\"216\":1}}],[\"虽然路过它的这个包\",{\"1\":{\"113\":1}}],[\"虽然也是多字节编码\",{\"1\":{\"99\":1}}],[\"虽然也被称为存储格式\",{\"1\":{\"87\":1}}],[\"虽然这不致命\",{\"1\":{\"81\":1}}],[\"规定了几个例外情况\",{\"1\":{\"375\":1}}],[\"规定的双精度浮点数规则\",{\"1\":{\"375\":1}}],[\"规则复杂\",{\"1\":{\"378\":1}}],[\"规则的数字\",{\"1\":{\"375\":1}}],[\"规则\",{\"0\":{\"87\":1},\"1\":{\"362\":1}}],[\"规律性地高于最优\",{\"1\":{\"47\":1}}],[\"格式统一\",{\"1\":{\"360\":1}}],[\"格式\",{\"0\":{\"87\":1}}],[\"ˋ\",{\"1\":{\"86\":1}}],[\"凉\",{\"1\":{\"86\":1}}],[\"还应该有一个清晰的网络拓扑图\",{\"1\":{\"361\":1}}],[\"还不知道\",{\"1\":{\"355\":1}}],[\"还将同一个词中的\",{\"1\":{\"298\":1}}],[\"还会加载或保存对应的词表\",{\"1\":{\"294\":1}}],[\"还会导致频繁的内存申请和释放\",{\"1\":{\"173\":1}}],[\"还提供了不同的架构\",{\"1\":{\"280\":1}}],[\"还需要有一个\",{\"1\":{\"122\":1}}],[\"还需要定位功能\",{\"1\":{\"112\":1}}],[\"还能知道\",{\"1\":{\"121\":1}}],[\"还能帮你自动安装操作系统\",{\"1\":{\"121\":1}}],[\"还要先定义几个对象\",{\"1\":{\"318\":1}}],[\"还要配置初始启动文件\",{\"1\":{\"121\":1}}],[\"还要自动安装系统\",{\"1\":{\"121\":1}}],[\"还可以当一条路不通的时候\",{\"1\":{\"370\":1}}],[\"还可以根据多个参数来配置路由\",{\"1\":{\"367\":1}}],[\"还可以使用\",{\"1\":{\"260\":1,\"342\":1}}],[\"还可以做一些其他的事情\",{\"1\":{\"121\":1}}],[\"还可扩展为更多平面\",{\"1\":{\"105\":1}}],[\"还是\",{\"1\":{\"282\":1,\"364\":1,\"375\":1}}],[\"还是上面查找元素在数组中的位置\",{\"1\":{\"165\":1}}],[\"还是需要广播一下\",{\"1\":{\"119\":1}}],[\"还是很罕见的\",{\"1\":{\"20\":1}}],[\"还回去\",{\"1\":{\"114\":1}}],[\"还支持\",{\"1\":{\"101\":1,\"379\":1}}],[\"还收录了包括拉丁字母\",{\"1\":{\"100\":1}}],[\"还有一些其他的参数\",{\"1\":{\"335\":1}}],[\"还有一些参数\",{\"1\":{\"332\":1}}],[\"还有很多\",{\"1\":{\"310\":1}}],[\"还有很多衍生的拉丁字母等字符\",{\"1\":{\"95\":1}}],[\"还有\",{\"1\":{\"265\":1}}],[\"还有前驱指针\",{\"1\":{\"171\":1}}],[\"还有可能让内存的消耗翻倍\",{\"1\":{\"154\":1}}],[\"还有非字符码点和保留码点\",{\"1\":{\"86\":1}}],[\"还经常会用\",{\"1\":{\"86\":1}}],[\"面\",{\"1\":{\"86\":1}}],[\"列中\",{\"1\":{\"259\":1}}],[\"列出所有正在运行的程序\",{\"1\":{\"132\":1}}],[\"列出当前目录下的文件\",{\"1\":{\"125\":1}}],[\"列\",{\"1\":{\"86\":1,\"346\":1}}],[\"列表示可以采取的不同动作\",{\"1\":{\"69\":1}}],[\"码的长度由\",{\"1\":{\"107\":1}}],[\"码的基础上利用了最高位\",{\"1\":{\"97\":1}}],[\"码中原本就有的单字节编码的字符\",{\"1\":{\"100\":1}}],[\"码混用时\",{\"1\":{\"99\":1}}],[\"码相同\",{\"1\":{\"99\":1}}],[\"码基本上被废弃了\",{\"1\":{\"96\":1}}],[\"码之外\",{\"1\":{\"95\":1}}],[\"码\",{\"0\":{\"92\":1,\"93\":1},\"1\":{\"94\":1,\"95\":1,\"99\":1}}],[\"码与\",{\"0\":{\"92\":1}}],[\"码元\",{\"1\":{\"87\":1}}],[\"码点名称\",{\"0\":{\"108\":1}}],[\"码点编号\",{\"1\":{\"87\":1,\"90\":1}}],[\"码点值\",{\"1\":{\"86\":2,\"90\":1,\"105\":1}}],[\"码点\",{\"1\":{\"86\":2}}],[\"码点空间中的位置\",{\"1\":{\"86\":1}}],[\"码点空间\",{\"1\":{\"86\":1,\"105\":1}}],[\"码空间\",{\"1\":{\"86\":1,\"105\":1}}],[\"由美国国家标准学会ansi\",{\"1\":{\"94\":1}}],[\"由码点编号为u+0061的基本字符字母\",{\"1\":{\"86\":1}}],[\"由此产生了编号空间\",{\"1\":{\"86\":1}}],[\"由于信息是通过邻居节点传递的\",{\"1\":{\"369\":1}}],[\"由于机器会不断上线下线\",{\"1\":{\"353\":1}}],[\"由于初始质心的随机位置可能导致不理想的聚类结果\",{\"1\":{\"261\":1}}],[\"由于递归需要在内存栈中进行压栈出栈操作\",{\"1\":{\"193\":1}}],[\"由于所有数据都存储在一个数组中\",{\"1\":{\"154\":1}}],[\"由于没有操作系统\",{\"1\":{\"121\":1}}],[\"由于还没有得到\",{\"1\":{\"118\":1}}],[\"由于历史原因\",{\"1\":{\"99\":1}}],[\"由于硬件平台与操作系统设计上的历史原因\",{\"1\":{\"88\":1}}],[\"由于\",{\"1\":{\"68\":1,\"117\":1}}],[\"由于策略的变化不会因为价值估计的小幅度变动而剧烈波动\",{\"1\":{\"59\":1}}],[\"由于使用了非线性\",{\"1\":{\"44\":1}}],[\"由于我们使用了\",{\"1\":{\"43\":1}}],[\"由于它不是数组\",{\"1\":{\"28\":1}}],[\"映射名称路径的字典\",{\"1\":{\"342\":1}}],[\"映射到一个数字上\",{\"1\":{\"279\":1}}],[\"映射到在该状态下的期望价值\",{\"1\":{\"56\":1}}],[\"映射的结果就是编号字符集\",{\"1\":{\"86\":1}}],[\"非\",{\"1\":{\"375\":1}}],[\"非常昂贵\",{\"1\":{\"434\":1}}],[\"非常适合\",{\"1\":{\"244\":1}}],[\"非常费时\",{\"1\":{\"173\":1}}],[\"非单词边界\",{\"1\":{\"225\":1}}],[\"非单词字符\",{\"1\":{\"224\":1}}],[\"非空白符\",{\"1\":{\"224\":1}}],[\"非多项式量级\",{\"1\":{\"162\":1}}],[\"非连续\",{\"1\":{\"154\":1}}],[\"非负整数值对\",{\"1\":{\"86\":1}}],[\"非数值大小\",{\"1\":{\"10\":1}}],[\"常数\",{\"1\":{\"201\":1}}],[\"常见简写\",{\"1\":{\"224\":1}}],[\"常见\",{\"1\":{\"162\":1}}],[\"常量阶\",{\"1\":{\"162\":1}}],[\"常用的字符编码方式\",{\"1\":{\"87\":1}}],[\"常用为26日\",{\"1\":{\"5\":1}}],[\"常用为12日\",{\"1\":{\"5\":1}}],[\"常简称为字符集\",{\"1\":{\"86\":1}}],[\"代替\",{\"1\":{\"373\":1}}],[\"代码7表示目的主机不可知\",{\"1\":{\"360\":1}}],[\"代码6表示目的网络不可知\",{\"1\":{\"360\":1}}],[\"代码5表示源路由失败\",{\"1\":{\"360\":1}}],[\"代码\",{\"1\":{\"203\":1,\"204\":1,\"205\":1,\"208\":1,\"209\":1,\"213\":1,\"360\":5}}],[\"代码易理解\",{\"1\":{\"194\":1}}],[\"代码过于复杂\",{\"1\":{\"192\":1}}],[\"代码页\",{\"1\":{\"85\":1}}],[\"代理\",{\"1\":{\"106\":1}}],[\"代理通过学习状态的价值来评估每个状态的好坏\",{\"1\":{\"56\":1}}],[\"抽象\",{\"1\":{\"85\":1}}],[\"抽象字符表\",{\"0\":{\"85\":1}}],[\"无穷大\",{\"1\":{\"375\":1}}],[\"无穷迭代器\",{\"1\":{\"20\":1}}],[\"无所谓\",{\"1\":{\"233\":1}}],[\"无法将数据全部加载到内存中\",{\"1\":{\"212\":1}}],[\"无法完全避免散列冲突\",{\"1\":{\"146\":1}}],[\"无论怎么优化\",{\"1\":{\"206\":1}}],[\"无论数据量大小\",{\"1\":{\"140\":1}}],[\"无论哪种方法\",{\"1\":{\"140\":1}}],[\"无论是哪种下载方式\",{\"1\":{\"129\":1}}],[\"无论是半角的英文字母还是全角的汉字\",{\"1\":{\"107\":1}}],[\"无类型域间选路\",{\"1\":{\"111\":1}}],[\"无需指明字节序\",{\"1\":{\"88\":1}}],[\"无序\",{\"1\":{\"85\":1}}],[\"核心思想\",{\"1\":{\"83\":1,\"148\":1,\"149\":1}}],[\"核心思想是直接学习一个策略函数\",{\"1\":{\"55\":1}}],[\"再打开\",{\"1\":{\"352\":1}}],[\"再看一下\",{\"1\":{\"337\":1}}],[\"再观察结果\",{\"1\":{\"303\":1}}],[\"再从他们那里得到建议\",{\"1\":{\"244\":1}}],[\"再将排好序的两部分合并在一起\",{\"1\":{\"208\":1}}],[\"再前接\",{\"1\":{\"179\":1}}],[\"再用第二个散列函数\",{\"1\":{\"151\":1}}],[\"再如\",{\"1\":{\"86\":1}}],[\"再进一步将字节序列进行适应性编码处理\",{\"1\":{\"83\":1}}],[\"再次使用\",{\"1\":{\"70\":1}}],[\"再次读取\",{\"1\":{\"15\":1}}],[\"统一码\",{\"1\":{\"83\":1}}],[\"统计学习导论\",{\"0\":{\"72\":1}}],[\"编译器可以通过两个栈来实现四则运算\",{\"1\":{\"220\":1}}],[\"编号空间可以用以下方式进行描述\",{\"1\":{\"86\":1}}],[\"编号字符集\",{\"0\":{\"86\":1},\"1\":{\"87\":1}}],[\"编号就是该字符的编码\",{\"1\":{\"83\":1}}],[\"编码器接收输入并构建其表示\",{\"1\":{\"273\":1}}],[\"编码器\",{\"1\":{\"273\":1}}],[\"编码汉字之外\",{\"1\":{\"102\":1}}],[\"编码版本\",{\"1\":{\"100\":1}}],[\"编码方案在\",{\"1\":{\"102\":1}}],[\"编码方案\",{\"0\":{\"104\":1},\"1\":{\"95\":1,\"99\":1}}],[\"编码方案中\",{\"1\":{\"86\":1}}],[\"编码或者\",{\"1\":{\"89\":1}}],[\"编码后得到的码元序列\",{\"1\":{\"88\":1}}],[\"编码的完全兼容\",{\"1\":{\"107\":1}}],[\"编码的码元序列与字节序列都是相同的\",{\"1\":{\"88\":1}}],[\"编码的逆过程\",{\"1\":{\"83\":1}}],[\"编码\",{\"0\":{\"295\":1},\"1\":{\"83\":1,\"88\":2,\"89\":1,\"346\":1,\"374\":2}}],[\"传给\",{\"1\":{\"318\":1}}],[\"传递给\",{\"1\":{\"288\":1,\"320\":1}}],[\"传输的\",{\"1\":{\"89\":1}}],[\"传输编码语法\",{\"0\":{\"89\":1}}],[\"传统字符编码模型\",{\"1\":{\"83\":1}}],[\"传入多个句子\",{\"1\":{\"267\":1}}],[\"传入一个句子\",{\"1\":{\"267\":1}}],[\"传入\",{\"1\":{\"12\":1}}],[\"反应字符编码系统的构成特点和个构成部分之间相互关系的模型框架\",{\"1\":{\"83\":1}}],[\"解压缩之后\",{\"1\":{\"129\":1}}],[\"解码器使用编码器的表示\",{\"1\":{\"273\":1}}],[\"解码器\",{\"1\":{\"273\":1}}],[\"解码\",{\"0\":{\"298\":1},\"1\":{\"83\":1,\"88\":1,\"298\":1}}],[\"解决了在把二者的结果合并成\",{\"1\":{\"208\":1}}],[\"解决散列冲突的方法\",{\"0\":{\"147\":1}}],[\"解决的是谁先发谁后发的问题\",{\"1\":{\"352\":1}}],[\"解决的方案是\",{\"1\":{\"47\":1}}],[\"解决的办法就是\",{\"1\":{\"45\":1}}],[\"解决\",{\"1\":{\"43\":1}}],[\"高维张量\",{\"0\":{\"281\":1}}],[\"高的\",{\"1\":{\"255\":1}}],[\"高于\",{\"1\":{\"255\":1}}],[\"高性能的排序函数\",{\"0\":{\"215\":1}}],[\"高效的动态插入和删除\",{\"0\":{\"199\":1}}],[\"高\",{\"1\":{\"107\":1}}],[\"高端显卡等\",{\"1\":{\"83\":1}}],[\"高抛低吸反复操作\",{\"1\":{\"3\":2}}],[\"嵌入式平台\",{\"1\":{\"83\":1}}],[\"桌面平台的处理器字长基本是\",{\"1\":{\"83\":1}}],[\"决定接下来把包转发到哪\",{\"1\":{\"364\":1}}],[\"决定往前找还是往后找\",{\"1\":{\"171\":1}}],[\"决定了\",{\"1\":{\"83\":1}}],[\"决策和执行任务\",{\"1\":{\"39\":1}}],[\"现在进行时\",{\"1\":{\"428\":1}}],[\"现在一个数据中心内部路由器数目就很多\",{\"1\":{\"369\":1}}],[\"现在租户\",{\"1\":{\"367\":1}}],[\"现在有这样一种情景\",{\"1\":{\"367\":1}}],[\"现在两台交换机都不了解网络的任何拓扑信息\",{\"1\":{\"355\":1}}],[\"现在我的工作路径中有一个\",{\"1\":{\"337\":1}}],[\"现在我们需要手动处理\",{\"1\":{\"318\":1}}],[\"现在我们不使用\",{\"1\":{\"317\":1}}],[\"现在我们可以定义\",{\"1\":{\"315\":1,\"316\":1}}],[\"现在我们有想要推到\",{\"1\":{\"336\":1}}],[\"现在我们有\",{\"1\":{\"36\":1}}],[\"现在你的仓库中有了全部所需的文件\",{\"1\":{\"331\":1}}],[\"现在你学会了如何微调\",{\"1\":{\"326\":1}}],[\"现在可以开始训练啦\",{\"1\":{\"323\":1}}],[\"现在可以将\",{\"1\":{\"288\":1}}],[\"现在可以输出到文件\",{\"1\":{\"132\":1}}],[\"现在就关机\",{\"1\":{\"134\":1}}],[\"现在来\",{\"1\":{\"113\":1}}],[\"现在\",{\"1\":{\"96\":1,\"313\":1}}],[\"现代字符编码模型分为了5个层次\",{\"1\":{\"84\":1}}],[\"现代字符编码模型\",{\"0\":{\"84\":1},\"1\":{\"83\":2}}],[\"现代\",{\"1\":{\"83\":1}}],[\"四字\",{\"1\":{\"83\":1}}],[\"半字节\",{\"1\":{\"83\":1}}],[\"又分为两类\",{\"1\":{\"370\":1}}],[\"又能将\",{\"1\":{\"331\":1}}],[\"又提出了第三种方式\",{\"1\":{\"292\":1}}],[\"又可以分为两种情况\",{\"1\":{\"175\":1}}],[\"又会将红黑树转化为链表\",{\"1\":{\"158\":1}}],[\"又编入了\",{\"1\":{\"100\":1}}],[\"又进一步引发了更为麻烦的字节序\",{\"1\":{\"99\":1}}],[\"又支持各国所使用的那些衍生字段的单字节编码方案\",{\"1\":{\"95\":1}}],[\"又先后设计了两套统一的技能兼容\",{\"1\":{\"95\":1}}],[\"又称位元组\",{\"1\":{\"83\":1}}],[\"又有命名实体\",{\"0\":{\"35\":1}}],[\"字段时\",{\"1\":{\"346\":1}}],[\"字段包含\",{\"1\":{\"316\":1}}],[\"字段\",{\"1\":{\"313\":1}}],[\"字母等字符\",{\"1\":{\"100\":1}}],[\"字符串转换\",{\"1\":{\"381\":1}}],[\"字符串表示是用科学计数法\",{\"1\":{\"380\":1}}],[\"字符串\",{\"1\":{\"374\":1}}],[\"字符串是否有最大长度\",{\"1\":{\"374\":1}}],[\"字符串合并与拆分\",{\"0\":{\"259\":1}}],[\"字符串迭代器可以正确处理\",{\"1\":{\"24\":1}}],[\"字符组\",{\"1\":{\"224\":2}}],[\"字符匹配\",{\"0\":{\"224\":1}}],[\"字符就是半角字符\",{\"1\":{\"100\":1}}],[\"字符外的其余字符位多字节编码\",{\"1\":{\"99\":1}}],[\"字符为单字节编码\",{\"1\":{\"99\":1}}],[\"字符编号\",{\"1\":{\"87\":1,\"90\":1}}],[\"字符编号不完全等同于码点编号\",{\"1\":{\"86\":1}}],[\"字符编码之处\",{\"1\":{\"107\":1}}],[\"字符编码方案包括了一组字符集\",{\"1\":{\"97\":1}}],[\"字符编码方案只包括单个独立的字符集不同\",{\"1\":{\"97\":1}}],[\"字符编码方案取代了\",{\"1\":{\"96\":1}}],[\"字符编码方案\",{\"0\":{\"95\":1}}],[\"字符编码方式\",{\"0\":{\"87\":1},\"1\":{\"107\":1}}],[\"字符编码模式ces\",{\"0\":{\"88\":1}}],[\"字符编码模型\",{\"1\":{\"83\":1}}],[\"字符编码等早期广泛应用的编码方案\",{\"1\":{\"87\":1}}],[\"字符编码\",{\"0\":{\"91\":1},\"1\":{\"83\":1,\"87\":1,\"345\":1}}],[\"字符码点又称为\",{\"1\":{\"86\":1}}],[\"字符表可以是封闭的\",{\"1\":{\"85\":1}}],[\"字符不具有特定的字形\",{\"1\":{\"85\":1}}],[\"字符\",{\"1\":{\"85\":1,\"89\":1,\"94\":2,\"96\":1,\"106\":1,\"107\":1}}],[\"字符集为每个字符根据其所在的码点分配了唯一的码点值\",{\"1\":{\"108\":1}}],[\"字符集\",{\"1\":{\"83\":1,\"87\":1,\"97\":1,\"108\":1}}],[\"字的长度\",{\"1\":{\"83\":1}}],[\"字长由\",{\"1\":{\"83\":1}}],[\"字长\",{\"1\":{\"83\":1}}],[\"字与字长\",{\"1\":{\"83\":1}}],[\"字\",{\"1\":{\"83\":2}}],[\"字节序列\",{\"1\":{\"88\":1}}],[\"字节序的大端序与小端序等\",{\"1\":{\"83\":1}}],[\"字节流\",{\"1\":{\"88\":1,\"89\":1}}],[\"字节\",{\"1\":{\"83\":2,\"99\":1,\"112\":1,\"374\":1}}],[\"亦称二进制位\",{\"1\":{\"83\":1}}],[\"位表示\",{\"1\":{\"375\":1}}],[\"位协议标志表示再上一层协议是\",{\"1\":{\"364\":1}}],[\"位是主机号\",{\"1\":{\"111\":1}}],[\"位永远是\",{\"1\":{\"107\":1}}],[\"位扩展为\",{\"1\":{\"107\":1}}],[\"位二进制表示一个字符\",{\"1\":{\"94\":1}}],[\"位数\",{\"1\":{\"83\":1}}],[\"位组\",{\"1\":{\"83\":1}}],[\"位串\",{\"1\":{\"83\":1}}],[\"位元组顺序\",{\"1\":{\"88\":1}}],[\"位元\",{\"1\":{\"83\":1}}],[\"位\",{\"1\":{\"83\":3,\"89\":1,\"107\":1,\"214\":1}}],[\"位置匹配\",{\"0\":{\"225\":1}}],[\"位置\",{\"1\":{\"28\":1}}],[\"刨根问底字符编码\",{\"1\":{\"82\":1,\"91\":1,\"104\":1}}],[\"术语\",{\"0\":{\"82\":1,\"265\":1}}],[\"尽可能提高precision值\",{\"1\":{\"81\":1}}],[\"尽可能提高recall值\",{\"1\":{\"81\":1}}],[\"尽管ai\",{\"1\":{\"39\":1}}],[\"尽管chatgpt等语言模型在文本生成方面取得了显著的进展\",{\"1\":{\"39\":1}}],[\"癌症诊断系统的目标是\",{\"1\":{\"81\":1}}],[\"癌症诊断场景中\",{\"1\":{\"81\":1}}],[\"分布式协作\",{\"1\":{\"369\":1}}],[\"分两种\",{\"1\":{\"363\":1}}],[\"分组携带的\",{\"1\":{\"360\":1}}],[\"分组携带的数据来自高层协议\",{\"1\":{\"360\":1}}],[\"分组头中\",{\"1\":{\"360\":1}}],[\"分多个道\",{\"1\":{\"352\":1}}],[\"分区平衡\",{\"1\":{\"209\":1}}],[\"分区\",{\"1\":{\"209\":1}}],[\"分区点\",{\"1\":{\"209\":1}}],[\"分解成两个子数组排序的时间都是\",{\"1\":{\"208\":1}}],[\"分解成子问题\",{\"1\":{\"208\":1}}],[\"分治是一种处理思想\",{\"1\":{\"208\":1}}],[\"分治算法一般都用递归来实现\",{\"1\":{\"208\":1}}],[\"分排序空间和未排序空间\",{\"1\":{\"205\":1}}],[\"分析\",{\"1\":{\"191\":1,\"203\":1,\"204\":1}}],[\"分配的\",{\"1\":{\"118\":1}}],[\"分类\",{\"1\":{\"111\":1}}],[\"分别是\",{\"1\":{\"377\":1}}],[\"分别使用方法\",{\"1\":{\"294\":1}}],[\"分别接收两种语言的同一个句子\",{\"1\":{\"275\":1}}],[\"分别叫\",{\"1\":{\"225\":1}}],[\"分别表示\",{\"1\":{\"125\":1}}],[\"分别为\",{\"1\":{\"106\":1,\"225\":1}}],[\"分别计算上涨日的平均涨幅\",{\"1\":{\"4\":1}}],[\"分数并不意味着我们的模型能够有效地利用这些信息\",{\"1\":{\"255\":1}}],[\"分数\",{\"0\":{\"81\":1},\"1\":{\"255\":1}}],[\"召回率\",{\"0\":{\"80\":1}}],[\"真实positve的数据到底占多少\",{\"1\":{\"79\":1}}],[\"精确度\",{\"0\":{\"79\":1}}],[\"把抽出来的那一级叫做索引或索引层\",{\"1\":{\"196\":1}}],[\"把原数组拷贝进去\",{\"1\":{\"173\":1}}],[\"把每种情况下要遍历的元素的个数累加起来再除以\",{\"1\":{\"165\":1}}],[\"把\",{\"1\":{\"121\":1,\"259\":1}}],[\"把数据包加入队列\",{\"1\":{\"112\":1}}],[\"把字节序列映射到一套更受限制的值域内\",{\"1\":{\"89\":1}}],[\"把正样本错误的预测为负\",{\"1\":{\"77\":1}}],[\"把正样本成功预测为正\",{\"1\":{\"77\":1}}],[\"把负样本错误地预测为正\",{\"1\":{\"77\":1}}],[\"把负样本成功预测为负\",{\"1\":{\"77\":1}}],[\"把握得好的话\",{\"1\":{\"3\":1}}],[\"机器\",{\"1\":{\"355\":6}}],[\"机器数少的时候\",{\"1\":{\"354\":1}}],[\"机器本地也会进行\",{\"1\":{\"353\":1}}],[\"机器学习的评价指标\",{\"0\":{\"77\":1}}],[\"机器人\",{\"1\":{\"38\":1}}],[\"矩阵\",{\"1\":{\"75\":2}}],[\"小袋鼠\",{\"1\":{\"435\":1}}],[\"小于\",{\"1\":{\"369\":1}}],[\"小模型可能是768\",{\"1\":{\"281\":1}}],[\"小规模数据的排序可以用时间复杂度为\",{\"1\":{\"215\":1}}],[\"小端\",{\"1\":{\"90\":1}}],[\"小结\",{\"0\":{\"90\":1,\"103\":1,\"206\":1,\"276\":1,\"299\":1,\"307\":1,\"363\":1}}],[\"小写\",{\"1\":{\"75\":2}}],[\"小写加粗\",{\"1\":{\"75\":1}}],[\"小级别的操作也就相对得心应手很多\",{\"1\":{\"5\":1}}],[\"xor\",{\"1\":{\"352\":1}}],[\"xanax\",{\"1\":{\"345\":1}}],[\"xargs\",{\"1\":{\"132\":1}}],[\"xl\",{\"1\":{\"273\":1}}],[\"xvzf\",{\"1\":{\"129\":1}}],[\"x64\",{\"1\":{\"129\":4}}],[\"xxx\",{\"1\":{\"129\":4,\"133\":2,\"435\":1}}],[\"xr\",{\"1\":{\"125\":1}}],[\"x1​​x1​​⋯​xp​​\",{\"1\":{\"75\":1}}],[\"x=feature\",{\"1\":{\"255\":1}}],[\"x=\",{\"1\":{\"75\":1,\"255\":4,\"261\":2}}],[\"x=​x1t​x2t​⋮xnt​​​\",{\"1\":{\"75\":1}}],[\"x=​x11​x21​⋮xn1​​x12​x22​⋮xn2​​⋯⋯⋱⋯​x1p​x1p​⋮xnp​​​\",{\"1\":{\"75\":1}}],[\"xj​=​x1​jx2​j⋮xn​j​​\",{\"1\":{\"75\":1}}],[\"xj​\",{\"1\":{\"75\":1}}],[\"xi​=​xi​1xi​2⋮xi​p​​\",{\"1\":{\"75\":1}}],[\"xi​\",{\"1\":{\"75\":1}}],[\"xi​j\",{\"1\":{\"75\":1}}],[\"x\",{\"1\":{\"75\":3,\"86\":4,\"113\":1,\"124\":2,\"125\":1,\"131\":1,\"164\":3,\"255\":10,\"261\":5,\"313\":2,\"345\":2,\"346\":4,\"375\":1}}],[\"kræmpt\",{\"1\":{\"435\":1}}],[\"koala\",{\"1\":{\"435\":1}}],[\"kangaroo\",{\"1\":{\"435\":1}}],[\"kærəˌkæl\",{\"1\":{\"419\":1}}],[\"kɑː\",{\"1\":{\"407\":1}}],[\"kenya\",{\"1\":{\"434\":2}}],[\"kept\",{\"1\":{\"403\":1,\"435\":1}}],[\"keeping\",{\"1\":{\"435\":2}}],[\"keep\",{\"1\":{\"401\":4,\"403\":2,\"435\":2}}],[\"kernel\",{\"1\":{\"367\":3}}],[\"keyboard\",{\"1\":{\"412\":1}}],[\"key2\",{\"1\":{\"146\":4}}],[\"key1\",{\"1\":{\"146\":4}}],[\"keys\",{\"1\":{\"13\":2,\"18\":1,\"345\":1}}],[\"keyfor\",{\"0\":{\"16\":1},\"1\":{\"11\":1,\"16\":3,\"18\":1}}],[\"key\",{\"0\":{\"15\":1},\"1\":{\"9\":7,\"11\":2,\"13\":3,\"15\":3,\"18\":1,\"26\":2,\"146\":1,\"150\":6,\"151\":3,\"159\":2,\"180\":8,\"248\":1,\"376\":2,\"435\":1}}],[\"kmeans\",{\"1\":{\"261\":4}}],[\"k均值聚类通常需要指定要创建的簇的数量\",{\"1\":{\"261\":1}}],[\"k均值聚类是一种无监督机器学习方法\",{\"1\":{\"261\":1}}],[\"kws=\",{\"1\":{\"255\":1}}],[\"kws=dict\",{\"1\":{\"255\":1}}],[\"kid\",{\"1\":{\"433\":1}}],[\"kindly\",{\"1\":{\"435\":1}}],[\"kinds\",{\"0\":{\"401\":1,\"408\":1,\"410\":1},\"1\":{\"399\":1,\"401\":1,\"407\":1,\"433\":1}}],[\"kind\",{\"0\":{\"403\":1,\"430\":1},\"1\":{\"399\":1,\"401\":1,\"403\":2,\"429\":1,\"431\":1}}],[\"kind=\",{\"1\":{\"255\":1,\"261\":1}}],[\"kill\",{\"1\":{\"132\":3}}],[\"knee\",{\"1\":{\"434\":2}}],[\"knew\",{\"1\":{\"428\":1,\"434\":1}}],[\"knowledge\",{\"1\":{\"427\":2,\"428\":1,\"435\":1}}],[\"known\",{\"1\":{\"409\":1,\"411\":2}}],[\"know\",{\"0\":{\"384\":1,\"425\":1,\"427\":1},\"1\":{\"384\":1,\"403\":2,\"406\":2,\"411\":1,\"419\":1,\"421\":1,\"423\":1,\"427\":1,\"428\":2,\"434\":3,\"435\":1}}],[\"kn\",{\"1\":{\"214\":1}}],[\"klogk\",{\"1\":{\"212\":1}}],[\"k=log2​n\",{\"1\":{\"208\":1}}],[\"k=n\",{\"1\":{\"152\":1}}],[\"k\",{\"0\":{\"261\":1},\"1\":{\"74\":2,\"75\":1,\"99\":1,\"138\":2,\"152\":2,\"162\":1,\"193\":2,\"208\":1,\"210\":5,\"212\":1,\"213\":3,\"214\":3,\"215\":1,\"261\":8,\"313\":5,\"319\":2,\"323\":2,\"324\":2,\"325\":2}}],[\"标志\",{\"1\":{\"362\":1}}],[\"标记法表示为\",{\"1\":{\"208\":1}}],[\"标点\",{\"1\":{\"100\":1}}],[\"标准化所有的\",{\"1\":{\"345\":1}}],[\"标准到目前为止实际上共定义了三个私用区\",{\"1\":{\"106\":1}}],[\"标准共收录\",{\"1\":{\"100\":1}}],[\"标准\",{\"1\":{\"94\":1,\"102\":1,\"108\":1,\"375\":1}}],[\"标准中\",{\"1\":{\"86\":1}}],[\"标准差\",{\"1\":{\"3\":1}}],[\"标量值\",{\"1\":{\"86\":1}}],[\"标量\",{\"1\":{\"74\":1,\"75\":2}}],[\">对象的转换\",{\"0\":{\"382\":1}}],[\">基本类型的转换\",{\"0\":{\"381\":1}}],[\">>>\",{\"1\":{\"159\":1}}],[\">>\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"367\":1}}],[\">>1\",{\"1\":{\"139\":1}}],[\">\",{\"1\":{\"74\":3,\"81\":2,\"112\":3,\"132\":1,\"142\":1,\"143\":1,\"145\":2,\"154\":5,\"159\":1,\"180\":7,\"192\":1,\"201\":1,\"203\":1,\"204\":1,\"206\":2,\"210\":1,\"244\":2,\"246\":2,\"346\":1,\"387\":2,\"400\":1,\"432\":1,\"434\":1,\"435\":1}}],[\">=\",{\"1\":{\"28\":1,\"144\":1,\"204\":1,\"208\":2,\"209\":2,\"213\":1}}],[\"zoos\",{\"1\":{\"434\":3,\"435\":9}}],[\"zoo\",{\"0\":{\"390\":1,\"434\":1},\"1\":{\"390\":3,\"432\":1,\"433\":1,\"434\":4}}],[\"zone\",{\"1\":{\"106\":2,\"412\":1}}],[\"za\",{\"1\":{\"224\":2}}],[\"z\",{\"1\":{\"224\":5}}],[\"zip\",{\"1\":{\"129\":3}}],[\"zipline\",{\"1\":{\"7\":1}}],[\"zero\",{\"1\":{\"74\":1,\"88\":1,\"323\":1,\"325\":2}}],[\"误差项\",{\"1\":{\"74\":1}}],[\"简单易实现\",{\"1\":{\"369\":1}}],[\"简单移动平均\",{\"1\":{\"3\":1}}],[\"简述交换机学习网络拓扑信息的过程\",{\"1\":{\"355\":1}}],[\"简而言之\",{\"1\":{\"261\":1}}],[\"简称平均时间复杂度\",{\"1\":{\"165\":1}}],[\"简称为进本平面\",{\"1\":{\"106\":1}}],[\"简\",{\"1\":{\"101\":1}}],[\"简体汉字编码方案\",{\"0\":{\"98\":1}}],[\"简介\",{\"0\":{\"73\":1}}],[\"访问\",{\"1\":{\"72\":1}}],[\"书是开源的\",{\"1\":{\"72\":1}}],[\"读\",{\"1\":{\"125\":1}}],[\"读书笔记\",{\"0\":{\"72\":1}}],[\"读取\",{\"0\":{\"15\":1,\"16\":1}}],[\"🤗\",{\"0\":{\"267\":1,\"277\":1,\"325\":1,\"340\":1},\"1\":{\"71\":4,\"267\":1,\"276\":1,\"277\":1,\"280\":3,\"283\":1,\"287\":1,\"301\":1,\"309\":1,\"311\":1,\"312\":2,\"313\":1,\"314\":1,\"315\":2,\"316\":1,\"324\":1,\"325\":3,\"326\":1,\"327\":1,\"335\":1,\"340\":2,\"341\":1,\"342\":1,\"345\":2}}],[\"本章我们将介绍其他函数\",{\"1\":{\"345\":1}}],[\"本节内容介绍了\",{\"1\":{\"276\":1}}],[\"本质并没有改变\",{\"1\":{\"194\":1}}],[\"本系列文章是对知乎专栏\",{\"1\":{\"82\":1,\"91\":1,\"104\":1}}],[\"本篇文章记录了一些相关概念以及\",{\"1\":{\"73\":1}}],[\"本模块用于记录\",{\"1\":{\"71\":1}}],[\"本身没有\",{\"1\":{\"20\":1}}],[\"介绍\",{\"0\":{\"71\":1,\"264\":1}}],[\"前者是对象类型\",{\"1\":{\"377\":1}}],[\"前面的位置\",{\"1\":{\"225\":1}}],[\"前面加\",{\"1\":{\"31\":1}}],[\"前进\",{\"0\":{\"222\":1}}],[\"前后都能翻\",{\"1\":{\"127\":1}}],[\"前缀位\",{\"1\":{\"111\":1}}],[\"前一字节为高字节\",{\"1\":{\"100\":1}}],[\"前期\",{\"1\":{\"70\":1}}],[\"ϵ\",{\"1\":{\"70\":3}}],[\"刚开始将\",{\"1\":{\"70\":1}}],[\"后者是\",{\"1\":{\"377\":1}}],[\"后面章节再讲这个问题\",{\"1\":{\"358\":1}}],[\"后面的\",{\"1\":{\"112\":1}}],[\"后面的为低字节\",{\"1\":{\"100\":1}}],[\"后处理\",{\"0\":{\"283\":1},\"1\":{\"278\":1,\"283\":1}}],[\"后继指针\",{\"1\":{\"169\":1}}],[\"后台运行\",{\"0\":{\"132\":1}}],[\"后接十六进制数字表示\",{\"1\":{\"108\":1}}],[\"后来称为了英文字符编码工业标准\",{\"1\":{\"94\":1}}],[\"后来\",{\"1\":{\"94\":1}}],[\"后\",{\"1\":{\"69\":1,\"111\":1,\"222\":1,\"347\":1,\"355\":1}}],[\"后得到\",{\"1\":{\"68\":1}}],[\"复杂的网络拓扑\",{\"1\":{\"370\":1}}],[\"复杂度的上限是\",{\"1\":{\"203\":1}}],[\"复杂度分析\",{\"0\":{\"161\":1}}],[\"复习\",{\"1\":{\"69\":1}}],[\"复制参数本身\",{\"1\":{\"28\":1}}],[\"−v\",{\"1\":{\"68\":1,\"70\":1}}],[\"−q\",{\"1\":{\"44\":1,\"70\":1}}],[\"←v\",{\"1\":{\"67\":1,\"68\":1,\"70\":1}}],[\"←q\",{\"1\":{\"44\":1,\"70\":1}}],[\"直到到达目标主机\",{\"1\":{\"362\":1}}],[\"直到到达主机\",{\"1\":{\"362\":1}}],[\"直到质心不再移动\",{\"1\":{\"261\":1}}],[\"直到区间缩小为\",{\"1\":{\"209\":1,\"210\":1}}],[\"直到区间为缩小为\",{\"1\":{\"138\":1}}],[\"直到未排序区间为空\",{\"1\":{\"204\":1}}],[\"直到找到空闲的存储位置\",{\"1\":{\"151\":1}}],[\"直到找到空闲位置\",{\"1\":{\"149\":1}}],[\"直到找到要查找的元素\",{\"1\":{\"137\":1}}],[\"直到回合结束\",{\"1\":{\"67\":1}}],[\"直接把字符串作为十进制进行解析\",{\"1\":{\"379\":1}}],[\"直接调用表示强制类型转换\",{\"1\":{\"377\":1}}],[\"直接将源\",{\"1\":{\"364\":1}}],[\"直接发送到对应的口就行\",{\"1\":{\"354\":1}}],[\"直接使用下面的代码加载数据\",{\"1\":{\"342\":1}}],[\"直接使用\",{\"1\":{\"337\":1}}],[\"直接入栈\",{\"1\":{\"220\":1}}],[\"直接返回报错\",{\"1\":{\"192\":1}}],[\"直接拒绝任务请求\",{\"1\":{\"188\":1}}],[\"直接顺序遍历就可以了\",{\"1\":{\"140\":1}}],[\"直接启动就能用了\",{\"1\":{\"121\":1}}],[\"直接向为其提供\",{\"1\":{\"120\":1}}],[\"直接填入\",{\"1\":{\"113\":1}}],[\"直接告诉\",{\"1\":{\"54\":1}}],[\"直接\",{\"1\":{\"54\":1,\"59\":1}}],[\"直接对\",{\"1\":{\"44\":1}}],[\"直接在变量\",{\"1\":{\"31\":1}}],[\"直接成为一个迭代器\",{\"1\":{\"20\":1}}],[\"蒙特卡洛学习是基于完整回合\",{\"1\":{\"66\":1}}],[\"蒙特卡洛学习和时序差分学习\",{\"0\":{\"66\":1}}],[\"折扣因子\",{\"1\":{\"65\":1}}],[\"贝尔曼方程是一个递归式\",{\"1\":{\"65\":1}}],[\"智能体可能获得的所有奖励的累积\",{\"1\":{\"64\":1}}],[\"行分隔符\",{\"1\":{\"345\":1}}],[\"行分隔符和段分隔符除外\",{\"1\":{\"224\":1}}],[\"行结尾\",{\"1\":{\"225\":1}}],[\"行开头\",{\"1\":{\"225\":1}}],[\"行表示不同的状态\",{\"1\":{\"69\":1}}],[\"行动能够得到的\",{\"1\":{\"64\":1}}],[\"行动的\",{\"1\":{\"64\":1}}],[\"行情震荡并且有一定空间时\",{\"1\":{\"3\":1}}],[\"行情中\",{\"1\":{\"3\":2}}],[\"损失函数给出了\",{\"1\":{\"62\":1}}],[\"损失函数\",{\"0\":{\"62\":1}}],[\"需要交换机会学习\",{\"1\":{\"354\":1}}],[\"需要传入一个可迭代的索引\",{\"1\":{\"345\":1}}],[\"需要使用\",{\"1\":{\"337\":1}}],[\"需要删掉\",{\"1\":{\"318\":1}}],[\"需要的输入\",{\"1\":{\"318\":1}}],[\"需要告诉\",{\"1\":{\"302\":1}}],[\"需要一个词表\",{\"1\":{\"295\":1}}],[\"需要谨慎选择\",{\"1\":{\"261\":1}}],[\"需要与已排序空间的元素依次比较大小\",{\"1\":{\"204\":1}}],[\"需要进行大概\",{\"1\":{\"209\":1}}],[\"需要进行\",{\"1\":{\"203\":1}}],[\"需要考虑这部分的时间开销\",{\"1\":{\"193\":1}}],[\"需要更多的空间来存储前驱指针\",{\"1\":{\"171\":1}}],[\"需要更长时间训练\",{\"1\":{\"60\":1}}],[\"需要特殊标记已经删除的数据\",{\"1\":{\"154\":1}}],[\"需要先安装\",{\"1\":{\"129\":1}}],[\"需要配置环境变量\",{\"1\":{\"129\":1}}],[\"需要配置\",{\"1\":{\"121\":1}}],[\"需要租给它一个\",{\"1\":{\"117\":1}}],[\"需要费一番功夫\",{\"1\":{\"113\":1}}],[\"需要根据上下文进行判断\",{\"1\":{\"86\":1}}],[\"需要对\",{\"1\":{\"63\":1,\"89\":1}}],[\"需要用到\",{\"1\":{\"316\":1}}],[\"需要用到全局注册表\",{\"1\":{\"11\":1,\"18\":1}}],[\"需要用\",{\"1\":{\"63\":1}}],[\"很多实践中推荐禁止使用\",{\"1\":{\"378\":1}}],[\"很多中间设备都是禁止\",{\"1\":{\"361\":1}}],[\"很多情况下\",{\"1\":{\"60\":1}}],[\"很像\",{\"1\":{\"253\":1}}],[\"很适合采用循环链表\",{\"1\":{\"170\":1}}],[\"很难找到刚安装的软件\",{\"1\":{\"127\":1}}],[\"很慢\",{\"1\":{\"60\":1}}],[\"很大时\",{\"1\":{\"41\":1}}],[\"缺点\",{\"0\":{\"60\":1},\"1\":{\"154\":2,\"194\":1}}],[\"降低了在探索最佳策略时出现大的振荡或不稳定的风险\",{\"1\":{\"59\":1}}],[\"降低到\",{\"1\":{\"43\":1}}],[\"随网络运行状况的变化而变化\",{\"1\":{\"368\":1}}],[\"随着数据的删除\",{\"1\":{\"154\":1}}],[\"随着训练的进行\",{\"1\":{\"70\":1}}],[\"随时间平稳变化\",{\"1\":{\"59\":1}}],[\"随机接入协议\",{\"1\":{\"352\":1}}],[\"随机法\",{\"1\":{\"216\":1}}],[\"随机访问的性能不如数组\",{\"1\":{\"169\":1}}],[\"随机变量\",{\"1\":{\"75\":1}}],[\"随机性策略可以选择不同的行动\",{\"1\":{\"55\":1}}],[\"随机选择一小批\",{\"1\":{\"44\":1}}],[\"θ←θ+α∗δθ​j\",{\"1\":{\"63\":1}}],[\"θmax​j\",{\"1\":{\"62\":1}}],[\"θ\",{\"1\":{\"57\":4,\"61\":1,\"62\":9,\"63\":4}}],[\"价值函数用于衡量在不同状态下的优劣\",{\"1\":{\"56\":1}}],[\"价格会进入到一个狭窄的范围内振荡休整\",{\"1\":{\"3\":1}}],[\"价格一般会围绕价格中轨来回运动\",{\"1\":{\"3\":1}}],[\"价格趋势向下\",{\"1\":{\"3\":1}}],[\"价格趋势向上\",{\"1\":{\"3\":1}}],[\"价格平均线\",{\"1\":{\"3\":1}}],[\"∣st​=s\",{\"1\":{\"56\":1,\"65\":1}}],[\"总计时长\",{\"1\":{\"316\":1}}],[\"总的时间复杂度是\",{\"1\":{\"214\":1}}],[\"总共\",{\"1\":{\"94\":1}}],[\"总是知道应该是怎样的\",{\"1\":{\"306\":1}}],[\"总是按照\",{\"1\":{\"64\":2}}],[\"总是返回同一个\",{\"1\":{\"55\":1}}],[\"总选择能够让\",{\"1\":{\"64\":1}}],[\"总结文本\",{\"1\":{\"264\":1}}],[\"总结\",{\"0\":{\"18\":1,\"24\":1,\"135\":1,\"308\":1,\"326\":1}}],[\"策略路由\",{\"0\":{\"367\":1}}],[\"策略开始循环\",{\"1\":{\"70\":1}}],[\"策略\",{\"1\":{\"70\":1}}],[\"策略函数定义了在每个状态下应该采取的最佳行动\",{\"1\":{\"55\":1}}],[\"策略方法\",{\"0\":{\"55\":1}}],[\"学名是多路访问\",{\"1\":{\"352\":1}}],[\"学会了如何加载\",{\"1\":{\"326\":1}}],[\"学习到的路由导入到内部网络呢\",{\"1\":{\"370\":1}}],[\"学习的结果就是转发表\",{\"1\":{\"354\":1}}],[\"学习率调度器\",{\"0\":{\"322\":1}}],[\"学习记录\",{\"1\":{\"109\":1}}],[\"学习不需要等待整个回合的结束\",{\"1\":{\"68\":1}}],[\"学习不必等到整个回合结束\",{\"1\":{\"68\":1}}],[\"学习一个概率分布\",{\"1\":{\"59\":1}}],[\"学习将变得复杂\",{\"1\":{\"47\":1}}],[\"学哪种\",{\"1\":{\"54\":1}}],[\"让对方返回\",{\"1\":{\"362\":1}}],[\"让下次发给另一个路由\",{\"1\":{\"360\":1}}],[\"让源站放慢发送速度\",{\"1\":{\"360\":1}}],[\"让它自己处理\",{\"1\":{\"318\":1}}],[\"让它在训练时进行评估\",{\"1\":{\"315\":1}}],[\"让大家都知道\",{\"1\":{\"119\":1}}],[\"让\",{\"1\":{\"54\":1,\"121\":1}}],[\"间接影响散列表的性能\",{\"1\":{\"154\":1}}],[\"间接\",{\"1\":{\"54\":1}}],[\"→action\",{\"1\":{\"54\":1}}],[\"πθ​\",{\"1\":{\"61\":1,\"62\":2}}],[\"π∗\",{\"1\":{\"54\":2,\"57\":1,\"69\":1}}],[\"π\",{\"1\":{\"54\":2,\"55\":1,\"62\":1}}],[\"问题的类型\",{\"0\":{\"238\":1}}],[\"问题的两种主要方法\",{\"0\":{\"54\":1}}],[\"问题\",{\"1\":{\"66\":1,\"99\":1,\"208\":1,\"353\":1}}],[\"问题在于\",{\"1\":{\"46\":1}}],[\"何时以利用为主\",{\"1\":{\"53\":1}}],[\"强化学习算法需要智能地决定何时以探索为主\",{\"1\":{\"53\":1}}],[\"强化学习中\",{\"1\":{\"53\":1}}],[\"浪费时间并且无法获得足够的奖励\",{\"1\":{\"53\":1}}],[\"然而\",{\"1\":{\"53\":1}}],[\"然后通过\",{\"1\":{\"364\":1}}],[\"然后逐个\",{\"1\":{\"361\":1}}],[\"然后根据策略进行转发\",{\"1\":{\"354\":1}}],[\"然后根据这些值来决定在哪个状态采取行动\",{\"1\":{\"56\":1}}],[\"然后让主机自己判断是否需要\",{\"1\":{\"354\":1}}],[\"然后我们就可以保存\",{\"1\":{\"336\":1}}],[\"然后我们就可以使用\",{\"1\":{\"294\":1}}],[\"然后在\",{\"1\":{\"325\":1}}],[\"然后在验证集上使用\",{\"1\":{\"260\":1}}],[\"然后你可以使用下面的命令使用该配置文件启动分布式训练\",{\"1\":{\"325\":1}}],[\"然后它会将你的答案写入配置文件中\",{\"1\":{\"325\":1}}],[\"然后转化为\",{\"1\":{\"295\":1}}],[\"然后会介绍\",{\"1\":{\"277\":1}}],[\"然后迭代执行下面的两个操作\",{\"1\":{\"261\":1}}],[\"然后将其连接到验证集上\",{\"1\":{\"260\":1}}],[\"然后将聚合的结果返回到原始数据中\",{\"1\":{\"260\":1}}],[\"然后将包发出去\",{\"1\":{\"113\":1}}],[\"然后\",{\"1\":{\"209\":1,\"315\":1}}],[\"然后解压缩\",{\"1\":{\"129\":1}}],[\"然后再路由表中查找路由\",{\"1\":{\"367\":1}}],[\"然后再处理子问题\",{\"1\":{\"210\":1}}],[\"然后再合并\",{\"1\":{\"210\":1}}],[\"然后再返回\",{\"1\":{\"186\":1}}],[\"然后再插入到链表的头部\",{\"1\":{\"175\":1}}],[\"然后再相应的配置文件中进行配置\",{\"1\":{\"129\":1}}],[\"然后再继续迭代\",{\"1\":{\"21\":1}}],[\"然后自动配置好\",{\"1\":{\"114\":1}}],[\"然后基于自定义的\",{\"1\":{\"64\":1}}],[\"然后使用\",{\"1\":{\"57\":1}}],[\"然后选择能达到更有价值的\",{\"1\":{\"54\":1}}],[\"然后玩了第二关\",{\"1\":{\"45\":1}}],[\"然后就\",{\"1\":{\"45\":1}}],[\"然后经过\",{\"1\":{\"43\":1}}],[\"然后采取行动以实现任务\",{\"1\":{\"39\":1}}],[\"然后是协议类型\",{\"1\":{\"364\":1}}],[\"然后是以下几部分\",{\"1\":{\"338\":1}}],[\"然后是用户\",{\"1\":{\"124\":1}}],[\"然后是\",{\"1\":{\"21\":1}}],[\"任何一台机器在访问另一个\",{\"1\":{\"364\":1}}],[\"任何情况下都是\",{\"1\":{\"208\":1}}],[\"任何可以在\",{\"1\":{\"19\":1}}],[\"任务以及如何使用\",{\"1\":{\"276\":1}}],[\"任务有很多\",{\"1\":{\"264\":1}}],[\"任务\",{\"1\":{\"180\":1,\"276\":1}}],[\"任务类型\",{\"0\":{\"50\":1}}],[\"γ∗v\",{\"1\":{\"68\":2}}],[\"γ\",{\"1\":{\"49\":1}}],[\"更多示例\",{\"1\":{\"325\":1}}],[\"更多的是逻辑意义上的中间编码\",{\"1\":{\"88\":1}}],[\"更好的做法是当我们构建一个\",{\"1\":{\"312\":1}}],[\"更浪费内存空间\",{\"1\":{\"154\":1}}],[\"更常用的散列冲突解决办法\",{\"1\":{\"152\":1}}],[\"更复杂的二分查找\",{\"0\":{\"141\":1}}],[\"更新自己的配置\",{\"1\":{\"120\":1}}],[\"更新之后\",{\"1\":{\"70\":1}}],[\"更新步骤是\",{\"1\":{\"63\":1}}],[\"更有价值\",{\"1\":{\"54\":1}}],[\"更可预测\",{\"1\":{\"49\":1}}],[\"更接近\",{\"1\":{\"46\":1}}],[\"τ\",{\"1\":{\"49\":2,\"62\":8}}],[\"奖励在\",{\"1\":{\"49\":1}}],[\"↑↓←→\",{\"1\":{\"49\":1}}],[\"应答包\",{\"1\":{\"361\":1}}],[\"应用\",{\"1\":{\"154\":2}}],[\"应用于强化学习问题中\",{\"1\":{\"48\":1}}],[\"应该只知道\",{\"1\":{\"366\":1}}],[\"应该要清楚地知道一个网络包从源地址到目标地址都需要经过哪些设备\",{\"1\":{\"361\":1}}],[\"应该怎么办\",{\"1\":{\"340\":1}}],[\"应该忽略它\",{\"1\":{\"303\":1}}],[\"应该在后台运行\",{\"1\":{\"132\":1}}],[\"应该着重考虑提高precision指标\",{\"1\":{\"81\":1}}],[\"应该着重考虑提高recall指标\",{\"1\":{\"81\":1}}],[\"应该采取哪种\",{\"1\":{\"54\":1}}],[\"应该是\",{\"1\":{\"13\":1}}],[\"深度学习背后的思想是\",{\"1\":{\"48\":1}}],[\"深度强化学习\",{\"1\":{\"48\":1}}],[\"每当要选择从哪个口转发的时候\",{\"1\":{\"365\":1}}],[\"每发出一个包\",{\"1\":{\"361\":1}}],[\"每eval\",{\"1\":{\"315\":1}}],[\"每进入一个函数\",{\"1\":{\"219\":1}}],[\"每交换一次\",{\"1\":{\"203\":1}}],[\"每层的结点数\",{\"1\":{\"198\":1}}],[\"每两个结点抽出一个结点作为上一级索引的结点\",{\"1\":{\"197\":1}}],[\"每两个结点提取一个结点到上一级\",{\"1\":{\"196\":1}}],[\"每调用一个函数\",{\"1\":{\"192\":1}}],[\"每次收到\",{\"1\":{\"362\":1}}],[\"每次处理的序列长度\",{\"1\":{\"281\":1}}],[\"每次从要排序的区间中随机选择一个元素作为分区点\",{\"1\":{\"216\":1}}],[\"每次从未排序区间中找到最小的元素\",{\"1\":{\"205\":1}}],[\"每次分区平均要扫描约\",{\"1\":{\"209\":1}}],[\"每次选择最后一个元素作为\",{\"1\":{\"209\":1}}],[\"每次遇到下雨\",{\"1\":{\"209\":1}}],[\"每次进行一次比较就可以确定插入位置\",{\"1\":{\"204\":1}}],[\"每次可以跨\",{\"1\":{\"191\":1}}],[\"每次查询是\",{\"1\":{\"171\":1}}],[\"每次查找后都会变为原来的一半\",{\"1\":{\"138\":1}}],[\"每次扩容为原来的两倍大小\",{\"1\":{\"157\":1}}],[\"每次操作只涉及两数比较大小\",{\"1\":{\"138\":1}}],[\"每次通过跟中间元素对比\",{\"1\":{\"137\":1}}],[\"每次删除并不进行数据的移动\",{\"1\":{\"136\":1}}],[\"每次登录的时候\",{\"1\":{\"129\":1}}],[\"每一个集合中包含这样几列\",{\"1\":{\"311\":1}}],[\"每一层的定义\",{\"1\":{\"265\":1}}],[\"每一级最多只需要遍历\",{\"1\":{\"197\":1}}],[\"每一组分别表示文件所属的用户权限\",{\"1\":{\"125\":1}}],[\"每一组\",{\"1\":{\"125\":1}}],[\"每一台新接入的机器都通过\",{\"1\":{\"114\":1}}],[\"每个节点维护一个距离向量表\",{\"1\":{\"369\":1}}],[\"每个规则至少包括三项信息\",{\"1\":{\"367\":1}}],[\"每个端口不管是否需要该包\",{\"1\":{\"354\":1}}],[\"每个句子对有一个标签来指明两个句子是否同义\",{\"1\":{\"310\":1}}],[\"每个字词都被分配了一个\",{\"1\":{\"291\":1}}],[\"每个模型输入的张量维度\",{\"1\":{\"281\":1}}],[\"每个桶内的数据值都是相同的\",{\"1\":{\"213\":1}}],[\"每个网络的主机数\",{\"1\":{\"111\":1}}],[\"每个平面上的编号空间有\",{\"1\":{\"105\":1}}],[\"每个单元格包含了相应状态\",{\"1\":{\"69\":1}}],[\"每个\",{\"0\":{\"68\":1},\"1\":{\"152\":1,\"374\":1}}],[\"每个行动轨迹\",{\"1\":{\"62\":1}}],[\"每\",{\"1\":{\"46\":1,\"315\":1}}],[\"难以稳定地学习\",{\"1\":{\"46\":1}}],[\"使暗\",{\"1\":{\"424\":1}}],[\"使阴\",{\"1\":{\"424\":1}}],[\"使其和最长的序列一样长\",{\"1\":{\"302\":1}}],[\"使其成为准确性指标的替代方案\",{\"1\":{\"81\":1}}],[\"使簇内的数据点更加相似\",{\"1\":{\"261\":1}}],[\"使得内部的路由器能够找到到达外网目的地的最好的边界路由器\",{\"1\":{\"370\":1}}],[\"使得同时对数据集中的多个元素同时做处理\",{\"1\":{\"312\":1}}],[\"使得同一簇内的数据点彼此相似\",{\"1\":{\"261\":1}}],[\"使得用户可以通过它来加载\",{\"1\":{\"277\":1}}],[\"使得\",{\"1\":{\"46\":1}}],[\"使用动态路由路由器\",{\"1\":{\"368\":1}}],[\"使用差错报告报文\",{\"1\":{\"363\":1}}],[\"使用查询报文\",{\"1\":{\"363\":1}}],[\"使用单独的交换机配置单独的子网\",{\"1\":{\"358\":1}}],[\"使用制表符作为分隔符\",{\"1\":{\"345\":1}}],[\"使用预训练模型时\",{\"1\":{\"328\":1}}],[\"使用预训练模型\",{\"0\":{\"328\":1}}],[\"使用其他的\",{\"1\":{\"312\":1}}],[\"使用不同的\",{\"1\":{\"312\":1}}],[\"使用了\",{\"1\":{\"307\":1}}],[\"使用了来自\",{\"1\":{\"275\":1}}],[\"使用的\",{\"1\":{\"337\":2}}],[\"使用的默认\",{\"1\":{\"315\":1}}],[\"使用的算法\",{\"1\":{\"294\":1}}],[\"使用的单独的参数固定的网络来估计\",{\"1\":{\"46\":1}}],[\"使用该类需要安装\",{\"1\":{\"336\":1}}],[\"使用该方法会加载或保存\",{\"1\":{\"294\":1}}],[\"使用该函数可以直接根据输入返回目标输出\",{\"1\":{\"267\":1}}],[\"使用这种方式\",{\"1\":{\"293\":2}}],[\"使用默认的配置来创建\",{\"1\":{\"286\":1}}],[\"使用模型的\",{\"1\":{\"279\":1}}],[\"使用模型进行预测时使用的上述操作应该和预训练时的操作一致\",{\"1\":{\"279\":1}}],[\"使用注意力层\",{\"1\":{\"275\":1}}],[\"使用更小的数据集完成\",{\"1\":{\"272\":1}}],[\"使用欧氏距离来衡量数据点之间的相似性\",{\"1\":{\"261\":1}}],[\"使用聚合函数\",{\"1\":{\"260\":1}}],[\"使用对数可以压缩数据的范围\",{\"1\":{\"257\":1}}],[\"使用条件很苛刻\",{\"1\":{\"212\":1}}],[\"使用带头链表之后\",{\"1\":{\"180\":1}}],[\"使用一组\",{\"1\":{\"151\":1}}],[\"使用下面命令就可以解压缩了\",{\"1\":{\"129\":1}}],[\"使用两个栈来实现\",{\"1\":{\"222\":1}}],[\"使用两个字节的码元\",{\"1\":{\"107\":1}}],[\"使用两个网络来计算\",{\"1\":{\"47\":1}}],[\"使用gb类编码方案时一般都要时刻记住\",{\"1\":{\"103\":1}}],[\"使用分类器做预测后\",{\"1\":{\"77\":1}}],[\"使用当前时间获得的奖励\",{\"1\":{\"68\":1}}],[\"使用随机策略\",{\"1\":{\"59\":1}}],[\"使用现代构建工具\",{\"1\":{\"32\":1}}],[\"使用字符串做\",{\"1\":{\"11\":1,\"376\":1}}],[\"使用它们可以修改一些内建行为\",{\"1\":{\"11\":1,\"18\":1}}],[\"使用\",{\"0\":{\"33\":1,\"261\":1,\"277\":1,\"279\":1,\"288\":1,\"314\":1,\"317\":1,\"325\":1,\"331\":1,\"332\":1,\"333\":1},\"1\":{\"6\":1,\"7\":2,\"13\":2,\"18\":1,\"24\":1,\"28\":1,\"35\":2,\"36\":2,\"42\":1,\"45\":1,\"46\":1,\"47\":2,\"114\":1,\"115\":1,\"127\":1,\"129\":1,\"139\":1,\"279\":1,\"283\":1,\"287\":1,\"291\":1,\"302\":1,\"308\":1,\"325\":1,\"326\":1,\"329\":2,\"331\":1,\"335\":1,\"340\":1,\"345\":1,\"367\":1,\"376\":1,\"379\":1}}],[\"神经网络权重\",{\"1\":{\"46\":1}}],[\"加速了预处理\",{\"1\":{\"312\":1}}],[\"加载的方式并指定\",{\"1\":{\"345\":1}}],[\"加载远程数据集\",{\"0\":{\"343\":1}}],[\"加载本地文件会创建一个带有\",{\"1\":{\"342\":1}}],[\"加载本地数据集\",{\"0\":{\"342\":1}}],[\"加载并计算\",{\"1\":{\"340\":1}}],[\"加载和保存\",{\"1\":{\"294\":1}}],[\"加载\",{\"0\":{\"294\":1},\"1\":{\"294\":1}}],[\"加上原始链表一共\",{\"1\":{\"197\":1}}],[\"加上先走\",{\"1\":{\"191\":1}}],[\"加上下一状态的最高\",{\"1\":{\"46\":1}}],[\"加入了少数民族的文字\",{\"1\":{\"99\":1}}],[\"加权滑动平均\",{\"1\":{\"3\":1}}],[\"振荡以及灾难性的偏离\",{\"1\":{\"45\":1}}],[\"振荡的价格区域会越来越小\",{\"1\":{\"3\":1}}],[\"避免复杂度退化\",{\"1\":{\"200\":1}}],[\"避免真正去\",{\"1\":{\"187\":1}}],[\"避免数据搬移\",{\"1\":{\"187\":1}}],[\"避免或最小化散列冲突\",{\"1\":{\"154\":1}}],[\"避免了感知别名的问题\",{\"1\":{\"59\":1}}],[\"避免\",{\"1\":{\"45\":1}}],[\"避免忘记以前的\",{\"1\":{\"45\":1}}],[\"与内部网关协议\",{\"1\":{\"370\":1}}],[\"与类型值相关\",{\"1\":{\"360\":1}}],[\"与栈顶的运算符进行比较\",{\"1\":{\"220\":1}}],[\"与插入点位置的元素交换\",{\"1\":{\"205\":1}}],[\"与\",{\"0\":{\"359\":1},\"1\":{\"97\":1,\"162\":1,\"225\":6,\"280\":1}}],[\"与特定计算机系统平台有关的存储方式\",{\"1\":{\"87\":1}}],[\"与特定的计算机系统平台无关的编码方式\",{\"1\":{\"87\":1}}],[\"与下一个状态的折扣估值\",{\"1\":{\"68\":1}}],[\"与环境进行交互时\",{\"1\":{\"45\":1}}],[\"与现在的大语言模型\",{\"1\":{\"39\":1}}],[\"之前\",{\"1\":{\"318\":1}}],[\"之前我们用过\",{\"1\":{\"324\":1}}],[\"之前我们直接将\",{\"1\":{\"318\":1}}],[\"之前我们要先定义\",{\"1\":{\"315\":1}}],[\"之前介绍的\",{\"1\":{\"57\":1}}],[\"之外的任意字符\",{\"1\":{\"224\":1}}],[\"之间进行路由选择\",{\"1\":{\"370\":1}}],[\"之间进行转换\",{\"1\":{\"107\":1}}],[\"之间\",{\"1\":{\"49\":1,\"304\":1}}],[\"之间存在显著的相关性\",{\"1\":{\"46\":1}}],[\"之间的关系必须是我们使用的模型可以学到的\",{\"1\":{\"252\":1}}],[\"之间的位置\",{\"1\":{\"225\":4}}],[\"之间的\",{\"1\":{\"45\":1}}],[\"之后全局变量下的\",{\"1\":{\"373\":1}}],[\"之后输出这些\",{\"1\":{\"316\":1}}],[\"之后进行评估\",{\"1\":{\"315\":1}}],[\"之后将会被填充到\",{\"1\":{\"313\":1}}],[\"之后还支持\",{\"1\":{\"225\":1}}],[\"之后取样一批\",{\"1\":{\"45\":1}}],[\"之后\",{\"1\":{\"20\":1,\"111\":1,\"119\":1}}],[\"多云的\",{\"1\":{\"424\":1}}],[\"多选分支\",{\"1\":{\"224\":1}}],[\"多写多练\",{\"0\":{\"183\":1}}],[\"多项式量级\",{\"1\":{\"162\":1}}],[\"多次二分查找\",{\"1\":{\"140\":1}}],[\"多次学习相同的\",{\"1\":{\"45\":1}}],[\"多半只有专家在历史和科学领域里才会用到它们\",{\"1\":{\"106\":1}}],[\"多出了\",{\"1\":{\"101\":1}}],[\"多字节字符与\",{\"1\":{\"99\":1}}],[\"多分类模型accuracy\",{\"1\":{\"81\":1}}],[\"多重假设检验\",{\"1\":{\"74\":1}}],[\"多维数组\",{\"1\":{\"26\":1}}],[\"获得\",{\"1\":{\"45\":1,\"72\":1,\"124\":1,\"255\":1,\"288\":2}}],[\"获取机器\",{\"1\":{\"355\":1}}],[\"获取目的\",{\"1\":{\"355\":1,\"364\":1}}],[\"获取评论的情绪\",{\"1\":{\"264\":1}}],[\"获取索引\",{\"1\":{\"26\":1}}],[\"获取\",{\"1\":{\"16\":2,\"113\":1}}],[\"获取以及注册\",{\"1\":{\"11\":1,\"18\":1}}],[\"存放小于\",{\"1\":{\"209\":1}}],[\"存放在某路径下\",{\"1\":{\"129\":1}}],[\"存储和传输\",{\"1\":{\"88\":2}}],[\"存储单元尺寸\",{\"1\":{\"86\":1}}],[\"存储\",{\"1\":{\"45\":2}}],[\"存到\",{\"1\":{\"44\":1,\"45\":1}}],[\"存在重复计算\",{\"1\":{\"194\":1}}],[\"存在递归终止条件\",{\"1\":{\"190\":1}}],[\"存在\",{\"1\":{\"28\":1}}],[\"执行权限\",{\"1\":{\"131\":1}}],[\"执行用户的\",{\"1\":{\"129\":1}}],[\"执行\",{\"1\":{\"125\":1,\"131\":1}}],[\"执行动作\",{\"1\":{\"44\":1}}],[\"执行器\",{\"1\":{\"39\":1}}],[\"算法的步骤\",{\"1\":{\"70\":1}}],[\"算法\",{\"0\":{\"61\":1,\"70\":1,\"290\":1},\"1\":{\"289\":1}}],[\"算法有两个阶段\",{\"1\":{\"44\":1}}],[\"算法交易\",{\"1\":{\"7\":1}}],[\"最早的路由协议\",{\"1\":{\"369\":1}}],[\"最典型的应用就是\",{\"1\":{\"360\":1}}],[\"最开始交换机并不知道电脑\",{\"1\":{\"354\":1}}],[\"最开始是为了翻译任务而设计的\",{\"1\":{\"275\":1}}],[\"最难的步骤大概是为\",{\"1\":{\"314\":1}}],[\"最初的\",{\"1\":{\"275\":1}}],[\"最理想的分区点应该使得两个分区中的数据数量差不多多\",{\"1\":{\"216\":1}}],[\"最差\",{\"1\":{\"209\":1}}],[\"最高级的索引有\",{\"1\":{\"197\":1}}],[\"最近最少使用\",{\"1\":{\"175\":1}}],[\"最坏情况出现的主要原因是分区点选得不够合理\",{\"1\":{\"216\":1}}],[\"最坏情况时间复杂度\",{\"0\":{\"164\":1}}],[\"最坏情况下\",{\"1\":{\"138\":1,\"154\":1,\"203\":1}}],[\"最坏\",{\"0\":{\"163\":1},\"1\":{\"201\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1}}],[\"最好的\",{\"1\":{\"400\":1}}],[\"最好是要统计一下字数\",{\"1\":{\"346\":1}}],[\"最好在训练集上创建群组特征\",{\"1\":{\"260\":1}}],[\"最好情况和最坏情况都是极端情况下的代码复杂度\",{\"1\":{\"165\":1}}],[\"最好情况时间复杂度\",{\"0\":{\"164\":1}}],[\"最好情况下初始有序度是\",{\"1\":{\"203\":1}}],[\"最好情况下\",{\"1\":{\"154\":1}}],[\"最好\",{\"0\":{\"163\":1},\"1\":{\"201\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"209\":1}}],[\"最好时间复杂度是\",{\"1\":{\"154\":1}}],[\"最好和文件同名\",{\"1\":{\"35\":1}}],[\"最终代码\",{\"1\":{\"191\":1}}],[\"最终命令的一般形式是\",{\"1\":{\"132\":1}}],[\"最终都是下载文件\",{\"1\":{\"129\":1}}],[\"最终租约达成的时候\",{\"1\":{\"119\":1}}],[\"最安全的方式是到官网下载\",{\"1\":{\"127\":1}}],[\"最简单的方式就是在定义\",{\"1\":{\"331\":1}}],[\"最简单的实现方式是直接在\",{\"1\":{\"187\":1}}],[\"最简单的情况就是有序数组中不存在重复元素\",{\"1\":{\"139\":1}}],[\"最简单的\",{\"1\":{\"112\":1}}],[\"最大没有上限\",{\"1\":{\"255\":1}}],[\"最大装载因子默认是\",{\"1\":{\"157\":1}}],[\"最大传输单元\",{\"1\":{\"112\":1}}],[\"最大的特点是两字节长的中文字符和一字节长的英文字符\",{\"1\":{\"103\":1}}],[\"最大的\",{\"1\":{\"62\":1,\"63\":1,\"64\":1}}],[\"最小二乘法\",{\"1\":{\"74\":1}}],[\"最后一项任务就是在每个\",{\"1\":{\"312\":1}}],[\"最后让我们看一看如何使用\",{\"1\":{\"307\":1}}],[\"最后要加一个\",{\"1\":{\"132\":1}}],[\"最后是文件名\",{\"1\":{\"125\":1}}],[\"最后\",{\"1\":{\"43\":1,\"337\":1}}],[\"个值\",{\"1\":{\"375\":1}}],[\"个用户\",{\"1\":{\"358\":1}}],[\"个词的\",{\"1\":{\"346\":1}}],[\"个样本\",{\"1\":{\"345\":1}}],[\"个作为一个\",{\"1\":{\"313\":1}}],[\"个句子对\",{\"1\":{\"310\":1}}],[\"个不同文本分类任务中的性能\",{\"1\":{\"310\":1}}],[\"个不同的字节序列\",{\"1\":{\"90\":1}}],[\"个不同的字符编码模式\",{\"1\":{\"90\":1}}],[\"个单词\",{\"1\":{\"291\":1}}],[\"个紧凑的簇\",{\"1\":{\"261\":1}}],[\"个子图\",{\"1\":{\"255\":1}}],[\"个锚\",{\"1\":{\"225\":1}}],[\"个操作数\",{\"1\":{\"220\":1}}],[\"个常用的比较简单的分区算法\",{\"1\":{\"216\":1}}],[\"个桶\",{\"1\":{\"212\":2,\"213\":1}}],[\"个数据\",{\"1\":{\"212\":2,\"213\":1}}],[\"个赋值操作\",{\"1\":{\"206\":1}}],[\"个索引结点之间数据非常多的情况\",{\"1\":{\"200\":1}}],[\"个节点\",{\"1\":{\"197\":1}}],[\"个或\",{\"1\":{\"191\":1}}],[\"个台阶的走法\",{\"1\":{\"191\":2}}],[\"个台阶的走法就等于先走\",{\"1\":{\"191\":1}}],[\"个台阶有多少种走法\",{\"1\":{\"191\":1}}],[\"个台阶\",{\"1\":{\"191\":4}}],[\"个条件\",{\"0\":{\"190\":1}}],[\"个结点取一个索引\",{\"1\":{\"198\":1}}],[\"个结点的存储空间\",{\"1\":{\"198\":1}}],[\"个结点\",{\"1\":{\"183\":1,\"197\":2}}],[\"个的时候\",{\"1\":{\"158\":1}}],[\"个一组\",{\"1\":{\"125\":1}}],[\"个增补平面\",{\"1\":{\"106\":1}}],[\"个平面称为基本多语言平面\",{\"1\":{\"106\":1}}],[\"个码点\",{\"1\":{\"105\":1,\"106\":1}}],[\"个字节加到报文里\",{\"1\":{\"360\":1}}],[\"个字节长的\",{\"1\":{\"100\":1}}],[\"个字段是模式\",{\"1\":{\"125\":1}}],[\"个字符中还包括了\",{\"1\":{\"100\":1}}],[\"个字符集大致上包括了欧洲各国所使用到的字符\",{\"1\":{\"97\":1}}],[\"个字符集\",{\"1\":{\"97\":1}}],[\"个字符\",{\"1\":{\"94\":1,\"99\":1,\"100\":1,\"374\":1}}],[\"个汉字\",{\"1\":{\"100\":1}}],[\"个大于\",{\"1\":{\"100\":1}}],[\"个大写英文字母\",{\"1\":{\"94\":1}}],[\"个编码定义了字符\",{\"1\":{\"97\":1}}],[\"个编码的主意\",{\"1\":{\"95\":1}}],[\"个坐标\",{\"1\":{\"86\":1}}],[\"个非负整数\",{\"1\":{\"86\":1}}],[\"个\",{\"1\":{\"46\":1,\"95\":2,\"97\":1,\"100\":1,\"101\":3,\"112\":1,\"291\":1,\"292\":1,\"304\":1,\"358\":1}}],[\"个帧\",{\"1\":{\"43\":1}}],[\"个元素进行遍历\",{\"1\":{\"210\":1}}],[\"个元素进行分区操作\",{\"1\":{\"210\":1}}],[\"个元素所需要的时间是\",{\"1\":{\"208\":1}}],[\"个元素\",{\"1\":{\"28\":1,\"209\":1}}],[\"卷积层可以捕捉并利用图像的空间的关系\",{\"1\":{\"43\":1}}],[\"层中\",{\"1\":{\"283\":1}}],[\"层填好\",{\"1\":{\"113\":1}}],[\"层的概念\",{\"1\":{\"112\":1}}],[\"层面\",{\"1\":{\"86\":1}}],[\"层\",{\"0\":{\"349\":1},\"1\":{\"43\":1,\"197\":1}}],[\"帧信息堆叠在一起\",{\"1\":{\"43\":1}}],[\"能收到\",{\"1\":{\"355\":1}}],[\"能做什么\",{\"0\":{\"266\":1}}],[\"能够容忍多消耗一点内存空间\",{\"1\":{\"154\":1}}],[\"能够接收来自各个地方的包\",{\"1\":{\"112\":1}}],[\"能够感知其环境\",{\"1\":{\"38\":1}}],[\"能这么做是因为\",{\"1\":{\"43\":1}}],[\"维护有序的成本都是很高的\",{\"1\":{\"140\":1}}],[\"维\",{\"1\":{\"43\":1}}],[\"向机器\",{\"1\":{\"355\":1}}],[\"向电脑\",{\"1\":{\"354\":1}}],[\"向\",{\"1\":{\"122\":1,\"331\":1}}],[\"向后完全兼容\",{\"1\":{\"101\":1}}],[\"向量\",{\"1\":{\"42\":1}}],[\"向下突破则卖出\",{\"1\":{\"3\":1}}],[\"估计\",{\"1\":{\"41\":1}}],[\"游戏时\",{\"1\":{\"41\":1}}],[\"玩了第一关\",{\"1\":{\"45\":1}}],[\"玩\",{\"1\":{\"41\":1}}],[\"训练过程\",{\"1\":{\"338\":1}}],[\"训练数据\",{\"1\":{\"338\":1}}],[\"训练结束后\",{\"1\":{\"331\":1}}],[\"训练模型\",{\"1\":{\"331\":1}}],[\"训练和评估时所用的全部超参\",{\"1\":{\"315\":1}}],[\"训练或者部署是一项复杂的任务\",{\"1\":{\"277\":1}}],[\"训练的初始权重\",{\"1\":{\"265\":1}}],[\"训练得到\",{\"1\":{\"54\":1}}],[\"训练\",{\"0\":{\"315\":1,\"317\":1},\"1\":{\"41\":1,\"277\":1,\"316\":1}}],[\"q++\",{\"1\":{\"208\":2}}],[\"q+1\",{\"1\":{\"208\":1}}],[\"qa\",{\"0\":{\"388\":1},\"1\":{\"127\":2,\"432\":1}}],[\"qlen\",{\"1\":{\"112\":1}}],[\"qdisc\",{\"1\":{\"112\":5}}],[\"question\",{\"0\":{\"452\":1},\"1\":{\"234\":1,\"409\":1,\"434\":1}}],[\"queue\",{\"1\":{\"188\":2}}],[\"queueing\",{\"1\":{\"112\":1}}],[\"quiet\",{\"1\":{\"404\":1,\"405\":1,\"428\":1}}],[\"quite\",{\"1\":{\"229\":2,\"232\":2,\"246\":3,\"248\":2,\"400\":1,\"403\":1,\"415\":1,\"430\":1,\"435\":1}}],[\"quickly\",{\"1\":{\"242\":1,\"402\":1,\"432\":1}}],[\"quick\",{\"0\":{\"209\":1},\"1\":{\"209\":8}}],[\"quoted\",{\"1\":{\"89\":1}}],[\"quadratic\",{\"0\":{\"150\":1}}],[\"quad\",{\"1\":{\"83\":1}}],[\"qualitative\",{\"1\":{\"74\":1}}],[\"quality\",{\"1\":{\"69\":1,\"399\":1,\"400\":2,\"402\":1,\"403\":1}}],[\"quandl\",{\"1\":{\"7\":1}}],[\"quantitative\",{\"0\":{\"1\":1},\"1\":{\"74\":1}}],[\"qword\",{\"1\":{\"83\":1}}],[\"qπ​\",{\"1\":{\"64\":1}}],[\"q\",{\"0\":{\"41\":1,\"42\":1,\"44\":1,\"46\":1,\"47\":1,\"64\":1,\"69\":1,\"70\":1,\"188\":1},\"1\":{\"41\":7,\"42\":3,\"43\":1,\"44\":16,\"45\":1,\"46\":9,\"47\":7,\"57\":1,\"59\":3,\"64\":1,\"69\":16,\"70\":10,\"127\":1,\"208\":5,\"210\":1,\"232\":1,\"373\":1,\"374\":1,\"435\":2}}],[\"控制算法等\",{\"1\":{\"39\":1}}],[\"做完你想做的事情时候\",{\"1\":{\"331\":1}}],[\"做哨兵\",{\"1\":{\"180\":1}}],[\"做进一步优化\",{\"1\":{\"158\":1}}],[\"做搜索\",{\"1\":{\"132\":1}}],[\"做不到的\",{\"1\":{\"59\":1}}],[\"做出决策以控制车辆的行驶\",{\"1\":{\"39\":1}}],[\"做一些其他的操作\",{\"1\":{\"21\":1}}],[\"大于\",{\"1\":{\"362\":1}}],[\"大都在\",{\"1\":{\"304\":1}}],[\"大体上可以将\",{\"1\":{\"269\":1}}],[\"大小写字母和下划线\",{\"1\":{\"224\":1}}],[\"大小的数据\",{\"1\":{\"140\":1}}],[\"大很多\",{\"1\":{\"213\":1}}],[\"大的元素\",{\"1\":{\"210\":1}}],[\"大元素\",{\"1\":{\"210\":1}}],[\"大概满足\",{\"1\":{\"209\":1}}],[\"大问题也就解决了\",{\"1\":{\"208\":1}}],[\"大部分情况下时间复杂度都很低\",{\"1\":{\"166\":1}}],[\"大部分时候是0\",{\"1\":{\"49\":1}}],[\"大数据量的散列表\",{\"1\":{\"154\":1}}],[\"大端\",{\"1\":{\"90\":1}}],[\"大写\",{\"1\":{\"75\":1}}],[\"大写粗体\",{\"1\":{\"75\":1}}],[\"大语言模型更多地集中于自然语言理解和生成\",{\"1\":{\"39\":1}}],[\"大语言模型\",{\"0\":{\"39\":1}}],[\"大级别的方向确定后\",{\"1\":{\"5\":1}}],[\"具体过程这里不介绍了\",{\"1\":{\"357\":1}}],[\"具体配置可查看\",{\"1\":{\"339\":1}}],[\"具体说来就是\",{\"1\":{\"225\":1}}],[\"具体是哪个字符\",{\"1\":{\"106\":1}}],[\"具体\",{\"1\":{\"85\":1}}],[\"具体来说\",{\"1\":{\"56\":1}}],[\"具有一定的随机性\",{\"1\":{\"55\":1}}],[\"具有滞后性\",{\"1\":{\"5\":1}}],[\"具备自主决策和行动的能力\",{\"1\":{\"39\":1}}],[\"具备某种程度的自主性和智能性\",{\"1\":{\"38\":1}}],[\"定义的是一样的\",{\"1\":{\"315\":1}}],[\"定义的字符较\",{\"1\":{\"101\":1}}],[\"定义模型\",{\"1\":{\"315\":1}}],[\"定义\",{\"0\":{\"38\":1}}],[\"会产生对象\",{\"1\":{\"377\":1}}],[\"会发送\",{\"1\":{\"362\":1}}],[\"会选择一个不可能的值作为\",{\"1\":{\"362\":1}}],[\"会选择州\",{\"1\":{\"260\":1}}],[\"会将出错的\",{\"1\":{\"360\":1}}],[\"会将尽量少的字词标记为\",{\"1\":{\"291\":1}}],[\"会更容易产生冲突\",{\"1\":{\"354\":1}}],[\"会撑爆你的\",{\"1\":{\"340\":1}}],[\"会帮你处理设备的问题\",{\"1\":{\"325\":1}}],[\"会帮助模型获得正确的翻译\",{\"1\":{\"274\":1}}],[\"会跟着\",{\"1\":{\"324\":1}}],[\"会输出一次\",{\"1\":{\"315\":1}}],[\"会输出一个关于可能行动的概率分布\",{\"1\":{\"55\":1}}],[\"会被分别构建不同的\",{\"1\":{\"291\":1}}],[\"会被随机初始化\",{\"1\":{\"286\":1}}],[\"会被略过\",{\"1\":{\"13\":1,\"18\":1}}],[\"会使用填充的方式使句子长度保持一致\",{\"1\":{\"275\":1}}],[\"会有多个线程同时操作队列\",{\"1\":{\"187\":1}}],[\"会有不同的码元序列\",{\"1\":{\"90\":1}}],[\"会在报文的数据部分插入发送时间\",{\"1\":{\"361\":1}}],[\"会在每次保存\",{\"1\":{\"331\":1}}],[\"会在之后介绍\",{\"1\":{\"279\":1}}],[\"会在\",{\"1\":{\"133\":1}}],[\"会根据包中提供的新租期以及其他更新的\",{\"1\":{\"120\":1}}],[\"会广播返回给客户机一个\",{\"1\":{\"119\":1}}],[\"会为此客户保留为它提供的\",{\"1\":{\"117\":1}}],[\"会获取网关的\",{\"1\":{\"113\":1}}],[\"会让计算机发出哔的一声\",{\"1\":{\"94\":1}}],[\"会告诉\",{\"1\":{\"54\":1}}],[\"会忽略\",{\"1\":{\"36\":1}}],[\"且交换机无法学习到网络的拓扑结构\",{\"1\":{\"356\":1}}],[\"且提供了很多配置项\",{\"1\":{\"316\":1}}],[\"且结果会被缓存\",{\"1\":{\"312\":1}}],[\"且你在这个过程中丢失了信息\",{\"1\":{\"291\":1}}],[\"且没有对应的说明的时候\",{\"1\":{\"253\":1}}],[\"且都可以稳定\",{\"1\":{\"206\":1}}],[\"且不会直接用命令\",{\"1\":{\"113\":1}}],[\"且\",{\"1\":{\"35\":1}}],[\"且它们对应的实体也是相同的\",{\"1\":{\"14\":1}}],[\"$2\",{\"1\":{\"132\":2}}],[\"$path\",{\"1\":{\"129\":1}}],[\"$\",{\"1\":{\"35\":2,\"225\":3,\"367\":6}}],[\"📁\",{\"1\":{\"35\":1}}],[\"😂𩷶\",{\"1\":{\"23\":1}}],[\"😂\",{\"1\":{\"21\":1}}],[\"既有\",{\"0\":{\"35\":1}}],[\"既拷贝所有的属性\",{\"1\":{\"18\":1}}],[\"既拷贝\",{\"1\":{\"13\":1}}],[\"基数排序的复杂度就近似于\",{\"1\":{\"214\":1}}],[\"基数排序\",{\"0\":{\"211\":1},\"1\":{\"215\":1}}],[\"基数\",{\"1\":{\"201\":1}}],[\"基于\",{\"1\":{\"360\":1,\"369\":2,\"370\":1}}],[\"基于链表实现的无线排队的线程池是不合适的\",{\"1\":{\"188\":1}}],[\"基于数组的循环队列\",{\"1\":{\"187\":1}}],[\"基于dbcs的编码方案里\",{\"1\":{\"103\":1}}],[\"基于可变数量的参数创建一个新的\",{\"1\":{\"28\":1}}],[\"基础上又增加了\",{\"1\":{\"102\":1}}],[\"基础上增加了\",{\"1\":{\"102\":1}}],[\"基础上进行进一步扩展得到的\",{\"1\":{\"99\":1}}],[\"基本类型\",{\"0\":{\"382\":1}}],[\"基本上都可以通过\",{\"1\":{\"188\":1}}],[\"基本不会变\",{\"1\":{\"114\":1}}],[\"基本是\",{\"1\":{\"112\":1}}],[\"基本满足日常需要\",{\"1\":{\"99\":1}}],[\"基本术语\",{\"0\":{\"83\":1}}],[\"基本使用\",{\"0\":{\"30\":1}}],[\"作者使用动图清晰地描述了\",{\"1\":{\"273\":1}}],[\"作为参数传递\",{\"1\":{\"315\":1}}],[\"作为参数传递给\",{\"1\":{\"303\":1}}],[\"作为训练集\",{\"1\":{\"260\":1}}],[\"作为聚合特征\",{\"1\":{\"260\":1}}],[\"作为聚合函数\",{\"1\":{\"260\":1}}],[\"作为分组特征\",{\"1\":{\"260\":1}}],[\"作为一种动态数据结构\",{\"1\":{\"200\":1}}],[\"作为一整个整体来处理或运算的一串比特位\",{\"1\":{\"83\":1}}],[\"作为确定最优\",{\"1\":{\"57\":1}}],[\"作为输入\",{\"1\":{\"43\":1,\"279\":1,\"282\":1}}],[\"作为唯一的出口\",{\"1\":{\"36\":1}}],[\"作为\",{\"1\":{\"28\":1}}],[\"作为过滤器\",{\"1\":{\"28\":1}}],[\"作用\",{\"0\":{\"13\":1}}],[\"`number\",{\"1\":{\"379\":1}}],[\"`dataset\",{\"1\":{\"346\":1}}],[\"`parsefloat`\",{\"1\":{\"379\":1}}],[\"`parseint\",{\"1\":{\"379\":1}}],[\"`pip\",{\"1\":{\"315\":2}}],[\"`pytorch`\",{\"1\":{\"315\":1}}],[\"`accelerate>=0\",{\"1\":{\"315\":1}}],[\"`argn`\",{\"1\":{\"28\":1}}],[\"`trainer`\",{\"1\":{\"315\":1}}],[\"`thisarg`\",{\"1\":{\"28\":1}}],[\"```\",{\"1\":{\"225\":5}}],[\"```js\",{\"1\":{\"225\":5}}],[\"`^`和`$`\",{\"1\":{\"225\":1}}],[\"`less`\",{\"1\":{\"127\":1}}],[\"`more`\",{\"1\":{\"127\":1}}],[\"`\",{\"1\":{\"35\":2,\"225\":6,\"315\":1,\"346\":1,\"379\":2}}],[\"`hello\",{\"1\":{\"35\":2}}],[\"实际上我们更希望得到类似于概率的结果\",{\"1\":{\"283\":1}}],[\"实际上是将递归改为了\",{\"1\":{\"194\":1}}],[\"实际上\",{\"1\":{\"154\":2,\"187\":1,\"188\":1,\"198\":1,\"253\":1,\"279\":1}}],[\"实际上这个空的位置是我们后来删除的\",{\"1\":{\"149\":1}}],[\"实际上这些所谓的\",{\"1\":{\"94\":1}}],[\"实际分配的时候\",{\"1\":{\"113\":1}}],[\"实例\",{\"1\":{\"28\":1}}],[\"实现高吞吐量的接入层设计\",{\"1\":{\"370\":1}}],[\"实现链路追踪\",{\"1\":{\"360\":1}}],[\"实现微调以及评估\",{\"1\":{\"326\":1}}],[\"实现这一步有不同的规则\",{\"1\":{\"295\":1}}],[\"实现更好性能的一般策略是增加模型的大小以及预训练的数据量\",{\"1\":{\"271\":1}}],[\"实现通用\",{\"0\":{\"215\":1}}],[\"实现了\",{\"1\":{\"22\":1}}],[\"实现\",{\"0\":{\"175\":1},\"1\":{\"21\":1,\"24\":1,\"57\":1,\"297\":1}}],[\"实现的是简单的从\",{\"1\":{\"322\":1}}],[\"实现的\",{\"1\":{\"19\":1}}],[\"所谓的下一跳就是某个\",{\"1\":{\"366\":1}}],[\"所处的范围并不大的时候\",{\"1\":{\"213\":1}}],[\"所提供的字节序列\",{\"1\":{\"89\":1}}],[\"所形成的编码用于某些特殊的传输环境\",{\"1\":{\"88\":1}}],[\"所需的码点数量赎回不断增加的\",{\"1\":{\"87\":1}}],[\"所共同组成\",{\"1\":{\"86\":1}}],[\"所有的对象都是\",{\"1\":{\"381\":1}}],[\"所有的\",{\"1\":{\"283\":1}}],[\"所有的递归代码都可以改为迭代循环的非递归写法\",{\"1\":{\"194\":1}}],[\"所有的数据都散列到同一个桶内\",{\"1\":{\"154\":1}}],[\"所有散列值相同的元素都放到相同曹伟对应的链表中\",{\"1\":{\"152\":1}}],[\"所有\",{\"1\":{\"28\":1}}],[\"所以不论何时\",{\"1\":{\"379\":1}}],[\"所以字符串的最大长度实际上是受字符串的编码长度影响的\",{\"1\":{\"374\":1}}],[\"所以到了外网上\",{\"1\":{\"366\":1}}],[\"所以要故意出错\",{\"1\":{\"362\":1}}],[\"所以需要先用\",{\"1\":{\"355\":1}}],[\"所以你可以删除\",{\"1\":{\"325\":1}}],[\"所以输出维度是\",{\"1\":{\"282\":1}}],[\"所以我们可以使用\",{\"1\":{\"345\":1}}],[\"所以我们可以跳过自己解压的过程\",{\"1\":{\"342\":1}}],[\"所以我们可以不传递\",{\"1\":{\"315\":1}}],[\"所以我们可以用它们构建张量并把张量提供给模型\",{\"1\":{\"295\":1}}],[\"所以我们在使用该模型做推理的时候也应该在首尾加上它们\",{\"1\":{\"306\":1}}],[\"所以我们需要用我们所选的模型的名称来实例化\",{\"1\":{\"295\":1}}],[\"所以我们最好进行\",{\"1\":{\"261\":1}}],[\"所以我们使特征和目标具有线性关系\",{\"1\":{\"252\":1}}],[\"所以它涨得很慢\",{\"1\":{\"255\":1}}],[\"所以它的网卡不会把包收进去\",{\"1\":{\"113\":1}}],[\"所以说\",{\"1\":{\"253\":1}}],[\"所以平均情况下的时间复杂度是\",{\"1\":{\"203\":1}}],[\"所以平均值需要查找一半的数据\",{\"1\":{\"171\":1}}],[\"所以当对象比索引结点大很多时\",{\"1\":{\"198\":1}}],[\"所以在跳表中查询任意数据的时间复杂度就是\",{\"1\":{\"197\":1}}],[\"所以在各种计算机系统平台中\",{\"1\":{\"88\":1}}],[\"所以线程池中排队的请求超过队列大小时\",{\"1\":{\"188\":1}}],[\"所以队列这种数据结构很适合来存储排队请求\",{\"1\":{\"188\":1}}],[\"所以内存消耗会翻倍\",{\"1\":{\"173\":1}}],[\"所以访问效率更高\",{\"1\":{\"173\":1}}],[\"所以对\",{\"1\":{\"154\":1,\"173\":1}}],[\"所以对于比较小的对象的存储\",{\"1\":{\"154\":1}}],[\"所以时间复杂度是\",{\"1\":{\"154\":1}}],[\"所以时间复杂度就是\",{\"1\":{\"138\":1}}],[\"所以还可以用一种简单粗暴的方法\",{\"1\":{\"129\":1}}],[\"所以这个过程叫预启动执行环境\",{\"1\":{\"121\":1}}],[\"所以这个返回值一般会被忽略\",{\"1\":{\"28\":1}}],[\"所以他希望的不仅仅是自动分配\",{\"1\":{\"121\":1}}],[\"所以只能使用多个字节来表示一个字符\",{\"1\":{\"99\":1}}],[\"所以实际上共\",{\"1\":{\"97\":1}}],[\"所以\",{\"1\":{\"81\":1,\"114\":1,\"117\":1,\"122\":1,\"191\":1,\"192\":1,\"312\":1,\"353\":1,\"360\":1}}],[\"所以会被当做元素直接添加\",{\"1\":{\"28\":1}}],[\"所以通常用它来看大级别\",{\"1\":{\"5\":1}}],[\"颠倒顺序\",{\"1\":{\"28\":1}}],[\"迭代停止\",{\"1\":{\"261\":1}}],[\"迭代继续\",{\"1\":{\"28\":1}}],[\"迭代器\",{\"1\":{\"24\":1}}],[\"迭代器是在\",{\"1\":{\"20\":1}}],[\"迭代器和它所迭代的对象是分开的\",{\"1\":{\"20\":1}}],[\"迭代器要有\",{\"1\":{\"20\":1}}],[\"迭代器必须有\",{\"1\":{\"19\":1,\"24\":1}}],[\"到一个地方去可以有相同的两个路线\",{\"1\":{\"370\":1}}],[\"到网关的\",{\"1\":{\"366\":1}}],[\"到最大长度效率不高\",{\"1\":{\"312\":1}}],[\"到最后一页自动结束\",{\"1\":{\"127\":1}}],[\"到整个词表大小\",{\"1\":{\"291\":1}}],[\"到此为止\",{\"1\":{\"283\":1}}],[\"到底选择多少个簇由我们研究的问题和使用的模型来决定\",{\"1\":{\"261\":1}}],[\"到底有多少数据被成功预测为positive\",{\"1\":{\"80\":1}}],[\"到\",{\"1\":{\"28\":3,\"41\":1,\"49\":2,\"322\":1}}],[\"没办法有效预读\",{\"1\":{\"173\":1}}],[\"没找到则返回\",{\"1\":{\"28\":1}}],[\"没有下一跳了\",{\"1\":{\"366\":2}}],[\"没有提供该方法的话\",{\"1\":{\"315\":1}}],[\"没有对应的转换\",{\"1\":{\"381\":1}}],[\"没有对应的值再进行计算\",{\"1\":{\"193\":1}}],[\"没有对句子对进行过预训练\",{\"1\":{\"315\":1}}],[\"没有介绍\",{\"1\":{\"312\":1}}],[\"没有体现出它们之间的相似与联系\",{\"1\":{\"291\":1}}],[\"没有指定\",{\"1\":{\"267\":1}}],[\"没有数据了的话\",{\"1\":{\"222\":2}}],[\"没有移动\",{\"1\":{\"204\":1}}],[\"没有频繁的插入\",{\"1\":{\"140\":1}}],[\"没有软件管家\",{\"0\":{\"127\":1}}],[\"没有考虑与任何一种现有的字符编码保持完全兼容\",{\"1\":{\"107\":1}}],[\"没有足够多的信息\",{\"1\":{\"47\":1}}],[\"没有\",{\"1\":{\"22\":1,\"35\":1}}],[\"没有则会报错\",{\"1\":{\"20\":1}}],[\"而非\",{\"1\":{\"379\":1}}],[\"而非创建\",{\"1\":{\"332\":1}}],[\"而引入了无穷大的概念\",{\"1\":{\"375\":1}}],[\"而使用\",{\"1\":{\"292\":1}}],[\"而使用循环链表时\",{\"1\":{\"170\":1}}],[\"而重新训练又需要大量的时间和数据\",{\"1\":{\"286\":1}}],[\"而对\",{\"1\":{\"274\":1}}],[\"而树模型\",{\"1\":{\"260\":1}}],[\"而互信息可以检测任何类型的关系\",{\"1\":{\"253\":1}}],[\"而快排是由上到下的\",{\"1\":{\"210\":1}}],[\"而递归是一种编程技巧\",{\"1\":{\"208\":1}}],[\"而插入排序只需要一个\",{\"1\":{\"206\":1}}],[\"而索引结点只需要存储关键值和几个指针\",{\"1\":{\"198\":1}}],[\"而链表在内存中并不是连续存储\",{\"1\":{\"173\":1}}],[\"而当链表长度太长\",{\"1\":{\"158\":1}}],[\"而且把不需要的包转发出去纯属浪费\",{\"1\":{\"354\":1}}],[\"而且这些操作之间存在前后连贯的时序关系\",{\"1\":{\"166\":1}}],[\"而且\",{\"1\":{\"154\":1,\"166\":1,\"173\":1,\"213\":1}}],[\"而二次探测探测的步长就变成了原来的\",{\"1\":{\"150\":1}}],[\"而数组为了支持随机访问的特性\",{\"1\":{\"140\":1}}],[\"而将待插入的元素直接插入对应位置\",{\"1\":{\"136\":1}}],[\"而scope\",{\"1\":{\"112\":1}}],[\"而gb18030\",{\"1\":{\"102\":1}}],[\"而一个字节只能表示\",{\"1\":{\"99\":1}}],[\"而计算机所能表示的整数范围却是有限的\",{\"1\":{\"87\":1}}],[\"而耽误治疗离世\",{\"1\":{\"81\":1}}],[\"而时序差分学习是一种基于单步\",{\"1\":{\"66\":1}}],[\"而是要求进行显示转换后用\",{\"1\":{\"378\":1}}],[\"而是要理解上下文的含义\",{\"1\":{\"264\":1}}],[\"而是是字符串的\",{\"1\":{\"374\":1}}],[\"而是放在一个配置文件里面\",{\"1\":{\"113\":1}}],[\"而是在每次交互\",{\"1\":{\"68\":1}}],[\"而是学一个值函数\",{\"1\":{\"56\":1}}],[\"而是使用\",{\"1\":{\"41\":1}}],[\"而深度强化学习就是将\",{\"1\":{\"48\":1}}],[\"而不同簇之间的数据点差异较大\",{\"1\":{\"261\":1}}],[\"而不需要显式计算所有可能的轨迹\",{\"1\":{\"63\":1}}],[\"而不需要考虑之前所有状态和行动的历史\",{\"1\":{\"49\":1}}],[\"而不需要考虑参数的数量或类型\",{\"1\":{\"28\":1}}],[\"而不是完整回合的观测数据\",{\"1\":{\"68\":1}}],[\"而不是\",{\"1\":{\"60\":1,\"292\":1}}],[\"而不是实际的完整的回报\",{\"1\":{\"44\":1}}],[\"而\",{\"1\":{\"44\":1,\"88\":1,\"112\":4,\"275\":1,\"345\":1}}],[\"而chatgpt等大语言模型则主要用于自然语言理解和生成\",{\"1\":{\"39\":1}}],[\"而另外两个不能\",{\"1\":{\"28\":1}}],[\"而我们只有一个迭代器\",{\"1\":{\"20\":1}}],[\"删除等有关的方法\",{\"1\":{\"332\":1}}],[\"删除等操作比单链表简单高效\",{\"1\":{\"171\":1}}],[\"删除或其他方法来处理缺失值\",{\"1\":{\"250\":1}}],[\"删除时要注意\",{\"1\":{\"199\":1}}],[\"删除链表倒数第\",{\"1\":{\"183\":1}}],[\"删除链表结点时\",{\"1\":{\"179\":1}}],[\"删除最后一个结点就可以统一为相同的代码实现逻辑\",{\"1\":{\"180\":1}}],[\"删除最后一个结点\",{\"1\":{\"180\":1}}],[\"删除的时间复杂度都是\",{\"1\":{\"169\":1}}],[\"删除的时间复杂度跟链表的长度\",{\"1\":{\"152\":1}}],[\"删除数据时你叫麻烦\",{\"1\":{\"154\":1}}],[\"删除之后保证数据仍然有序\",{\"1\":{\"140\":1}}],[\"删除操作性能下降\",{\"1\":{\"200\":1}}],[\"删除操作时\",{\"1\":{\"149\":1}}],[\"删除操作\",{\"1\":{\"140\":1,\"173\":1}}],[\"删除软件\",{\"1\":{\"127\":1}}],[\"删除\",{\"1\":{\"28\":2,\"136\":1,\"180\":1,\"195\":1}}],[\"删掉了\",{\"1\":{\"26\":2}}],[\"添加一条规则\",{\"1\":{\"367\":1}}],[\"添加了两个特殊词\",{\"1\":{\"306\":1}}],[\"添加可能对模型有用的其他输入\",{\"1\":{\"279\":1}}],[\"添加\",{\"1\":{\"28\":1}}],[\"仅当两个对象引用的是同一个对象时\",{\"1\":{\"27\":1}}],[\"比不上\",{\"1\":{\"428\":1}}],[\"比率对大多数模型来说通常比较难学习\",{\"1\":{\"260\":1}}],[\"比每两个结点抽一个结点作为索引要减少了一般的索引结点存储空间\",{\"1\":{\"198\":1}}],[\"比起链表来\",{\"1\":{\"158\":1}}],[\"比起开放寻址法\",{\"1\":{\"154\":1}}],[\"比特串\",{\"1\":{\"83\":1}}],[\"比特位\",{\"1\":{\"83\":1}}],[\"比较少用的词可以分解为有意义的子词\",{\"1\":{\"293\":1}}],[\"比较操作肯定比交换操作多\",{\"1\":{\"203\":1}}],[\"比较和交换\",{\"1\":{\"203\":1}}],[\"比较次数和交换\",{\"1\":{\"201\":1}}],[\"比较适合存储大对象\",{\"1\":{\"154\":1}}],[\"比较消耗内存\",{\"1\":{\"154\":1}}],[\"比较下标为散列值的元素和要查找的元素\",{\"1\":{\"149\":1}}],[\"比较大\",{\"1\":{\"70\":1,\"139\":1}}],[\"比较\",{\"0\":{\"210\":1,\"233\":1},\"1\":{\"44\":1,\"203\":1,\"204\":1}}],[\"比较小时\",{\"1\":{\"41\":1}}],[\"比较函数要返回\",{\"1\":{\"28\":1}}],[\"比较数组\",{\"0\":{\"27\":1}}],[\"比如不让除以\",{\"1\":{\"375\":1}}],[\"比如不常用的象形文字\",{\"1\":{\"106\":1}}],[\"比如通过配置\",{\"1\":{\"316\":1}}],[\"比如中文字符会比拉丁系语言的字符携带更多信息\",{\"1\":{\"292\":1}}],[\"比如身份证号码\",{\"1\":{\"259\":1}}],[\"比如我们会使用\",{\"1\":{\"257\":1}}],[\"比如有成百上千个特征\",{\"1\":{\"253\":1}}],[\"比如最大值是\",{\"1\":{\"213\":1}}],[\"比如散列表\",{\"1\":{\"193\":1}}],[\"比如高性能队列\",{\"1\":{\"185\":1}}],[\"比如用红黑树代替链表\",{\"1\":{\"154\":1}}],[\"比如跳表\",{\"1\":{\"154\":1}}],[\"比如数据库连接池等\",{\"1\":{\"188\":1}}],[\"比如数据库\",{\"1\":{\"133\":1}}],[\"比如email中\",{\"1\":{\"83\":1}}],[\"比如码元的单字节与多字节\",{\"1\":{\"83\":1}}],[\"比如自动驾驶\",{\"1\":{\"49\":1}}],[\"比如超级玛丽中\",{\"1\":{\"49\":2}}],[\"比如象棋游戏中我们可以获得整个棋盘信息\",{\"1\":{\"49\":1}}],[\"比如\",{\"1\":{\"21\":1,\"28\":1,\"45\":1,\"140\":1,\"159\":1,\"192\":1,\"215\":1,\"257\":1,\"264\":1,\"274\":1,\"275\":2,\"287\":1,\"293\":1,\"325\":1,\"381\":1}}],[\"比如设置\",{\"1\":{\"20\":1}}],[\"以后遇到目的地址是电脑\",{\"1\":{\"354\":1}}],[\"以该列为基准做排序\",{\"1\":{\"346\":1}}],[\"以对数据有一个直观的认识\",{\"1\":{\"345\":1}}],[\"以上的文件\",{\"1\":{\"335\":1}}],[\"以在\",{\"1\":{\"326\":1}}],[\"以在训练过程中查看训练效果\",{\"1\":{\"323\":1}}],[\"以让\",{\"1\":{\"323\":1}}],[\"以启动多进程\",{\"1\":{\"312\":1}}],[\"以下\",{\"1\":{\"293\":1}}],[\"以下是一些大家需要知道的内容\",{\"1\":{\"260\":1}}],[\"以作为神经网络的输入\",{\"1\":{\"277\":1}}],[\"以从输入中获得理解\",{\"1\":{\"273\":1}}],[\"以减小与其所属簇中数据点之间的距离\",{\"1\":{\"261\":1}}],[\"以减少数据维度和提高模型训练的速度\",{\"1\":{\"250\":1}}],[\"以创建新的特征\",{\"1\":{\"260\":1}}],[\"以使得模型关注某些表示\",{\"1\":{\"275\":1}}],[\"以使得对象具有迭代性质\",{\"1\":{\"17\":1}}],[\"以使与目标的关联更明显\",{\"1\":{\"255\":1}}],[\"以适应某些机器学习算法\",{\"1\":{\"250\":1}}],[\"以捕捉特征之间的相互关系\",{\"1\":{\"250\":1}}],[\"以确保使用和预训练时相同的规则\",{\"1\":{\"295\":1}}],[\"以确保模型不会被某些特征的值范围所主导\",{\"1\":{\"250\":1}}],[\"以确保特征具有相似的尺度和分布\",{\"1\":{\"250\":1}}],[\"以确保ai\",{\"1\":{\"39\":1}}],[\"以改进模型性能\",{\"1\":{\"250\":1}}],[\"以保证计数是稳定的\",{\"1\":{\"213\":1}}],[\"以此类推\",{\"1\":{\"210\":1}}],[\"以最后一个元素作为分区的界限\",{\"1\":{\"209\":1}}],[\"以最大化\",{\"1\":{\"57\":1}}],[\"以最大的\",{\"1\":{\"47\":1}}],[\"以及\",{\"1\":{\"315\":1}}],[\"以及行数\",{\"1\":{\"311\":1}}],[\"以及其他输入来生成目标序列\",{\"1\":{\"273\":1}}],[\"以及查找\",{\"1\":{\"200\":1}}],[\"以及不在数组中\",{\"1\":{\"165\":1}}],[\"以服务的方式运行\",{\"0\":{\"133\":1}}],[\"以太网就用的这种方式\",{\"1\":{\"352\":1}}],[\"以太网规定正文部分不允许超过\",{\"1\":{\"112\":1}}],[\"以太网的默认值\",{\"1\":{\"112\":1}}],[\"以外的其他增补平面\",{\"1\":{\"106\":1}}],[\"以外的其他平面为增补平面\",{\"1\":{\"106\":1}}],[\"以取代\",{\"1\":{\"102\":1}}],[\"以避免与\",{\"1\":{\"99\":1}}],[\"以满足该特殊环境的限制\",{\"1\":{\"89\":1}}],[\"以衡量其准确性方面的性能\",{\"1\":{\"81\":1}}],[\"以更新当前状态的值函数\",{\"1\":{\"67\":1}}],[\"以\",{\"1\":{\"59\":1,\"87\":1,\"282\":1}}],[\"以获取\",{\"1\":{\"313\":1}}],[\"以获取更多关于环境的信息\",{\"1\":{\"53\":1}}],[\"以获得最大的长期回报\",{\"1\":{\"56\":1}}],[\"以便最大程度地减小簇内数据点与质心之间的距离\",{\"1\":{\"261\":1}}],[\"以便模型能够更好地学习\",{\"1\":{\"255\":1}}],[\"以便提供给下一个\",{\"1\":{\"118\":1}}],[\"以便与其他多字节字符统一\",{\"1\":{\"99\":1}}],[\"以便在学习过程中不断改进其策略\",{\"1\":{\"53\":1}}],[\"以便学习并改进其决策能力\",{\"1\":{\"38\":1}}],[\"以支持其感知\",{\"1\":{\"39\":1}}],[\"以实现既定的任务或目标\",{\"1\":{\"38\":1}}],[\"以逗号连接数组中的元素\",{\"1\":{\"26\":1}}],[\"80\",{\"1\":{\"352\":2}}],[\"8lbs\",{\"1\":{\"345\":1}}],[\"851ff3e\",{\"1\":{\"337\":1}}],[\"8578431372549019\",{\"1\":{\"316\":1}}],[\"8907849829351535\",{\"1\":{\"324\":1}}],[\"8996539792387542\",{\"1\":{\"316\":1}}],[\"8789\",{\"1\":{\"301\":1}}],[\"876\",{\"1\":{\"183\":1}}],[\"8n​\",{\"1\":{\"138\":1,\"198\":1,\"208\":2}}],[\"883\",{\"1\":{\"101\":1}}],[\"8859\",{\"0\":{\"95\":1,\"97\":1},\"1\":{\"86\":2,\"96\":1,\"97\":5,\"108\":1}}],[\"8859系列\",{\"1\":{\"85\":1}}],[\"8个\",{\"1\":{\"83\":1}}],[\"8431372549019608\",{\"1\":{\"324\":1}}],[\"84\",{\"1\":{\"43\":4}}],[\"8\",{\"1\":{\"26\":1,\"83\":2,\"87\":1,\"88\":2,\"90\":1,\"99\":2,\"107\":2,\"111\":2,\"125\":1,\"154\":1,\"158\":3,\"198\":1,\"313\":6,\"319\":4,\"320\":1,\"360\":2,\"361\":1,\"364\":1,\"367\":1}}],[\"76\",{\"1\":{\"319\":3}}],[\"768\",{\"1\":{\"281\":1,\"285\":1}}],[\"7276\",{\"1\":{\"301\":1}}],[\"711\",{\"1\":{\"125\":1}}],[\"754\",{\"1\":{\"375\":2}}],[\"7592\",{\"1\":{\"288\":1}}],[\"75\",{\"1\":{\"112\":1,\"157\":2}}],[\"7993\",{\"1\":{\"294\":1,\"297\":1,\"298\":1}}],[\"79\",{\"1\":{\"112\":1}}],[\"777\",{\"1\":{\"111\":1}}],[\"7\",{\"0\":{\"121\":1,\"237\":1},\"1\":{\"26\":1,\"89\":1,\"94\":1,\"360\":1}}],[\"清空数组最简单的方式\",{\"1\":{\"26\":1}}],[\"此表的大小由语料中的独立\",{\"1\":{\"291\":1}}],[\"此修改对每个用户都生效\",{\"1\":{\"129\":1}}],[\"此外\",{\"1\":{\"39\":1}}],[\"此过程不可逆\",{\"1\":{\"26\":1}}],[\"此时它不知道网络的拓扑信息\",{\"1\":{\"355\":1}}],[\"此时\",{\"1\":{\"118\":1,\"355\":1}}],[\"此时我们的交易策略就是逢高卖出\",{\"1\":{\"3\":1}}],[\"此时的交易策略应该是逢低买进\",{\"1\":{\"3\":1}}],[\"减小极端值的影响\",{\"1\":{\"257\":1}}],[\"减小再恢复原长\",{\"1\":{\"26\":1}}],[\"减少计算量\",{\"1\":{\"251\":1}}],[\"减少数据的使用\",{\"1\":{\"251\":1}}],[\"减少动态扩容的次数\",{\"1\":{\"156\":1}}],[\"减少了\",{\"1\":{\"45\":1}}],[\"减去长期移动平均线\",{\"1\":{\"5\":1}}],[\"倍\",{\"1\":{\"26\":1}}],[\"速度要慢\",{\"1\":{\"26\":1}}],[\"<file>\",{\"1\":{\"337\":1}}],[\"<your\",{\"1\":{\"337\":1}}],[\"<namespace>\",{\"1\":{\"335\":1,\"336\":1,\"337\":1}}],[\"<path\",{\"1\":{\"335\":1,\"336\":4,\"337\":2}}],[\"<token>\",{\"1\":{\"331\":1}}],[\"<broadcast\",{\"1\":{\"112\":1}}],[\"<\",{\"1\":{\"26\":1,\"28\":1,\"142\":1,\"143\":1,\"144\":2,\"145\":1,\"159\":1,\"162\":1,\"164\":1,\"180\":3,\"203\":2,\"204\":1,\"205\":3,\"208\":3,\"209\":2,\"210\":1,\"213\":4,\"225\":1,\"432\":1,\"434\":1}}],[\"<=p\",{\"1\":{\"225\":1}}],[\"<=\",{\"1\":{\"20\":2,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"180\":1,\"194\":1,\"203\":1,\"204\":1,\"205\":1,\"208\":3,\"213\":3,\"375\":1}}],[\"负鼠\",{\"1\":{\"435\":1}}],[\"负无穷大\",{\"1\":{\"375\":1}}],[\"负无穷\",{\"1\":{\"375\":1}}],[\"负责将文本转成数字表示\",{\"1\":{\"277\":1}}],[\"负偏\",{\"1\":{\"257\":1}}],[\"负数表示小于\",{\"1\":{\"28\":1}}],[\"负数\",{\"1\":{\"26\":1}}],[\"负值表示卖出信号的强度增加\",{\"1\":{\"5\":1}}],[\"支持自动解压\",{\"1\":{\"342\":1}}],[\"支持下列格式\",{\"1\":{\"341\":1}}],[\"支持更多的优化策略\",{\"1\":{\"154\":1}}],[\"支持随机访问\",{\"1\":{\"136\":1}}],[\"支持\",{\"1\":{\"26\":1}}],[\"支撑线\",{\"1\":{\"3\":1}}],[\"值是一个非负整数\",{\"1\":{\"146\":1}}],[\"值来更新\",{\"1\":{\"59\":1}}],[\"值\",{\"1\":{\"24\":1,\"69\":1,\"146\":1,\"373\":1}}],[\"表中添加规则\",{\"1\":{\"367\":1}}],[\"表达\",{\"0\":{\"230\":1}}],[\"表达式求值\",{\"0\":{\"220\":1}}],[\"表明已经接受客户机的选择\",{\"1\":{\"119\":1}}],[\"表明迭代结束\",{\"1\":{\"24\":1}}],[\"表的结构如下所示\",{\"1\":{\"69\":1}}],[\"表可以被看作是\",{\"1\":{\"69\":1}}],[\"表\",{\"1\":{\"41\":1,\"69\":1,\"146\":1}}],[\"表示从\",{\"1\":{\"367\":1}}],[\"表示包的优先级\",{\"1\":{\"364\":1}}],[\"表示路由器根本不知道关于目的主机的信息\",{\"1\":{\"360\":1}}],[\"表示路由器根本不知道关于目的网络的信息\",{\"1\":{\"360\":1}}],[\"表示路由器寻址出错\",{\"1\":{\"360\":1}}],[\"表示由源主机路由选项中规定的一个或多个路由器无法通过\",{\"1\":{\"360\":1}}],[\"表示端口不可达\",{\"1\":{\"360\":1}}],[\"表示分组要交付的应用进程没有运行\",{\"1\":{\"360\":1}}],[\"表示协议不可达\",{\"1\":{\"360\":1}}],[\"表示主机不可达\",{\"1\":{\"360\":1}}],[\"表示网络寻址不存在问题\",{\"1\":{\"360\":1}}],[\"表示网络不可达\",{\"1\":{\"360\":1}}],[\"表示输入的哪部分是第一个句子\",{\"1\":{\"312\":1}}],[\"表示该位置是\",{\"1\":{\"303\":1}}],[\"表示要创建的质心\",{\"1\":{\"261\":1}}],[\"表示左连接\",{\"1\":{\"260\":1}}],[\"表示有无的特征一般用\",{\"1\":{\"258\":1}}],[\"表示两个量之间是独立的\",{\"1\":{\"255\":1}}],[\"表示喜欢\",{\"0\":{\"231\":1}}],[\"表示出现任意次\",{\"1\":{\"224\":1}}],[\"表示出现至少一次\",{\"1\":{\"224\":1}}],[\"表示出现或者不出现\",{\"1\":{\"224\":1}}],[\"表示出现\",{\"1\":{\"224\":1}}],[\"表示至少出现\",{\"1\":{\"224\":1}}],[\"表示空白符\",{\"1\":{\"224\":1}}],[\"表示数据部分是\",{\"1\":{\"360\":1}}],[\"表示数字\",{\"1\":{\"224\":1}}],[\"表示数组\",{\"1\":{\"180\":1}}],[\"表示除数字外的任意字符\",{\"1\":{\"224\":1}}],[\"表示除了\",{\"1\":{\"224\":1}}],[\"表示递归的深度\",{\"1\":{\"192\":1}}],[\"表示执行时间\",{\"1\":{\"162\":1}}],[\"表示散列表中\",{\"1\":{\"152\":1}}],[\"表示散列中数据的个数\",{\"1\":{\"152\":1}}],[\"表示标准错误输出\",{\"1\":{\"132\":1}}],[\"表示标准输出和错误输出合并了\",{\"1\":{\"132\":1}}],[\"表示标准输出\",{\"1\":{\"132\":1}}],[\"表示在后台运行\",{\"1\":{\"132\":1}}],[\"表示目录\",{\"1\":{\"125\":1}}],[\"表示普通文件\",{\"1\":{\"125\":1}}],[\"表示当前的包的优先级\",{\"1\":{\"112\":1}}],[\"表示英文大写字母\",{\"1\":{\"108\":1}}],[\"表示补充扩展的其他衍生字符\",{\"1\":{\"96\":1}}],[\"表示的其实是一种动作或行为\",{\"1\":{\"94\":1}}],[\"表示为\",{\"1\":{\"83\":2}}],[\"表示\",{\"1\":{\"49\":1,\"106\":1,\"112\":2,\"224\":7,\"291\":1}}],[\"表示循环结束\",{\"1\":{\"20\":1}}],[\"表示市场可能处于下降趋势\",{\"1\":{\"5\":1}}],[\"表示市场可能处于上升趋势\",{\"1\":{\"5\":1}}],[\"表示卖出信号\",{\"1\":{\"5\":1}}],[\"表示买入信号\",{\"1\":{\"5\":1}}],[\"表示股票已经超卖\",{\"1\":{\"4\":1}}],[\"表示股票已经超买\",{\"1\":{\"4\":1}}],[\"表示过去的观测值衰减得越快\",{\"1\":{\"3\":1}}],[\"表示权重的衰减程度\",{\"1\":{\"3\":1}}],[\"9007199254740990\",{\"1\":{\"375\":1}}],[\"988bc5a\",{\"1\":{\"337\":1}}],[\"9a\",{\"1\":{\"224\":2}}],[\"96\",{\"1\":{\"97\":1}}],[\"97~122\",{\"1\":{\"94\":1}}],[\"94\",{\"1\":{\"86\":1}}],[\"9946e\",{\"1\":{\"283\":1}}],[\"9995\",{\"1\":{\"283\":1}}],[\"999\",{\"1\":{\"279\":1,\"288\":2,\"303\":4,\"304\":2}}],[\"9994558691978455\",{\"1\":{\"267\":1}}],[\"99\",{\"1\":{\"49\":1}}],[\"9598\",{\"1\":{\"283\":1}}],[\"9598048329353333\",{\"1\":{\"267\":2}}],[\"95\",{\"1\":{\"49\":1,\"101\":1}}],[\"9\",{\"1\":{\"23\":1,\"26\":1,\"94\":1,\"107\":1,\"125\":2,\"132\":3,\"224\":2,\"283\":2,\"345\":1}}],[\"例题\",{\"1\":{\"191\":1}}],[\"例\",{\"1\":{\"23\":1}}],[\"例如随机森林和xgboost\",{\"1\":{\"260\":1}}],[\"例如在\",{\"1\":{\"129\":1}}],[\"例如要将文本内容在\",{\"1\":{\"107\":1}}],[\"例如使用贪心策略\",{\"1\":{\"64\":1}}],[\"例如chatgpt\",{\"1\":{\"39\":1}}],[\"例如\",{\"1\":{\"4\":1,\"19\":1,\"22\":1,\"39\":1,\"69\":1,\"81\":2,\"113\":1,\"250\":1,\"260\":2,\"275\":1,\"291\":1,\"337\":1,\"360\":1,\"365\":1,\"381\":1}}],[\"等选择路由表\",{\"1\":{\"367\":1}}],[\"等目的\",{\"1\":{\"353\":1}}],[\"等价于\",{\"1\":{\"224\":4}}],[\"等于逆序度\",{\"1\":{\"204\":1}}],[\"等函数执行完成返回时\",{\"1\":{\"192\":1}}],[\"等到有空闲线程时\",{\"1\":{\"188\":1}}],[\"等人走了或者用完了\",{\"1\":{\"114\":1}}],[\"等采用多字节码元的编码方式而言\",{\"1\":{\"88\":1}}],[\"等等来筛选\",{\"1\":{\"339\":1}}],[\"等等\",{\"1\":{\"86\":1}}],[\"等指标\",{\"1\":{\"77\":1}}],[\"等\",{\"0\":{\"98\":1},\"1\":{\"32\":1,\"87\":1,\"90\":1,\"94\":1,\"99\":1,\"259\":1,\"270\":1,\"360\":1,\"374\":1,\"381\":1}}],[\"等数组方法\",{\"1\":{\"22\":1}}],[\"等库来管理和优化投资组合\",{\"1\":{\"7\":1}}],[\"等库创建和回测交易策略\",{\"1\":{\"7\":1}}],[\"类以于\",{\"1\":{\"336\":1}}],[\"类以及它的\",{\"1\":{\"279\":1}}],[\"类进行微调\",{\"1\":{\"317\":1}}],[\"类来微调各种预训练模型\",{\"1\":{\"314\":1}}],[\"类可以根据\",{\"1\":{\"284\":1}}],[\"类似于\",{\"1\":{\"294\":2}}],[\"类似\",{\"1\":{\"280\":1,\"321\":1,\"345\":1}}],[\"类\",{\"0\":{\"336\":1},\"1\":{\"277\":1,\"282\":1,\"284\":1,\"315\":1}}],[\"类和\",{\"1\":{\"277\":1}}],[\"类比身份证\",{\"1\":{\"112\":1}}],[\"类字符集均属于双字节字符集\",{\"1\":{\"103\":1}}],[\"类字符\",{\"1\":{\"94\":1}}],[\"类数组\",{\"0\":{\"22\":1},\"1\":{\"24\":1}}],[\"类型转换\",{\"0\":{\"378\":1}}],[\"类型基本符合\",{\"1\":{\"375\":1}}],[\"类型是超时\",{\"1\":{\"362\":1}}],[\"类型字段为\",{\"1\":{\"361\":1}}],[\"类型为\",{\"1\":{\"361\":1}}],[\"类型值\",{\"1\":{\"360\":1}}],[\"类型可以直接相加\",{\"1\":{\"258\":1}}],[\"类型化的\",{\"1\":{\"248\":1}}],[\"类型的对象的\",{\"1\":{\"159\":1}}],[\"类型\",{\"0\":{\"51\":1,\"52\":1,\"371\":1},\"1\":{\"11\":1,\"352\":2,\"353\":1,\"360\":1,\"376\":1,\"377\":1,\"435\":1}}],[\"类型或\",{\"1\":{\"11\":1,\"376\":1}}],[\"输入\",{\"1\":{\"127\":1,\"302\":1}}],[\"输入一个\",{\"1\":{\"9\":1}}],[\"输出\",{\"0\":{\"281\":1},\"1\":{\"303\":1}}],[\"输出的部分一起作为\",{\"1\":{\"275\":1}}],[\"输出是\",{\"1\":{\"62\":1}}],[\"输出对应的\",{\"1\":{\"43\":1}}],[\"输出在该状态下每个可能的\",{\"1\":{\"42\":1}}],[\"输出字符\",{\"1\":{\"21\":1}}],[\"html\",{\"1\":{\"345\":1,\"346\":5}}],[\"https\",{\"1\":{\"337\":2,\"342\":2,\"343\":1}}],[\"http\",{\"1\":{\"335\":1}}],[\"http的头\",{\"1\":{\"112\":1}}],[\"hypo\",{\"1\":{\"345\":1}}],[\"hypothesis\",{\"1\":{\"49\":1,\"74\":1}}],[\"hf\",{\"1\":{\"286\":1,\"311\":1}}],[\"hunt\",{\"1\":{\"435\":1}}],[\"hunting\",{\"1\":{\"435\":1}}],[\"humans\",{\"1\":{\"435\":2}}],[\"human\",{\"1\":{\"419\":1}}],[\"hurt\",{\"1\":{\"345\":1}}],[\"hub=true\",{\"1\":{\"315\":1,\"331\":2}}],[\"hub\",{\"0\":{\"311\":1,\"331\":1,\"332\":1,\"341\":1},\"1\":{\"266\":1,\"309\":1,\"310\":1,\"311\":1,\"315\":1,\"326\":1,\"327\":2,\"329\":2,\"331\":13,\"332\":3,\"334\":2,\"335\":2,\"336\":3,\"339\":1,\"340\":3,\"350\":1}}],[\"hue\",{\"1\":{\"255\":1}}],[\"hue=\",{\"1\":{\"255\":2,\"261\":1}}],[\"hustle\",{\"1\":{\"246\":4,\"428\":2}}],[\"huge\",{\"1\":{\"246\":1,\"403\":1}}],[\"huggingface\",{\"0\":{\"332\":1},\"1\":{\"267\":2,\"279\":2,\"286\":1,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1,\"311\":1,\"329\":1,\"331\":3,\"332\":5,\"335\":1,\"336\":1,\"337\":2}}],[\"hugging\",{\"0\":{\"341\":1},\"1\":{\"71\":1,\"327\":1,\"331\":1,\"334\":1,\"339\":1,\"340\":1}}],[\"help\",{\"1\":{\"411\":1,\"434\":1,\"435\":4}}],[\"helps\",{\"0\":{\"405\":1},\"1\":{\"345\":1,\"397\":1,\"404\":1,\"406\":1}}],[\"hello\",{\"1\":{\"21\":1,\"225\":4,\"288\":1}}],[\"henson\",{\"1\":{\"291\":2}}],[\"height=6\",{\"1\":{\"261\":2}}],[\"height=4\",{\"1\":{\"255\":1}}],[\"heat\",{\"1\":{\"430\":4}}],[\"heaton\",{\"1\":{\"411\":1}}],[\"heart\",{\"1\":{\"428\":1}}],[\"hear\",{\"1\":{\"421\":1}}],[\"heard\",{\"1\":{\"419\":1}}],[\"healthy\",{\"1\":{\"345\":2}}],[\"heavy\",{\"1\":{\"244\":2,\"435\":1}}],[\"headed\",{\"1\":{\"411\":1}}],[\"header\",{\"1\":{\"339\":1}}],[\"headphones\",{\"1\":{\"400\":7,\"403\":4}}],[\"headsets\",{\"1\":{\"400\":1}}],[\"heads\",{\"0\":{\"282\":1},\"1\":{\"282\":1,\"285\":1}}],[\"head\",{\"1\":{\"180\":5,\"185\":2,\"260\":1,\"282\":1,\"315\":2,\"411\":1}}],[\"hero\",{\"1\":{\"435\":1}}],[\"herbivores\",{\"1\":{\"435\":1}}],[\"herself\",{\"1\":{\"411\":1}}],[\"heritage\",{\"1\":{\"389\":2}}],[\"here\",{\"1\":{\"389\":1}}],[\"her\",{\"1\":{\"237\":1,\"403\":1,\"406\":2,\"411\":2,\"412\":1,\"428\":2}}],[\"he\",{\"1\":{\"225\":1,\"242\":1,\"311\":1,\"403\":1,\"411\":3,\"419\":1,\"434\":4}}],[\"hospitality\",{\"1\":{\"435\":1}}],[\"host\",{\"0\":{\"114\":1},\"1\":{\"112\":1,\"360\":2}}],[\"honeymoon\",{\"1\":{\"434\":2}}],[\"honest\",{\"1\":{\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"400\":1,\"417\":1,\"425\":1,\"427\":1,\"430\":1}}],[\"hotel\",{\"1\":{\"434\":1}}],[\"hot\",{\"1\":{\"430\":2}}],[\"hobby\",{\"1\":{\"428\":1}}],[\"hobbies\",{\"1\":{\"393\":1,\"398\":1,\"435\":1}}],[\"holland\",{\"1\":{\"407\":1}}],[\"horses\",{\"1\":{\"435\":1}}],[\"horsepower\",{\"1\":{\"255\":1}}],[\"horizon\",{\"1\":{\"423\":1}}],[\"horoscope\",{\"1\":{\"423\":1}}],[\"horror\",{\"1\":{\"401\":4}}],[\"hopes\",{\"1\":{\"403\":1}}],[\"hops\",{\"1\":{\"369\":1}}],[\"hoping\",{\"1\":{\"345\":1}}],[\"however\",{\"1\":{\"345\":1,\"394\":1,\"424\":1,\"427\":1}}],[\"how\",{\"0\":{\"428\":1},\"1\":{\"267\":1,\"338\":1,\"403\":1,\"406\":2,\"416\":1,\"419\":2,\"423\":1,\"435\":3}}],[\"how=\",{\"1\":{\"260\":2}}],[\"hour\",{\"1\":{\"345\":1}}],[\"hours\",{\"1\":{\"244\":2}}],[\"housework\",{\"1\":{\"421\":1}}],[\"house\",{\"1\":{\"246\":1}}],[\"housekeeper\",{\"1\":{\"244\":1}}],[\"hook\",{\"1\":{\"244\":1}}],[\"homework\",{\"1\":{\"421\":1}}],[\"homes\",{\"1\":{\"392\":1}}],[\"hometown\",{\"0\":{\"247\":1},\"1\":{\"424\":1}}],[\"home=\",{\"1\":{\"129\":1}}],[\"home\",{\"1\":{\"124\":2,\"129\":2,\"244\":2,\"286\":1,\"311\":1,\"390\":1,\"403\":1,\"408\":1,\"419\":4,\"421\":1,\"431\":1,\"435\":1}}],[\"h\",{\"1\":{\"124\":2,\"134\":1,\"159\":3,\"225\":1}}],[\"hit\",{\"1\":{\"421\":1}}],[\"hive\",{\"1\":{\"406\":2}}],[\"hiking\",{\"1\":{\"397\":1}}],[\"him\",{\"1\":{\"311\":1,\"403\":1,\"428\":1}}],[\"hidden\",{\"0\":{\"281\":1},\"1\":{\"280\":1,\"281\":2,\"282\":1,\"285\":4}}],[\"historic\",{\"1\":{\"416\":1}}],[\"historical\",{\"1\":{\"403\":1,\"416\":2,\"435\":1}}],[\"history\",{\"0\":{\"415\":1,\"416\":1,\"417\":1,\"418\":1,\"419\":1},\"1\":{\"415\":4,\"416\":4,\"417\":3,\"419\":2}}],[\"his\",{\"1\":{\"242\":1,\"246\":1,\"311\":4,\"406\":1,\"407\":1,\"412\":1,\"434\":1}}],[\"hierarchical\",{\"1\":{\"74\":1}}],[\"higher\",{\"1\":{\"383\":1,\"387\":1}}],[\"highly\",{\"1\":{\"345\":1,\"385\":1,\"395\":1}}],[\"high\",{\"1\":{\"60\":1,\"139\":3,\"142\":5,\"143\":4,\"144\":4,\"145\":4,\"309\":1,\"383\":1,\"386\":1,\"399\":1,\"403\":1}}],[\"hill\",{\"1\":{\"57\":1}}],[\"harm\",{\"1\":{\"435\":1}}],[\"hardly\",{\"1\":{\"434\":1}}],[\"harder\",{\"1\":{\"406\":1}}],[\"hard\",{\"1\":{\"125\":1,\"234\":1,\"424\":1,\"428\":1}}],[\"having\",{\"1\":{\"434\":1}}],[\"haven\",{\"1\":{\"427\":1,\"428\":1}}],[\"have\",{\"0\":{\"390\":1,\"409\":1,\"411\":1,\"433\":1},\"1\":{\"59\":1,\"239\":1,\"242\":1,\"244\":2,\"246\":2,\"255\":1,\"301\":1,\"303\":1,\"304\":1,\"307\":1,\"345\":1,\"389\":1,\"390\":2,\"391\":1,\"393\":2,\"394\":1,\"395\":1,\"398\":1,\"399\":3,\"400\":1,\"406\":4,\"407\":4,\"410\":1,\"411\":1,\"413\":1,\"421\":2,\"425\":1,\"428\":5,\"432\":1,\"433\":1,\"434\":1,\"435\":5}}],[\"hailstorms\",{\"1\":{\"429\":1}}],[\"habits\",{\"1\":{\"403\":2}}],[\"habitat\",{\"1\":{\"390\":1,\"391\":1}}],[\"habitats\",{\"0\":{\"236\":1},\"1\":{\"389\":1,\"392\":1,\"434\":1,\"435\":1}}],[\"happiness\",{\"1\":{\"407\":1,\"410\":1}}],[\"happen\",{\"1\":{\"401\":2,\"428\":1}}],[\"happy\",{\"1\":{\"227\":1,\"237\":1,\"400\":2}}],[\"hate\",{\"1\":{\"267\":1,\"279\":2}}],[\"hadn\",{\"1\":{\"411\":1}}],[\"had\",{\"1\":{\"242\":1,\"244\":1,\"345\":2,\"390\":1,\"403\":1,\"406\":3,\"411\":2,\"419\":5,\"428\":3,\"434\":3,\"435\":3}}],[\"hanzhuo\",{\"1\":{\"337\":2}}],[\"handmade\",{\"1\":{\"435\":1}}],[\"hands\",{\"1\":{\"435\":1}}],[\"handwriting\",{\"0\":{\"412\":1},\"1\":{\"412\":3,\"413\":1,\"414\":2}}],[\"handing\",{\"1\":{\"403\":1}}],[\"handy\",{\"1\":{\"242\":1}}],[\"hand\",{\"1\":{\"233\":2,\"403\":1,\"410\":1,\"428\":1,\"434\":2}}],[\"handle\",{\"1\":{\"44\":1}}],[\"hanging\",{\"1\":{\"246\":1}}],[\"hang\",{\"1\":{\"132\":1}}],[\"hassolvedlist\",{\"1\":{\"193\":3}}],[\"hashcode\",{\"1\":{\"159\":4}}],[\"hashmap\",{\"1\":{\"155\":1,\"156\":2,\"157\":1,\"158\":4}}],[\"hash3\",{\"1\":{\"151\":1}}],[\"hash2\",{\"1\":{\"151\":1}}],[\"hash1\",{\"1\":{\"151\":1}}],[\"hashing\",{\"0\":{\"151\":1}}],[\"hash\",{\"1\":{\"146\":10,\"150\":6,\"151\":1,\"159\":4}}],[\"has\",{\"1\":{\"74\":1,\"246\":1,\"257\":1,\"345\":3,\"400\":1,\"414\":1,\"417\":1,\"426\":1,\"428\":1,\"435\":2}}],[\"hasinstance\",{\"1\":{\"17\":1}}],[\"𝒳\",{\"1\":{\"21\":1}}],[\"𝒳😂𩷶\",{\"1\":{\"23\":1}}],[\"𝒳😂\",{\"1\":{\"21\":1}}],[\"都建议传入\",{\"1\":{\"379\":1}}],[\"都在对象类型中有所对应\",{\"1\":{\"377\":1}}],[\"都能收到广播信息\",{\"1\":{\"355\":1}}],[\"都加载到内存中\",{\"1\":{\"312\":1}}],[\"都作为上下文考虑进去了\",{\"1\":{\"302\":1}}],[\"都做了什么\",{\"0\":{\"278\":1}}],[\"都会先判断目标\",{\"1\":{\"364\":1}}],[\"都会接收然后发给主机\",{\"1\":{\"354\":1}}],[\"都会跟\",{\"1\":{\"209\":1}}],[\"都会将临时变量封装为栈帧压入内存栈\",{\"1\":{\"192\":1}}],[\"都用到了循环并发队列\",{\"1\":{\"185\":1}}],[\"都对应一条链表\",{\"1\":{\"152\":1}}],[\"都推荐使用二分查找\",{\"1\":{\"140\":1}}],[\"都可以在该目录下用\",{\"1\":{\"131\":1}}],[\"都可以是负数\",{\"1\":{\"28\":1}}],[\"都与以字节为基础的基本数据类型密切相关\",{\"1\":{\"83\":1}}],[\"都需要考虑\",{\"1\":{\"64\":1}}],[\"都是原地排序\",{\"1\":{\"206\":1}}],[\"都是把8位的字节映射为7位长的数据\",{\"1\":{\"89\":1}}],[\"都是\",{\"1\":{\"87\":1}}],[\"都是用\",{\"1\":{\"69\":1}}],[\"都是应该在后续中被更多地被选择\",{\"1\":{\"61\":1}}],[\"都是可迭代的\",{\"1\":{\"21\":1}}],[\"都从\",{\"1\":{\"36\":1}}],[\"都接受一个可选的附加参数\",{\"1\":{\"28\":1}}],[\"都使用\",{\"1\":{\"28\":1}}],[\"都不是\",{\"1\":{\"22\":1}}],[\"都则将创建一个新的\",{\"1\":{\"15\":1}}],[\"因而不适用了\",{\"1\":{\"369\":1}}],[\"因而可根据需要由合作者之间私下协商将其分配给私有字符\",{\"1\":{\"106\":1}}],[\"因\",{\"1\":{\"90\":1}}],[\"因多个不同的字符编码方式\",{\"1\":{\"90\":1}}],[\"因为这个口和目标\",{\"1\":{\"366\":1}}],[\"因为这些模型没有自然的方式来跨多个特征同时聚合信息\",{\"1\":{\"260\":1}}],[\"因为局域网之间并没有做过协商\",{\"1\":{\"366\":1}}],[\"因为已经换了局域网\",{\"1\":{\"366\":1}}],[\"因为将所有的数据\",{\"1\":{\"312\":1}}],[\"因为每个字词都是通过\",{\"1\":{\"292\":1}}],[\"因为它可以帮助我们洞察数据的不同方面和模式\",{\"1\":{\"260\":1}}],[\"因为需要遍历找到最小元素\",{\"1\":{\"205\":1}}],[\"因为最大允许的递归深度跟当前线程剩余的栈空间大小有关\",{\"1\":{\"192\":1}}],[\"因为链表中的每个结点都需要消耗额外的存储空间去存储一份指向下一个结点的指针\",{\"1\":{\"173\":1}}],[\"因为在数据量较小的情况下\",{\"1\":{\"158\":1}}],[\"因为可能要大量移动数据\",{\"1\":{\"136\":1}}],[\"因为担心授权问题\",{\"1\":{\"133\":1}}],[\"因为此时请求分配\",{\"1\":{\"117\":1}}],[\"因为我们输出的是动作上的概率分布\",{\"1\":{\"59\":1}}],[\"因为\",{\"1\":{\"46\":1,\"68\":1,\"107\":1,\"315\":1}}],[\"因为同时进行循环的情况下他们共享迭代状态\",{\"1\":{\"20\":1}}],[\"因此它能够获得完整的输入句子来对当前词语进行最佳预测\",{\"1\":{\"275\":1}}],[\"因此k均值聚类通常会重复多次\",{\"1\":{\"261\":1}}],[\"因此私用区中的同一个码点\",{\"1\":{\"106\":1}}],[\"因此才既不可显示也不可能打印\",{\"1\":{\"94\":1}}],[\"因此剩下最高位的那1比特一般为0\",{\"1\":{\"94\":1}}],[\"因此字节一般也是存储器的最小存取单位以及处理器的最小寻址单位\",{\"1\":{\"83\":1}}],[\"因此\",{\"1\":{\"39\":1,\"53\":1,\"260\":1}}],[\"因此单独使用时可能会产生延迟的信号\",{\"1\":{\"5\":1}}],[\"了仓库\",{\"1\":{\"336\":1}}],[\"了解\",{\"1\":{\"308\":1,\"340\":1}}],[\"了解如何加载模型\",{\"1\":{\"277\":1}}],[\"了解模型本身的优劣对于创建特征尤为重要\",{\"1\":{\"260\":1}}],[\"了这些\",{\"1\":{\"45\":1}}],[\"了\",{\"1\":{\"20\":1,\"162\":1,\"288\":1,\"315\":1,\"336\":1}}],[\"被替换成了做\",{\"1\":{\"315\":1}}],[\"被打开时\",{\"1\":{\"129\":1}}],[\"被网卡厂商固化在了网卡的\",{\"1\":{\"121\":1}}],[\"被分配到三个\",{\"1\":{\"112\":1}}],[\"被保留为私用\",{\"1\":{\"106\":1}}],[\"被划分为了17个平面\",{\"1\":{\"105\":1}}],[\"被用作目标值\",{\"1\":{\"67\":1}}],[\"被\",{\"1\":{\"28\":1,\"133\":1,\"361\":1}}],[\"被转换成了数字0\",{\"1\":{\"27\":1}}],[\"被截断的元素并不会找回来\",{\"1\":{\"26\":1}}],[\"被调用时生成的\",{\"1\":{\"20\":1}}],[\"被称为状态字典\",{\"1\":{\"287\":1}}],[\"被称为全局\",{\"1\":{\"14\":1}}],[\"被称为\",{\"1\":{\"5\":2}}],[\"否则判定括号不匹配\",{\"1\":{\"221\":1}}],[\"否则这种方法并不是很实用\",{\"1\":{\"192\":1}}],[\"否则就依次往后找\",{\"1\":{\"149\":1}}],[\"否则\",{\"1\":{\"20\":1,\"24\":1,\"28\":1,\"99\":1,\"220\":1,\"221\":1}}],[\"循环冗余检测\",{\"1\":{\"352\":1}}],[\"循环执行\",{\"1\":{\"204\":1}}],[\"循环队列\",{\"1\":{\"185\":2}}],[\"循环链表的尾结点指向链表的头结点\",{\"1\":{\"170\":1}}],[\"循环链表是一种特殊的单链表\",{\"1\":{\"170\":1}}],[\"循环链表\",{\"0\":{\"170\":1},\"1\":{\"168\":1}}],[\"循环输出一系列的\",{\"1\":{\"49\":1}}],[\"循环或迭代来进行\",{\"1\":{\"27\":1}}],[\"循环\",{\"1\":{\"26\":1}}],[\"循环希望获取下一个数值时\",{\"1\":{\"20\":1}}],[\"循环中使用的对象都是可迭代对象\",{\"1\":{\"19\":1}}],[\"即字符串具有值类型的特征\",{\"1\":{\"374\":1}}],[\"即字节流\",{\"1\":{\"83\":1}}],[\"即如果存在一个环路或者不断的传递\",{\"1\":{\"369\":1}}],[\"即目标是本机的数据包\",{\"1\":{\"367\":1}}],[\"即策略路由\",{\"1\":{\"367\":1}}],[\"即第二层设备\",{\"1\":{\"354\":1}}],[\"即每个序列的表示应该是一样长的\",{\"1\":{\"302\":1}}],[\"即每个新版本都向下兼容\",{\"1\":{\"99\":1}}],[\"即我们在上一节中谈到的\",{\"1\":{\"280\":1}}],[\"即下图中\",{\"1\":{\"280\":1}}],[\"即特征\",{\"1\":{\"273\":1}}],[\"即他们已经以自监督学习\",{\"1\":{\"270\":1}}],[\"即聚类\",{\"1\":{\"261\":1}}],[\"即数据数量\",{\"1\":{\"311\":1}}],[\"即数据分布中存在明显的不对称性\",{\"1\":{\"257\":1}}],[\"即数据存储在外部磁盘中\",{\"1\":{\"212\":1}}],[\"即知道一个量后\",{\"1\":{\"254\":1}}],[\"即不确定性降低\",{\"1\":{\"254\":1}}],[\"即时间复杂度是\",{\"1\":{\"210\":1}}],[\"即使\",{\"1\":{\"376\":1}}],[\"即使负载因子和散列函数设计得再合理\",{\"1\":{\"158\":1}}],[\"即使是类数组对象\",{\"1\":{\"28\":1}}],[\"即便出现散列冲突\",{\"1\":{\"154\":1}}],[\"即便出现冲突\",{\"1\":{\"154\":1}}],[\"即便是\",{\"1\":{\"107\":1}}],[\"即最坏情况下的时间复杂度为\",{\"1\":{\"149\":1}}],[\"即最高位为\",{\"1\":{\"100\":1}}],[\"即交互命令行退出时\",{\"1\":{\"132\":1}}],[\"即权限位\",{\"1\":{\"125\":1}}],[\"即网线插着\",{\"1\":{\"112\":1}}],[\"即latin\",{\"1\":{\"108\":1}}],[\"即十进制的\",{\"1\":{\"108\":2}}],[\"即16位码元\",{\"1\":{\"107\":1}}],[\"即代码点\",{\"1\":{\"105\":1}}],[\"即代码空间\",{\"1\":{\"105\":1}}],[\"即一个汉字占用的存储空间相当于两个英文字符所占用的存储空间\",{\"1\":{\"103\":1}}],[\"即对\",{\"1\":{\"100\":1}}],[\"即汉字内码\",{\"1\":{\"100\":1}}],[\"即扩展剩余的128位\",{\"1\":{\"97\":1}}],[\"即换行\",{\"1\":{\"94\":1}}],[\"即回车\",{\"1\":{\"94\":1}}],[\"即物理字符编码\",{\"1\":{\"88\":1}}],[\"即逻辑字符编码\",{\"1\":{\"87\":1}}],[\"即码点编号\",{\"1\":{\"105\":1,\"108\":1}}],[\"即码点值\",{\"1\":{\"86\":1}}],[\"即码元序列\",{\"1\":{\"83\":1}}],[\"即该字符的编号\",{\"1\":{\"86\":1}}],[\"即用数字给抽象字符表acr中的字符进行编号\",{\"1\":{\"86\":1}}],[\"即确定支持哪些字符\",{\"1\":{\"85\":1}}],[\"即映射为\",{\"1\":{\"83\":1}}],[\"即在正在被翻译的字词之前已经生成的部分\",{\"1\":{\"275\":1}}],[\"即在特定状态下采取特定动作的预期长期累积奖励值\",{\"1\":{\"69\":1}}],[\"即在该状态下\",{\"1\":{\"64\":1}}],[\"即选择特定动作的概率\",{\"1\":{\"59\":1}}],[\"即选择具有最高价值的状态作为下一步的目标\",{\"1\":{\"56\":1}}],[\"即当\",{\"1\":{\"54\":1}}],[\"即它确定了某一时刻下\",{\"1\":{\"54\":1}}],[\"即没有终止状态的情况\",{\"1\":{\"52\":1}}],[\"即\",{\"1\":{\"49\":1,\"69\":1,\"97\":1,\"107\":1,\"108\":1,\"152\":1,\"209\":1,\"225\":1,\"252\":1,\"279\":1,\"312\":1,\"322\":1,\"352\":1,\"375\":2}}],[\"即可生效\",{\"1\":{\"129\":2}}],[\"即可打印字符引用编码\",{\"1\":{\"89\":1}}],[\"即可\",{\"1\":{\"31\":1,\"343\":1}}],[\"即可以使用\",{\"1\":{\"21\":1}}],[\"即被返回的迭代器\",{\"1\":{\"20\":1}}],[\"即创建了一个\",{\"1\":{\"51\":1}}],[\"即创建了\",{\"1\":{\"15\":1}}],[\"一口气看完\",{\"1\":{\"428\":1}}],[\"一片繁忙的景象\",{\"1\":{\"406\":1}}],[\"一起\",{\"1\":{\"370\":1}}],[\"一条路由规则中\",{\"1\":{\"367\":1}}],[\"一张路由表中有多条路由规则\",{\"1\":{\"367\":1}}],[\"一定在一个网段\",{\"1\":{\"364\":1}}],[\"一共12位\",{\"1\":{\"358\":1}}],[\"一直压入栈\",{\"1\":{\"192\":1}}],[\"一经声明就要占用整块连续内存空间\",{\"1\":{\"173\":1}}],[\"一次冒泡\",{\"1\":{\"203\":1}}],[\"一次性\",{\"1\":{\"154\":2}}],[\"一次操作实际处理的比特位数量\",{\"1\":{\"83\":1}}],[\"一块连续的内存空间\",{\"1\":{\"136\":1}}],[\"一下\",{\"1\":{\"129\":1}}],[\"一旦出现拉链过长\",{\"1\":{\"158\":1}}],[\"一旦交互命令行退出\",{\"1\":{\"131\":1}}],[\"一旦退出重新登录进来\",{\"1\":{\"129\":1}}],[\"一旦配置好\",{\"1\":{\"114\":1}}],[\"一旦跨网\",{\"1\":{\"112\":1}}],[\"一一对应于编号空间\",{\"1\":{\"105\":1}}],[\"一些概念\",{\"1\":{\"169\":1}}],[\"一些\",{\"1\":{\"112\":1}}],[\"一些生僻字被编到了\",{\"1\":{\"99\":1}}],[\"一些标记\",{\"1\":{\"75\":1}}],[\"一连串的位\",{\"1\":{\"83\":1}}],[\"一种解决方式是使用基于样本的梯度估计方法\",{\"1\":{\"63\":1}}],[\"一种人工智能\",{\"1\":{\"48\":1}}],[\"一般在输出的时候进行\",{\"1\":{\"381\":1}}],[\"一般被认为是设计失误\",{\"1\":{\"378\":1}}],[\"一般应用的接入层会有负载均衡\",{\"1\":{\"370\":1}}],[\"一般是路由器\",{\"0\":{\"364\":1}}],[\"一般是最先到达的那个\",{\"1\":{\"118\":1}}],[\"一般用\",{\"1\":{\"291\":1}}],[\"一般来讲\",{\"1\":{\"261\":1}}],[\"一般来说\",{\"1\":{\"45\":1,\"83\":1}}],[\"一般都会选择时间复杂度是\",{\"1\":{\"215\":1}}],[\"一般都是网络管理员分配\",{\"1\":{\"113\":1}}],[\"一般都是位于\",{\"1\":{\"106\":1}}],[\"一般都是相同的\",{\"1\":{\"90\":1}}],[\"一般有两种策略\",{\"1\":{\"188\":1}}],[\"一般有两种处理方式\",{\"1\":{\"89\":1}}],[\"一般均摊时间复杂度就等于最好情况时间复杂度\",{\"1\":{\"166\":1}}],[\"一般情况下\",{\"1\":{\"151\":1}}],[\"一般情况下初始化为\",{\"1\":{\"70\":1}}],[\"一般不和它直接打交道\",{\"1\":{\"88\":1}}],[\"一般编号字符集\",{\"1\":{\"86\":1}}],[\"一般翻译为代码空间\",{\"1\":{\"86\":1}}],[\"一般以字节为单位\",{\"1\":{\"83\":1}}],[\"一般认为\",{\"1\":{\"4\":1}}],[\"一样\",{\"1\":{\"42\":1,\"97\":1}}],[\"一个问题是计数到无穷现象\",{\"1\":{\"369\":1}}],[\"一个问题的解可以分解为几个子问题的解\",{\"1\":{\"190\":1}}],[\"一个带宽小些\",{\"1\":{\"367\":1}}],[\"一个带宽大些\",{\"1\":{\"367\":1}}],[\"一个交换机上会连属于多个局域网的机器\",{\"1\":{\"358\":1}}],[\"一个是提供分组依据的类别特征\",{\"1\":{\"260\":1}}],[\"一个是基本类型\",{\"1\":{\"27\":1}}],[\"一个特征只有在它与目标的关系是我们的模型可以学的范围内才有用\",{\"1\":{\"255\":1}}],[\"一个特征的实际有用性取决于我们使用的模型\",{\"1\":{\"255\":1}}],[\"一个栈用来保存运算符\",{\"1\":{\"220\":1}}],[\"一个栈用来保存操作数\",{\"1\":{\"220\":1}}],[\"一个为如上所述的bmp中的\",{\"1\":{\"106\":1}}],[\"一个汉字由两个字节组成\",{\"1\":{\"103\":1}}],[\"一个汉字的编码\",{\"1\":{\"100\":1}}],[\"一个抽象字符可能对应多个码点\",{\"1\":{\"86\":1}}],[\"一个字符占用的码点所在的坐标或非负整数\",{\"1\":{\"86\":1}}],[\"一个包含了\",{\"1\":{\"51\":1}}],[\"一个代理\",{\"1\":{\"48\":1}}],[\"一个文件下面有很多\",{\"1\":{\"36\":1}}],[\"一个有\",{\"1\":{\"20\":1}}],[\"5g\",{\"1\":{\"383\":2}}],[\"5gb\",{\"1\":{\"335\":1}}],[\"53\",{\"1\":{\"375\":1}}],[\"534\",{\"1\":{\"111\":1}}],[\"52\",{\"1\":{\"375\":1}}],[\"5223\",{\"1\":{\"279\":1}}],[\"5e\",{\"1\":{\"322\":1}}],[\"59\",{\"1\":{\"313\":2}}],[\"5980e\",{\"1\":{\"283\":1}}],[\"5801\",{\"1\":{\"310\":1}}],[\"5803\",{\"1\":{\"302\":1,\"303\":1}}],[\"56\",{\"1\":{\"366\":11}}],[\"5694\",{\"1\":{\"302\":2,\"303\":1}}],[\"5607\",{\"1\":{\"283\":2}}],[\"512\",{\"1\":{\"285\":1,\"303\":1,\"304\":2}}],[\"500\",{\"1\":{\"291\":2,\"315\":1,\"383\":2}}],[\"50\",{\"1\":{\"120\":1,\"192\":1,\"260\":1,\"313\":2}}],[\"57344~63743\",{\"1\":{\"106\":1}}],[\"5\",{\"0\":{\"35\":1,\"89\":1,\"103\":1,\"114\":1,\"134\":1,\"182\":1,\"200\":1,\"235\":1,\"262\":1,\"276\":1,\"299\":1,\"305\":1,\"306\":1,\"307\":1,\"340\":1,\"377\":1,\"397\":1},\"1\":{\"20\":3,\"26\":1,\"28\":6,\"193\":1,\"225\":1,\"260\":1,\"283\":1,\"321\":1,\"322\":1,\"325\":2,\"345\":1,\"355\":1,\"360\":1,\"419\":1,\"430\":2}}],[\"转发表\",{\"0\":{\"354\":1}}],[\"转换为\",{\"0\":{\"297\":1}}],[\"转换和优化特征\",{\"1\":{\"250\":1}}],[\"转化为字符串\",{\"1\":{\"299\":1}}],[\"转化为数字表示\",{\"1\":{\"295\":1}}],[\"转化为真正的数组\",{\"1\":{\"19\":1}}],[\"转化成\",{\"1\":{\"288\":1,\"299\":1,\"302\":1}}],[\"转化成有限比特长度的编码值\",{\"1\":{\"87\":1}}],[\"转成\",{\"1\":{\"23\":1}}],[\"转折信号rsi指标也可以提供价格趋势的转折信号\",{\"1\":{\"4\":1}}],[\"和数字\",{\"1\":{\"377\":1}}],[\"和子网掩码判断\",{\"1\":{\"364\":1}}],[\"和目的\",{\"1\":{\"364\":1}}],[\"和目标\",{\"1\":{\"252\":1}}],[\"和机器\",{\"1\":{\"355\":1}}],[\"和多\",{\"1\":{\"316\":1}}],[\"和我们之前使用\",{\"1\":{\"315\":1}}],[\"和预训练模型来进行推理\",{\"1\":{\"309\":1}}],[\"和编码\",{\"1\":{\"298\":1}}],[\"和他们交流创意\",{\"1\":{\"244\":1}}],[\"和组\",{\"1\":{\"124\":1}}],[\"和源\",{\"1\":{\"113\":1,\"364\":3}}],[\"和码点编号为u+0300的组合字符读音符号\",{\"1\":{\"86\":1}}],[\"和下一个状态的估值函数\",{\"1\":{\"68\":1}}],[\"和下跌日的平均跌幅\",{\"1\":{\"4\":1}}],[\"和当前\",{\"1\":{\"46\":1}}],[\"和环境进行交互\",{\"1\":{\"45\":1}}],[\"和\",{\"0\":{\"111\":1,\"327\":1},\"1\":{\"19\":1,\"22\":1,\"23\":1,\"24\":1,\"26\":1,\"28\":3,\"29\":1,\"31\":1,\"44\":3,\"46\":3,\"49\":1,\"51\":1,\"59\":1,\"66\":1,\"69\":3,\"81\":1,\"94\":1,\"95\":1,\"97\":1,\"106\":1,\"107\":1,\"112\":2,\"127\":2,\"139\":1,\"186\":1,\"208\":3,\"225\":6,\"259\":2,\"260\":2,\"274\":1,\"275\":1,\"277\":1,\"291\":2,\"294\":1,\"303\":2,\"304\":1,\"306\":1,\"307\":1,\"308\":1,\"311\":1,\"312\":1,\"315\":1,\"316\":3,\"326\":1,\"331\":2,\"334\":1,\"336\":4,\"337\":4,\"342\":1,\"345\":3,\"355\":1,\"360\":1,\"366\":1,\"370\":2,\"375\":1}}],[\"函数将一次处理多个数据\",{\"1\":{\"347\":1}}],[\"函数了\",{\"1\":{\"316\":1}}],[\"函数加载与\",{\"1\":{\"316\":1}}],[\"函数并传递给了\",{\"1\":{\"316\":1}}],[\"函数并在训练时使用它\",{\"1\":{\"316\":1}}],[\"函数提供计算模型性能的方法\",{\"1\":{\"315\":1}}],[\"函数的处理方式是想数据集中添加新的字段\",{\"1\":{\"312\":1}}],[\"函数的内存或备忘录\",{\"1\":{\"69\":1}}],[\"函数的内部表示\",{\"1\":{\"69\":1}}],[\"函数来实现这一点\",{\"1\":{\"279\":1}}],[\"函数来执行不同的\",{\"1\":{\"276\":1}}],[\"函数实际上经过了以下几个步骤\",{\"1\":{\"278\":1}}],[\"函数完成的任务\",{\"1\":{\"277\":1}}],[\"函数调用栈\",{\"0\":{\"219\":1}}],[\"函数调用会使用栈来保存临时变量\",{\"1\":{\"192\":1}}],[\"函数计算得到的\",{\"1\":{\"146\":1}}],[\"函数设计的基本要求\",{\"1\":{\"146\":1}}],[\"函数通常被编码为一个\",{\"1\":{\"69\":1}}],[\"函数返回的\",{\"1\":{\"316\":1}}],[\"函数返回\",{\"1\":{\"19\":1}}],[\"函数\",{\"1\":{\"19\":1,\"31\":1,\"146\":1,\"151\":1,\"208\":1,\"209\":1,\"267\":1,\"316\":1}}],[\"返回一个网页\",{\"1\":{\"352\":1}}],[\"返回一迭代器\",{\"1\":{\"19\":1}}],[\"返回之后\",{\"1\":{\"219\":1}}],[\"返回\",{\"1\":{\"28\":1,\"180\":1}}],[\"返回排序后的数组\",{\"1\":{\"28\":1}}],[\"返回满足条件的元素组成的数组\",{\"1\":{\"28\":1}}],[\"返回满足条件的第一个元素\",{\"1\":{\"28\":1}}],[\"返回被删除的元素所组成的数组\",{\"1\":{\"28\":1}}],[\"返回迭代器\",{\"1\":{\"20\":1}}],[\"返回的是\",{\"1\":{\"11\":1,\"18\":1,\"159\":1}}],[\"该消息会到达机器\",{\"1\":{\"355\":1}}],[\"该设备每个口可以解析\",{\"1\":{\"354\":1}}],[\"该脚本可以在任何分布式设备上运行\",{\"1\":{\"325\":1}}],[\"该\",{\"1\":{\"310\":1,\"312\":1}}],[\"该过程通过\",{\"1\":{\"297\":1}}],[\"该句子中的全部字词\",{\"1\":{\"275\":1}}],[\"该文件夹中包含\",{\"1\":{\"336\":1}}],[\"该文件中也有一些\",{\"1\":{\"287\":1}}],[\"该文件仅执行一次\",{\"1\":{\"129\":1}}],[\"该文件被读取\",{\"1\":{\"129\":2}}],[\"该文件被执行\",{\"1\":{\"129\":1}}],[\"该文件所属用户可以使用\",{\"1\":{\"125\":1}}],[\"该网卡有广播地址\",{\"1\":{\"112\":1}}],[\"该值在\",{\"1\":{\"49\":1}}],[\"该属性值是个函数\",{\"1\":{\"19\":1}}],[\"该指标通过将每个交易日的成交量与价格的变化结合起来\",{\"1\":{\"6\":1}}],[\"它适用于小型网络\",{\"1\":{\"369\":1}}],[\"它上面配置了\",{\"1\":{\"366\":1}}],[\"它要解决\",{\"1\":{\"360\":1}}],[\"它使用\",{\"1\":{\"335\":1}}],[\"它包含\",{\"1\":{\"315\":1}}],[\"它接收一个\",{\"1\":{\"313\":1}}],[\"它把你的数据集转化为\",{\"1\":{\"313\":1}}],[\"它不需要大量的计算和存储资源\",{\"1\":{\"369\":1}}],[\"它不会将整个\",{\"1\":{\"312\":1}}],[\"它不表示指数衰减在\",{\"1\":{\"3\":1}}],[\"它有\",{\"1\":{\"311\":1}}],[\"它有以下三个维度\",{\"1\":{\"281\":1}}],[\"它和\",{\"1\":{\"303\":1,\"321\":1,\"345\":1}}],[\"它和相关性\",{\"1\":{\"253\":1}}],[\"它必须是矩阵\",{\"1\":{\"302\":1}}],[\"它根据\",{\"1\":{\"284\":1}}],[\"它也不知道网络的拓扑信息\",{\"1\":{\"355\":1}}],[\"它也有\",{\"1\":{\"280\":1}}],[\"它也能够让\",{\"1\":{\"45\":1}}],[\"它会把\",{\"1\":{\"364\":1}}],[\"它会发送一个\",{\"1\":{\"362\":1}}],[\"它会记住\",{\"1\":{\"354\":1}}],[\"它会生成\",{\"1\":{\"331\":1}}],[\"它会下载对应模型的\",{\"1\":{\"279\":1}}],[\"它会调用这个方法\",{\"1\":{\"20\":1}}],[\"它聚合了预训练模型和对应的文本预处理\",{\"1\":{\"267\":1}}],[\"它通过在特征空间内放置一些点\",{\"1\":{\"261\":1}}],[\"它只能学线性关系\",{\"1\":{\"252\":1}}],[\"它涉及到选择\",{\"1\":{\"250\":1}}],[\"它表示的是小于\",{\"1\":{\"209\":1}}],[\"它表示数字区间\",{\"1\":{\"20\":1}}],[\"它更加灵活\",{\"1\":{\"154\":1}}],[\"它探测的下标序列就是\",{\"1\":{\"150\":1}}],[\"它利用数组支持按照下标随机访问数据的特性\",{\"1\":{\"146\":1}}],[\"它设置一些环境变量\",{\"1\":{\"129\":1}}],[\"它将输入的文本转化为数字\",{\"1\":{\"288\":1}}],[\"它将接受哪一台服务器提供的\",{\"1\":{\"118\":1}}],[\"它将被分发给该网段上的所有计算机\",{\"1\":{\"111\":1}}],[\"它就嘎了\",{\"1\":{\"362\":1}}],[\"它就没那么有针对性了\",{\"1\":{\"270\":1}}],[\"它就相当于这些\",{\"1\":{\"117\":1}}],[\"它就调用这个对象的\",{\"1\":{\"20\":1}}],[\"它都需要按照为这个接口配置的\",{\"1\":{\"112\":1}}],[\"它容纳的字符太少\",{\"1\":{\"96\":1}}],[\"它的目标是找到最有意义的表示\",{\"1\":{\"289\":1}}],[\"它的主要特点是在\",{\"1\":{\"102\":1}}],[\"它的\",{\"1\":{\"87\":1}}],[\"它赋予precision\",{\"1\":{\"81\":1}}],[\"它充当了\",{\"1\":{\"69\":1}}],[\"它基于节点之间的链路状态信息来计算最短路径\",{\"1\":{\"369\":1}}],[\"它基于\",{\"1\":{\"69\":1}}],[\"它无法计算完整回合的期望回报\",{\"1\":{\"68\":1}}],[\"它可以和\",{\"1\":{\"370\":1}}],[\"它可以转发属于任何\",{\"1\":{\"358\":1}}],[\"它可以减少\",{\"1\":{\"291\":1}}],[\"它可以帮助我们理解一个特征的潜在预测能力\",{\"1\":{\"255\":1}}],[\"它可以获得的期望折扣回报\",{\"1\":{\"56\":1}}],[\"它可能会错过更好的策略\",{\"1\":{\"53\":1}}],[\"它可能会错失机会\",{\"1\":{\"53\":1}}],[\"它可能会忘记第一关怎么玩了\",{\"1\":{\"45\":1}}],[\"它是距离矢量路由协议的升级版\",{\"1\":{\"370\":1}}],[\"它是大规模意大利语问答数据集\",{\"1\":{\"342\":1}}],[\"它是构建\",{\"1\":{\"313\":1}}],[\"它是怎么处理数字输入并输出预测的\",{\"1\":{\"277\":1}}],[\"它是一个函数\",{\"1\":{\"54\":1}}],[\"它是\",{\"1\":{\"49\":1,\"133\":1,\"265\":1,\"310\":1}}],[\"它是通过\",{\"1\":{\"19\":1}}],[\"它还能利用这些帧之间的一些\",{\"1\":{\"43\":1}}],[\"它能够感知道路和周围的车辆\",{\"1\":{\"39\":1}}],[\"它们必须要使用\",{\"1\":{\"366\":1}}],[\"它们一般都是领域知识\",{\"1\":{\"257\":1}}],[\"它们的目标是不断改进簇的质量\",{\"1\":{\"261\":1}}],[\"它们的区别在于\",{\"1\":{\"210\":1}}],[\"它们的时间复杂度都是\",{\"1\":{\"206\":1}}],[\"它们的工作原理基于不同的机器学习技术\",{\"1\":{\"38\":1}}],[\"它们都表示\",{\"1\":{\"107\":1}}],[\"它们都是用经验\",{\"1\":{\"66\":1}}],[\"它们可能在每次训练迭代中都在变化\",{\"1\":{\"46\":1}}],[\"它们能够感知和理解更广泛的环境信息\",{\"1\":{\"39\":1}}],[\"它们也会将没有用到过的引用移除掉\",{\"1\":{\"32\":1}}],[\"它们会将\",{\"1\":{\"32\":1}}],[\"它们是不同的字符串\",{\"1\":{\"27\":1}}],[\"它们才相等\",{\"1\":{\"27\":1}}],[\"它们内置的可迭代对象\",{\"1\":{\"19\":1}}],[\"它返回的对象有\",{\"1\":{\"316\":1}}],[\"它返回\",{\"1\":{\"24\":1}}],[\"它既是\",{\"1\":{\"22\":1}}],[\"注视\",{\"1\":{\"426\":1}}],[\"注\",{\"1\":{\"28\":1,\"31\":1,\"94\":1,\"106\":1,\"261\":1,\"310\":1}}],[\"注意力层使得模型对不同位置的字词有着不同的关注程度\",{\"1\":{\"274\":1}}],[\"注意力层\",{\"0\":{\"274\":1}}],[\"注意将元素插到相同元素的后面\",{\"1\":{\"204\":1}}],[\"注意不是空格\",{\"1\":{\"94\":1}}],[\"注意这里用的不是\",{\"1\":{\"70\":1}}],[\"注意\",{\"1\":{\"18\":1,\"193\":1,\"268\":1,\"275\":1,\"280\":1,\"295\":1,\"298\":1,\"315\":1}}],[\"注册表\",{\"1\":{\"14\":1}}],[\"来的包都查看新路由表\",{\"1\":{\"367\":1}}],[\"来追踪去往目的地时沿途经过的路由器\",{\"1\":{\"362\":1}}],[\"来判断谁的优先级更高\",{\"1\":{\"357\":1}}],[\"来判断市场趋势的可靠性和价格的持续性\",{\"1\":{\"6\":1}}],[\"来解码\",{\"1\":{\"346\":1}}],[\"来解决\",{\"1\":{\"66\":1}}],[\"来随机抽取样本\",{\"1\":{\"345\":1}}],[\"来完成的\",{\"1\":{\"338\":1}}],[\"来添加小文件\",{\"1\":{\"337\":1}}],[\"来上传文件\",{\"1\":{\"337\":1}}],[\"来设置不同的名称\",{\"1\":{\"331\":1}}],[\"来代替\",{\"1\":{\"325\":1}}],[\"来达到同样的目的\",{\"1\":{\"317\":1}}],[\"来启动\",{\"1\":{\"316\":1}}],[\"来查看\",{\"1\":{\"311\":1}}],[\"来进行推理\",{\"1\":{\"308\":1}}],[\"来进行\",{\"1\":{\"307\":1}}],[\"来进行过滤\",{\"1\":{\"128\":1}}],[\"来\",{\"1\":{\"305\":1}}],[\"来填充\",{\"1\":{\"302\":1}}],[\"来覆盖某门语言\",{\"1\":{\"291\":1}}],[\"来表示不在词表中的字词\",{\"1\":{\"291\":1}}],[\"来表示每个字词\",{\"1\":{\"291\":1}}],[\"来表示空位的多少\",{\"1\":{\"151\":1}}],[\"来确定模型结构\",{\"1\":{\"284\":1}}],[\"来确定最优\",{\"1\":{\"47\":1}}],[\"来实例化\",{\"1\":{\"295\":1}}],[\"来实例化任何模型\",{\"1\":{\"284\":1}}],[\"来实现\",{\"1\":{\"302\":1}}],[\"来实现在上一节中\",{\"1\":{\"277\":1}}],[\"来实现公平锁\",{\"1\":{\"185\":1}}],[\"来实现目标\",{\"1\":{\"41\":1}}],[\"来获取\",{\"1\":{\"373\":1}}],[\"来获取状态\",{\"1\":{\"41\":1}}],[\"来获得正确的翻译\",{\"1\":{\"274\":1}}],[\"来创建聚类\",{\"1\":{\"261\":1}}],[\"来创建一个唯一的值集合\",{\"1\":{\"260\":1}}],[\"来对\",{\"1\":{\"259\":1}}],[\"来标记\",{\"1\":{\"258\":1}}],[\"来描述发动机性能和效率\",{\"1\":{\"257\":1}}],[\"来描述关联性\",{\"1\":{\"254\":1}}],[\"来构建一个排名\",{\"1\":{\"253\":1}}],[\"来决定将这个结点插入到哪几级索引中\",{\"1\":{\"200\":1}}],[\"来决定采取哪种行动\",{\"1\":{\"42\":1}}],[\"来保存已经求解过的\",{\"1\":{\"193\":1}}],[\"来提高数据的处理效率\",{\"1\":{\"186\":1}}],[\"来做\",{\"1\":{\"125\":1}}],[\"来做处理\",{\"1\":{\"23\":1}}],[\"来这个\",{\"1\":{\"114\":1}}],[\"来说的一个\",{\"1\":{\"292\":1}}],[\"来说\",{\"1\":{\"113\":1,\"292\":1,\"302\":1}}],[\"来统一表示所有的字符\",{\"1\":{\"107\":1}}],[\"来指代\",{\"1\":{\"86\":1}}],[\"来强调\",{\"1\":{\"83\":1}}],[\"来自于\",{\"1\":{\"69\":1}}],[\"来形成\",{\"1\":{\"68\":1}}],[\"来直接优化参数\",{\"1\":{\"57\":1}}],[\"来间接优化参数\",{\"1\":{\"57\":1}}],[\"来探索环境\",{\"1\":{\"53\":1}}],[\"来学习\",{\"1\":{\"48\":1}}],[\"来更新\",{\"1\":{\"44\":1,\"68\":1,\"69\":1}}],[\"来停止\",{\"1\":{\"20\":1}}],[\"来遍历它\",{\"1\":{\"19\":1}}],[\"来调用\",{\"1\":{\"17\":1}}],[\"内部网络也需要访问其他的自治系统\",{\"1\":{\"370\":1}}],[\"内部网关协议的重点就是找到最短的路径\",{\"1\":{\"370\":1}}],[\"内部实现了\",{\"1\":{\"19\":1}}],[\"内连接\",{\"1\":{\"260\":1}}],[\"内置的\",{\"1\":{\"258\":1,\"376\":1}}],[\"内置了很多系统\",{\"1\":{\"17\":1}}],[\"内存有限\",{\"1\":{\"212\":1}}],[\"内存不足\",{\"1\":{\"173\":1}}],[\"内查看\",{\"1\":{\"125\":1}}],[\"内核\",{\"1\":{\"122\":1}}],[\"内容来自\",{\"1\":{\"3\":1}}],[\"则可能回复的是超时\",{\"1\":{\"362\":1}}],[\"则可能出现不够用的情况\",{\"1\":{\"173\":1}}],[\"则主机将产生一个协议不可达报文\",{\"1\":{\"360\":1}}],[\"则这个\",{\"1\":{\"313\":1}}],[\"则会使用默认\",{\"1\":{\"267\":1}}],[\"则会严重影响\",{\"1\":{\"158\":1}}],[\"则所有数据的时间复杂度就是\",{\"1\":{\"212\":1}}],[\"则在跳表中查询一个数据的时间复杂度就是\",{\"1\":{\"197\":1}}],[\"则索引有\",{\"1\":{\"197\":1}}],[\"则链表尾结点删除\",{\"1\":{\"175\":1}}],[\"则将此结点直接插入到链表的头部\",{\"1\":{\"175\":1}}],[\"则扩容之后的装载因子就下降为原来的一半\",{\"1\":{\"154\":1}}],[\"则说明该元素就是要找的元素\",{\"1\":{\"149\":1}}],[\"则时间复杂度就会降到\",{\"1\":{\"136\":1}}],[\"则相对整齐和直观\",{\"1\":{\"112\":1}}],[\"则通过\",{\"1\":{\"112\":1}}],[\"则返回空数组\",{\"1\":{\"28\":1}}],[\"则返回\",{\"1\":{\"28\":2}}],[\"则创建它\",{\"1\":{\"15\":1}}],[\"则当日的成交量被视为无效\",{\"1\":{\"6\":1}}],[\"则当日的成交量被视为卖出量\",{\"1\":{\"6\":1}}],[\"则当日的成交量被视为买入量\",{\"1\":{\"6\":1}}],[\"从头读到尾\",{\"1\":{\"435\":1}}],[\"从本地路由表中查找\",{\"1\":{\"367\":1}}],[\"从随机打乱的数据集中选取前\",{\"1\":{\"345\":1}}],[\"从文本中提取答案\",{\"1\":{\"264\":1}}],[\"从文本数据中提取词袋模型或\",{\"1\":{\"250\":1}}],[\"从左到右扫描字符串\",{\"1\":{\"221\":1}}],[\"从左向右遍历表达式\",{\"1\":{\"220\":1}}],[\"从操作数栈栈顶取出\",{\"1\":{\"220\":1}}],[\"从运算符栈中取出运算符\",{\"1\":{\"220\":1}}],[\"从区间的首\",{\"1\":{\"216\":1}}],[\"从后向前遍历\",{\"1\":{\"213\":1}}],[\"从队头取数据会被阻塞\",{\"1\":{\"186\":1}}],[\"从任意结点出发都可以访问到表中的所有节点\",{\"1\":{\"170\":1}}],[\"从已知一结点出发\",{\"1\":{\"170\":1}}],[\"从链尾到链头比较方便\",{\"1\":{\"170\":1}}],[\"从而导致不稳定的路由\",{\"1\":{\"369\":1}}],[\"从而导致不同的用户由于安装了不同的字体文件\",{\"1\":{\"106\":1}}],[\"从而成为一个服务\",{\"1\":{\"133\":1}}],[\"从而实现了与\",{\"1\":{\"107\":1}}],[\"从而确定市场的趋势和强度\",{\"1\":{\"4\":1}}],[\"从该状态开始\",{\"1\":{\"64\":1}}],[\"从环境中获取的信息\",{\"1\":{\"49\":1}}],[\"从中学习\",{\"1\":{\"45\":1}}],[\"从这批\",{\"1\":{\"44\":1}}],[\"从多个感官源获得数据\",{\"1\":{\"39\":1}}],[\"从多维数组创建一个新的扁平数组\",{\"1\":{\"28\":1}}],[\"从索引\",{\"1\":{\"28\":1}}],[\"从右到左\",{\"1\":{\"28\":1}}],[\"从\",{\"0\":{\"311\":1},\"1\":{\"28\":1,\"46\":1,\"260\":1,\"291\":1,\"340\":1,\"365\":2,\"367\":3}}],[\"从全局注册表中读取\",{\"1\":{\"15\":1}}],[\"就用的距离矢量路由算法\",{\"1\":{\"369\":1}}],[\"就走\",{\"1\":{\"367\":3}}],[\"就按照找规则中设置的端口转发过去\",{\"1\":{\"365\":1}}],[\"就一条条地匹配规则\",{\"1\":{\"365\":1}}],[\"就没网关啥事儿了\",{\"1\":{\"364\":1}}],[\"就看不到这些中间路由\",{\"1\":{\"362\":1}}],[\"就拿到了所有的路由\",{\"1\":{\"362\":1}}],[\"就生成了树\",{\"1\":{\"356\":1}}],[\"就能处理比较长的序列\",{\"1\":{\"304\":1}}],[\"就入栈\",{\"1\":{\"220\":1}}],[\"就有可能出现某\",{\"1\":{\"200\":1}}],[\"就有可能会导致频繁的\",{\"1\":{\"173\":1}}],[\"就不适合用计数排序了\",{\"1\":{\"213\":1}}],[\"就不再向下递归了\",{\"1\":{\"192\":1}}],[\"就不管用了\",{\"1\":{\"129\":1}}],[\"就相对更加合理\",{\"1\":{\"188\":1}}],[\"就相应的可能指码元序列\",{\"1\":{\"88\":1}}],[\"就判定该元素不在散列表里\",{\"1\":{\"149\":1}}],[\"就说明要查找的元素没有在散列表中\",{\"1\":{\"149\":1}}],[\"就说明行情在短期内进入了超涨或者超跌状态\",{\"1\":{\"3\":1}}],[\"就重新探测一个空闲位置将元素插入\",{\"1\":{\"148\":1}}],[\"就可以通过\",{\"1\":{\"329\":1}}],[\"就可以\",{\"1\":{\"295\":1}}],[\"就可以用这种方法\",{\"1\":{\"192\":1}}],[\"就可以得到需要遍历元素个数的平均值\",{\"1\":{\"165\":1}}],[\"就可以以服务的方式运行\",{\"1\":{\"133\":1}}],[\"就可以了\",{\"1\":{\"131\":1,\"261\":1}}],[\"就可以连接到服务器做一些操作了\",{\"1\":{\"121\":1}}],[\"就要分片传输\",{\"1\":{\"112\":1}}],[\"就表示这是一个汉字的开始\",{\"1\":{\"101\":1}}],[\"就属于跟特定计算机系统平台有关的物理意义上的编码过程\",{\"1\":{\"88\":1}}],[\"就认为每个\",{\"1\":{\"61\":1}}],[\"就会发到默认网关\",{\"1\":{\"364\":1}}],[\"就会将临时变量作为一个栈帧入栈\",{\"1\":{\"219\":1}}],[\"就会影响代码的可读性\",{\"1\":{\"192\":1}}],[\"就会有堆栈溢出的风险\",{\"1\":{\"192\":1}}],[\"就会扩容\",{\"1\":{\"157\":1}}],[\"就会很低效\",{\"1\":{\"41\":1}}],[\"就会返回该\",{\"1\":{\"15\":1}}],[\"就是通过运行\",{\"1\":{\"370\":1}}],[\"就是监听的\",{\"1\":{\"352\":1}}],[\"就是一个非常小的常量\",{\"1\":{\"212\":1}}],[\"就是第\",{\"1\":{\"210\":1}}],[\"就是在遍历数组\",{\"1\":{\"209\":1}}],[\"就是在该状态下采取该行动获得的\",{\"1\":{\"46\":1}}],[\"就是下面这样\",{\"1\":{\"159\":1}}],[\"就是将\",{\"1\":{\"87\":1}}],[\"就是\",{\"1\":{\"24\":1,\"154\":1,\"361\":1}}],[\"cycling\",{\"1\":{\"397\":1}}],[\"cymbalta\",{\"1\":{\"345\":2}}],[\"csv\",{\"1\":{\"341\":4,\"345\":5}}],[\"cb23931\",{\"1\":{\"337\":1}}],[\"ctrl\",{\"1\":{\"273\":1}}],[\"c3\",{\"1\":{\"260\":1}}],[\"c2\",{\"1\":{\"260\":1}}],[\"c1\",{\"1\":{\"260\":1}}],[\"city\",{\"1\":{\"246\":2,\"248\":2,\"424\":1,\"428\":3}}],[\"cidr\",{\"0\":{\"111\":1},\"1\":{\"111\":1,\"113\":1,\"364\":1}}],[\"cd\",{\"1\":{\"125\":1,\"337\":1}}],[\"cfg\",{\"1\":{\"122\":1}}],[\"c7\",{\"1\":{\"112\":1}}],[\"c类地址\",{\"1\":{\"111\":1}}],[\"cjk\",{\"1\":{\"102\":2}}],[\"cp54936\",{\"1\":{\"102\":1}}],[\"cp936\",{\"1\":{\"101\":1}}],[\"cpu\",{\"1\":{\"83\":2,\"154\":2,\"173\":2,\"323\":1,\"325\":1}}],[\"crime\",{\"1\":{\"401\":1,\"403\":3,\"435\":1}}],[\"crafts\",{\"1\":{\"435\":1}}],[\"cramped\",{\"1\":{\"434\":3,\"435\":1}}],[\"cracked\",{\"1\":{\"400\":1}}],[\"cranny\",{\"1\":{\"248\":3}}],[\"crucial\",{\"1\":{\"383\":1,\"386\":1}}],[\"crux82\",{\"1\":{\"342\":2,\"343\":1}}],[\"crc\",{\"1\":{\"352\":2}}],[\"cream\",{\"1\":{\"345\":1}}],[\"creatures\",{\"1\":{\"390\":1,\"391\":1,\"434\":1,\"435\":2}}],[\"creation\",{\"1\":{\"332\":1}}],[\"creating\",{\"0\":{\"256\":1}}],[\"create\",{\"1\":{\"259\":1,\"260\":2,\"332\":4}}],[\"cr回车\",{\"1\":{\"94\":1}}],[\"cross\",{\"1\":{\"74\":1}}],[\"certainly\",{\"1\":{\"389\":1}}],[\"celebrate\",{\"1\":{\"435\":1}}],[\"celestial\",{\"1\":{\"428\":1}}],[\"celexa\",{\"1\":{\"345\":3}}],[\"celiacs\",{\"1\":{\"345\":1}}],[\"cell\",{\"1\":{\"325\":1}}],[\"centroids\",{\"1\":{\"261\":2}}],[\"center\",{\"1\":{\"246\":1}}],[\"centos\",{\"1\":{\"127\":1,\"128\":3,\"133\":1}}],[\"ces\",{\"0\":{\"88\":1},\"1\":{\"88\":3,\"89\":1,\"90\":1}}],[\"cef\",{\"0\":{\"87\":1},\"1\":{\"87\":4,\"88\":3,\"90\":1}}],[\"ccs\",{\"0\":{\"86\":1},\"1\":{\"86\":3,\"87\":3}}],[\"chinese\",{\"1\":{\"435\":1}}],[\"childhood\",{\"1\":{\"428\":2}}],[\"children\",{\"1\":{\"428\":1,\"435\":2}}],[\"child\",{\"0\":{\"417\":1,\"419\":1},\"1\":{\"415\":1,\"420\":1}}],[\"chilled\",{\"1\":{\"244\":2}}],[\"chewing\",{\"1\":{\"434\":1}}],[\"chester\",{\"1\":{\"434\":1}}],[\"cheerful\",{\"1\":{\"407\":1}}],[\"checked\",{\"1\":{\"345\":1}}],[\"checkpoint\",{\"1\":{\"279\":2,\"280\":2,\"282\":2,\"284\":2,\"287\":2,\"301\":6,\"302\":1,\"307\":3,\"312\":2,\"314\":2,\"315\":1,\"316\":1,\"317\":2,\"320\":1,\"325\":2,\"331\":3,\"337\":3}}],[\"checkpoints\",{\"0\":{\"265\":1},\"1\":{\"265\":4,\"279\":2,\"280\":1,\"312\":2,\"315\":1,\"328\":1}}],[\"chunk\",{\"1\":{\"406\":2}}],[\"chunks\",{\"1\":{\"406\":5}}],[\"chgrp\",{\"1\":{\"125\":2}}],[\"chocolates\",{\"1\":{\"435\":1}}],[\"choice\",{\"1\":{\"402\":1}}],[\"choices\",{\"1\":{\"400\":1}}],[\"chosen\",{\"1\":{\"242\":1}}],[\"chose\",{\"1\":{\"242\":3}}],[\"chown\",{\"1\":{\"125\":2}}],[\"choose\",{\"1\":{\"70\":1,\"408\":1,\"434\":1}}],[\"chmod\",{\"1\":{\"125\":2}}],[\"challenging\",{\"1\":{\"394\":1}}],[\"chao\",{\"1\":{\"367\":8}}],[\"chapter\",{\"1\":{\"294\":1,\"315\":1,\"403\":1,\"406\":1,\"411\":1,\"419\":1,\"428\":1,\"434\":1}}],[\"chairs\",{\"1\":{\"244\":1,\"246\":1}}],[\"chaining\",{\"0\":{\"152\":1}}],[\"chances\",{\"1\":{\"435\":1}}],[\"chance\",{\"1\":{\"244\":1,\"424\":1,\"428\":1,\"435\":1}}],[\"changeable\",{\"1\":{\"429\":1}}],[\"changes\",{\"1\":{\"337\":1}}],[\"changed\",{\"1\":{\"239\":1,\"435\":1}}],[\"change\",{\"1\":{\"125\":1,\"244\":1,\"248\":1,\"332\":1,\"406\":1}}],[\"charm\",{\"1\":{\"407\":1}}],[\"charcodeat\",{\"1\":{\"374\":1}}],[\"charat\",{\"1\":{\"374\":1}}],[\"characters\",{\"1\":{\"292\":1,\"435\":1}}],[\"character\",{\"0\":{\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"292\":1,\"439\":1},\"1\":{\"83\":3,\"103\":1,\"291\":1,\"292\":4,\"435\":1}}],[\"charset\",{\"1\":{\"83\":1}}],[\"char\",{\"1\":{\"21\":4,\"159\":1,\"180\":5}}],[\"cultural\",{\"1\":{\"435\":1}}],[\"culture\",{\"1\":{\"407\":1,\"411\":1,\"417\":1}}],[\"cultures\",{\"1\":{\"403\":1}}],[\"cubs\",{\"1\":{\"435\":1}}],[\"cute\",{\"1\":{\"435\":1}}],[\"cuda\",{\"1\":{\"323\":2,\"325\":2}}],[\"customer\",{\"1\":{\"259\":2,\"260\":8}}],[\"curl\",{\"1\":{\"435\":1}}],[\"curb\",{\"1\":{\"255\":1,\"435\":1}}],[\"current++\",{\"1\":{\"20\":2}}],[\"current\",{\"1\":{\"20\":4}}],[\"cup\",{\"1\":{\"237\":2,\"404\":1}}],[\"cumulative\",{\"1\":{\"53\":1,\"57\":1,\"62\":2,\"69\":1}}],[\"c\",{\"1\":{\"46\":1,\"208\":3,\"213\":10,\"215\":1,\"222\":2,\"224\":1,\"260\":1}}],[\"cause\",{\"1\":{\"435\":1}}],[\"cage\",{\"1\":{\"435\":1}}],[\"caged\",{\"1\":{\"435\":1}}],[\"cages\",{\"1\":{\"434\":2,\"435\":2}}],[\"came\",{\"1\":{\"406\":1,\"411\":1}}],[\"camembert\",{\"1\":{\"328\":1,\"331\":1,\"337\":1,\"339\":1}}],[\"calculation\",{\"1\":{\"316\":1}}],[\"called\",{\"1\":{\"311\":1,\"346\":2,\"392\":1,\"435\":1}}],[\"calligraphy\",{\"1\":{\"242\":1,\"412\":1}}],[\"call\",{\"1\":{\"227\":2}}],[\"cache\",{\"1\":{\"285\":1,\"286\":1,\"311\":1,\"367\":1}}],[\"cared\",{\"1\":{\"435\":1}}],[\"care\",{\"1\":{\"435\":1}}],[\"career\",{\"1\":{\"242\":1}}],[\"carnivores\",{\"1\":{\"435\":1}}],[\"carnations\",{\"1\":{\"407\":1,\"408\":1,\"411\":1}}],[\"caracal\",{\"1\":{\"419\":2}}],[\"car\",{\"1\":{\"411\":1}}],[\"cards\",{\"1\":{\"338\":1,\"435\":1}}],[\"card\",{\"0\":{\"338\":1,\"339\":1},\"1\":{\"276\":1,\"286\":1,\"328\":1,\"331\":1,\"338\":3,\"339\":3}}],[\"carpenter\",{\"1\":{\"268\":1}}],[\"carlo\",{\"0\":{\"67\":1},\"1\":{\"57\":1,\"66\":1}}],[\"casual\",{\"1\":{\"428\":1}}],[\"cas\",{\"1\":{\"187\":1}}],[\"caseine\",{\"1\":{\"345\":3}}],[\"cased\",{\"1\":{\"265\":2,\"286\":2,\"294\":2,\"296\":1}}],[\"cases\",{\"1\":{\"227\":1}}],[\"case\",{\"0\":{\"164\":2,\"165\":1}}],[\"captivity\",{\"1\":{\"435\":2}}],[\"captivating\",{\"1\":{\"427\":2,\"435\":1}}],[\"captivated\",{\"1\":{\"415\":1,\"426\":1}}],[\"capricorn\",{\"1\":{\"423\":1}}],[\"capicity表示散列表的大小\",{\"1\":{\"159\":1}}],[\"capicity\",{\"1\":{\"159\":1}}],[\"capacity\",{\"1\":{\"45\":1,\"157\":1}}],[\"catch\",{\"1\":{\"394\":1,\"397\":1,\"402\":1,\"406\":1,\"424\":3}}],[\"catplot\",{\"1\":{\"255\":1,\"261\":1}}],[\"category\",{\"1\":{\"255\":1,\"261\":1}}],[\"categorical\",{\"1\":{\"74\":1,\"260\":1}}],[\"cat\",{\"1\":{\"124\":1,\"419\":2}}],[\"cannot\",{\"1\":{\"345\":1,\"385\":1,\"428\":1}}],[\"cancer\",{\"1\":{\"345\":1}}],[\"canteen\",{\"1\":{\"244\":2}}],[\"can\",{\"0\":{\"406\":1},\"1\":{\"59\":1,\"242\":1,\"248\":2,\"386\":1,\"387\":1,\"389\":2,\"391\":1,\"393\":3,\"394\":3,\"403\":1,\"404\":2,\"405\":1,\"406\":1,\"408\":1,\"411\":1,\"412\":1,\"413\":1,\"414\":1,\"415\":1,\"419\":1,\"421\":5,\"423\":1,\"426\":2,\"430\":1,\"431\":2,\"435\":10}}],[\"canjoin\",{\"1\":{\"28\":6}}],[\"clear\",{\"1\":{\"398\":1,\"424\":1}}],[\"cleaning\",{\"1\":{\"258\":1,\"397\":1}}],[\"clean\",{\"1\":{\"244\":1,\"407\":1}}],[\"clothing\",{\"1\":{\"435\":1}}],[\"cloths\",{\"1\":{\"435\":1}}],[\"cloudy\",{\"1\":{\"424\":1}}],[\"close\",{\"1\":{\"390\":1,\"419\":1,\"434\":6}}],[\"clone\",{\"1\":{\"13\":2,\"336\":3,\"337\":2}}],[\"cls\",{\"1\":{\"306\":2,\"312\":3}}],[\"cluster\",{\"1\":{\"261\":7}}],[\"clusters=6\",{\"1\":{\"261\":1}}],[\"clusters\",{\"1\":{\"261\":5}}],[\"clustering\",{\"1\":{\"74\":2}}],[\"claimamount\",{\"1\":{\"260\":1}}],[\"claim\",{\"1\":{\"260\":1}}],[\"classic\",{\"1\":{\"435\":1}}],[\"classifier\",{\"1\":{\"74\":1,\"267\":3,\"279\":2,\"285\":1}}],[\"classification\",{\"1\":{\"74\":2,\"282\":1,\"315\":1}}],[\"classlabel\",{\"1\":{\"311\":1}}],[\"class\",{\"1\":{\"31\":2,\"35\":3,\"36\":1,\"74\":1,\"111\":1,\"280\":1}}],[\"cli\",{\"1\":{\"332\":2}}],[\"clinical\",{\"1\":{\"246\":1}}],[\"client\",{\"1\":{\"121\":1}}],[\"climbing\",{\"1\":{\"57\":1}}],[\"cover\",{\"1\":{\"435\":2}}],[\"coverage\",{\"1\":{\"260\":5}}],[\"cows\",{\"1\":{\"435\":1}}],[\"coffee\",{\"1\":{\"406\":3,\"434\":1}}],[\"cooped\",{\"1\":{\"435\":1}}],[\"cooking\",{\"1\":{\"405\":1,\"428\":1}}],[\"cool\",{\"1\":{\"288\":1}}],[\"coding\",{\"1\":{\"393\":1,\"396\":1}}],[\"coded\",{\"0\":{\"86\":1},\"1\":{\"93\":1}}],[\"code\",{\"0\":{\"442\":1},\"1\":{\"10\":1,\"13\":1,\"85\":1,\"86\":3,\"87\":2,\"90\":1,\"93\":1,\"94\":1,\"105\":2,\"159\":1,\"225\":1}}],[\"codes\",{\"1\":{\"10\":2}}],[\"costumes\",{\"1\":{\"416\":1}}],[\"costed\",{\"1\":{\"345\":1}}],[\"cost\",{\"1\":{\"345\":2,\"356\":1,\"434\":2,\"435\":1}}],[\"co\",{\"1\":{\"337\":2}}],[\"cox\",{\"1\":{\"258\":1}}],[\"copyright\",{\"1\":{\"435\":1}}],[\"copy\",{\"1\":{\"255\":1,\"435\":1}}],[\"copywithin\",{\"1\":{\"28\":1}}],[\"cozy\",{\"1\":{\"246\":3,\"419\":1,\"428\":1}}],[\"corpus\",{\"1\":{\"310\":1}}],[\"corner\",{\"1\":{\"242\":1}}],[\"correlation\",{\"1\":{\"45\":1,\"253\":1}}],[\"coherence\",{\"0\":{\"235\":1}}],[\"countless\",{\"1\":{\"428\":1}}],[\"countryside\",{\"1\":{\"428\":1}}],[\"country\",{\"0\":{\"389\":1,\"392\":1,\"409\":1,\"411\":1},\"1\":{\"389\":2,\"392\":1,\"407\":1}}],[\"count\",{\"1\":{\"260\":3,\"428\":2}}],[\"counts\",{\"0\":{\"258\":1}}],[\"countingsort\",{\"1\":{\"213\":1}}],[\"counting\",{\"0\":{\"213\":1}}],[\"couldn\",{\"1\":{\"406\":1,\"411\":1,\"417\":1,\"435\":1}}],[\"couldnt\",{\"1\":{\"345\":1}}],[\"could\",{\"1\":{\"244\":1,\"403\":1,\"411\":1,\"419\":1,\"428\":1,\"434\":1,\"435\":3}}],[\"course\",{\"1\":{\"71\":1,\"267\":3,\"279\":2,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1,\"384\":1,\"411\":1,\"434\":1}}],[\"colorful\",{\"1\":{\"411\":1}}],[\"colors\",{\"1\":{\"246\":1,\"407\":1,\"408\":1,\"410\":1}}],[\"colab\",{\"1\":{\"315\":1}}],[\"col\",{\"1\":{\"255\":1}}],[\"col=\",{\"1\":{\"255\":2}}],[\"colname\",{\"1\":{\"255\":3}}],[\"cold\",{\"1\":{\"246\":1,\"434\":1}}],[\"collator=data\",{\"1\":{\"315\":1,\"316\":1}}],[\"collator\",{\"1\":{\"313\":3,\"314\":1,\"315\":4,\"316\":1,\"317\":1,\"319\":2,\"326\":1}}],[\"collate\",{\"1\":{\"313\":2,\"319\":2}}],[\"collocation\",{\"0\":{\"226\":1}}],[\"collection\",{\"1\":{\"173\":1}}],[\"columns\",{\"1\":{\"255\":2,\"259\":1,\"318\":1}}],[\"column\",{\"1\":{\"75\":1,\"318\":2,\"345\":4,\"346\":2}}],[\"coming\",{\"1\":{\"424\":1}}],[\"comforts\",{\"1\":{\"419\":1}}],[\"comfort\",{\"1\":{\"392\":1,\"419\":1}}],[\"comfy\",{\"1\":{\"244\":1}}],[\"com\",{\"1\":{\"342\":2,\"343\":1}}],[\"commemorate\",{\"1\":{\"435\":1}}],[\"commentsreview\",{\"1\":{\"345\":1}}],[\"common\",{\"1\":{\"389\":1,\"407\":1,\"425\":1}}],[\"communication\",{\"1\":{\"383\":1,\"385\":1,\"435\":1}}],[\"commitments\",{\"1\":{\"398\":1}}],[\"committed\",{\"1\":{\"337\":2}}],[\"commit\",{\"1\":{\"336\":2,\"337\":3}}],[\"command\",{\"1\":{\"132\":1}}],[\"comedy\",{\"1\":{\"403\":2,\"435\":1}}],[\"come\",{\"1\":{\"248\":2,\"407\":1,\"410\":1,\"411\":1,\"413\":1,\"428\":2}}],[\"comes\",{\"1\":{\"235\":1}}],[\"compelling\",{\"1\":{\"403\":2,\"435\":1}}],[\"competitive\",{\"1\":{\"383\":1,\"386\":1}}],[\"companion\",{\"1\":{\"435\":1}}],[\"companionship\",{\"1\":{\"435\":1}}],[\"company\",{\"1\":{\"345\":1,\"435\":2}}],[\"comparison\",{\"0\":{\"239\":1}}],[\"compared\",{\"1\":{\"435\":3}}],[\"compare\",{\"1\":{\"187\":1,\"428\":2}}],[\"compute\",{\"1\":{\"260\":1,\"315\":1,\"316\":11,\"324\":3,\"346\":2}}],[\"computers\",{\"1\":{\"412\":1}}],[\"computer\",{\"0\":{\"414\":1},\"1\":{\"244\":1,\"287\":2,\"294\":1,\"412\":2}}],[\"complete\",{\"1\":{\"390\":1}}],[\"completely\",{\"1\":{\"248\":1,\"413\":1}}],[\"complexity\",{\"0\":{\"164\":2,\"165\":1,\"166\":1}}],[\"components\",{\"1\":{\"74\":2}}],[\"congestion\",{\"1\":{\"387\":2}}],[\"connector\",{\"1\":{\"424\":1}}],[\"connect\",{\"1\":{\"397\":1}}],[\"connectivity\",{\"1\":{\"383\":1,\"385\":1}}],[\"connection\",{\"1\":{\"383\":1,\"387\":2,\"400\":1}}],[\"connected\",{\"1\":{\"43\":1,\"246\":1}}],[\"conditions\",{\"1\":{\"434\":1,\"435\":3}}],[\"condition\",{\"1\":{\"246\":1,\"345\":9}}],[\"conditioning\",{\"1\":{\"244\":1}}],[\"concentrate\",{\"0\":{\"405\":1,\"406\":1},\"1\":{\"404\":3,\"406\":1}}],[\"concentrating\",{\"1\":{\"404\":2}}],[\"concentration\",{\"0\":{\"404\":1},\"1\":{\"404\":1,\"406\":2}}],[\"concurrent\",{\"1\":{\"185\":1}}],[\"concat\",{\"1\":{\"28\":6}}],[\"config\",{\"1\":{\"283\":2,\"285\":3,\"287\":3,\"325\":1,\"335\":2,\"337\":6}}],[\"configuration\",{\"0\":{\"114\":1},\"1\":{\"277\":1,\"331\":1}}],[\"confusion\",{\"1\":{\"77\":1}}],[\"contemplate\",{\"1\":{\"426\":1}}],[\"content\",{\"1\":{\"332\":1}}],[\"contrast\",{\"1\":{\"398\":1}}],[\"contrary\",{\"1\":{\"62\":1}}],[\"control\",{\"0\":{\"352\":1},\"1\":{\"360\":1}}],[\"containskey\",{\"1\":{\"193\":1}}],[\"continuing\",{\"0\":{\"52\":1}}],[\"continuous\",{\"1\":{\"49\":1,\"59\":1,\"74\":1}}],[\"convey\",{\"1\":{\"410\":1}}],[\"convenience\",{\"1\":{\"402\":1}}],[\"convenient\",{\"1\":{\"242\":1}}],[\"conversion\",{\"0\":{\"381\":1}}],[\"convert\",{\"1\":{\"297\":2,\"301\":2,\"306\":1,\"312\":1}}],[\"convergence\",{\"0\":{\"5\":1},\"1\":{\"59\":1}}],[\"convolutional\",{\"1\":{\"43\":1}}],[\"constellations\",{\"1\":{\"423\":1,\"425\":1,\"428\":2}}],[\"constellation\",{\"1\":{\"423\":2}}],[\"constructor\",{\"1\":{\"35\":1}}],[\"conservation\",{\"1\":{\"392\":1,\"435\":1}}],[\"consider\",{\"1\":{\"227\":1}}],[\"console\",{\"1\":{\"12\":3,\"225\":5,\"380\":2,\"381\":1}}],[\"想访问\",{\"1\":{\"366\":1}}],[\"想要进行评估可以设置\",{\"1\":{\"315\":1}}],[\"想要获得\",{\"1\":{\"13\":1}}],[\"想使用二分查找\",{\"1\":{\"140\":1}}],[\"想为该对象增加属性时\",{\"1\":{\"13\":1}}],[\"时的特殊值减掉\",{\"1\":{\"375\":1}}],[\"时的一个参数\",{\"1\":{\"313\":1}}],[\"时发出的多个包\",{\"1\":{\"361\":1}}],[\"时配置\",{\"1\":{\"331\":1}}],[\"时就会在每个\",{\"1\":{\"316\":1}}],[\"时间戳请求和应答\",{\"1\":{\"360\":1}}],[\"时间\",{\"1\":{\"316\":1}}],[\"时间复杂度可以做到\",{\"1\":{\"214\":1}}],[\"时间复杂度分析\",{\"1\":{\"210\":1}}],[\"时间复杂度内查找一个无序数组中的第\",{\"1\":{\"210\":1}}],[\"时间复杂度的系数\",{\"1\":{\"201\":1}}],[\"时间复杂度是\",{\"1\":{\"196\":1}}],[\"时间复杂度来找到前驱节点\",{\"1\":{\"171\":1}}],[\"时间复杂度有量级的差距\",{\"1\":{\"165\":1}}],[\"时间复杂度就是\",{\"1\":{\"162\":1,\"164\":2}}],[\"时间复杂度量级\",{\"1\":{\"162\":1}}],[\"时间复杂度接近最好情况\",{\"1\":{\"154\":1}}],[\"时间复杂度\",{\"0\":{\"138\":1,\"162\":1,\"197\":1},\"1\":{\"201\":2,\"203\":1,\"204\":1,\"205\":1,\"208\":1,\"209\":1,\"212\":1,\"215\":1}}],[\"时你会看到\",{\"1\":{\"315\":1}}],[\"时该结构会不一样\",{\"1\":{\"312\":1}}],[\"时要了解以下内容\",{\"1\":{\"255\":1}}],[\"时都有一个出现的概率\",{\"1\":{\"62\":1}}],[\"时采取行动\",{\"1\":{\"61\":1}}],[\"时需要进行单独处理\",{\"1\":{\"36\":1}}],[\"时可以是任何名称\",{\"1\":{\"35\":1}}],[\"时不需要加\",{\"1\":{\"35\":1}}],[\"时下一个值\",{\"1\":{\"20\":1}}],[\"时迭代结束\",{\"1\":{\"19\":1}}],[\"时使用的\",{\"1\":{\"287\":1}}],[\"时使用不同的\",{\"1\":{\"69\":1}}],[\"时使用\",{\"1\":{\"15\":1}}],[\"时\",{\"1\":{\"13\":1,\"18\":1,\"20\":2,\"31\":1,\"32\":1,\"35\":1,\"45\":1,\"81\":2,\"96\":2,\"129\":1,\"138\":1,\"157\":1,\"158\":1,\"193\":2,\"208\":1,\"212\":1,\"274\":2,\"286\":1,\"301\":1,\"312\":2,\"315\":1,\"331\":2,\"355\":1,\"364\":1}}],[\"有好有坏\",{\"1\":{\"435\":1}}],[\"有线耳机\",{\"1\":{\"400\":1}}],[\"有了等价路由\",{\"1\":{\"370\":1}}],[\"有了目标\",{\"1\":{\"352\":1}}],[\"有一种口叫\",{\"1\":{\"358\":1}}],[\"有一个参数是\",{\"1\":{\"347\":1}}],[\"有环的我们常称为图\",{\"1\":{\"356\":1}}],[\"有很多算法解决这个问题\",{\"1\":{\"352\":1}}],[\"有大写有小写\",{\"1\":{\"345\":1}}],[\"有的\",{\"1\":{\"339\":1}}],[\"有三个字段\",{\"1\":{\"316\":1}}],[\"有些模型只在句尾加特殊词\",{\"1\":{\"306\":1}}],[\"有些模型只在句首加特殊词\",{\"1\":{\"306\":1}}],[\"有些模型不用特殊词\",{\"1\":{\"306\":1}}],[\"有些字符串中蕴含着某些信息\",{\"1\":{\"259\":1}}],[\"有明显的性别相关性\",{\"1\":{\"268\":1}}],[\"有助于模型更好地理解数据\",{\"1\":{\"250\":1}}],[\"有可能不出现\",{\"1\":{\"224\":1}}],[\"有可能所看到的私有字符也不同\",{\"1\":{\"106\":1}}],[\"有序\",{\"1\":{\"204\":1}}],[\"有序度加\",{\"1\":{\"203\":1}}],[\"有序度\",{\"1\":{\"203\":1}}],[\"有数据交换\",{\"1\":{\"203\":1}}],[\"有堆栈溢出的风险\",{\"1\":{\"194\":1}}],[\"有软件管家\",{\"0\":{\"128\":1}}],[\"有人吗\",{\"1\":{\"116\":1}}],[\"有少数字符可能与多个码点对应\",{\"1\":{\"90\":1}}],[\"有哪些字符\",{\"1\":{\"83\":1}}],[\"有时可以从标准化受益\",{\"1\":{\"260\":1}}],[\"有时\",{\"1\":{\"154\":1}}],[\"有时用\",{\"1\":{\"83\":1}}],[\"有时我们希望在不同的地方使用相同名字的\",{\"1\":{\"14\":1}}],[\"有两大体系\",{\"1\":{\"127\":1}}],[\"有两种方式来解决这个问题\",{\"1\":{\"304\":1}}],[\"有两种\",{\"1\":{\"64\":1}}],[\"有两个作用\",{\"1\":{\"45\":1}}],[\"有\",{\"1\":{\"60\":1,\"99\":1,\"129\":3,\"165\":1,\"191\":1}}],[\"有初始状态和终止状态\",{\"1\":{\"51\":1}}],[\"有最高\",{\"1\":{\"47\":1}}],[\"有相同的语法\",{\"1\":{\"28\":1}}],[\"有索引和\",{\"1\":{\"19\":1,\"22\":1,\"24\":1}}],[\"有效防止双方对该属性进行的重写覆盖\",{\"1\":{\"13\":1}}],[\"有滞后性\",{\"1\":{\"5\":1}}],[\"illiterate\",{\"1\":{\"435\":1}}],[\"illegal\",{\"1\":{\"435\":1}}],[\"illustrated\",{\"1\":{\"273\":1,\"276\":1}}],[\"ieee\",{\"1\":{\"375\":3}}],[\"iec8859\",{\"1\":{\"95\":1}}],[\"iec\",{\"0\":{\"97\":1},\"1\":{\"85\":1,\"94\":2,\"96\":1,\"97\":5,\"108\":2}}],[\"ibgp\",{\"1\":{\"370\":2}}],[\"ibm\",{\"1\":{\"93\":1,\"94\":1}}],[\"igp\",{\"1\":{\"370\":2}}],[\"ignore\",{\"1\":{\"121\":1}}],[\"icmp\",{\"0\":{\"359\":1,\"360\":1},\"1\":{\"360\":11,\"361\":4,\"362\":8,\"363\":2,\"364\":1}}],[\"imagining\",{\"1\":{\"428\":1}}],[\"immediately\",{\"1\":{\"411\":1}}],[\"immersive\",{\"1\":{\"402\":2,\"403\":1}}],[\"impressionist\",{\"1\":{\"407\":1}}],[\"impacts\",{\"1\":{\"383\":1}}],[\"impact\",{\"1\":{\"383\":1,\"386\":1}}],[\"importance\",{\"0\":{\"386\":1}}],[\"important\",{\"0\":{\"385\":1},\"1\":{\"248\":1,\"385\":1,\"389\":1,\"396\":1,\"403\":1,\"415\":1,\"416\":2}}],[\"importerror\",{\"1\":{\"315\":1}}],[\"import\",{\"0\":{\"29\":1,\"32\":1},\"1\":{\"29\":1,\"34\":1,\"35\":4,\"36\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"255\":1,\"261\":1,\"267\":2,\"268\":1,\"279\":2,\"280\":1,\"282\":1,\"283\":1,\"285\":1,\"286\":2,\"288\":1,\"294\":2,\"296\":1,\"301\":4,\"307\":2,\"311\":1,\"312\":1,\"313\":1,\"314\":2,\"315\":3,\"316\":2,\"317\":2,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":2,\"324\":1,\"325\":5,\"331\":2,\"332\":2,\"335\":1,\"336\":1,\"337\":1,\"342\":1,\"345\":1,\"346\":1}}],[\"im\",{\"1\":{\"345\":2}}],[\"irritated\",{\"1\":{\"345\":1}}],[\"ioctl\",{\"1\":{\"112\":1}}],[\"ipx\",{\"1\":{\"365\":1}}],[\"ip3\",{\"1\":{\"365\":1}}],[\"ip2\",{\"1\":{\"365\":1}}],[\"ipv4\",{\"1\":{\"364\":1}}],[\"ip头\",{\"1\":{\"360\":1}}],[\"ip包有两部分\",{\"1\":{\"360\":1}}],[\"iproute2\",{\"1\":{\"112\":5,\"367\":1}}],[\"ipconfig\",{\"1\":{\"112\":1}}],[\"ip\",{\"0\":{\"111\":1,\"112\":1,\"113\":1,\"120\":1,\"366\":1},\"1\":{\"111\":8,\"112\":10,\"113\":5,\"114\":3,\"116\":4,\"117\":8,\"118\":7,\"119\":1,\"120\":3,\"121\":6,\"122\":1,\"352\":3,\"353\":6,\"355\":1,\"360\":9,\"361\":1,\"362\":2,\"364\":15,\"366\":14,\"367\":12}}],[\"ith\",{\"1\":{\"75\":1}}],[\"its\",{\"1\":{\"69\":1,\"260\":1,\"345\":1,\"384\":2,\"407\":1,\"410\":1,\"435\":3}}],[\"it\",{\"1\":{\"41\":1,\"69\":1,\"228\":2,\"233\":1,\"234\":1,\"235\":1,\"237\":3,\"242\":7,\"244\":7,\"246\":5,\"274\":1,\"337\":2,\"342\":17,\"343\":4,\"345\":5,\"383\":1,\"384\":2,\"385\":1,\"386\":1,\"387\":1,\"390\":3,\"392\":1,\"393\":4,\"394\":4,\"395\":1,\"396\":3,\"397\":2,\"400\":1,\"402\":1,\"403\":4,\"405\":2,\"406\":1,\"407\":1,\"409\":1,\"412\":1,\"413\":1,\"414\":7,\"416\":1,\"417\":6,\"419\":8,\"424\":2,\"426\":3,\"427\":1,\"428\":2,\"429\":1,\"430\":4,\"431\":5,\"432\":1,\"434\":8,\"435\":18}}],[\"iter\",{\"1\":{\"261\":3}}],[\"iteration\",{\"1\":{\"20\":2}}],[\"iterator\",{\"0\":{\"20\":1},\"1\":{\"17\":2,\"19\":1,\"20\":4,\"21\":3,\"22\":1,\"24\":3}}],[\"iterable\",{\"0\":{\"22\":1},\"1\":{\"19\":2,\"22\":2}}],[\"iterables\",{\"0\":{\"19\":1},\"1\":{\"17\":1,\"22\":2,\"23\":1,\"24\":1}}],[\"items\",{\"1\":{\"313\":2,\"319\":1,\"323\":1,\"324\":1,\"325\":1,\"435\":1}}],[\"item\",{\"1\":{\"28\":11,\"435\":1}}],[\"isp\",{\"1\":{\"387\":1}}],[\"isolated\",{\"1\":{\"435\":1}}],[\"iso\",{\"0\":{\"95\":1,\"97\":1},\"1\":{\"85\":1,\"86\":2,\"94\":2,\"95\":1,\"96\":1,\"97\":5,\"108\":2}}],[\"is\",{\"0\":{\"385\":1,\"391\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1},\"1\":{\"41\":1,\"69\":2,\"228\":1,\"242\":1,\"244\":3,\"246\":2,\"248\":3,\"255\":1,\"279\":1,\"294\":1,\"296\":2,\"298\":1,\"312\":6,\"323\":1,\"325\":1,\"337\":1,\"345\":3,\"383\":1,\"384\":1,\"385\":1,\"386\":2,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":2,\"395\":1,\"396\":1,\"405\":1,\"406\":2,\"409\":1,\"411\":4,\"413\":1,\"414\":2,\"415\":1,\"419\":1,\"424\":3,\"428\":2,\"434\":1,\"435\":3}}],[\"isarray\",{\"1\":{\"28\":1}}],[\"isconcatspreadable\",{\"1\":{\"17\":1,\"28\":2}}],[\"i++\",{\"1\":{\"26\":1,\"208\":3,\"209\":1}}],[\"i\",{\"1\":{\"26\":4,\"69\":1,\"162\":4,\"164\":4,\"180\":9,\"194\":2,\"203\":3,\"204\":4,\"205\":7,\"208\":4,\"209\":7,\"213\":25,\"227\":2,\"228\":2,\"229\":1,\"231\":11,\"232\":8,\"233\":5,\"234\":4,\"235\":1,\"236\":2,\"237\":8,\"242\":11,\"244\":12,\"246\":4,\"248\":5,\"267\":3,\"274\":2,\"279\":4,\"301\":4,\"303\":2,\"304\":2,\"306\":3,\"307\":2,\"345\":15,\"346\":2,\"361\":1,\"383\":2,\"390\":3,\"391\":4,\"393\":6,\"394\":1,\"395\":3,\"396\":4,\"397\":5,\"398\":2,\"400\":5,\"401\":14,\"402\":5,\"403\":20,\"405\":6,\"406\":15,\"407\":2,\"408\":6,\"409\":1,\"410\":3,\"411\":4,\"413\":4,\"414\":2,\"415\":2,\"416\":6,\"417\":5,\"419\":8,\"421\":16,\"423\":1,\"424\":4,\"425\":4,\"426\":3,\"427\":4,\"428\":8,\"431\":3,\"432\":1,\"433\":5,\"434\":6,\"435\":23}}],[\"ifconfig\",{\"0\":{\"112\":1},\"1\":{\"112\":2}}],[\"if\",{\"1\":{\"20\":2,\"21\":1,\"69\":1,\"142\":3,\"143\":3,\"144\":2,\"145\":2,\"159\":1,\"164\":1,\"180\":7,\"191\":2,\"192\":2,\"193\":3,\"194\":2,\"203\":3,\"204\":2,\"205\":3,\"206\":2,\"208\":1,\"209\":2,\"213\":2,\"232\":1,\"233\":2,\"234\":1,\"244\":1,\"257\":1,\"313\":1,\"323\":1,\"325\":1,\"345\":1,\"387\":1,\"396\":1,\"401\":1,\"402\":1,\"404\":1,\"405\":2,\"408\":1,\"419\":2,\"434\":1,\"435\":5}}],[\"id>\",{\"1\":{\"337\":1}}],[\"id=\",{\"1\":{\"331\":2,\"335\":1}}],[\"id=none\",{\"1\":{\"311\":4}}],[\"idx\",{\"1\":{\"311\":6,\"312\":3,\"313\":2,\"318\":2}}],[\"ids\",{\"0\":{\"297\":1},\"1\":{\"279\":1,\"288\":3,\"294\":5,\"295\":1,\"297\":4,\"299\":2,\"301\":15,\"302\":9,\"303\":8,\"304\":2,\"306\":6,\"308\":1,\"312\":15,\"313\":4,\"316\":3,\"318\":2,\"319\":2}}],[\"idf\",{\"1\":{\"250\":1}}],[\"ideas\",{\"1\":{\"244\":1,\"404\":1,\"415\":1}}],[\"idea\",{\"1\":{\"244\":1,\"432\":1}}],[\"idioms\",{\"0\":{\"237\":1}}],[\"idagain\",{\"1\":{\"15\":2}}],[\"id2label\",{\"1\":{\"283\":2}}],[\"id2\",{\"1\":{\"12\":2}}],[\"id1\",{\"1\":{\"12\":2}}],[\"id\",{\"1\":{\"12\":10,\"13\":17,\"15\":4,\"16\":2,\"124\":2,\"132\":1,\"255\":1,\"285\":1,\"291\":4,\"302\":6,\"303\":1,\"306\":1,\"345\":5,\"356\":3,\"358\":2}}],[\"invited\",{\"1\":{\"435\":1}}],[\"innocent\",{\"1\":{\"401\":1}}],[\"inner\",{\"1\":{\"260\":1}}],[\"inphysical\",{\"1\":{\"396\":1}}],[\"inputs\",{\"1\":{\"279\":4,\"281\":1,\"282\":1,\"288\":2,\"301\":4,\"303\":8,\"304\":4,\"306\":3,\"312\":3}}],[\"input\",{\"0\":{\"297\":1},\"1\":{\"75\":1,\"279\":1,\"288\":5,\"291\":2,\"294\":3,\"295\":1,\"299\":1,\"301\":7,\"303\":5,\"304\":2,\"306\":2,\"308\":1,\"312\":6,\"313\":3,\"318\":1,\"319\":1}}],[\"inactive\",{\"1\":{\"345\":1}}],[\"ineffective\",{\"1\":{\"345\":1}}],[\"ingredients\",{\"1\":{\"345\":1}}],[\"ing\",{\"1\":{\"293\":1}}],[\"indoor\",{\"1\":{\"411\":1}}],[\"indicates\",{\"1\":{\"383\":1,\"384\":1}}],[\"industry\",{\"1\":{\"248\":1}}],[\"independent\",{\"1\":{\"75\":1}}],[\"indexerror\",{\"1\":{\"301\":1}}],[\"index=x\",{\"1\":{\"255\":2}}],[\"indexof\",{\"1\":{\"28\":1}}],[\"index\",{\"0\":{\"4\":1},\"1\":{\"28\":6,\"36\":2,\"213\":2,\"255\":1,\"260\":1}}],[\"inclined\",{\"1\":{\"435\":1}}],[\"including\",{\"1\":{\"385\":1,\"392\":1,\"411\":1}}],[\"include\",{\"1\":{\"74\":1,\"389\":1}}],[\"includes\",{\"1\":{\"28\":2}}],[\"inch\",{\"1\":{\"419\":1}}],[\"incredible\",{\"1\":{\"390\":1,\"403\":1}}],[\"increase\",{\"1\":{\"387\":1}}],[\"increased\",{\"1\":{\"383\":1}}],[\"income\",{\"1\":{\"242\":1,\"244\":1,\"260\":3}}],[\"inspire\",{\"1\":{\"426\":1,\"427\":1}}],[\"inspires\",{\"1\":{\"426\":1}}],[\"inspired\",{\"1\":{\"242\":1}}],[\"insist\",{\"1\":{\"405\":1}}],[\"insights\",{\"1\":{\"242\":1}}],[\"insertionsort\",{\"1\":{\"204\":1}}],[\"insertion\",{\"0\":{\"204\":1}}],[\"instincts\",{\"1\":{\"435\":1}}],[\"institute\",{\"1\":{\"94\":1}}],[\"instead\",{\"1\":{\"257\":1}}],[\"install\",{\"1\":{\"129\":2,\"133\":2,\"315\":4,\"337\":1}}],[\"init\",{\"1\":{\"261\":2}}],[\"initramfs\",{\"1\":{\"122\":1}}],[\"initially\",{\"1\":{\"434\":1}}],[\"initializer\",{\"1\":{\"285\":1}}],[\"initialize\",{\"1\":{\"70\":1}}],[\"initial\",{\"1\":{\"28\":2}}],[\"intriguing\",{\"1\":{\"435\":1}}],[\"intrigued\",{\"1\":{\"415\":1}}],[\"introduction\",{\"0\":{\"48\":1,\"160\":1,\"185\":1,\"223\":1,\"250\":1},\"1\":{\"48\":1,\"72\":1}}],[\"int32\",{\"1\":{\"311\":1}}],[\"intoin\",{\"1\":{\"427\":1}}],[\"into\",{\"1\":{\"231\":2,\"232\":1,\"237\":1,\"242\":1,\"248\":1,\"259\":1,\"260\":1,\"394\":3,\"401\":1,\"403\":3,\"406\":5,\"419\":1,\"427\":1,\"428\":2,\"435\":2}}],[\"int\",{\"1\":{\"142\":7,\"143\":7,\"144\":7,\"145\":7,\"159\":5,\"164\":6,\"180\":6,\"191\":2,\"192\":3,\"193\":3,\"194\":6,\"203\":5,\"204\":5,\"205\":6,\"206\":1,\"208\":11,\"209\":9,\"213\":14}}],[\"intelligent\",{\"1\":{\"391\":1}}],[\"intended\",{\"1\":{\"338\":1}}],[\"integer\",{\"1\":{\"255\":2}}],[\"integration\",{\"1\":{\"59\":1}}],[\"interrupted\",{\"1\":{\"411\":1}}],[\"interruption\",{\"1\":{\"404\":1}}],[\"interrupt\",{\"1\":{\"404\":1}}],[\"internet\",{\"1\":{\"360\":1,\"383\":3,\"385\":1,\"387\":1,\"400\":1,\"435\":3}}],[\"intermediate\",{\"1\":{\"285\":1}}],[\"interior\",{\"1\":{\"246\":1,\"370\":2}}],[\"interim\",{\"1\":{\"121\":1}}],[\"interest\",{\"1\":{\"428\":1}}],[\"interesting\",{\"1\":{\"391\":1,\"403\":2,\"435\":1}}],[\"interestingly\",{\"1\":{\"234\":1}}],[\"interested\",{\"1\":{\"242\":3}}],[\"interests\",{\"1\":{\"228\":1,\"403\":2}}],[\"interchange\",{\"1\":{\"93\":1,\"94\":1}}],[\"interact\",{\"1\":{\"61\":1}}],[\"informally\",{\"1\":{\"425\":1}}],[\"information\",{\"0\":{\"253\":1},\"1\":{\"43\":1,\"94\":1,\"253\":1,\"255\":1,\"332\":1,\"369\":1}}],[\"informedaboutcurrent\",{\"1\":{\"403\":1}}],[\"info\",{\"1\":{\"255\":3}}],[\"inference\",{\"0\":{\"288\":1},\"1\":{\"69\":1,\"276\":1,\"307\":1}}],[\"infinity\",{\"1\":{\"20\":1,\"375\":7}}],[\"in\",{\"0\":{\"389\":1,\"391\":1,\"392\":1,\"409\":1,\"411\":1,\"413\":1},\"1\":{\"9\":3,\"10\":1,\"13\":2,\"18\":1,\"26\":2,\"28\":2,\"75\":1,\"201\":1,\"227\":3,\"233\":1,\"234\":1,\"239\":1,\"242\":3,\"244\":3,\"246\":6,\"248\":2,\"255\":2,\"267\":1,\"268\":2,\"301\":1,\"313\":4,\"319\":2,\"323\":3,\"324\":2,\"325\":5,\"335\":1,\"345\":5,\"383\":2,\"384\":1,\"385\":1,\"386\":2,\"387\":1,\"389\":2,\"390\":2,\"391\":3,\"392\":1,\"395\":1,\"397\":2,\"398\":1,\"400\":1,\"401\":1,\"403\":7,\"405\":1,\"406\":4,\"407\":6,\"410\":1,\"411\":6,\"412\":2,\"413\":2,\"415\":4,\"416\":5,\"419\":4,\"420\":1,\"421\":3,\"423\":1,\"424\":3,\"427\":1,\"428\":8,\"430\":1,\"431\":2,\"432\":4,\"433\":3,\"434\":17,\"435\":18}}],[\"引入哨兵结点\",{\"1\":{\"180\":1}}],[\"引入\",{\"1\":{\"11\":1,\"376\":1}}],[\"提心吊胆\",{\"1\":{\"401\":1}}],[\"提高聚类的稳定性\",{\"1\":{\"261\":1}}],[\"提高结果的可解释性\",{\"1\":{\"251\":1}}],[\"提高模型的预测表现\",{\"1\":{\"251\":1}}],[\"提高\",{\"1\":{\"158\":1}}],[\"提示\",{\"1\":{\"124\":1,\"260\":1,\"286\":1,\"311\":1,\"315\":1,\"325\":1,\"328\":1,\"342\":1,\"375\":1}}],[\"提供的最小精度\",{\"1\":{\"375\":1}}],[\"提供评估的方法\",{\"1\":{\"315\":1}}],[\"提供句子对列表\",{\"1\":{\"312\":1}}],[\"提供此租约的\",{\"1\":{\"118\":1}}],[\"提供了加载本地和远程数据集的方法\",{\"1\":{\"341\":1}}],[\"提供了\",{\"1\":{\"313\":1,\"314\":1}}],[\"提供了模型权重\",{\"1\":{\"287\":1}}],[\"提供了模型的架构信息\",{\"1\":{\"287\":1}}],[\"提供了更好的手链特性\",{\"1\":{\"59\":1}}],[\"提供了系统\",{\"1\":{\"11\":1,\"18\":1}}],[\"提供一个函数作为\",{\"1\":{\"28\":1}}],[\"提防极端行情拐点\",{\"1\":{\"3\":1}}],[\"jewelry\",{\"1\":{\"435\":1}}],[\"jasmine\",{\"1\":{\"407\":1}}],[\"javascrip\",{\"1\":{\"374\":1}}],[\"javascript\",{\"0\":{\"449\":1},\"1\":{\"11\":1,\"17\":1,\"18\":1,\"136\":1,\"375\":4,\"376\":1,\"377\":1}}],[\"java\",{\"1\":{\"129\":1,\"154\":1,\"155\":1,\"159\":1,\"173\":1,\"185\":1,\"215\":1}}],[\"jim\",{\"1\":{\"291\":2}}],[\"jumped\",{\"1\":{\"411\":1}}],[\"just\",{\"1\":{\"237\":1,\"242\":1,\"244\":1,\"345\":1,\"383\":1,\"396\":1,\"401\":1,\"405\":1,\"406\":2,\"411\":1,\"419\":2,\"421\":4,\"428\":1,\"430\":1,\"431\":1,\"434\":1,\"435\":1}}],[\"jul\",{\"1\":{\"125\":1}}],[\"j+1\",{\"1\":{\"203\":3,\"204\":2,\"206\":4}}],[\"jdk1\",{\"1\":{\"158\":1}}],[\"jdk\",{\"1\":{\"129\":5}}],[\"jjj\",{\"0\":{\"76\":1}}],[\"jth\",{\"1\":{\"75\":1}}],[\"j\",{\"1\":{\"57\":1,\"62\":3,\"63\":2,\"203\":6,\"204\":5,\"205\":4,\"206\":5,\"209\":4,\"225\":1}}],[\"jsonl\",{\"1\":{\"341\":1}}],[\"json\",{\"1\":{\"287\":3,\"335\":2,\"337\":12,\"341\":4,\"342\":13,\"343\":3}}],[\"js\",{\"1\":{\"34\":1,\"35\":1,\"36\":10,\"225\":3}}],[\"joy\",{\"1\":{\"228\":1}}],[\"joints\",{\"1\":{\"345\":1}}],[\"join\",{\"1\":{\"23\":1,\"28\":2}}],[\"john\",{\"1\":{\"9\":1,\"13\":3,\"34\":1}}],[\"对知识渴求的\",{\"1\":{\"435\":1}}],[\"对应局域网内的\",{\"1\":{\"366\":1}}],[\"对应的内部\",{\"1\":{\"366\":1}}],[\"对应的mac\",{\"1\":{\"354\":1}}],[\"对应的机器来回应自己\",{\"1\":{\"353\":1}}],[\"对应的代码\",{\"1\":{\"318\":1}}],[\"对应的\",{\"1\":{\"133\":1,\"366\":1}}],[\"对应的是\",{\"1\":{\"128\":1}}],[\"对应的函数\",{\"1\":{\"20\":1}}],[\"对模型进行微调\",{\"1\":{\"331\":1}}],[\"对句子中的每个词语进行分类\",{\"1\":{\"264\":1}}],[\"对整个句子进行分类\",{\"1\":{\"264\":1}}],[\"对特征进行数学变换\",{\"1\":{\"250\":1}}],[\"对两部分分别排序\",{\"1\":{\"208\":1}}],[\"对相邻数据做操作\",{\"1\":{\"203\":1}}],[\"对头结点和尾结点的特殊处理\",{\"1\":{\"180\":1}}],[\"对链表进行频繁的插入\",{\"1\":{\"173\":1}}],[\"对一个数据结构进行一组连续操作中\",{\"1\":{\"166\":1}}],[\"对数转换等\",{\"1\":{\"250\":1}}],[\"对数阶\",{\"1\":{\"162\":1}}],[\"对数组用\",{\"1\":{\"28\":1}}],[\"对数组进行\",{\"1\":{\"28\":1}}],[\"对大装载因子的容忍度更高\",{\"1\":{\"154\":1}}],[\"对内存的利用率比开放寻址法要高\",{\"1\":{\"154\":1}}],[\"对内存的要求比较苛刻\",{\"1\":{\"140\":1}}],[\"对外数据通路的数据总线宽度决定\",{\"1\":{\"83\":1}}],[\"对损失函数进行微分的时候\",{\"1\":{\"63\":1}}],[\"对世界状态的完整描述\",{\"1\":{\"49\":1}}],[\"对于支持\",{\"1\":{\"358\":1}}],[\"对于预测没有提供相对有用的信息\",{\"1\":{\"346\":1}}],[\"对于大文件\",{\"1\":{\"334\":1,\"337\":1}}],[\"对于大部分资源有限的场景\",{\"1\":{\"188\":1}}],[\"对于基础的微调来说表现得也很不错\",{\"1\":{\"315\":1}}],[\"对于短的序列\",{\"1\":{\"302\":1}}],[\"对于第一个句子\",{\"1\":{\"283\":1}}],[\"对于具体问题\",{\"1\":{\"270\":1}}],[\"对于一个给定\",{\"1\":{\"265\":1}}],[\"对于一个有序链表\",{\"1\":{\"171\":1}}],[\"对于高度偏斜分布的数据\",{\"1\":{\"257\":1}}],[\"对于其他类型的数据\",{\"1\":{\"259\":1}}],[\"对于其他类型\",{\"1\":{\"213\":1}}],[\"对于归并排序\",{\"1\":{\"208\":1}}],[\"对于冒泡和插入\",{\"1\":{\"206\":1}}],[\"对于动态散列表\",{\"1\":{\"154\":1}}],[\"对于散列表叫均匀的散列函数\",{\"1\":{\"152\":1}}],[\"对于u\",{\"1\":{\"88\":1}}],[\"对于每一个\",{\"1\":{\"61\":1,\"64\":1}}],[\"对于给定\",{\"1\":{\"55\":1}}],[\"对于对象\",{\"1\":{\"28\":1}}],[\"对于\",{\"1\":{\"21\":1,\"23\":1,\"36\":2,\"87\":1,\"88\":1,\"113\":1,\"127\":1,\"209\":1,\"260\":1,\"292\":1,\"302\":1,\"334\":1,\"377\":1}}],[\"对于无穷迭代器\",{\"1\":{\"20\":1}}],[\"对其进行遍历\",{\"1\":{\"21\":1}}],[\"对\",{\"1\":{\"19\":1,\"64\":1,\"213\":2,\"331\":1,\"374\":1}}],[\"对象可以相减\",{\"1\":{\"381\":1}}],[\"对象构造器\",{\"1\":{\"377\":1}}],[\"对象呢\",{\"1\":{\"342\":1}}],[\"对象\",{\"0\":{\"381\":1},\"1\":{\"279\":1,\"311\":1,\"342\":1,\"345\":1}}],[\"对象本身不是数组\",{\"1\":{\"19\":1}}],[\"对象时\",{\"1\":{\"13\":1}}],[\"对象的\",{\"1\":{\"11\":1,\"159\":1,\"331\":1,\"376\":1}}],[\"对象属性\",{\"1\":{\"11\":1,\"18\":1}}],[\"对买进\",{\"1\":{\"5\":1}}],[\"隐藏\",{\"1\":{\"11\":1,\"18\":1}}],[\"的绝对值较大或较小时\",{\"1\":{\"380\":1}}],[\"的第二个参数\",{\"1\":{\"379\":1}}],[\"的各种操作如\",{\"1\":{\"374\":1}}],[\"的主机发起的数据包将使用\",{\"1\":{\"367\":1}}],[\"的主要特点是在\",{\"1\":{\"102\":1}}],[\"的主要特点在于其能力不仅限于文本生成和自然语言处理\",{\"1\":{\"39\":1}}],[\"的主要不同之处在于\",{\"1\":{\"44\":1}}],[\"的mac\",{\"1\":{\"366\":2}}],[\"的国际身份\",{\"1\":{\"366\":1}}],[\"的局域网网段是一样的\",{\"1\":{\"366\":1}}],[\"的交换机\",{\"1\":{\"358\":1}}],[\"的包是看不到的\",{\"1\":{\"358\":1}}],[\"的包才会互相转发\",{\"1\":{\"358\":1}}],[\"的消息\",{\"1\":{\"356\":1}}],[\"的协议\",{\"1\":{\"356\":1}}],[\"的阶段\",{\"1\":{\"353\":1}}],[\"的网关是\",{\"1\":{\"366\":1}}],[\"的网关不可能是\",{\"1\":{\"113\":1}}],[\"的网卡发现这个包是给它的\",{\"1\":{\"352\":1}}],[\"的词数较少时\",{\"1\":{\"346\":1}}],[\"的这个想法是正确的\",{\"1\":{\"345\":1}}],[\"的猜想\",{\"1\":{\"345\":1}}],[\"的区别在于\",{\"1\":{\"345\":1}}],[\"的变体\",{\"1\":{\"345\":1}}],[\"的匹配规则选择多有满足规则的文件\",{\"1\":{\"342\":1}}],[\"的重要作用\",{\"1\":{\"338\":1}}],[\"的版本是最新的\",{\"1\":{\"336\":1}}],[\"的文件管理系统基于\",{\"1\":{\"334\":1}}],[\"的登录命令\",{\"1\":{\"332\":1}}],[\"的仓库\",{\"1\":{\"331\":1}}],[\"的加速\",{\"1\":{\"325\":1}}],[\"的线性衰减\",{\"1\":{\"322\":1}}],[\"的默认\",{\"1\":{\"321\":1}}],[\"的格式设为\",{\"1\":{\"318\":1}}],[\"的格式如下\",{\"1\":{\"117\":1}}],[\"的路径\",{\"1\":{\"315\":1}}],[\"的最佳状态\",{\"1\":{\"394\":1}}],[\"的最大长度是\",{\"1\":{\"374\":1}}],[\"的最大长度为\",{\"1\":{\"313\":1}}],[\"的最大值的取出\",{\"1\":{\"316\":1}}],[\"的最后确认\",{\"1\":{\"118\":1}}],[\"的函数称为\",{\"1\":{\"313\":1}}],[\"的十个数据集之一\",{\"1\":{\"310\":1}}],[\"的限制\",{\"1\":{\"308\":1}}],[\"的组成部分\",{\"1\":{\"360\":1}}],[\"的组成\",{\"1\":{\"308\":1}}],[\"的基本步骤\",{\"1\":{\"340\":1}}],[\"的基本结构\",{\"1\":{\"308\":1}}],[\"的基础上又进行了扩充\",{\"1\":{\"102\":1}}],[\"的类型\",{\"1\":{\"305\":1}}],[\"的该过程相反\",{\"1\":{\"298\":1}}],[\"的中间方法\",{\"1\":{\"294\":1}}],[\"的中间媒介\",{\"1\":{\"57\":1}}],[\"的原子操作\",{\"1\":{\"299\":1}}],[\"的原则是\",{\"1\":{\"293\":1}}],[\"的原因\",{\"1\":{\"70\":1}}],[\"的产生\",{\"1\":{\"291\":1}}],[\"的映射要有\",{\"1\":{\"291\":1}}],[\"的作用是将文本转化为模型可以处理的数字\",{\"1\":{\"289\":1}}],[\"的来源或路径\",{\"1\":{\"287\":1}}],[\"的模型\",{\"1\":{\"282\":1}}],[\"的处理步骤\",{\"1\":{\"279\":1}}],[\"的输出是一个命名元祖\",{\"1\":{\"316\":1}}],[\"的输出是\",{\"1\":{\"316\":1}}],[\"的输出\",{\"1\":{\"275\":1}}],[\"的输入来生成第4个单词\",{\"1\":{\"275\":1}}],[\"的输入\",{\"1\":{\"132\":1}}],[\"的过去的输入\",{\"1\":{\"275\":1}}],[\"的过程\",{\"0\":{\"43\":1}}],[\"的关注度可能小一些\",{\"1\":{\"274\":1}}],[\"的目标\",{\"1\":{\"273\":1}}],[\"的目标是最大化\",{\"1\":{\"53\":1}}],[\"的目标是最大化累积奖励\",{\"1\":{\"49\":1}}],[\"的结构\",{\"1\":{\"276\":1}}],[\"的结构和原理\",{\"1\":{\"273\":1}}],[\"的结果累积后就可以使用\",{\"1\":{\"324\":1}}],[\"的结果一致了\",{\"1\":{\"303\":1}}],[\"的结果不一样\",{\"1\":{\"302\":1}}],[\"的结果的第二行与\",{\"1\":{\"302\":1}}],[\"的结果所消耗的时间\",{\"1\":{\"208\":1}}],[\"的结果\",{\"1\":{\"208\":1,\"261\":1}}],[\"的结果被称为\",{\"1\":{\"24\":1}}],[\"的方式\",{\"1\":{\"337\":1}}],[\"的方式管理本地仓库\",{\"1\":{\"336\":1}}],[\"的方式在大量文本上进行了训练\",{\"1\":{\"270\":1}}],[\"的方法就好了\",{\"1\":{\"22\":1}}],[\"的方法\",{\"1\":{\"20\":1,\"28\":1,\"54\":1,\"334\":1}}],[\"的权重\",{\"1\":{\"265\":1}}],[\"的权重来估计\",{\"1\":{\"44\":1}}],[\"的任务不仅仅是理解单个字词的含义\",{\"1\":{\"264\":1}}],[\"的质心\",{\"1\":{\"261\":1}}],[\"的质量也来越高\",{\"1\":{\"70\":1}}],[\"的三个参数\",{\"1\":{\"261\":1}}],[\"的频率\",{\"1\":{\"260\":1}}],[\"的列做操作\",{\"1\":{\"259\":1}}],[\"的内容\",{\"1\":{\"258\":1,\"285\":1}}],[\"的分为两步\",{\"1\":{\"295\":1}}],[\"的分数也不常见\",{\"1\":{\"255\":1}}],[\"的分组时\",{\"1\":{\"111\":1}}],[\"的栈顶取出压入栈\",{\"1\":{\"222\":2}}],[\"的排序算法\",{\"1\":{\"215\":1}}],[\"的排序算法了\",{\"1\":{\"212\":1}}],[\"的元素\",{\"1\":{\"209\":1}}],[\"的下标\",{\"1\":{\"209\":1}}],[\"的放在右边\",{\"1\":{\"209\":1}}],[\"的放在左边\",{\"1\":{\"209\":1}}],[\"的长度\",{\"1\":{\"180\":1,\"322\":1}}],[\"的索引\",{\"1\":{\"180\":1}}],[\"的缓存机制\",{\"1\":{\"173\":1}}],[\"的大小超过了\",{\"1\":{\"337\":1}}],[\"的大小关系\",{\"1\":{\"171\":1}}],[\"的大脑\",{\"1\":{\"54\":1}}],[\"的时间复杂度\",{\"1\":{\"169\":1}}],[\"的时候已经下载好了\",{\"1\":{\"295\":1}}],[\"的时候\",{\"1\":{\"36\":1,\"120\":1}}],[\"的性能\",{\"1\":{\"156\":1,\"158\":2}}],[\"的个数\",{\"1\":{\"152\":1,\"186\":1}}],[\"的个人计算机和工作站操作系统采用了\",{\"1\":{\"94\":1}}],[\"的连续内存空间\",{\"1\":{\"140\":1}}],[\"的取值\",{\"1\":{\"139\":1}}],[\"的一个分支\",{\"1\":{\"133\":1}}],[\"的一种\",{\"1\":{\"57\":1}}],[\"的配置文件\",{\"1\":{\"133\":2}}],[\"的配置文件在\",{\"1\":{\"128\":2}}],[\"的用户执行此文件\",{\"1\":{\"129\":1}}],[\"的用法\",{\"1\":{\"29\":1}}],[\"的设备构建的应答包中\",{\"1\":{\"361\":1}}],[\"的设置\",{\"1\":{\"129\":1}}],[\"的设计各自为政\",{\"1\":{\"95\":1}}],[\"的两个步骤分别做了什么\",{\"1\":{\"295\":1}}],[\"的两行\",{\"1\":{\"129\":1}}],[\"的两种策略\",{\"1\":{\"66\":1}}],[\"的软件管家是\",{\"1\":{\"128\":1}}],[\"的数据过滤掉\",{\"1\":{\"345\":1}}],[\"的数据\",{\"1\":{\"209\":1,\"358\":1}}],[\"的数目\",{\"1\":{\"125\":1}}],[\"的数量\",{\"1\":{\"261\":1}}],[\"的数量无限\",{\"1\":{\"49\":1}}],[\"的数量有限\",{\"1\":{\"49\":1}}],[\"的位置是用于配置登录后的默认交互命令行的\",{\"1\":{\"124\":1}}],[\"的位置进行\",{\"1\":{\"36\":1}}],[\"的地方是密码\",{\"1\":{\"124\":1}}],[\"的工作过程\",{\"0\":{\"122\":1,\"357\":1}}],[\"的工作方式\",{\"0\":{\"115\":1}}],[\"的样例配置\",{\"1\":{\"121\":1}}],[\"的新人还没有自己的\",{\"1\":{\"117\":1}}],[\"的管理员\",{\"1\":{\"117\":1}}],[\"的增强版\",{\"1\":{\"116\":1}}],[\"的优先级最高\",{\"1\":{\"112\":1}}],[\"的优劣\",{\"0\":{\"58\":1}}],[\"的头\",{\"1\":{\"112\":2}}],[\"的单字节编码\",{\"1\":{\"107\":1}}],[\"的特殊区域\",{\"1\":{\"106\":1}}],[\"的汉字\",{\"1\":{\"102\":2}}],[\"的升级版本\",{\"1\":{\"102\":1}}],[\"的字节连在一起共同表示一个汉字\",{\"1\":{\"100\":1}}],[\"的字节\",{\"1\":{\"100\":1}}],[\"的字符\",{\"1\":{\"88\":1}}],[\"的阿拉伯数字\",{\"1\":{\"94\":1}}],[\"的成本代价很高\",{\"1\":{\"81\":2}}],[\"的综合考量\",{\"1\":{\"81\":1}}],[\"的向量\",{\"1\":{\"75\":2}}],[\"的学习记录\",{\"1\":{\"82\":1,\"91\":1,\"104\":1}}],[\"的学习过程\",{\"1\":{\"71\":1}}],[\"的学习方法\",{\"1\":{\"66\":2}}],[\"的例子\",{\"1\":{\"70\":1,\"255\":1}}],[\"的值是\",{\"1\":{\"312\":1}}],[\"的值分布情况\",{\"1\":{\"261\":1}}],[\"的值就是总共缩小的次数\",{\"1\":{\"138\":1}}],[\"的值\",{\"1\":{\"69\":1,\"70\":1}}],[\"的值总是不同的\",{\"1\":{\"11\":1,\"18\":1}}],[\"的算法\",{\"1\":{\"69\":1,\"215\":1}}],[\"的更新部分依赖于对下一个状态的估计\",{\"1\":{\"68\":1}}],[\"的梯度需要计算每个可能轨迹的概率\",{\"1\":{\"63\":1}}],[\"的概率\",{\"1\":{\"61\":1}}],[\"的剧烈变化\",{\"1\":{\"59\":1}}],[\"的行为\",{\"1\":{\"54\":1}}],[\"的序列\",{\"1\":{\"51\":1}}],[\"的卫衣反馈\",{\"1\":{\"49\":1}}],[\"的集合\",{\"1\":{\"49\":1}}],[\"的q值\",{\"1\":{\"47\":1}}],[\"的折扣值\",{\"1\":{\"46\":1}}],[\"的差\",{\"1\":{\"46\":1}}],[\"的训练可能不稳定\",{\"1\":{\"44\":1}}],[\"的问题\",{\"1\":{\"43\":1}}],[\"的复杂性\",{\"1\":{\"43\":1}}],[\"的架构如下\",{\"1\":{\"42\":1}}],[\"的所有元素复制到自身的\",{\"1\":{\"28\":1}}],[\"的含义\",{\"1\":{\"28\":1,\"311\":1}}],[\"的完整语法为\",{\"1\":{\"23\":1}}],[\"的对象\",{\"1\":{\"22\":1}}],[\"的效果\",{\"1\":{\"21\":1}}],[\"的\",{\"1\":{\"15\":1,\"23\":1,\"28\":1,\"42\":1,\"47\":1,\"54\":1,\"69\":2,\"120\":1,\"129\":1,\"280\":1,\"283\":1,\"294\":3,\"296\":1,\"311\":1,\"315\":2,\"316\":1,\"325\":1,\"342\":3,\"346\":1,\"353\":1,\"354\":1,\"355\":1,\"358\":1,\"361\":1,\"362\":1,\"366\":6}}],[\"的参数指向某个目的\",{\"1\":{\"362\":1}}],[\"的参数\",{\"1\":{\"3\":1,\"28\":1,\"46\":1}}],[\"用逗号作为分割符\",{\"1\":{\"345\":1}}],[\"用屏蔽词填充文本中的空白\",{\"1\":{\"264\":1}}],[\"用自动生成的文本完成提示\",{\"1\":{\"264\":1}}],[\"用栈保存未被匹配的左括号\",{\"1\":{\"221\":1}}],[\"用来检测网络通信故障以及实现链路追踪\",{\"1\":{\"363\":1}}],[\"用来监测网络通信故障\",{\"1\":{\"360\":1}}],[\"用来衡量\",{\"1\":{\"310\":1}}],[\"用来存储函数调用时的临时变量\",{\"1\":{\"219\":1}}],[\"用来指定字节序\",{\"1\":{\"88\":1}}],[\"用大\",{\"1\":{\"208\":1}}],[\"用链表的应用\",{\"0\":{\"174\":1}}],[\"用摊还分析法\",{\"1\":{\"154\":1}}],[\"用该文件输入专用于自己使用的\",{\"1\":{\"129\":1}}],[\"用列表方式列出\",{\"1\":{\"125\":1}}],[\"用户的主目录为\",{\"1\":{\"124\":2}}],[\"用户名为\",{\"1\":{\"124\":1}}],[\"用户\",{\"0\":{\"124\":1}}],[\"用十六进制\",{\"1\":{\"112\":1}}],[\"用将字节序列作进一步的适应性编码处理\",{\"1\":{\"89\":1}}],[\"用数字编号表示字符\",{\"1\":{\"86\":1}}],[\"用相同的\",{\"1\":{\"69\":1}}],[\"用于在不同的自治系统\",{\"1\":{\"370\":1}}],[\"用于在企业内部网络或自治系统中进行路由选择\",{\"1\":{\"370\":1}}],[\"用于本机之间的通信\",{\"1\":{\"367\":1}}],[\"用于区分连续\",{\"1\":{\"361\":1}}],[\"用于迭代批次\",{\"0\":{\"319\":1}}],[\"用于排队请求\",{\"1\":{\"188\":1}}],[\"用于指示打印机的打印针头退到行首\",{\"1\":{\"94\":1}}],[\"用于存储每个状态\",{\"1\":{\"69\":1}}],[\"用于选择最好的\",{\"1\":{\"69\":1}}],[\"用于训练智能代理\",{\"1\":{\"48\":1}}],[\"用于回答问题和生成文本\",{\"1\":{\"39\":1}}],[\"用于传递上下文\",{\"1\":{\"28\":1}}],[\"用重复的\",{\"1\":{\"28\":1}}],[\"用\",{\"1\":{\"11\":4,\"17\":1,\"18\":4,\"19\":1,\"27\":1,\"49\":1,\"108\":1,\"180\":1,\"213\":1,\"255\":1,\"375\":1}}],[\"guide\",{\"1\":{\"419\":1,\"435\":1}}],[\"guilty\",{\"1\":{\"401\":3,\"403\":1}}],[\"guess\",{\"1\":{\"403\":1,\"434\":1}}],[\"gaze\",{\"1\":{\"426\":2}}],[\"game\",{\"1\":{\"383\":3,\"386\":2}}],[\"gaming\",{\"1\":{\"383\":4,\"386\":1}}],[\"gateway\",{\"1\":{\"364\":1,\"370\":4}}],[\"gained\",{\"1\":{\"345\":1}}],[\"gain\",{\"1\":{\"345\":1}}],[\"garden\",{\"1\":{\"246\":1}}],[\"garbage\",{\"1\":{\"173\":1}}],[\"gift\",{\"1\":{\"435\":4}}],[\"gifts\",{\"1\":{\"435\":1}}],[\"giraffes\",{\"1\":{\"434\":2}}],[\"gigabits\",{\"1\":{\"383\":2}}],[\"github\",{\"1\":{\"342\":2,\"343\":1}}],[\"gitattributes\",{\"1\":{\"336\":1,\"337\":1}}],[\"git\",{\"0\":{\"337\":1},\"1\":{\"327\":1,\"329\":2,\"334\":2,\"335\":2,\"336\":16,\"337\":23}}],[\"given\",{\"1\":{\"402\":1}}],[\"give\",{\"1\":{\"391\":1,\"408\":1,\"409\":2,\"413\":1,\"435\":1}}],[\"gives\",{\"1\":{\"237\":1}}],[\"giving\",{\"1\":{\"227\":1,\"434\":2}}],[\"gpu\",{\"1\":{\"316\":1,\"323\":2,\"325\":1,\"326\":1}}],[\"gpt\",{\"1\":{\"269\":1,\"270\":1,\"273\":2,\"293\":1}}],[\"gt\",{\"1\":{\"258\":1}}],[\"gt​−v\",{\"1\":{\"67\":1}}],[\"gt​\",{\"1\":{\"67\":2,\"68\":2}}],[\"gt​∣st​=s\",{\"1\":{\"64\":2}}],[\"gym\",{\"1\":{\"244\":1}}],[\"gold\",{\"1\":{\"435\":1}}],[\"gogh\",{\"1\":{\"407\":1}}],[\"gonna\",{\"1\":{\"400\":1}}],[\"going\",{\"1\":{\"345\":1,\"401\":1,\"413\":1,\"428\":2,\"435\":1}}],[\"google\",{\"1\":{\"265\":1}}],[\"good\",{\"1\":{\"234\":1,\"244\":2,\"400\":2,\"401\":1,\"409\":1,\"432\":1,\"434\":1,\"435\":7}}],[\"gotten\",{\"1\":{\"345\":1}}],[\"got\",{\"1\":{\"244\":1,\"301\":1,\"400\":1,\"403\":1,\"417\":1,\"419\":1,\"428\":1,\"434\":2,\"435\":1}}],[\"go\",{\"0\":{\"434\":1},\"1\":{\"242\":1,\"397\":1,\"402\":2,\"406\":3,\"408\":3,\"409\":2,\"410\":1,\"411\":1,\"419\":1,\"430\":2,\"431\":1,\"432\":1,\"434\":3}}],[\"gc\",{\"1\":{\"173\":1}}],[\"gzip\",{\"1\":{\"342\":1}}],[\"gz\",{\"1\":{\"129\":3,\"342\":5,\"343\":2}}],[\"gbps\",{\"1\":{\"383\":1}}],[\"gb1212\",{\"1\":{\"101\":2}}],[\"gb18030\",{\"0\":{\"102\":1},\"1\":{\"99\":1,\"102\":7}}],[\"gb2312\",{\"0\":{\"100\":1},\"1\":{\"99\":2,\"100\":4}}],[\"gb2312的汉字编号空间是94\",{\"1\":{\"86\":1}}],[\"gb\",{\"1\":{\"99\":5,\"103\":1}}],[\"gbk\",{\"0\":{\"98\":1,\"101\":1},\"1\":{\"99\":2,\"101\":2,\"102\":4,\"107\":1}}],[\"gbk2312\",{\"0\":{\"98\":1}}],[\"g\",{\"0\":{\"138\":2,\"197\":2,\"199\":2},\"1\":{\"48\":1,\"225\":5,\"232\":1,\"435\":4}}],[\"gripping\",{\"1\":{\"435\":2}}],[\"growing\",{\"1\":{\"428\":1,\"433\":1}}],[\"growth\",{\"1\":{\"407\":1}}],[\"grows\",{\"1\":{\"407\":1}}],[\"groove\",{\"1\":{\"394\":2}}],[\"ground\",{\"1\":{\"244\":1}}],[\"groupby\",{\"1\":{\"260\":4}}],[\"group\",{\"0\":{\"260\":1},\"1\":{\"112\":1,\"124\":1,\"260\":1,\"423\":1}}],[\"grlivarea\",{\"1\":{\"255\":1}}],[\"gratitude\",{\"1\":{\"435\":1}}],[\"graphic\",{\"1\":{\"428\":1}}],[\"graphology\",{\"1\":{\"412\":1}}],[\"grad\",{\"1\":{\"283\":2,\"301\":1,\"302\":3,\"303\":1,\"320\":1,\"323\":1,\"324\":1,\"325\":2}}],[\"gradient\",{\"0\":{\"57\":1,\"58\":1,\"61\":1,\"63\":2},\"1\":{\"44\":2,\"57\":6,\"59\":5,\"60\":3,\"63\":2}}],[\"grayscale\",{\"1\":{\"43\":1}}],[\"grb\",{\"1\":{\"43\":1}}],[\"greeting\",{\"1\":{\"435\":1}}],[\"green\",{\"1\":{\"246\":2,\"407\":1}}],[\"greedy\",{\"1\":{\"42\":1,\"69\":3,\"70\":3}}],[\"grep\",{\"1\":{\"127\":2,\"128\":1,\"132\":1}}],[\"greater\",{\"1\":{\"258\":1}}],[\"great\",{\"1\":{\"10\":1,\"248\":1,\"345\":1,\"392\":1,\"397\":1,\"399\":2,\"400\":1,\"403\":1,\"425\":2,\"426\":1,\"435\":2}}],[\"glossop\",{\"1\":{\"428\":1}}],[\"global\",{\"0\":{\"14\":1},\"1\":{\"14\":1,\"60\":1,\"112\":2,\"367\":1,\"385\":1}}],[\"gluten\",{\"1\":{\"345\":2}}],[\"glue\",{\"1\":{\"28\":1,\"310\":1,\"311\":1,\"314\":1,\"316\":2,\"317\":1,\"324\":1}}],[\"gesture\",{\"1\":{\"435\":2}}],[\"gemini\",{\"1\":{\"423\":1}}],[\"gentle\",{\"1\":{\"435\":1}}],[\"genres\",{\"1\":{\"403\":3,\"435\":1}}],[\"generation\",{\"1\":{\"267\":1}}],[\"generator\",{\"1\":{\"267\":2}}],[\"generalize\",{\"1\":{\"248\":2}}],[\"generalized\",{\"1\":{\"74\":2}}],[\"gelu\",{\"1\":{\"285\":1}}],[\"geospatial\",{\"1\":{\"259\":1}}],[\"getting\",{\"1\":{\"419\":2,\"434\":1}}],[\"get\",{\"1\":{\"69\":1,\"70\":1,\"128\":1,\"129\":1,\"133\":1,\"193\":1,\"232\":1,\"242\":5,\"244\":4,\"322\":2,\"325\":4,\"383\":1,\"394\":3,\"399\":1,\"400\":1,\"403\":1,\"417\":2,\"419\":1,\"421\":1,\"424\":1,\"428\":2,\"430\":4,\"434\":8,\"435\":1}}],[\"gets\",{\"1\":{\"69\":1,\"244\":1,\"394\":1}}],[\"getownpropertysymbols\",{\"1\":{\"13\":1,\"18\":1}}],[\"germany\",{\"1\":{\"10\":1}}],[\"只读\",{\"1\":{\"373\":1}}],[\"只必传的\",{\"1\":{\"288\":1}}],[\"只接收\",{\"1\":{\"288\":1}}],[\"只记录数据已经被删除\",{\"1\":{\"136\":1}}],[\"只对单用户有效\",{\"1\":{\"129\":1}}],[\"只对当前用户生效\",{\"1\":{\"129\":1}}],[\"只知道自己的\",{\"1\":{\"116\":1}}],[\"只支持十六进制前缀\",{\"1\":{\"379\":1}}],[\"只支持\",{\"1\":{\"112\":1}}],[\"只要过网关\",{\"1\":{\"366\":1}}],[\"只要文件有\",{\"1\":{\"131\":1}}],[\"只要求高字节大于\",{\"1\":{\"101\":1}}],[\"只要表示的是同一个字符\",{\"1\":{\"90\":1}}],[\"只要价格不冲破中轨\",{\"1\":{\"3\":1}}],[\"只要价格不脱离上轨区域就耐心持有\",{\"1\":{\"3\":1}}],[\"只要价格不跌破中轨\",{\"1\":{\"3\":1}}],[\"只有相同\",{\"1\":{\"358\":1}}],[\"只有在极端情况下\",{\"1\":{\"209\":1}}],[\"只有个别情况下时间复杂度比较高\",{\"1\":{\"166\":1}}],[\"只有同一块代码在不同的情况下\",{\"1\":{\"165\":1}}],[\"只有是一个网段的\",{\"1\":{\"113\":1}}],[\"只有一点点变化\",{\"1\":{\"59\":1}}],[\"只有\",{\"1\":{\"49\":1,\"356\":1}}],[\"只需要\",{\"1\":{\"292\":1}}],[\"只需要对\",{\"1\":{\"210\":1}}],[\"只需要重新打开一个\",{\"1\":{\"129\":1}}],[\"只需要当前的状态来决定采取什么行动\",{\"1\":{\"49\":1}}],[\"只需给键名前加一个\",{\"1\":{\"10\":1}}],[\"只会导出\",{\"1\":{\"36\":1}}],[\"只获取元素\",{\"1\":{\"26\":1}}],[\"只能看到已经翻译好的字词\",{\"1\":{\"275\":1}}],[\"只能从头到尾遍历链表\",{\"1\":{\"196\":1}}],[\"只能访问到该结点以及它之后的结点\",{\"1\":{\"170\":1}}],[\"只能向后翻页\",{\"1\":{\"127\":1}}],[\"只能先把客户端放在\",{\"1\":{\"121\":1}}],[\"只能通过查表这样低效率的办法\",{\"1\":{\"107\":1}}],[\"只能得到\",{\"1\":{\"28\":1}}],[\"只能执行\",{\"1\":{\"26\":1}}],[\"只能查找全局注册表中的\",{\"1\":{\"16\":1}}],[\"只能是\",{\"1\":{\"11\":1,\"376\":1}}],[\"显然\",{\"1\":{\"279\":1}}],[\"显然这样的模型在实际中不会获得好的效果\",{\"1\":{\"275\":1}}],[\"显示地将\",{\"1\":{\"26\":1}}],[\"显示调用迭代器\",{\"0\":{\"21\":1}}],[\"显示\",{\"1\":{\"10\":1}}],[\"显式转换为数字\",{\"1\":{\"10\":1}}],[\"不支持科学计数法\",{\"1\":{\"379\":1}}],[\"不支持的部分中文简体\",{\"1\":{\"101\":1}}],[\"不想花钱就用慢的网络吧\",{\"1\":{\"367\":1}}],[\"不想多付钱\",{\"1\":{\"367\":1}}],[\"不变网关被称为转发网关\",{\"1\":{\"366\":1}}],[\"不分提到过\",{\"1\":{\"364\":1}}],[\"不分片\",{\"1\":{\"362\":1}}],[\"不通不代表网络不通\",{\"1\":{\"361\":1}}],[\"不在右边的网口\",{\"1\":{\"355\":1}}],[\"不是\",{\"1\":{\"318\":1}}],[\"不是整数属性\",{\"1\":{\"10\":2}}],[\"不论如何\",{\"1\":{\"306\":1}}],[\"不断更新质心的位置\",{\"1\":{\"261\":1}}],[\"不喜欢\",{\"0\":{\"231\":1}}],[\"不大时\",{\"1\":{\"214\":1}}],[\"不稳定\",{\"1\":{\"205\":1,\"209\":1}}],[\"不做交换\",{\"1\":{\"203\":1}}],[\"不带哨兵结点的链表叫做不带头链表\",{\"1\":{\"180\":1}}],[\"不管链表是否为空\",{\"1\":{\"180\":1}}],[\"不管采用哪种探测方法\",{\"1\":{\"151\":1}}],[\"不管采用上面的哪种方法\",{\"1\":{\"64\":1}}],[\"不要停下来\",{\"1\":{\"149\":1}}],[\"不要用\",{\"0\":{\"27\":1}}],[\"不能处理其他任何进制\",{\"1\":{\"379\":1}}],[\"不能分片\",{\"1\":{\"362\":1}}],[\"不能简单地只把要删除的元素设置为空\",{\"1\":{\"149\":1}}],[\"不能自动转换成\",{\"1\":{\"12\":1}}],[\"不能自动转化成\",{\"1\":{\"12\":1}}],[\"不挂起\",{\"1\":{\"132\":1}}],[\"不会像\",{\"1\":{\"362\":1}}],[\"不会为其他客户分配同一个\",{\"1\":{\"117\":1}}],[\"不会允许配置成功\",{\"1\":{\"113\":1}}],[\"不会在任何网络中出现\",{\"1\":{\"112\":1}}],[\"不对进入的数据包做任何处理\",{\"1\":{\"112\":1}}],[\"不可显示不可打印的控制字符del\",{\"1\":{\"94\":1}}],[\"不可显示不可打印的控制字符或通讯专用字符\",{\"1\":{\"94\":1}}],[\"不考虑奖励\",{\"1\":{\"62\":1}}],[\"不必额外存其他数据\",{\"1\":{\"59\":1}}],[\"不直接学策略函数\",{\"1\":{\"56\":1}}],[\"不同的模型会使用不同的特殊词\",{\"1\":{\"306\":1}}],[\"不同的加载方法\",{\"0\":{\"286\":1}}],[\"不同的码元序列或是字节序列\",{\"1\":{\"90\":1}}],[\"不同特征的\",{\"1\":{\"261\":1}}],[\"不同系统的配置文件格式不同\",{\"1\":{\"113\":1}}],[\"不同\",{\"1\":{\"39\":1,\"261\":1,\"321\":1,\"358\":1,\"370\":1}}],[\"不同于具有特定字型的\",{\"1\":{\"85\":1}}],[\"不同于\",{\"1\":{\"10\":2,\"107\":1}}],[\"不用担心引入得太多\",{\"1\":{\"32\":1}}],[\"不需要全局知识\",{\"1\":{\"369\":1}}],[\"不需要\",{\"1\":{\"335\":1}}],[\"不需要进行交换\",{\"1\":{\"203\":1}}],[\"不需要进一步进行类型转化\",{\"1\":{\"27\":1}}],[\"不需要扩容\",{\"1\":{\"154\":1}}],[\"不需要重启\",{\"1\":{\"129\":1}}],[\"不需要在最后加分号\",{\"1\":{\"31\":1}}],[\"不改变原数组\",{\"1\":{\"28\":2}}],[\"不获取索引\",{\"1\":{\"26\":1}}],[\"不过使用效果肯定很差\",{\"1\":{\"286\":1}}],[\"不过\",{\"1\":{\"188\":1}}],[\"不过很少这样做\",{\"1\":{\"21\":1}}],[\"不过并行执行\",{\"1\":{\"20\":1}}],[\"不存在\",{\"1\":{\"15\":1}}],[\"⇒\",{\"1\":{\"10\":2}}],[\"其冲突的代价更高\",{\"1\":{\"154\":1}}],[\"其他交换机只能转发\",{\"1\":{\"356\":1}}],[\"其他的库文件会在\",{\"1\":{\"129\":1}}],[\"其他用户的权限\",{\"1\":{\"125\":1}}],[\"其他属性按照创建的顺序显示\",{\"1\":{\"10\":1}}],[\"其编码也都是\",{\"1\":{\"107\":1}}],[\"其余的都是\",{\"1\":{\"337\":1}}],[\"其余的参数都可以设置为默认值\",{\"1\":{\"315\":1}}],[\"其余的字符全部重新统一编码\",{\"1\":{\"107\":1}}],[\"其余的是一些标点符号\",{\"1\":{\"94\":1}}],[\"其值必须大于\",{\"1\":{\"100\":1}}],[\"其内共包含了\",{\"1\":{\"97\":1}}],[\"其\",{\"1\":{\"45\":1}}],[\"其中包含到其他节点的最短距离\",{\"1\":{\"369\":1}}],[\"其中包含来自于其他数组和其他项的值\",{\"1\":{\"28\":1}}],[\"其中会填上你的\",{\"1\":{\"331\":1}}],[\"其中记录了模型的权重\",{\"1\":{\"287\":1}}],[\"其中一级汉字\",{\"1\":{\"100\":1}}],[\"其中的模型不局限于\",{\"1\":{\"327\":1}}],[\"其中的每个单元格对应一个状态\",{\"1\":{\"69\":1}}],[\"其中的所有元素都会被复制\",{\"1\":{\"28\":1}}],[\"其中使用\",{\"1\":{\"17\":1}}],[\"其中\",{\"1\":{\"3\":1,\"94\":1,\"97\":1,\"159\":1,\"180\":1,\"196\":1,\"204\":1,\"208\":1,\"225\":1,\"288\":1,\"360\":1}}],[\"箱单与\",{\"1\":{\"9\":1}}],[\"或某种度量来表示\",{\"1\":{\"369\":1}}],[\"或命名实体\",{\"1\":{\"264\":1}}],[\"或迭代到最大次数\",{\"1\":{\"261\":1}}],[\"或左偏\",{\"1\":{\"257\":1}}],[\"或移动\",{\"1\":{\"201\":1}}],[\"或puz\",{\"1\":{\"106\":1}}],[\"或其他字符\",{\"1\":{\"99\":1}}],[\"或码点编号\",{\"1\":{\"86\":1}}],[\"或称\",{\"1\":{\"46\":1,\"62\":1}}],[\"或称智能代理\",{\"1\":{\"38\":1}}],[\"或者想先运行数据处理的整体代码\",{\"1\":{\"310\":1}}],[\"或者区间被缩小为\",{\"1\":{\"137\":1}}],[\"或者和我的一个网卡是否在同一个网段\",{\"1\":{\"113\":1}}],[\"或者说该位置后面要匹配\",{\"1\":{\"225\":1}}],[\"或者说\",{\"1\":{\"97\":1}}],[\"或者进程长度编码等无损压缩技术\",{\"1\":{\"89\":1}}],[\"或者映射到\",{\"1\":{\"86\":1}}],[\"或者\",{\"1\":{\"68\":1,\"112\":2,\"127\":1,\"279\":1,\"327\":1,\"329\":1}}],[\"或者它可以定义一个在该状态下可能行动的概率分布\",{\"1\":{\"55\":1}}],[\"或者输出\",{\"1\":{\"12\":1}}],[\"或者价格下跌且obv也下跌\",{\"1\":{\"6\":1}}],[\"或\",{\"0\":{\"281\":1},\"1\":{\"9\":1,\"13\":1,\"18\":1,\"19\":1,\"47\":1,\"66\":1,\"86\":1,\"88\":1,\"127\":1,\"129\":3,\"152\":1,\"224\":2,\"258\":1,\"261\":1,\"273\":1,\"291\":1,\"315\":1,\"325\":1,\"332\":2,\"335\":1,\"346\":1,\"360\":4,\"379\":1}}],[\"60\",{\"1\":{\"367\":4}}],[\"60mg\",{\"1\":{\"345\":1}}],[\"6617\",{\"1\":{\"320\":1}}],[\"62\",{\"1\":{\"313\":1}}],[\"6251\",{\"1\":{\"312\":1}}],[\"67\",{\"1\":{\"313\":6}}],[\"6763\",{\"1\":{\"100\":1}}],[\"6123\",{\"1\":{\"283\":2}}],[\"6a\",{\"1\":{\"224\":1}}],[\"65\",{\"1\":{\"111\":1}}],[\"65~90\",{\"1\":{\"94\":1}}],[\"682\",{\"1\":{\"100\":2}}],[\"646\",{\"1\":{\"94\":1,\"108\":1}}],[\"64位甚至高达128位\",{\"1\":{\"83\":1}}],[\"64\",{\"1\":{\"83\":1,\"375\":2}}],[\"6\",{\"0\":{\"90\":1,\"120\":1,\"135\":1,\"183\":1,\"236\":1,\"378\":1,\"379\":1,\"380\":1,\"381\":1,\"382\":1,\"398\":1},\"1\":{\"9\":1,\"11\":1,\"26\":1,\"28\":4,\"112\":1,\"113\":4,\"225\":1,\"269\":1,\"345\":1,\"352\":2,\"353\":4,\"376\":1,\"406\":1}}],[\"但我们只传递来一个序列\",{\"1\":{\"301\":1}}],[\"但我们通常不会这样直接加和\",{\"1\":{\"49\":1}}],[\"但在一些情况下\",{\"1\":{\"260\":1}}],[\"但当某个组合特别重要时\",{\"1\":{\"260\":1}}],[\"但通常受益较少\",{\"1\":{\"260\":1}}],[\"但这种做法并不能完全解决问题\",{\"1\":{\"192\":1}}],[\"但采用的是单字节码元\",{\"1\":{\"99\":2}}],[\"但不能学习更复杂的关系\",{\"1\":{\"260\":1}}],[\"但不包括生僻字\",{\"1\":{\"99\":1}}],[\"但不是\",{\"1\":{\"22\":1}}],[\"但实际上只有\",{\"1\":{\"97\":1}}],[\"但有时在一些通讯系统中也被用作奇偶校验位\",{\"1\":{\"94\":1}}],[\"但对于达到最优性能而言\",{\"1\":{\"59\":1}}],[\"但也因语言而异\",{\"1\":{\"292\":1}}],[\"但也会导致目标值本身发生变化\",{\"1\":{\"46\":1}}],[\"但也可以根据任务的需要具备不同程度的自主性\",{\"1\":{\"38\":1}}],[\"但它们在目标和应用领域上存在显著的差异\",{\"1\":{\"39\":1}}],[\"但它们更多地是基于自然语言处理技术的被动响应式系统\",{\"1\":{\"39\":1}}],[\"但由于修改了数组本身\",{\"1\":{\"28\":1}}],[\"但是用\",{\"1\":{\"377\":1}}],[\"但是无法将分组送达目的网络\",{\"1\":{\"360\":1}}],[\"但是无非就是\",{\"1\":{\"113\":1}}],[\"但是没它啥事\",{\"1\":{\"355\":1}}],[\"但是它没有办法处理\",{\"1\":{\"335\":1}}],[\"但是它不会告诉你这个模型表现得怎么样\",{\"1\":{\"315\":1}}],[\"但是它只涉及逻辑层面\",{\"1\":{\"87\":1}}],[\"但是也有一些不足\",{\"1\":{\"312\":1}}],[\"但是也不大可能出现每次分区点都选得很差的情况\",{\"1\":{\"216\":1}}],[\"但是我们需要传入句子对\",{\"1\":{\"312\":1}}],[\"但是我们不知道实际的\",{\"1\":{\"46\":1}}],[\"但是模型看到了目标中的第4个单词\",{\"1\":{\"275\":1}}],[\"但是不允许它使用没有预测的词汇\",{\"1\":{\"275\":1}}],[\"但是不适用于数组\",{\"1\":{\"26\":1}}],[\"但是每个特征本身却没什么信息量\",{\"1\":{\"255\":1}}],[\"但是实际应用中\",{\"1\":{\"255\":1}}],[\"但是相关性只能检测到线性关系\",{\"1\":{\"253\":1}}],[\"但是归并排序并没有快排那样应用广泛\",{\"1\":{\"208\":1}}],[\"但是从代码上看\",{\"1\":{\"206\":1}}],[\"但是插入排序更受欢迎\",{\"1\":{\"206\":1}}],[\"但是可能会导致过多的请求排队等待\",{\"1\":{\"188\":1}}],[\"但是可以发送\",{\"1\":{\"121\":1}}],[\"但是锁粒度大并发度会比较低\",{\"1\":{\"187\":1}}],[\"但是能够支持双向遍历\",{\"1\":{\"171\":1}}],[\"但是在实际的软件开发中\",{\"1\":{\"198\":1}}],[\"但是在实际中\",{\"1\":{\"146\":1}}],[\"但是在计算\",{\"1\":{\"193\":1}}],[\"但是在没安装操作系统之前\",{\"1\":{\"121\":1}}],[\"但是抓包后可能看到的名称还是\",{\"1\":{\"116\":1}}],[\"但是\",{\"1\":{\"113\":1,\"125\":1,\"140\":1,\"361\":1,\"375\":1}}],[\"但是目的主机的\",{\"1\":{\"360\":1}}],[\"但是目的\",{\"1\":{\"113\":1}}],[\"但是配置的\",{\"1\":{\"113\":1}}],[\"但是通信范围比较小\",{\"1\":{\"112\":1}}],[\"但是要将一个网络包从一个地方传到另一个地方\",{\"1\":{\"112\":1}}],[\"但是这和它也没啥关系\",{\"1\":{\"355\":1}}],[\"但是这个代码页实际上并没有真正使用\",{\"1\":{\"102\":1}}],[\"但是这样的问题是\",{\"1\":{\"20\":1}}],[\"但是会给患者带来麻烦\",{\"1\":{\"81\":1}}],[\"但是返回的是元素的索引而不是元素本身\",{\"1\":{\"28\":1}}],[\"但是对于具体问题\",{\"1\":{\"270\":1}}],[\"但是对于\",{\"1\":{\"22\":1}}],[\"但\",{\"1\":{\"9\":1,\"101\":1}}],[\"但却是很好的进场点\",{\"1\":{\"3\":1}}],[\"f0f7783\",{\"1\":{\"337\":1}}],[\"flip\",{\"1\":{\"435\":1}}],[\"flicking\",{\"1\":{\"435\":1}}],[\"flexibility\",{\"1\":{\"402\":1}}],[\"flexible\",{\"1\":{\"244\":2}}],[\"flush\",{\"1\":{\"367\":1}}],[\"flood\",{\"1\":{\"429\":1}}],[\"floor\",{\"1\":{\"246\":1}}],[\"flower\",{\"1\":{\"407\":1,\"408\":1,\"410\":1,\"411\":2}}],[\"flowers\",{\"0\":{\"407\":1,\"408\":1,\"409\":1,\"410\":1,\"411\":1},\"1\":{\"246\":1,\"407\":8,\"408\":2,\"410\":1,\"411\":4,\"435\":1}}],[\"florist\",{\"1\":{\"407\":2}}],[\"flag\",{\"1\":{\"203\":3,\"206\":1}}],[\"flags\",{\"1\":{\"112\":1}}],[\"flatmap\",{\"1\":{\"28\":1}}],[\"flat\",{\"1\":{\"28\":1,\"246\":3}}],[\"found\",{\"1\":{\"428\":1}}],[\"foundation\",{\"1\":{\"385\":1}}],[\"food\",{\"1\":{\"401\":1,\"417\":1,\"419\":1}}],[\"footprints\",{\"1\":{\"246\":1}}],[\"football\",{\"1\":{\"237\":1}}],[\"following\",{\"1\":{\"434\":1}}],[\"follow\",{\"1\":{\"397\":1,\"403\":1}}],[\"folder>\",{\"1\":{\"336\":5,\"337\":2}}],[\"focusing\",{\"1\":{\"435\":1}}],[\"focused\",{\"1\":{\"398\":1}}],[\"focus\",{\"1\":{\"393\":1,\"404\":2,\"405\":1,\"406\":2}}],[\"foxes\",{\"1\":{\"389\":1,\"433\":1}}],[\"fond\",{\"1\":{\"231\":1,\"435\":3}}],[\"fortunately\",{\"1\":{\"419\":1}}],[\"fortokenclassification\",{\"1\":{\"280\":1}}],[\"forrelaxation\",{\"1\":{\"398\":1}}],[\"ford\",{\"1\":{\"369\":1}}],[\"forsequenceclassification\",{\"1\":{\"280\":1}}],[\"forquestionanswering\",{\"1\":{\"280\":1}}],[\"forcausallm\",{\"1\":{\"280\":1}}],[\"formultiplechoice\",{\"1\":{\"280\":1}}],[\"formal\",{\"1\":{\"428\":1}}],[\"formaskedlm\",{\"1\":{\"280\":1}}],[\"format\",{\"1\":{\"87\":1,\"88\":1,\"318\":1,\"341\":1}}],[\"form\",{\"0\":{\"87\":1}}],[\"foreign\",{\"1\":{\"417\":2}}],[\"forests\",{\"1\":{\"74\":1,\"433\":1}}],[\"foreach\",{\"1\":{\"28\":1}}],[\"for\",{\"0\":{\"15\":1,\"395\":1,\"398\":1},\"1\":{\"9\":3,\"10\":1,\"11\":1,\"13\":2,\"15\":3,\"16\":2,\"18\":2,\"19\":5,\"20\":7,\"21\":4,\"24\":1,\"26\":6,\"27\":1,\"74\":1,\"75\":2,\"94\":1,\"159\":1,\"164\":1,\"194\":1,\"203\":2,\"204\":2,\"205\":2,\"208\":1,\"209\":1,\"213\":6,\"227\":3,\"232\":2,\"242\":2,\"244\":1,\"246\":2,\"248\":3,\"255\":2,\"260\":1,\"267\":2,\"268\":2,\"279\":2,\"301\":3,\"303\":2,\"304\":2,\"306\":3,\"307\":1,\"313\":3,\"319\":2,\"323\":3,\"324\":2,\"325\":5,\"337\":1,\"338\":1,\"345\":6,\"383\":2,\"384\":1,\"385\":1,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"397\":3,\"398\":2,\"401\":1,\"402\":3,\"403\":6,\"405\":5,\"406\":5,\"407\":1,\"408\":4,\"410\":1,\"411\":4,\"415\":2,\"416\":1,\"417\":3,\"419\":5,\"424\":1,\"428\":7,\"430\":1,\"434\":4,\"435\":14}}],[\"fg\",{\"1\":{\"224\":1}}],[\"f\",{\"1\":{\"162\":2,\"191\":6,\"192\":2,\"193\":12,\"194\":1,\"224\":2,\"375\":3}}],[\"ffff\",{\"1\":{\"375\":6}}],[\"ff\",{\"1\":{\"112\":6}}],[\"fp16=true\",{\"1\":{\"316\":1}}],[\"fp\",{\"1\":{\"77\":1,\"81\":5}}],[\"f1−score=precision+recall2×precision×recall​\",{\"1\":{\"81\":1}}],[\"f1\",{\"0\":{\"81\":2},\"1\":{\"77\":1,\"81\":3,\"316\":2,\"324\":1}}],[\"festival\",{\"1\":{\"435\":1}}],[\"festivals\",{\"1\":{\"435\":1}}],[\"fewer\",{\"1\":{\"435\":1}}],[\"few\",{\"1\":{\"396\":1,\"406\":1,\"411\":2,\"425\":1,\"435\":1}}],[\"felt\",{\"1\":{\"345\":1}}],[\"feed\",{\"1\":{\"435\":1}}],[\"feedback\",{\"1\":{\"69\":1,\"244\":1}}],[\"fees\",{\"1\":{\"399\":1}}],[\"feet\",{\"1\":{\"345\":2,\"432\":1}}],[\"feelings\",{\"1\":{\"411\":1}}],[\"feeling\",{\"1\":{\"406\":3,\"408\":1,\"419\":1}}],[\"feel\",{\"1\":{\"345\":2,\"394\":1,\"403\":1,\"406\":1,\"413\":1,\"431\":1,\"435\":1}}],[\"feels\",{\"1\":{\"274\":2}}],[\"feature\",{\"1\":{\"252\":1,\"253\":1,\"255\":2,\"257\":1,\"259\":1,\"260\":1}}],[\"features=discrete\",{\"1\":{\"255\":2}}],[\"features\",{\"0\":{\"256\":1,\"281\":1},\"1\":{\"75\":1,\"255\":7,\"259\":1,\"311\":5,\"312\":3,\"342\":3}}],[\"fed\",{\"1\":{\"237\":3}}],[\"fence\",{\"1\":{\"233\":1,\"435\":1}}],[\"favorable\",{\"1\":{\"435\":1}}],[\"favorite\",{\"0\":{\"393\":1,\"394\":1},\"1\":{\"393\":2,\"394\":1,\"406\":1,\"411\":1,\"428\":1,\"435\":2}}],[\"fading\",{\"1\":{\"428\":1}}],[\"famous\",{\"1\":{\"416\":1}}],[\"family\",{\"1\":{\"232\":1}}],[\"fall\",{\"1\":{\"406\":1}}],[\"fallen\",{\"1\":{\"406\":1}}],[\"false\",{\"1\":{\"12\":1,\"20\":2,\"27\":1,\"47\":1,\"77\":2,\"81\":2,\"203\":1,\"258\":1,\"377\":1}}],[\"far\",{\"1\":{\"403\":1,\"414\":1,\"434\":2}}],[\"failed\",{\"1\":{\"360\":1}}],[\"fail\",{\"1\":{\"301\":1,\"421\":1}}],[\"fascinated\",{\"1\":{\"415\":1}}],[\"fascinating\",{\"1\":{\"244\":1,\"416\":1,\"426\":1}}],[\"faster\",{\"1\":{\"383\":2,\"384\":1}}],[\"fast\",{\"1\":{\"112\":1,\"383\":1,\"401\":1}}],[\"fancywatching\",{\"1\":{\"419\":1}}],[\"fans\",{\"1\":{\"403\":1}}],[\"fantasy\",{\"1\":{\"403\":1}}],[\"fantastic\",{\"1\":{\"391\":1}}],[\"fan\",{\"1\":{\"231\":2,\"237\":1,\"401\":1,\"416\":1,\"419\":1}}],[\"facts\",{\"1\":{\"417\":3,\"419\":1}}],[\"factors\",{\"0\":{\"387\":1}}],[\"factorize\",{\"1\":{\"255\":1}}],[\"factor\",{\"1\":{\"151\":1}}],[\"facilities\",{\"1\":{\"244\":2}}],[\"facet\",{\"1\":{\"255\":1}}],[\"face\",{\"0\":{\"341\":1},\"1\":{\"71\":1,\"227\":1,\"327\":1,\"331\":1,\"334\":1,\"339\":1,\"340\":1,\"345\":2,\"403\":1,\"435\":1}}],[\"fa\",{\"1\":{\"112\":1}}],[\"fumble\",{\"1\":{\"434\":1}}],[\"fumbled\",{\"1\":{\"434\":1}}],[\"fun\",{\"1\":{\"434\":1}}],[\"func\",{\"1\":{\"28\":3}}],[\"functional\",{\"1\":{\"283\":1}}],[\"functions\",{\"1\":{\"64\":1}}],[\"function\",{\"1\":{\"9\":1,\"20\":1,\"23\":1,\"28\":5,\"31\":1,\"35\":3,\"44\":2,\"55\":1,\"56\":1,\"57\":3,\"59\":2,\"64\":5,\"66\":2,\"69\":4,\"312\":2,\"313\":2,\"314\":2,\"317\":2,\"325\":2,\"345\":1}}],[\"furthermore\",{\"1\":{\"403\":1}}],[\"furniture\",{\"1\":{\"244\":1,\"246\":1}}],[\"fuel\",{\"1\":{\"255\":2}}],[\"full\",{\"1\":{\"246\":1,\"339\":1,\"403\":3}}],[\"fully\",{\"1\":{\"43\":1}}],[\"future\",{\"0\":{\"413\":1},\"1\":{\"242\":1,\"403\":2,\"412\":1,\"420\":1}}],[\"fn=data\",{\"1\":{\"319\":2}}],[\"fn=<nlllossbackward0>\",{\"1\":{\"320\":1}}],[\"fn=<addmmbackward0>\",{\"1\":{\"301\":1,\"302\":3,\"303\":1}}],[\"fn=<addmmbackward>\",{\"1\":{\"283\":1}}],[\"fn=<softmaxbackward0>\",{\"1\":{\"283\":1}}],[\"fn\",{\"1\":{\"28\":4,\"77\":1,\"81\":4}}],[\"field\",{\"1\":{\"435\":1}}],[\"field=\",{\"1\":{\"342\":3,\"343\":1}}],[\"fictional\",{\"1\":{\"435\":4}}],[\"fiction\",{\"1\":{\"403\":1}}],[\"fi\",{\"1\":{\"387\":1,\"399\":1,\"435\":1}}],[\"first\",{\"1\":{\"312\":3,\"337\":1,\"370\":1,\"417\":1,\"435\":1}}],[\"fit\",{\"1\":{\"261\":1}}],[\"figures\",{\"1\":{\"417\":3,\"419\":1}}],[\"figure\",{\"1\":{\"255\":1}}],[\"fixed\",{\"0\":{\"46\":1},\"1\":{\"44\":1}}],[\"film\",{\"1\":{\"416\":1,\"419\":1,\"435\":1}}],[\"films\",{\"1\":{\"400\":1,\"416\":1,\"419\":1}}],[\"file>\",{\"1\":{\"335\":1}}],[\"files=data\",{\"1\":{\"342\":2,\"343\":1,\"345\":1}}],[\"files=\",{\"1\":{\"341\":4,\"342\":2}}],[\"files\",{\"0\":{\"334\":1},\"1\":{\"332\":1,\"334\":1,\"336\":3,\"341\":1,\"342\":5,\"343\":3,\"345\":2}}],[\"file\",{\"0\":{\"335\":1},\"1\":{\"132\":2,\"332\":2,\"334\":1,\"335\":3,\"336\":1,\"337\":6,\"341\":3}}],[\"filename\",{\"1\":{\"121\":2,\"131\":2}}],[\"filled\",{\"1\":{\"428\":2}}],[\"fill\",{\"1\":{\"28\":1,\"268\":1}}],[\"filter\",{\"1\":{\"28\":5,\"345\":2,\"346\":2}}],[\"finally\",{\"1\":{\"419\":1,\"434\":2}}],[\"finance\",{\"1\":{\"7\":1}}],[\"finger\",{\"1\":{\"345\":1}}],[\"fingers\",{\"1\":{\"246\":2,\"407\":1}}],[\"finetuned\",{\"1\":{\"279\":2,\"280\":2,\"282\":1,\"301\":2,\"307\":1,\"331\":2}}],[\"fine\",{\"1\":{\"270\":1,\"272\":1,\"309\":1,\"337\":1,\"340\":1}}],[\"finish\",{\"1\":{\"244\":1}}],[\"findlastindex\",{\"1\":{\"28\":1}}],[\"findindex\",{\"1\":{\"28\":1}}],[\"find\",{\"1\":{\"28\":4,\"164\":1,\"180\":2,\"228\":1,\"229\":1,\"248\":3,\"389\":1,\"406\":1,\"408\":1,\"416\":1,\"427\":2,\"435\":2}}],[\"friday\",{\"1\":{\"419\":1}}],[\"friendly\",{\"1\":{\"246\":1,\"248\":2,\"435\":1}}],[\"friendship\",{\"1\":{\"411\":1,\"428\":1}}],[\"friends\",{\"1\":{\"232\":1,\"393\":1,\"397\":2,\"398\":1,\"399\":1,\"419\":1,\"428\":1,\"435\":1}}],[\"fresh\",{\"1\":{\"397\":1,\"408\":1,\"411\":1,\"435\":2}}],[\"freedom\",{\"1\":{\"435\":1}}],[\"freely\",{\"1\":{\"435\":1}}],[\"free\",{\"1\":{\"393\":1}}],[\"frustrated\",{\"1\":{\"406\":1}}],[\"frustrating\",{\"1\":{\"383\":1,\"386\":1}}],[\"fruit\",{\"1\":{\"26\":2}}],[\"fruits\",{\"1\":{\"26\":23}}],[\"fr\",{\"1\":{\"339\":1}}],[\"frac=0\",{\"1\":{\"260\":1}}],[\"frames\",{\"1\":{\"42\":1}}],[\"front\",{\"0\":{\"450\":1},\"1\":{\"244\":1,\"421\":1}}],[\"from=\",{\"1\":{\"336\":1}}],[\"from\",{\"0\":{\"23\":1},\"1\":{\"19\":1,\"20\":4,\"23\":6,\"24\":1,\"28\":3,\"34\":1,\"35\":2,\"36\":8,\"69\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"234\":1,\"244\":2,\"246\":1,\"255\":1,\"259\":1,\"261\":1,\"267\":2,\"268\":1,\"279\":4,\"280\":3,\"282\":2,\"285\":1,\"286\":5,\"294\":5,\"295\":1,\"296\":2,\"301\":6,\"302\":1,\"307\":3,\"311\":1,\"312\":2,\"313\":1,\"314\":3,\"315\":4,\"316\":1,\"317\":3,\"319\":1,\"320\":2,\"321\":1,\"322\":1,\"323\":1,\"325\":7,\"331\":4,\"332\":2,\"335\":1,\"336\":1,\"337\":3,\"342\":1,\"345\":5,\"367\":7,\"384\":1,\"392\":2,\"404\":1,\"407\":1,\"408\":1,\"412\":1,\"419\":1,\"425\":1,\"428\":2,\"432\":1,\"434\":2,\"435\":4}}],[\"lurk\",{\"1\":{\"434\":1}}],[\"lurking\",{\"1\":{\"434\":1}}],[\"ll\",{\"1\":{\"406\":1,\"428\":1}}],[\"lke\",{\"1\":{\"406\":1}}],[\"lvs\",{\"1\":{\"370\":1}}],[\"lh\",{\"1\":{\"337\":1}}],[\"lfs\",{\"1\":{\"329\":1,\"334\":1,\"335\":1,\"336\":2,\"337\":10}}],[\"lf换行\",{\"1\":{\"94\":1}}],[\"lr=3e\",{\"1\":{\"325\":2}}],[\"lr=5e\",{\"1\":{\"321\":1}}],[\"lr\",{\"1\":{\"322\":1,\"323\":1,\"325\":4}}],[\"lru\",{\"0\":{\"175\":1},\"1\":{\"175\":1}}],[\"ly\",{\"1\":{\"293\":1}}],[\"lmplot\",{\"1\":{\"255\":2}}],[\"l+i\",{\"1\":{\"208\":1}}],[\"l+1\",{\"1\":{\"208\":2}}],[\"l\",{\"0\":{\"138\":2,\"197\":2,\"199\":2},\"1\":{\"125\":1,\"127\":2,\"208\":7,\"209\":10,\"225\":3,\"435\":1}}],[\"ls\",{\"1\":{\"125\":1,\"287\":1,\"337\":2,\"367\":1}}],[\"l1\",{\"1\":{\"112\":1}}],[\"lzw\",{\"1\":{\"89\":1}}],[\"laughed\",{\"1\":{\"419\":1}}],[\"launcher\",{\"1\":{\"325\":2}}],[\"launch\",{\"1\":{\"325\":1}}],[\"laze\",{\"1\":{\"390\":1}}],[\"later\",{\"1\":{\"428\":1}}],[\"latency\",{\"0\":{\"384\":1,\"386\":1,\"387\":1},\"1\":{\"383\":8,\"384\":2,\"386\":3,\"387\":2}}],[\"latitude\",{\"1\":{\"261\":1}}],[\"latitudes\",{\"1\":{\"259\":1}}],[\"latin\",{\"1\":{\"97\":1}}],[\"lan\",{\"1\":{\"355\":3}}],[\"languages\",{\"1\":{\"339\":1,\"393\":1,\"417\":1}}],[\"language\",{\"0\":{\"270\":1},\"1\":{\"339\":1,\"406\":1,\"415\":1}}],[\"lambda\",{\"1\":{\"345\":1,\"346\":2}}],[\"layer\",{\"1\":{\"285\":1,\"302\":1,\"345\":1}}],[\"layers\",{\"0\":{\"274\":1},\"1\":{\"43\":2,\"280\":1,\"285\":1,\"302\":1,\"303\":1}}],[\"lawyer\",{\"1\":{\"268\":1}}],[\"labels=2\",{\"1\":{\"315\":1,\"316\":1,\"320\":1,\"325\":2}}],[\"labels\",{\"1\":{\"313\":1,\"316\":1,\"318\":3,\"319\":1,\"324\":1}}],[\"labelsize=\",{\"1\":{\"255\":1}}],[\"label\",{\"1\":{\"267\":3,\"283\":1,\"311\":7,\"312\":3,\"316\":3,\"318\":2}}],[\"labelweight=\",{\"1\":{\"255\":1}}],[\"labour\",{\"1\":{\"244\":2}}],[\"laid\",{\"1\":{\"244\":1}}],[\"larger\",{\"1\":{\"389\":1,\"402\":1}}],[\"large\",{\"1\":{\"232\":1,\"234\":1,\"255\":1,\"334\":1,\"336\":1}}],[\"lasso\",{\"1\":{\"74\":1}}],[\"lastindexof\",{\"1\":{\"28\":1}}],[\"last\",{\"1\":{\"20\":2,\"281\":1,\"415\":1,\"423\":1}}],[\"literature\",{\"1\":{\"435\":1}}],[\"literacy\",{\"1\":{\"435\":1}}],[\"little\",{\"1\":{\"428\":1,\"434\":2,\"435\":1}}],[\"limit\",{\"1\":{\"435\":1}}],[\"limitations\",{\"1\":{\"338\":2}}],[\"limitation\",{\"1\":{\"43\":1}}],[\"lion\",{\"1\":{\"434\":1}}],[\"lions\",{\"1\":{\"389\":1,\"433\":1,\"434\":3,\"435\":1}}],[\"light\",{\"1\":{\"435\":1}}],[\"lighthearted\",{\"1\":{\"403\":2}}],[\"lighting\",{\"1\":{\"244\":1,\"404\":2}}],[\"lives\",{\"1\":{\"435\":1}}],[\"live\",{\"1\":{\"385\":1,\"424\":2,\"429\":1,\"432\":1,\"433\":1,\"435\":1}}],[\"living\",{\"1\":{\"246\":2,\"428\":1,\"434\":1,\"435\":1}}],[\"license\",{\"1\":{\"339\":1}}],[\"lifestyle\",{\"1\":{\"244\":1,\"415\":2,\"416\":1}}],[\"life\",{\"1\":{\"244\":1,\"246\":1,\"267\":2,\"279\":2,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1,\"345\":2,\"385\":1,\"391\":1,\"419\":1,\"428\":4,\"435\":4}}],[\"liberty\",{\"1\":{\"435\":1}}],[\"libraries\",{\"1\":{\"339\":1}}],[\"lib\",{\"1\":{\"133\":2}}],[\"linkedhashmap\",{\"1\":{\"154\":1}}],[\"link\",{\"1\":{\"112\":1,\"125\":1,\"367\":4,\"369\":1,\"370\":1}}],[\"linux\",{\"0\":{\"123\":1},\"1\":{\"112\":4,\"113\":3,\"122\":1,\"127\":2,\"128\":1,\"129\":6,\"133\":1,\"185\":1,\"370\":1}}],[\"lines\",{\"1\":{\"341\":1}}],[\"line\",{\"1\":{\"301\":1}}],[\"liner\",{\"1\":{\"74\":1}}],[\"linear\",{\"0\":{\"149\":1},\"1\":{\"74\":7,\"322\":1,\"325\":2}}],[\"listening\",{\"1\":{\"421\":1}}],[\"listen\",{\"1\":{\"404\":1,\"435\":1}}],[\"list\",{\"1\":{\"19\":1,\"128\":1,\"195\":1,\"255\":1,\"288\":1,\"332\":4,\"342\":1,\"346\":1,\"367\":1}}],[\"like\",{\"0\":{\"22\":1,\"391\":1,\"408\":1,\"410\":1,\"416\":1,\"418\":1,\"421\":1,\"424\":1,\"426\":1,\"430\":1,\"434\":1},\"1\":{\"19\":1,\"22\":3,\"24\":1,\"228\":2,\"231\":1,\"237\":1,\"248\":1,\"269\":3,\"274\":3,\"345\":1,\"389\":1,\"391\":1,\"397\":3,\"399\":1,\"403\":5,\"407\":1,\"415\":1,\"419\":1,\"420\":2,\"423\":1,\"425\":1,\"429\":2,\"431\":1,\"432\":2,\"434\":1,\"435\":3}}],[\"likes\",{\"1\":{\"9\":2,\"22\":2,\"23\":1}}],[\"leg\",{\"1\":{\"434\":2}}],[\"legs\",{\"1\":{\"345\":3}}],[\"leo\",{\"1\":{\"423\":1}}],[\"leisure\",{\"1\":{\"393\":1,\"397\":1,\"398\":1}}],[\"lexapro\",{\"1\":{\"345\":2}}],[\"led\",{\"1\":{\"304\":1}}],[\"levels\",{\"1\":{\"345\":1}}],[\"level\",{\"1\":{\"259\":2,\"293\":1,\"309\":1}}],[\"len\",{\"1\":{\"255\":1,\"313\":1,\"322\":1,\"325\":2,\"345\":2,\"346\":1}}],[\"length=8\",{\"1\":{\"303\":1,\"304\":1}}],[\"length=30\",{\"1\":{\"267\":1}}],[\"length\",{\"1\":{\"19\":1,\"22\":2,\"24\":1,\"26\":6,\"28\":3,\"75\":2,\"159\":2,\"281\":1,\"303\":5,\"304\":3,\"325\":1,\"346\":6,\"374\":1}}],[\"left\",{\"1\":{\"246\":1,\"260\":2,\"417\":1}}],[\"lessons\",{\"1\":{\"420\":1}}],[\"lesson\",{\"1\":{\"225\":3}}],[\"less\",{\"1\":{\"127\":3,\"128\":1,\"435\":2}}],[\"leaf\",{\"1\":{\"435\":2}}],[\"lead\",{\"1\":{\"386\":1,\"387\":1}}],[\"leaves\",{\"1\":{\"246\":1,\"434\":1}}],[\"leave\",{\"1\":{\"246\":1,\"345\":1,\"434\":3}}],[\"least\",{\"1\":{\"175\":1,\"394\":1}}],[\"lease\",{\"0\":{\"394\":1},\"1\":{\"74\":1,\"121\":2}}],[\"learned\",{\"1\":{\"428\":1}}],[\"learnt\",{\"1\":{\"425\":2}}],[\"learn\",{\"0\":{\"428\":1},\"1\":{\"59\":1,\"261\":1,\"392\":1,\"393\":1,\"396\":1,\"403\":2,\"423\":1,\"425\":1}}],[\"learning\",{\"0\":{\"41\":1,\"44\":1,\"47\":1,\"64\":1,\"68\":1,\"69\":1,\"70\":1,\"272\":1,\"322\":1,\"417\":1,\"419\":1,\"445\":1},\"1\":{\"41\":3,\"42\":2,\"44\":7,\"45\":1,\"47\":1,\"48\":2,\"57\":1,\"59\":1,\"64\":2,\"66\":1,\"69\":3,\"70\":3,\"72\":1,\"74\":3,\"270\":1,\"322\":1,\"396\":1,\"415\":1,\"417\":1}}],[\"lemon\",{\"1\":{\"26\":2}}],[\"letter\",{\"1\":{\"413\":1}}],[\"lettersin\",{\"1\":{\"413\":1}}],[\"letters\",{\"0\":{\"413\":1},\"1\":{\"412\":2,\"413\":1}}],[\"let\",{\"1\":{\"9\":8,\"10\":2,\"12\":4,\"13\":10,\"15\":2,\"16\":3,\"20\":3,\"21\":5,\"22\":1,\"23\":2,\"26\":10,\"28\":11,\"61\":1,\"225\":4,\"345\":1,\"380\":1,\"403\":1,\"432\":1,\"435\":1}}],[\"lose\",{\"1\":{\"435\":1}}],[\"loss\",{\"1\":{\"44\":1,\"46\":1,\"315\":2,\"316\":2,\"320\":1,\"323\":3,\"325\":7}}],[\"loneliness\",{\"1\":{\"435\":1}}],[\"longed\",{\"1\":{\"428\":1}}],[\"longer\",{\"1\":{\"304\":2,\"383\":1,\"387\":1}}],[\"longest\",{\"1\":{\"303\":1}}],[\"longformer\",{\"1\":{\"304\":1}}],[\"longitude\",{\"1\":{\"261\":1}}],[\"longitudes\",{\"1\":{\"259\":1}}],[\"long\",{\"1\":{\"244\":1,\"428\":1}}],[\"loud\",{\"1\":{\"405\":1}}],[\"lotus\",{\"1\":{\"407\":1,\"411\":1}}],[\"lots\",{\"1\":{\"405\":1,\"433\":2,\"435\":1}}],[\"lot\",{\"1\":{\"237\":1,\"394\":1,\"414\":2,\"430\":2,\"434\":3,\"435\":2}}],[\"loved\",{\"1\":{\"416\":1,\"428\":2,\"434\":1}}],[\"lovely\",{\"1\":{\"411\":1,\"435\":1}}],[\"lovefor\",{\"1\":{\"409\":1}}],[\"love\",{\"1\":{\"232\":1,\"237\":3,\"407\":1,\"409\":1,\"410\":1,\"411\":2,\"417\":1,\"419\":2,\"421\":1,\"424\":1,\"428\":1,\"434\":3,\"435\":2}}],[\"loop\",{\"0\":{\"323\":1,\"324\":1},\"1\":{\"318\":1,\"324\":1,\"326\":1}}],[\"loopback\",{\"1\":{\"112\":1}}],[\"looking\",{\"1\":{\"411\":1,\"419\":1,\"426\":1}}],[\"looked\",{\"1\":{\"403\":1,\"434\":1}}],[\"lookup\",{\"1\":{\"367\":4}}],[\"looks\",{\"1\":{\"246\":1}}],[\"look\",{\"0\":{\"424\":1,\"426\":1},\"1\":{\"227\":1,\"419\":1,\"423\":1,\"428\":1}}],[\"lookbehind\",{\"1\":{\"225\":2}}],[\"lookahead\",{\"1\":{\"225\":2}}],[\"load\",{\"1\":{\"151\":1,\"311\":2,\"314\":2,\"316\":3,\"317\":2,\"324\":1,\"341\":4,\"342\":4,\"343\":1,\"345\":2}}],[\"loading\",{\"1\":{\"32\":1,\"341\":1,\"342\":1}}],[\"low+\",{\"1\":{\"139\":2}}],[\"low+high\",{\"1\":{\"139\":1}}],[\"low\",{\"1\":{\"139\":3,\"142\":5,\"143\":6,\"144\":5,\"145\":5,\"242\":1,\"383\":3,\"386\":1,\"399\":1,\"430\":1}}],[\"lowercase\",{\"1\":{\"345\":2}}],[\"lower\",{\"1\":{\"112\":2,\"345\":3,\"384\":1}}],[\"lo\",{\"1\":{\"112\":2,\"225\":1,\"367\":1}}],[\"local\",{\"1\":{\"16\":3,\"57\":1,\"60\":1,\"367\":1,\"419\":1}}],[\"logout\",{\"1\":{\"332\":1}}],[\"login\",{\"1\":{\"332\":2}}],[\"logits\",{\"1\":{\"282\":1,\"283\":3,\"301\":1,\"302\":3,\"303\":1,\"316\":4,\"320\":1,\"324\":3}}],[\"logistic\",{\"1\":{\"74\":1}}],[\"logwindspeed\",{\"1\":{\"257\":1}}],[\"log1p\",{\"1\":{\"257\":2}}],[\"log2​n\",{\"1\":{\"197\":1}}],[\"log2​n−1\",{\"1\":{\"197\":1}}],[\"log2​k\",{\"1\":{\"138\":1}}],[\"logn\",{\"1\":{\"138\":1,\"154\":1,\"162\":2,\"197\":1}}],[\"log\",{\"0\":{\"138\":1,\"197\":1,\"199\":1},\"1\":{\"12\":3,\"212\":1,\"225\":5,\"257\":2,\"380\":2,\"381\":1}}],[\"urldrugname\",{\"1\":{\"345\":1}}],[\"url\",{\"1\":{\"343\":4}}],[\"u\",{\"1\":{\"315\":2}}],[\"u`\",{\"1\":{\"315\":1}}],[\"utils\",{\"1\":{\"319\":1}}],[\"utility\",{\"1\":{\"253\":1}}],[\"utf16\",{\"1\":{\"374\":1}}],[\"utf\",{\"0\":{\"107\":1},\"1\":{\"87\":3,\"88\":3,\"90\":3,\"99\":6,\"107\":6,\"374\":2}}],[\"u2029\",{\"1\":{\"224\":1}}],[\"u2028\",{\"1\":{\"224\":1}}],[\"ubuntu\",{\"1\":{\"127\":1,\"128\":2,\"129\":2,\"133\":1,\"342\":1}}],[\"upwasting\",{\"1\":{\"431\":1}}],[\"upwriting\",{\"1\":{\"413\":1}}],[\"ups\",{\"1\":{\"428\":1}}],[\"uplifting\",{\"1\":{\"407\":1}}],[\"upload\",{\"0\":{\"335\":1},\"1\":{\"332\":1,\"335\":3,\"383\":1}}],[\"upcoming\",{\"1\":{\"397\":1}}],[\"upgrade\",{\"1\":{\"383\":3}}],[\"upon\",{\"1\":{\"345\":1,\"419\":2}}],[\"up>\",{\"1\":{\"112\":1}}],[\"up\",{\"1\":{\"112\":4,\"132\":1,\"227\":1,\"237\":3,\"244\":1,\"246\":1,\"303\":3,\"337\":1,\"383\":1,\"390\":1,\"394\":1,\"397\":2,\"402\":1,\"403\":2,\"406\":3,\"413\":1,\"421\":1,\"425\":2,\"428\":5,\"430\":2,\"431\":1,\"433\":1,\"434\":5,\"435\":3}}],[\"update\",{\"1\":{\"70\":1,\"121\":1,\"323\":1,\"325\":2,\"332\":1}}],[\"updates\",{\"1\":{\"45\":1,\"121\":1}}],[\"updating\",{\"1\":{\"69\":4}}],[\"u+0000~u+00ff\",{\"1\":{\"108\":1}}],[\"u+0000~u+007f\",{\"1\":{\"108\":1}}],[\"u+0041\",{\"1\":{\"108\":1}}],[\"u+\",{\"1\":{\"108\":1}}],[\"u+100000~u+10fffd\",{\"1\":{\"106\":1}}],[\"u+f0000~u+ffffd\",{\"1\":{\"106\":1}}],[\"u+e000~u+f8ff\",{\"1\":{\"106\":1}}],[\"ucs\",{\"1\":{\"83\":1}}],[\"undoubtedly\",{\"1\":{\"419\":1}}],[\"under\",{\"1\":{\"435\":1}}],[\"understand\",{\"1\":{\"435\":1}}],[\"understanding\",{\"1\":{\"242\":1}}],[\"undergo\",{\"1\":{\"428\":1}}],[\"undergoneformal\",{\"1\":{\"428\":1}}],[\"undefined\",{\"0\":{\"373\":1},\"1\":{\"16\":1,\"26\":1,\"27\":1,\"28\":2,\"372\":1,\"373\":4}}],[\"until\",{\"1\":{\"397\":1}}],[\"unwind\",{\"1\":{\"393\":2,\"397\":1,\"398\":1}}],[\"unreachable\",{\"1\":{\"360\":4}}],[\"unescape\",{\"1\":{\"346\":2}}],[\"unable\",{\"1\":{\"345\":1}}],[\"unnamed\",{\"1\":{\"345\":5}}],[\"unk\",{\"1\":{\"291\":1}}],[\"unknown\",{\"1\":{\"291\":4,\"292\":1,\"360\":2}}],[\"uncased\",{\"1\":{\"268\":1,\"279\":2,\"280\":2,\"282\":1,\"301\":2,\"307\":1,\"312\":1,\"314\":1,\"317\":1}}],[\"uncertainty\",{\"1\":{\"254\":1}}],[\"unmasker\",{\"1\":{\"268\":3}}],[\"unbounded\",{\"1\":{\"188\":1}}],[\"universe\",{\"1\":{\"426\":2}}],[\"uninterested\",{\"1\":{\"415\":1}}],[\"unique\",{\"1\":{\"345\":2,\"410\":1}}],[\"unix\",{\"1\":{\"342\":1}}],[\"unigram\",{\"1\":{\"293\":1}}],[\"unit\",{\"1\":{\"87\":2,\"90\":1,\"356\":1}}],[\"unicode字符集中的\",{\"1\":{\"108\":1}}],[\"unicode字符集的字符编码方式一开始规定\",{\"1\":{\"107\":1}}],[\"unicode字符集的目标是涵盖目前人类使用的所有字符\",{\"1\":{\"105\":1}}],[\"unicode字符集将所有字符按照使用上的频繁度\",{\"1\":{\"105\":1}}],[\"unicode字符编号为\",{\"1\":{\"88\":1}}],[\"unicode\",{\"0\":{\"104\":1},\"1\":{\"83\":1,\"85\":1,\"86\":4,\"87\":2,\"106\":4,\"107\":1,\"108\":1}}],[\"unstage\",{\"1\":{\"337\":1}}],[\"unsupervised\",{\"1\":{\"74\":1}}],[\"unshift\",{\"1\":{\"26\":4,\"28\":1}}],[\"udp\",{\"1\":{\"115\":1,\"116\":2,\"360\":1,\"362\":4,\"364\":1}}],[\"ud83d\",{\"1\":{\"23\":1}}],[\"udcb3\",{\"1\":{\"23\":1}}],[\"usually\",{\"0\":{\"397\":1},\"1\":{\"394\":1,\"397\":1,\"406\":1,\"408\":1,\"409\":1,\"417\":1}}],[\"us\",{\"1\":{\"244\":2,\"428\":1,\"435\":3}}],[\"usr\",{\"1\":{\"129\":2,\"133\":1}}],[\"using\",{\"1\":{\"70\":1,\"294\":1,\"296\":2,\"298\":1,\"315\":1}}],[\"uses\",{\"1\":{\"338\":1}}],[\"useful\",{\"0\":{\"242\":1,\"244\":1,\"246\":1,\"248\":1},\"1\":{\"242\":1}}],[\"used\",{\"1\":{\"175\":1,\"236\":1,\"239\":1,\"416\":1,\"433\":1,\"435\":1}}],[\"use\",{\"1\":{\"44\":1,\"75\":1,\"106\":2,\"255\":1,\"257\":1,\"285\":1,\"331\":1,\"337\":1,\"338\":1,\"345\":2,\"391\":1,\"393\":1,\"402\":1}}],[\"username\",{\"1\":{\"337\":1}}],[\"useradd\",{\"1\":{\"124\":3}}],[\"users\",{\"1\":{\"28\":3,\"387\":1}}],[\"user\",{\"1\":{\"9\":11,\"13\":9,\"28\":6,\"34\":3,\"35\":10,\"36\":11,\"124\":2,\"332\":1}}],[\"usa\",{\"1\":{\"10\":1}}],[\"um\",{\"1\":{\"4\":2}}],[\"创建仓库\",{\"1\":{\"332\":1}}],[\"创建模型仓库\",{\"0\":{\"330\":1}}],[\"创建模型仓库的三种方法\",{\"1\":{\"329\":1}}],[\"创建好仓库后\",{\"1\":{\"329\":1}}],[\"创建分类器对象\",{\"1\":{\"267\":1}}],[\"创建新列\",{\"0\":{\"346\":1}}],[\"创建新的特征\",{\"1\":{\"250\":1}}],[\"创建新用户\",{\"1\":{\"124\":1}}],[\"创建新数组\",{\"1\":{\"28\":1}}],[\"创建用户\",{\"1\":{\"124\":1}}],[\"创建一个能够用不同方式来编码的通用字符集\",{\"1\":{\"83\":1}}],[\"创建\",{\"0\":{\"285\":1},\"1\":{\"9\":1,\"11\":1,\"18\":1,\"44\":1,\"45\":1,\"250\":1,\"279\":1}}],[\"phenomenathrough\",{\"1\":{\"428\":1}}],[\"photos\",{\"1\":{\"411\":1}}],[\"photo\",{\"1\":{\"411\":1,\"434\":1}}],[\"phones\",{\"1\":{\"402\":1,\"435\":1}}],[\"phone\",{\"0\":{\"400\":1,\"402\":1},\"1\":{\"399\":2,\"400\":2,\"402\":2}}],[\"physical\",{\"1\":{\"387\":1}}],[\"pkl\",{\"1\":{\"341\":1}}],[\"pt\",{\"1\":{\"279\":2,\"301\":2,\"307\":1}}],[\"pd\",{\"1\":{\"255\":3,\"260\":2}}],[\"p1|p2|p3\",{\"1\":{\"224\":1}}],[\"p+1\",{\"1\":{\"209\":2,\"210\":5}}],[\"p++\",{\"1\":{\"208\":2}}],[\"pirate\",{\"1\":{\"435\":1}}],[\"pieces\",{\"1\":{\"406\":2}}],[\"piece\",{\"1\":{\"406\":2}}],[\"pick\",{\"1\":{\"411\":1,\"425\":1}}],[\"picked\",{\"1\":{\"411\":1,\"425\":1,\"428\":1}}],[\"pickled\",{\"1\":{\"341\":1}}],[\"pictures\",{\"1\":{\"391\":1,\"411\":1}}],[\"pip\",{\"1\":{\"315\":2}}],[\"pipeline\",{\"0\":{\"278\":1},\"1\":{\"267\":6,\"268\":2,\"276\":1,\"277\":1,\"278\":1,\"279\":3,\"308\":1}}],[\"pivot\",{\"1\":{\"209\":11,\"210\":1}}],[\"pink\",{\"1\":{\"237\":2,\"411\":1}}],[\"ping\",{\"0\":{\"359\":1,\"361\":1},\"1\":{\"113\":1,\"360\":2,\"361\":7,\"363\":1,\"384\":2}}],[\"pineapple\",{\"1\":{\"26\":2}}],[\"psychiatrist\",{\"1\":{\"345\":1}}],[\"ps\",{\"1\":{\"132\":2}}],[\"pxelinux\",{\"1\":{\"121\":1,\"122\":2}}],[\"pxe\",{\"0\":{\"121\":1,\"122\":1},\"1\":{\"121\":13,\"122\":10}}],[\"pfifo\",{\"1\":{\"112\":2}}],[\"purposes\",{\"1\":{\"435\":1}}],[\"purity\",{\"1\":{\"407\":1,\"411\":1}}],[\"pursue\",{\"1\":{\"393\":1,\"398\":1}}],[\"punctuality\",{\"1\":{\"405\":1}}],[\"pull\",{\"1\":{\"336\":2}}],[\"puppeteer\",{\"1\":{\"291\":2}}],[\"puzzle\",{\"1\":{\"228\":2}}],[\"puts\",{\"1\":{\"431\":1}}],[\"put\",{\"1\":{\"193\":1,\"246\":1,\"403\":2,\"411\":2,\"431\":1,\"435\":2}}],[\"public\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"159\":1,\"193\":1,\"203\":1,\"204\":1,\"205\":1,\"213\":1}}],[\"pua\",{\"1\":{\"106\":1}}],[\"pushed\",{\"1\":{\"337\":1}}],[\"push\",{\"0\":{\"331\":1},\"1\":{\"22\":1,\"26\":4,\"28\":2,\"185\":1,\"315\":1,\"329\":1,\"331\":9,\"336\":2,\"337\":2}}],[\"pc\",{\"1\":{\"83\":1}}],[\"p\",{\"1\":{\"61\":1,\"62\":3,\"75\":2,\"171\":2,\"180\":4,\"208\":8,\"209\":3,\"210\":4,\"225\":8,\"380\":3}}],[\"pets\",{\"1\":{\"435\":1}}],[\"pet\",{\"1\":{\"435\":1}}],[\"petals\",{\"1\":{\"407\":5,\"408\":1,\"410\":1,\"411\":1}}],[\"peeked\",{\"1\":{\"428\":2}}],[\"peel\",{\"1\":{\"345\":1}}],[\"pegasus\",{\"1\":{\"423\":1}}],[\"pen\",{\"0\":{\"414\":1},\"1\":{\"412\":3,\"414\":1}}],[\"peoplein\",{\"1\":{\"416\":1}}],[\"people\",{\"0\":{\"413\":1},\"1\":{\"244\":4,\"248\":6,\"383\":1,\"385\":1,\"392\":1,\"405\":1,\"406\":1,\"412\":1,\"413\":1,\"415\":2,\"435\":11}}],[\"pex\",{\"1\":{\"121\":1}}],[\"perfectly\",{\"1\":{\"411\":1,\"419\":1}}],[\"perfect\",{\"1\":{\"406\":1}}],[\"performance\",{\"1\":{\"383\":1,\"384\":1}}],[\"perform\",{\"1\":{\"70\":1,\"391\":1}}],[\"performing\",{\"1\":{\"69\":1,\"74\":1}}],[\"period\",{\"1\":{\"399\":1,\"416\":2,\"419\":2}}],[\"persistent\",{\"1\":{\"345\":1}}],[\"personally\",{\"1\":{\"421\":1}}],[\"personality\",{\"1\":{\"412\":1}}],[\"personal\",{\"1\":{\"393\":1,\"398\":1,\"413\":1,\"435\":1}}],[\"person\",{\"1\":{\"231\":2,\"232\":1,\"345\":1,\"390\":1,\"408\":1,\"409\":1,\"410\":1,\"435\":1}}],[\"per\",{\"1\":{\"345\":2,\"383\":2}}],[\"permission\",{\"1\":{\"125\":1}}],[\"perceptual\",{\"1\":{\"59\":2}}],[\"peaceful\",{\"1\":{\"435\":1}}],[\"peace\",{\"1\":{\"405\":1,\"435\":1}}],[\"peach\",{\"1\":{\"26\":2}}],[\"pea\",{\"1\":{\"345\":1}}],[\"pear\",{\"1\":{\"26\":6}}],[\"practical\",{\"1\":{\"435\":2}}],[\"privilege\",{\"1\":{\"390\":1}}],[\"private\",{\"1\":{\"106\":2,\"332\":1}}],[\"primarily\",{\"1\":{\"428\":1}}],[\"primary\",{\"1\":{\"345\":1}}],[\"primitive\",{\"0\":{\"381\":1}}],[\"priority\",{\"1\":{\"356\":1}}],[\"price\",{\"1\":{\"255\":2,\"435\":1}}],[\"printed\",{\"1\":{\"435\":1}}],[\"printable\",{\"1\":{\"89\":1}}],[\"print\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"132\":2,\"268\":2,\"279\":1,\"281\":1,\"282\":1,\"283\":2,\"291\":1,\"296\":1,\"297\":1,\"298\":1,\"301\":3,\"302\":3,\"303\":5,\"304\":2,\"306\":4,\"312\":2,\"316\":1,\"320\":1,\"322\":1,\"346\":1}}],[\"principal\",{\"1\":{\"74\":2}}],[\"pressure\",{\"1\":{\"393\":1}}],[\"presence\",{\"1\":{\"389\":1}}],[\"presents\",{\"1\":{\"227\":1}}],[\"prepare\",{\"1\":{\"325\":2}}],[\"prepre\",{\"1\":{\"194\":3}}],[\"pretrained\",{\"1\":{\"279\":2,\"280\":2,\"282\":1,\"286\":1,\"287\":2,\"294\":5,\"295\":1,\"296\":1,\"301\":4,\"302\":1,\"307\":2,\"312\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"320\":1,\"325\":2,\"331\":2,\"336\":2,\"337\":4}}],[\"pretraining\",{\"1\":{\"272\":1}}],[\"pretty\",{\"1\":{\"244\":1}}],[\"prefer\",{\"0\":{\"400\":1,\"402\":1,\"431\":1},\"1\":{\"237\":1,\"399\":1,\"402\":1,\"429\":1,\"431\":1,\"435\":1}}],[\"preferences\",{\"1\":{\"59\":1,\"228\":1,\"435\":1}}],[\"previous\",{\"1\":{\"406\":1}}],[\"previously\",{\"1\":{\"345\":1}}],[\"prev\",{\"1\":{\"171\":1}}],[\"pre\",{\"0\":{\"121\":1},\"1\":{\"194\":4}}],[\"predators\",{\"1\":{\"435\":2}}],[\"preds\",{\"1\":{\"316\":3}}],[\"pred\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1}}],[\"predict\",{\"1\":{\"261\":1,\"316\":3}}],[\"predictors\",{\"1\":{\"75\":1}}],[\"predictions=predictions\",{\"1\":{\"316\":1,\"324\":1}}],[\"predictions=preds\",{\"1\":{\"316\":1}}],[\"predictions\",{\"1\":{\"75\":1,\"283\":2,\"316\":10,\"324\":1}}],[\"prediction\",{\"1\":{\"44\":1,\"324\":1}}],[\"precision=tp+fptp​\",{\"1\":{\"79\":1}}],[\"precision\",{\"0\":{\"79\":1},\"1\":{\"77\":1,\"79\":3,\"81\":5,\"316\":1}}],[\"productivity\",{\"1\":{\"435\":1}}],[\"productiveto\",{\"1\":{\"395\":1}}],[\"protagonist\",{\"1\":{\"435\":1}}],[\"protection\",{\"1\":{\"435\":1}}],[\"protect\",{\"1\":{\"434\":1,\"435\":2}}],[\"proto\",{\"1\":{\"367\":3}}],[\"protocol\",{\"0\":{\"114\":1},\"1\":{\"356\":2,\"360\":2,\"369\":1,\"370\":5}}],[\"proving\",{\"1\":{\"406\":1}}],[\"provided\",{\"1\":{\"435\":1}}],[\"provider\",{\"1\":{\"387\":1}}],[\"provide\",{\"1\":{\"383\":1,\"402\":1,\"435\":1}}],[\"provides\",{\"1\":{\"244\":1}}],[\"professional\",{\"1\":{\"398\":1}}],[\"profile\",{\"1\":{\"129\":4}}],[\"project\",{\"1\":{\"398\":1,\"406\":1}}],[\"projects\",{\"1\":{\"393\":1,\"395\":1}}],[\"programme\",{\"1\":{\"401\":1,\"406\":1}}],[\"programmes\",{\"0\":{\"399\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1},\"1\":{\"399\":7,\"401\":2,\"403\":1}}],[\"programming\",{\"1\":{\"393\":1,\"396\":2}}],[\"program\",{\"1\":{\"392\":1}}],[\"programs\",{\"0\":{\"392\":1},\"1\":{\"392\":1,\"402\":1,\"403\":6}}],[\"progress\",{\"1\":{\"323\":2,\"325\":4}}],[\"promote\",{\"1\":{\"435\":1}}],[\"promise\",{\"1\":{\"345\":1}}],[\"prompt\",{\"1\":{\"9\":1}}],[\"properly\",{\"1\":{\"345\":1}}],[\"properties\",{\"1\":{\"43\":1,\"59\":1}}],[\"prostitute\",{\"1\":{\"268\":1}}],[\"procedure\",{\"1\":{\"338\":1}}],[\"process\",{\"0\":{\"49\":1},\"1\":{\"49\":1,\"63\":1,\"208\":4,\"209\":4}}],[\"proc\",{\"1\":{\"112\":1,\"312\":1}}],[\"procfs\",{\"1\":{\"112\":1}}],[\"prob\",{\"1\":{\"285\":2}}],[\"probs\",{\"1\":{\"285\":1}}],[\"probably\",{\"1\":{\"233\":1,\"248\":2,\"393\":1,\"400\":1}}],[\"probability\",{\"1\":{\"61\":1,\"62\":1}}],[\"probabilities\",{\"1\":{\"59\":1}}],[\"probing\",{\"0\":{\"149\":1,\"150\":1}}],[\"problem\",{\"1\":{\"44\":1,\"63\":1,\"406\":1}}],[\"packed\",{\"1\":{\"395\":1}}],[\"package\",{\"1\":{\"36\":1}}],[\"pace\",{\"1\":{\"393\":1}}],[\"patterns\",{\"1\":{\"423\":1}}],[\"patient\",{\"1\":{\"345\":2}}],[\"path\",{\"1\":{\"131\":1,\"335\":1,\"356\":1,\"370\":2}}],[\"path=$java\",{\"1\":{\"129\":1}}],[\"panda\",{\"1\":{\"434\":1}}],[\"pandas\",{\"1\":{\"340\":1,\"341\":2,\"345\":1,\"390\":4,\"435\":1}}],[\"panic\",{\"1\":{\"345\":2}}],[\"pad\",{\"1\":{\"285\":1,\"302\":3,\"303\":4,\"312\":1}}],[\"padding=\",{\"1\":{\"303\":3,\"325\":1}}],[\"padding=true\",{\"1\":{\"279\":1,\"301\":3,\"307\":1,\"312\":1}}],[\"padding\",{\"0\":{\"302\":1,\"313\":1},\"1\":{\"279\":1,\"302\":7,\"303\":1,\"305\":1,\"307\":1,\"312\":4,\"313\":4}}],[\"painting\",{\"1\":{\"435\":1}}],[\"paintings\",{\"1\":{\"246\":2,\"407\":1}}],[\"paint\",{\"1\":{\"391\":1}}],[\"pain\",{\"1\":{\"345\":2}}],[\"pair\",{\"1\":{\"24\":1,\"61\":1,\"69\":3}}],[\"pairs\",{\"1\":{\"19\":1,\"21\":1,\"23\":1}}],[\"past\",{\"1\":{\"239\":1,\"415\":4,\"416\":4,\"419\":2,\"435\":5}}],[\"passion\",{\"1\":{\"393\":1,\"409\":1,\"411\":1}}],[\"passed\",{\"1\":{\"237\":1}}],[\"passwd\",{\"1\":{\"124\":4}}],[\"park\",{\"0\":{\"390\":1},\"1\":{\"403\":1,\"411\":5,\"428\":1,\"435\":1}}],[\"parks\",{\"1\":{\"389\":1}}],[\"part\",{\"0\":{\"388\":1,\"399\":1,\"404\":1,\"407\":1,\"412\":1,\"415\":1,\"420\":1,\"423\":1,\"429\":1,\"432\":1},\"1\":{\"399\":1,\"407\":1,\"426\":2}}],[\"particular\",{\"1\":{\"431\":2}}],[\"particularly\",{\"1\":{\"232\":1,\"390\":1,\"423\":1}}],[\"partial\",{\"1\":{\"231\":1,\"407\":1,\"435\":1}}],[\"partition\",{\"1\":{\"209\":3}}],[\"parsefloat\",{\"1\":{\"379\":1}}],[\"parseint\",{\"1\":{\"379\":3}}],[\"parsing\",{\"1\":{\"259\":1}}],[\"paragraphs\",{\"1\":{\"342\":3}}],[\"parameters\",{\"1\":{\"321\":1,\"325\":2}}],[\"parameterized\",{\"1\":{\"57\":1}}],[\"parameterize\",{\"1\":{\"57\":1}}],[\"paraphrase\",{\"1\":{\"310\":1}}],[\"parents\",{\"1\":{\"232\":1}}],[\"page\",{\"1\":{\"85\":1}}],[\"plt\",{\"1\":{\"255\":6}}],[\"plot\",{\"1\":{\"255\":1,\"403\":1,\"435\":2}}],[\"pleasing\",{\"1\":{\"435\":1}}],[\"pleasant\",{\"1\":{\"435\":1}}],[\"please\",{\"1\":{\"315\":1}}],[\"pleasure\",{\"1\":{\"227\":2}}],[\"plenty\",{\"1\":{\"246\":1,\"433\":1}}],[\"platypus\",{\"1\":{\"435\":1}}],[\"playing\",{\"1\":{\"435\":1}}],[\"play\",{\"1\":{\"390\":1}}],[\"plays\",{\"1\":{\"386\":1}}],[\"planned\",{\"1\":{\"428\":2}}],[\"plants\",{\"1\":{\"411\":1,\"435\":1}}],[\"planted\",{\"1\":{\"407\":1}}],[\"plans\",{\"1\":{\"397\":1}}],[\"plan\",{\"1\":{\"244\":1,\"383\":2,\"406\":1}}],[\"planet\",{\"1\":{\"419\":1,\"435\":1}}],[\"plane\",{\"1\":{\"105\":1,\"106\":2}}],[\"plane平面\",{\"1\":{\"86\":1}}],[\"places\",{\"1\":{\"397\":2}}],[\"place\",{\"1\":{\"28\":2,\"201\":1,\"242\":1,\"248\":1,\"411\":2}}],[\"plum\",{\"1\":{\"26\":5}}],[\"pouch\",{\"1\":{\"435\":1}}],[\"pour\",{\"1\":{\"430\":1}}],[\"pours\",{\"1\":{\"430\":1}}],[\"poaching\",{\"1\":{\"435\":1}}],[\"pocket\",{\"1\":{\"434\":1}}],[\"polluted\",{\"1\":{\"424\":1}}],[\"policy\",{\"0\":{\"55\":1,\"57\":1,\"58\":1,\"61\":1,\"63\":1},\"1\":{\"42\":1,\"54\":4,\"55\":1,\"57\":11,\"59\":7,\"60\":3,\"61\":1,\"63\":1,\"64\":3,\"66\":1,\"69\":12,\"70\":1,\"259\":3}}],[\"pottering\",{\"1\":{\"421\":1}}],[\"portability\",{\"1\":{\"402\":1}}],[\"port\",{\"1\":{\"356\":1,\"360\":1}}],[\"portfoliolab\",{\"1\":{\"7\":1}}],[\"poor\",{\"1\":{\"246\":1}}],[\"pose\",{\"1\":{\"435\":1}}],[\"possums\",{\"1\":{\"435\":1}}],[\"possible\",{\"1\":{\"385\":1}}],[\"posing\",{\"1\":{\"434\":1}}],[\"positivity\",{\"1\":{\"407\":1,\"411\":1}}],[\"positivitywith\",{\"1\":{\"407\":1}}],[\"positive\",{\"1\":{\"47\":1,\"77\":2,\"81\":1,\"225\":2,\"267\":2,\"282\":1,\"283\":3}}],[\"position\",{\"1\":{\"86\":1,\"285\":2}}],[\"post\",{\"0\":{\"437\":1},\"1\":{\"335\":1}}],[\"pos\",{\"1\":{\"164\":3}}],[\"pointto\",{\"1\":{\"396\":1}}],[\"point\",{\"1\":{\"86\":1,\"105\":1}}],[\"points\",{\"1\":{\"75\":1}}],[\"popped\",{\"1\":{\"434\":1}}],[\"population\",{\"1\":{\"390\":1}}],[\"popular\",{\"1\":{\"229\":1,\"392\":1,\"407\":1,\"428\":1,\"435\":1}}],[\"pop\",{\"1\":{\"22\":1,\"26\":2,\"28\":1,\"185\":1}}],[\"py\",{\"1\":{\"325\":2}}],[\"pytorch\",{\"0\":{\"57\":1,\"317\":1},\"1\":{\"57\":1,\"279\":1,\"287\":1,\"301\":1,\"313\":1,\"318\":1,\"337\":5}}],[\"python\",{\"0\":{\"7\":1,\"332\":1},\"1\":{\"258\":1,\"287\":2,\"329\":1,\"345\":1,\"346\":2}}],[\"pyportfolioopt\",{\"1\":{\"7\":1}}],[\"pyalgotrade\",{\"1\":{\"7\":1}}],[\"vlan\",{\"0\":{\"355\":1},\"1\":{\"358\":10}}],[\"view\",{\"1\":{\"424\":1}}],[\"viewing\",{\"1\":{\"399\":2,\"400\":3,\"402\":1,\"403\":2}}],[\"vibrant\",{\"1\":{\"407\":1,\"410\":1}}],[\"visually\",{\"1\":{\"402\":1}}],[\"visit\",{\"1\":{\"390\":2,\"397\":1,\"435\":2}}],[\"visibility\",{\"1\":{\"332\":1}}],[\"videos\",{\"1\":{\"396\":1}}],[\"virtual\",{\"1\":{\"370\":1}}],[\"via\",{\"1\":{\"367\":5}}],[\"vim\",{\"1\":{\"129\":3}}],[\"vs\",{\"0\":{\"265\":1}}],[\"verge\",{\"1\":{\"435\":1}}],[\"verify\",{\"1\":{\"345\":1}}],[\"version\",{\"1\":{\"285\":1,\"337\":1}}],[\"very\",{\"1\":{\"237\":1,\"242\":1,\"248\":2,\"345\":1,\"412\":1,\"417\":1,\"435\":2}}],[\"ventilation\",{\"1\":{\"244\":1}}],[\"ve\",{\"1\":{\"242\":2,\"244\":1,\"246\":2,\"267\":2,\"279\":2,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1,\"395\":1,\"400\":1,\"403\":1,\"419\":1,\"428\":3,\"433\":1,\"435\":1}}],[\"vector\",{\"1\":{\"74\":2,\"75\":2,\"356\":1,\"369\":1,\"370\":1}}],[\"voracious\",{\"1\":{\"435\":1}}],[\"vocab\",{\"1\":{\"285\":2}}],[\"vocabulary\",{\"0\":{\"242\":1,\"244\":1,\"246\":1,\"248\":1},\"1\":{\"295\":1}}],[\"void\",{\"1\":{\"203\":1,\"204\":1,\"205\":1,\"208\":3,\"209\":3,\"213\":1,\"373\":2}}],[\"volume\",{\"0\":{\"6\":1}}],[\"vxlan\",{\"1\":{\"111\":1}}],[\"vπ​\",{\"1\":{\"56\":1,\"64\":1,\"65\":1}}],[\"v\",{\"0\":{\"22\":1,\"173\":1},\"1\":{\"67\":2,\"68\":3,\"69\":1,\"70\":1,\"81\":1,\"224\":2,\"246\":1,\"248\":1,\"313\":4,\"319\":2,\"323\":2,\"324\":2,\"325\":2,\"387\":1,\"404\":3,\"411\":1,\"419\":2,\"424\":1,\"428\":1}}],[\"vast\",{\"1\":{\"434\":1}}],[\"vastness\",{\"1\":{\"426\":2}}],[\"vase\",{\"1\":{\"411\":1}}],[\"van\",{\"1\":{\"407\":1}}],[\"vantage\",{\"1\":{\"7\":1}}],[\"variety\",{\"1\":{\"392\":1,\"403\":2}}],[\"various\",{\"1\":{\"383\":1,\"389\":1,\"391\":1,\"395\":1,\"407\":1,\"435\":1}}],[\"variable\",{\"1\":{\"75\":2,\"255\":1,\"338\":1}}],[\"variables\",{\"1\":{\"75\":3}}],[\"variance\",{\"1\":{\"60\":1}}],[\"vars=features\",{\"1\":{\"255\":1}}],[\"vars=\",{\"1\":{\"255\":1}}],[\"var3\",{\"1\":{\"159\":3}}],[\"var2\",{\"1\":{\"159\":2}}],[\"var1\",{\"1\":{\"159\":6}}],[\"var\",{\"1\":{\"129\":1,\"260\":1}}],[\"valentine\",{\"1\":{\"407\":1,\"435\":1}}],[\"valid\",{\"1\":{\"260\":4}}],[\"validation\",{\"1\":{\"74\":1,\"260\":1,\"311\":2,\"312\":1,\"315\":2,\"316\":3,\"319\":1}}],[\"valuable\",{\"1\":{\"227\":1}}],[\"values\",{\"1\":{\"44\":1,\"45\":1,\"47\":1,\"59\":2,\"74\":2,\"255\":3,\"257\":1,\"260\":1}}],[\"valueof\",{\"1\":{\"26\":1}}],[\"value\",{\"0\":{\"56\":1},\"1\":{\"19\":1,\"20\":4,\"21\":1,\"24\":2,\"28\":5,\"41\":1,\"42\":1,\"43\":1,\"44\":4,\"46\":6,\"47\":4,\"54\":1,\"56\":2,\"57\":2,\"59\":4,\"64\":8,\"65\":1,\"66\":1,\"69\":7,\"70\":1,\"74\":1,\"75\":1,\"86\":1,\"142\":4,\"143\":4,\"144\":4,\"145\":4,\"159\":3,\"204\":3,\"206\":1,\"255\":2,\"311\":3,\"435\":1}}],[\"yellow\",{\"1\":{\"407\":1,\"410\":1}}],[\"yeah\",{\"1\":{\"406\":1}}],[\"years\",{\"1\":{\"403\":2,\"413\":1,\"435\":1}}],[\"year\",{\"1\":{\"345\":1,\"435\":1}}],[\"yearbuilt\",{\"1\":{\"255\":1}}],[\"yesterday\",{\"1\":{\"423\":1}}],[\"yes\",{\"0\":{\"232\":1},\"1\":{\"232\":8,\"233\":1,\"384\":1,\"385\":1,\"389\":1,\"390\":1,\"392\":1,\"396\":1,\"401\":2,\"413\":1,\"421\":1,\"424\":1,\"426\":1,\"434\":1}}],[\"y=\",{\"1\":{\"255\":5,\"261\":2}}],[\"y=​y1​y2​⋮yn​​​\",{\"1\":{\"75\":1}}],[\"yticks\",{\"1\":{\"255\":1}}],[\"yt−1​+\",{\"1\":{\"3\":1}}],[\"young\",{\"1\":{\"435\":2}}],[\"yourself\",{\"1\":{\"403\":2}}],[\"your\",{\"0\":{\"389\":1,\"392\":1,\"393\":1,\"394\":1,\"400\":1,\"402\":1,\"409\":1,\"411\":1},\"1\":{\"337\":1,\"345\":2,\"383\":1,\"386\":1,\"399\":1,\"401\":1,\"403\":1,\"407\":1,\"428\":1,\"435\":4}}],[\"you\",{\"0\":{\"384\":1,\"385\":1,\"390\":1,\"391\":1,\"395\":1,\"396\":1,\"397\":1,\"398\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"405\":1,\"406\":2,\"408\":1,\"410\":1,\"413\":1,\"414\":1,\"416\":1,\"417\":2,\"418\":1,\"419\":1,\"421\":1,\"424\":1,\"425\":1,\"426\":1,\"427\":1,\"428\":1,\"430\":1,\"431\":1,\"433\":1,\"434\":1},\"1\":{\"232\":1,\"234\":1,\"248\":2,\"267\":1,\"345\":1,\"389\":2,\"399\":6,\"400\":1,\"401\":2,\"403\":5,\"404\":4,\"406\":3,\"407\":4,\"409\":2,\"411\":3,\"412\":5,\"414\":1,\"415\":5,\"419\":4,\"420\":5,\"421\":1,\"423\":3,\"424\":2,\"428\":2,\"429\":4,\"431\":3,\"432\":3,\"434\":4,\"435\":4}}],[\"yum\",{\"1\":{\"128\":2,\"129\":1,\"133\":1}}],[\"y\",{\"1\":{\"78\":2,\"79\":2,\"80\":2,\"81\":2,\"86\":2,\"255\":4}}],[\"yi​\",{\"1\":{\"75\":1}}],[\"yahoo\",{\"1\":{\"7\":1}}],[\"库提供的\",{\"1\":{\"324\":1}}],[\"库提供了很多方法和类\",{\"1\":{\"332\":1}}],[\"库提供了简单易用的命令来下载并缓存\",{\"1\":{\"311\":1}}],[\"库提供了简单的api\",{\"1\":{\"277\":1}}],[\"库提供了\",{\"1\":{\"267\":1}}],[\"库通过\",{\"1\":{\"313\":1}}],[\"库已经使用了多线程\",{\"1\":{\"312\":1}}],[\"库用\",{\"1\":{\"312\":1}}],[\"库在任何分布式设备上轻松运行自定义训练过程\",{\"1\":{\"309\":1}}],[\"库还提供了\",{\"1\":{\"280\":1}}],[\"库来创建并使用公开的模型\",{\"1\":{\"266\":1}}],[\"库\",{\"0\":{\"7\":1,\"267\":1,\"332\":1,\"340\":1},\"1\":{\"316\":1,\"323\":1,\"329\":1,\"340\":2}}],[\"将本地发起的数据包\",{\"1\":{\"367\":1}}],[\"将包从哪个口扔出去\",{\"1\":{\"367\":1}}],[\"将目的\",{\"1\":{\"364\":1}}],[\"将图中的环破坏了\",{\"1\":{\"356\":1}}],[\"将少于\",{\"1\":{\"346\":1}}],[\"将你的\",{\"1\":{\"331\":1}}],[\"将模型上传至\",{\"1\":{\"331\":1}}],[\"将代码存到\",{\"1\":{\"325\":1}}],[\"将列\",{\"1\":{\"318\":1}}],[\"将我们之前构造的对象\",{\"1\":{\"315\":1}}],[\"将每个\",{\"1\":{\"302\":1}}],[\"将每一个\",{\"1\":{\"279\":1}}],[\"将词表索引转化成字符串\",{\"1\":{\"298\":1}}],[\"将上面的\",{\"1\":{\"288\":1}}],[\"将输入传递给\",{\"1\":{\"283\":1}}],[\"将输入传递给模型\",{\"1\":{\"278\":1}}],[\"将文本转换成数字的过程叫做编码\",{\"1\":{\"295\":1}}],[\"将文本转化为\",{\"1\":{\"308\":1}}],[\"将文本转化为张量\",{\"1\":{\"288\":1}}],[\"将文本转化成\",{\"1\":{\"294\":1}}],[\"将文本传递给\",{\"1\":{\"279\":1}}],[\"将文本切分成\",{\"1\":{\"279\":1,\"292\":1}}],[\"将文本翻译成另一种语言\",{\"1\":{\"264\":1}}],[\"将特征组合为比率往往可以带来性能的提升\",{\"1\":{\"260\":1}}],[\"将特征的范围缩放到特定的区间\",{\"1\":{\"250\":1}}],[\"将两个特征结合起来\",{\"1\":{\"260\":1}}],[\"将会使我们对另一个变量的取值有更精确的估计\",{\"1\":{\"254\":1}}],[\"将连续特征转化为离散特征\",{\"1\":{\"250\":1}}],[\"将多个特征组合成新的特征\",{\"1\":{\"250\":1}}],[\"将栈\",{\"1\":{\"222\":2}}],[\"将结果压入操作数栈\",{\"1\":{\"220\":1}}],[\"将结果拷贝到\",{\"1\":{\"213\":1}}],[\"将这些高维张量映射到不同的维度上\",{\"1\":{\"282\":1}}],[\"将这些用于控制或通讯的控制字符或通讯专用字符称之为\",{\"1\":{\"94\":1}}],[\"将这个对应的栈帧出栈\",{\"1\":{\"219\":1}}],[\"将大于\",{\"1\":{\"209\":1}}],[\"将大问题分解成小的子问题\",{\"1\":{\"208\":1}}],[\"将小于\",{\"1\":{\"209\":1}}],[\"将问题\",{\"1\":{\"208\":1}}],[\"将未排序区间的一个元素插入已排序空间时\",{\"1\":{\"204\":1}}],[\"将数据点分配给最近的质心所属的簇\",{\"1\":{\"261\":1}}],[\"将数据搬移到新的散列表中\",{\"1\":{\"154\":1}}],[\"将数组分成前后两部分\",{\"1\":{\"208\":1}}],[\"将数组中的元素分为两个区间\",{\"1\":{\"204\":1}}],[\"将递归代码改为非递归代码\",{\"0\":{\"194\":1}}],[\"将请求排队\",{\"1\":{\"188\":1}}],[\"将新的数据结点插入链表的头部\",{\"1\":{\"175\":1}}],[\"将待查找区间缩小为之前的一半\",{\"1\":{\"137\":1}}],[\"将安装好的文件直接下载下来\",{\"1\":{\"129\":1}}],[\"将来根据需要\",{\"1\":{\"105\":1}}],[\"将码元序列进一步编码所形成的\",{\"1\":{\"88\":1}}],[\"将逻辑上的码元序列映射为物理上的字节序列\",{\"1\":{\"88\":1}}],[\"将字符编号编码为逻辑上的码元序列\",{\"1\":{\"87\":1}}],[\"将字符集中的字符进行编号\",{\"1\":{\"83\":1}}],[\"将字符集中的字符按一定方式编码为某指定集合中的某一对象的过程\",{\"1\":{\"83\":1}}],[\"将抽象字符表\",{\"1\":{\"86\":1}}],[\"将观察到的\",{\"1\":{\"44\":1}}],[\"将被作为独立函数调用\",{\"1\":{\"28\":1}}],[\"将位置\",{\"1\":{\"28\":1}}],[\"将\",{\"0\":{\"297\":1},\"1\":{\"28\":1,\"43\":1,\"45\":1,\"96\":1,\"99\":1,\"111\":1,\"208\":1,\"222\":1,\"259\":1,\"274\":1,\"299\":2,\"318\":1,\"331\":1,\"343\":1,\"362\":1}}],[\"将可迭代对象或类数组转化为真正的数组\",{\"1\":{\"24\":1}}],[\"将可迭代对象或类数组\",{\"1\":{\"19\":1}}],[\"将其设为\",{\"1\":{\"347\":1}}],[\"将其压入栈中\",{\"1\":{\"221\":1}}],[\"将其放到已排序区间的末尾\",{\"1\":{\"205\":1}}],[\"将其他多字节字符编码中的各个字节的最高位设为\",{\"1\":{\"99\":1}}],[\"将其忽略不计\",{\"1\":{\"6\":1}}],[\"将其从前一日的obv值中减去\",{\"1\":{\"6\":1}}],[\"将其加到前一日的obv值上\",{\"1\":{\"6\":1}}],[\"将所有下跌日的跌幅相加求平均得到\",{\"1\":{\"4\":1}}],[\"将所有上涨日的涨幅相加求平均得到\",{\"1\":{\"4\":1}}],[\"意味着买盘减少\",{\"1\":{\"6\":1}}],[\"通知源主机此次传输失败\",{\"1\":{\"360\":1}}],[\"通配符\",{\"1\":{\"224\":1}}],[\"通信协议综述\",{\"0\":{\"109\":1}}],[\"通用字符集\",{\"1\":{\"83\":1}}],[\"通道\",{\"1\":{\"43\":1}}],[\"通过其他协议来测试网络是否通\",{\"1\":{\"361\":1}}],[\"通过本章的学习\",{\"1\":{\"299\":1}}],[\"通过特征工程\",{\"1\":{\"251\":1}}],[\"通过线性探测的开放寻址法来结局冲突\",{\"1\":{\"154\":1}}],[\"通过命令创建的用户\",{\"1\":{\"124\":1}}],[\"通过采集一些轨迹样本来估计梯度\",{\"1\":{\"63\":1}}],[\"通过最大化\",{\"1\":{\"57\":1}}],[\"通过随机\",{\"1\":{\"53\":1}}],[\"通过随机抽样\",{\"1\":{\"45\":1}}],[\"通过奖励可以知道采取的行动是好是坏\",{\"1\":{\"49\":1}}],[\"通过试错\",{\"1\":{\"48\":1}}],[\"通过与环境的互动\",{\"1\":{\"48\":1}}],[\"通过\",{\"0\":{\"131\":1},\"1\":{\"16\":2,\"88\":1,\"112\":1,\"122\":1,\"133\":1,\"301\":1,\"352\":1,\"361\":1}}],[\"通过比较obv指标和价格走势的差异\",{\"1\":{\"6\":1}}],[\"通常\",{\"1\":{\"424\":1}}],[\"通常使用跳数\",{\"1\":{\"369\":1}}],[\"通常开篇为简短的概述说明其用途\",{\"1\":{\"338\":1}}],[\"通常有一层或多层线性层组成\",{\"1\":{\"282\":1}}],[\"通常很大\",{\"1\":{\"281\":1}}],[\"通常也称为\",{\"1\":{\"121\":1}}],[\"通常用于指示字符串的结束\",{\"1\":{\"94\":1}}],[\"通常分为若干字节\",{\"1\":{\"83\":1}}],[\"通常不包括与物理世界的直接交互\",{\"1\":{\"39\":1}}],[\"通常采用9天的移动平均线\",{\"1\":{\"5\":1}}],[\"通常为26天\",{\"1\":{\"5\":1}}],[\"通常为12天\",{\"1\":{\"5\":1}}],[\"通常是右偏\",{\"1\":{\"257\":1}}],[\"通常是使用幂函数或对数进行\",{\"1\":{\"257\":1}}],[\"通常是30以下\",{\"1\":{\"4\":1}}],[\"通常是70以上\",{\"1\":{\"4\":1}}],[\"趋势可能持续\",{\"1\":{\"6\":1}}],[\"趋势确认\",{\"1\":{\"6\":1}}],[\"趋势判断\",{\"1\":{\"5\":1}}],[\"是对应类型的构造器\",{\"1\":{\"377\":1}}],[\"是对数量\",{\"1\":{\"255\":1}}],[\"是不同的类型\",{\"1\":{\"377\":1}}],[\"是不行的\",{\"1\":{\"36\":1}}],[\"是无连接的\",{\"1\":{\"362\":1}}],[\"是网络层的协议\",{\"1\":{\"360\":1}}],[\"是网卡固件的一部分\",{\"1\":{\"121\":1}}],[\"是患者\",{\"1\":{\"345\":1}}],[\"是什么\",{\"1\":{\"340\":1}}],[\"是通过\",{\"1\":{\"338\":1}}],[\"是都要创建\",{\"1\":{\"332\":1}}],[\"是每个\",{\"1\":{\"331\":1}}],[\"是主网站\",{\"1\":{\"327\":1}}],[\"是主动的实体\",{\"1\":{\"39\":1}}],[\"是指三个特殊值\",{\"1\":{\"375\":1}}],[\"是指一次向模型传递多个句子\",{\"1\":{\"301\":1}}],[\"是指第二列的内容\",{\"1\":{\"132\":1}}],[\"是大模型\",{\"0\":{\"271\":1}}],[\"是大端序还是小端序\",{\"1\":{\"88\":1}}],[\"是语言模型\",{\"0\":{\"270\":1}}],[\"是由\",{\"1\":{\"265\":1}}],[\"是单变量度量\",{\"1\":{\"255\":1}}],[\"是基于自身的评估\",{\"1\":{\"255\":1}}],[\"是维度\",{\"1\":{\"215\":1}}],[\"是数据范围\",{\"1\":{\"215\":1}}],[\"是数组的一种扩展\",{\"1\":{\"146\":1}}],[\"是数组时\",{\"1\":{\"28\":1}}],[\"是将子问题的结果合并成问题\",{\"1\":{\"208\":1}}],[\"是将没有患癌症的人诊断为癌症\",{\"1\":{\"81\":1}}],[\"是运行的程序\",{\"1\":{\"132\":1}}],[\"是个人的配置信息存储文件\",{\"1\":{\"129\":1}}],[\"是没有启动扇区的\",{\"1\":{\"121\":1}}],[\"是唯一的\",{\"1\":{\"117\":1}}],[\"是唯一标识符的基本类型\",{\"1\":{\"11\":1,\"18\":1}}],[\"是它\",{\"1\":{\"113\":1}}],[\"是否处于同一网段\",{\"1\":{\"364\":1}}],[\"是否想用给定的\",{\"1\":{\"332\":1}}],[\"是否对其他人可见\",{\"1\":{\"332\":1}}],[\"是否出错时使用的\",{\"1\":{\"320\":1}}],[\"是否能在\",{\"1\":{\"313\":1}}],[\"是否存在序列过长的问题\",{\"1\":{\"300\":1}}],[\"是否有数据交换\",{\"1\":{\"203\":1}}],[\"是否基于比较\",{\"1\":{\"201\":1}}],[\"是否在同一网段\",{\"1\":{\"113\":1}}],[\"是否为数组\",{\"1\":{\"28\":1}}],[\"是启动的\",{\"1\":{\"112\":1}}],[\"是可以对外的\",{\"1\":{\"112\":1}}],[\"是可以被争取处理的\",{\"1\":{\"19\":1}}],[\"是两个字节表示的\",{\"1\":{\"107\":1}}],[\"是双字节编码\",{\"1\":{\"100\":1}}],[\"是多队列\",{\"1\":{\"112\":1}}],[\"是多字节编码\",{\"1\":{\"99\":1}}],[\"是多少\",{\"1\":{\"46\":1}}],[\"是在左边的网口\",{\"1\":{\"355\":1}}],[\"是在预训练好的模型上进行进一步的训练\",{\"1\":{\"272\":1}}],[\"是在\",{\"1\":{\"99\":2}}],[\"是最早的\",{\"1\":{\"99\":1}}],[\"是跟特定计算机系统平台无关的逻辑意义上的编码过程\",{\"1\":{\"88\":1}}],[\"是把正常邮件识别为垃圾邮件\",{\"1\":{\"81\":1}}],[\"是得了癌症的病人没有被诊断出癌症\",{\"1\":{\"81\":1}}],[\"是训练\",{\"1\":{\"66\":1,\"69\":1}}],[\"是我们要学的函数\",{\"1\":{\"54\":1}}],[\"是状态的部分描述\",{\"1\":{\"49\":1}}],[\"是机器学习的一种\",{\"1\":{\"48\":1}}],[\"是为了解决\",{\"1\":{\"47\":1}}],[\"是一致的\",{\"1\":{\"108\":1}}],[\"是一种外部网关协议\",{\"1\":{\"370\":1}}],[\"是一种内部网关协议\",{\"1\":{\"370\":1}}],[\"是一种各方面性能都比较优秀的动态数据结构\",{\"1\":{\"195\":1}}],[\"是一种\",{\"1\":{\"64\":1,\"69\":1}}],[\"是一种基于人工智能技术的软件实体\",{\"1\":{\"38\":1}}],[\"是一种基于成交量的技术分析工具\",{\"1\":{\"6\":1}}],[\"是一样的\",{\"1\":{\"46\":1}}],[\"是一个三层转发的设备\",{\"1\":{\"364\":1}}],[\"是一个\",{\"1\":{\"265\":1}}],[\"是一个子模式\",{\"1\":{\"225\":1}}],[\"是一个网卡的物理地址\",{\"1\":{\"112\":1}}],[\"是一个超参\",{\"1\":{\"45\":1}}],[\"是一个特例\",{\"1\":{\"28\":1}}],[\"是内置的\",{\"1\":{\"260\":1}}],[\"是内置的可迭代对象\",{\"1\":{\"24\":1}}],[\"是内建的去除小数部分的方法\",{\"1\":{\"10\":1}}],[\"是\",{\"1\":{\"22\":1,\"26\":1,\"28\":2,\"41\":1,\"57\":3,\"63\":1,\"70\":1,\"81\":1,\"102\":1,\"112\":3,\"113\":1,\"116\":2,\"279\":1,\"293\":1,\"311\":2,\"337\":2,\"345\":1,\"355\":1,\"366\":3,\"375\":1,\"377\":1}}],[\"是用来计算\",{\"1\":{\"3\":1}}],[\"ok\",{\"1\":{\"419\":1}}],[\"oh\",{\"1\":{\"396\":1}}],[\"old\",{\"1\":{\"345\":1,\"435\":1}}],[\"own\",{\"1\":{\"244\":1,\"246\":1,\"393\":1,\"403\":1,\"407\":1,\"410\":1,\"411\":1,\"414\":1}}],[\"ownkeys\",{\"1\":{\"13\":1,\"18\":1}}],[\"otherwise\",{\"1\":{\"435\":1}}],[\"other\",{\"0\":{\"436\":1},\"1\":{\"233\":1,\"244\":2,\"403\":1,\"404\":1,\"410\":1,\"411\":1,\"423\":1,\"428\":1,\"434\":1,\"435\":2}}],[\"others\",{\"1\":{\"227\":1,\"244\":1,\"280\":1,\"421\":1,\"434\":1,\"435\":3}}],[\"ocd\",{\"1\":{\"345\":2}}],[\"occasionally\",{\"1\":{\"403\":1}}],[\"occasion\",{\"1\":{\"227\":1,\"435\":2}}],[\"occasions\",{\"1\":{\"227\":1,\"435\":2}}],[\"octet\",{\"1\":{\"83\":1}}],[\"ospf\",{\"1\":{\"360\":1,\"370\":5}}],[\"oscar\",{\"1\":{\"339\":1}}],[\"os\",{\"0\":{\"441\":1},\"1\":{\"187\":1}}],[\"opposite\",{\"1\":{\"424\":1,\"434\":1}}],[\"opportunity\",{\"1\":{\"390\":1}}],[\"opinion\",{\"1\":{\"413\":1}}],[\"opted\",{\"1\":{\"406\":1}}],[\"opt\",{\"1\":{\"402\":1,\"406\":1}}],[\"options\",{\"1\":{\"435\":1}}],[\"option\",{\"1\":{\"121\":3}}],[\"optimizer=optimizer\",{\"1\":{\"322\":1,\"325\":2}}],[\"optimizer\",{\"0\":{\"321\":1},\"1\":{\"321\":2,\"323\":2,\"325\":10}}],[\"optimization\",{\"1\":{\"63\":1}}],[\"optimal\",{\"1\":{\"69\":2,\"400\":1}}],[\"optimum\",{\"1\":{\"60\":1}}],[\"open\",{\"0\":{\"148\":1},\"1\":{\"227\":1,\"244\":1,\"370\":1}}],[\"ought\",{\"1\":{\"432\":1}}],[\"outdoor\",{\"1\":{\"397\":1,\"431\":1}}],[\"outer\",{\"1\":{\"260\":1}}],[\"out\",{\"1\":{\"132\":2,\"173\":1,\"244\":2,\"246\":1,\"248\":1,\"301\":1,\"397\":2,\"403\":3,\"406\":3,\"409\":1,\"411\":1,\"414\":2,\"421\":1,\"428\":1,\"431\":1,\"432\":1,\"434\":2}}],[\"outputs\",{\"1\":{\"281\":2,\"282\":2,\"283\":2,\"320\":3,\"323\":2,\"324\":2,\"325\":4}}],[\"output\",{\"1\":{\"75\":1,\"288\":1,\"301\":2,\"307\":1}}],[\"our\",{\"1\":{\"13\":1,\"69\":1,\"246\":2,\"389\":1,\"403\":2,\"406\":1,\"408\":1,\"409\":1,\"411\":2,\"435\":3}}],[\"overcast\",{\"1\":{\"424\":3,\"428\":2}}],[\"overall\",{\"1\":{\"397\":1,\"400\":1,\"402\":1}}],[\"overwhelming\",{\"1\":{\"394\":1,\"430\":1}}],[\"overwhelmingat\",{\"1\":{\"394\":1}}],[\"overhaul\",{\"1\":{\"248\":2}}],[\"over\",{\"1\":{\"61\":1,\"242\":1,\"345\":1,\"400\":2,\"424\":1,\"435\":1}}],[\"overestimation\",{\"1\":{\"44\":1,\"47\":1}}],[\"orion\",{\"1\":{\"423\":1,\"425\":1}}],[\"oriented\",{\"1\":{\"398\":1}}],[\"original\",{\"1\":{\"345\":1}}],[\"origin\",{\"1\":{\"302\":1,\"337\":2}}],[\"organizing\",{\"1\":{\"397\":1}}],[\"organization=\",{\"1\":{\"331\":2,\"332\":1}}],[\"organization\",{\"1\":{\"331\":1,\"332\":2}}],[\"organize\",{\"1\":{\"244\":1}}],[\"oracle\",{\"1\":{\"133\":1}}],[\"orange\",{\"1\":{\"26\":8}}],[\"order\",{\"1\":{\"88\":1,\"99\":1}}],[\"or\",{\"0\":{\"390\":1,\"400\":1,\"402\":1,\"431\":1},\"1\":{\"57\":1,\"69\":2,\"74\":2,\"244\":2,\"246\":1,\"248\":2,\"293\":1,\"303\":1,\"304\":1,\"315\":1,\"345\":1,\"384\":1,\"387\":1,\"391\":1,\"393\":2,\"396\":3,\"397\":3,\"399\":1,\"402\":2,\"403\":2,\"404\":1,\"405\":1,\"406\":1,\"408\":2,\"409\":1,\"412\":1,\"416\":2,\"417\":1,\"419\":1,\"421\":1,\"423\":1,\"424\":3,\"426\":1,\"427\":1,\"428\":3,\"429\":1,\"431\":1,\"435\":5}}],[\"o\",{\"0\":{\"138\":5,\"197\":5,\"198\":3,\"199\":5},\"1\":{\"49\":1,\"136\":2,\"138\":1,\"140\":1,\"149\":1,\"152\":2,\"154\":4,\"162\":15,\"164\":2,\"169\":2,\"171\":1,\"196\":1,\"197\":2,\"201\":4,\"203\":5,\"204\":5,\"205\":2,\"206\":10,\"208\":6,\"209\":8,\"210\":2,\"212\":4,\"214\":3,\"215\":10,\"216\":1,\"225\":2}}],[\"ofhistorical\",{\"1\":{\"419\":1}}],[\"ofgiant\",{\"1\":{\"390\":1}}],[\"ofwildlife\",{\"1\":{\"389\":1}}],[\"often\",{\"1\":{\"239\":1,\"248\":1,\"383\":1,\"387\":1,\"393\":1,\"394\":1,\"395\":1,\"397\":1,\"401\":1,\"406\":4,\"412\":1,\"424\":2,\"426\":1,\"428\":1,\"435\":1}}],[\"offgoing\",{\"1\":{\"431\":1}}],[\"office\",{\"1\":{\"244\":2,\"246\":1}}],[\"offset\",{\"1\":{\"121\":1}}],[\"offer\",{\"0\":{\"117\":1},\"1\":{\"117\":2,\"118\":1}}],[\"off\",{\"0\":{\"53\":1},\"1\":{\"59\":1,\"69\":2,\"70\":1,\"244\":1,\"401\":1,\"431\":1}}],[\"of只对这个被返回的对象\",{\"1\":{\"20\":1}}],[\"of\",{\"0\":{\"386\":1,\"393\":1,\"395\":1,\"401\":1,\"403\":1,\"408\":1,\"410\":1,\"430\":1},\"1\":{\"19\":5,\"20\":6,\"21\":4,\"24\":1,\"26\":2,\"28\":1,\"42\":1,\"44\":3,\"45\":1,\"46\":1,\"47\":1,\"57\":1,\"59\":1,\"62\":1,\"69\":1,\"74\":2,\"75\":7,\"112\":1,\"173\":1,\"231\":3,\"233\":1,\"237\":4,\"242\":1,\"244\":2,\"246\":8,\"248\":2,\"257\":1,\"301\":2,\"311\":2,\"345\":3,\"383\":2,\"384\":1,\"385\":1,\"386\":1,\"389\":3,\"392\":3,\"393\":2,\"394\":4,\"395\":4,\"396\":1,\"398\":1,\"399\":4,\"400\":1,\"401\":5,\"402\":2,\"403\":12,\"404\":1,\"405\":1,\"406\":6,\"407\":5,\"410\":2,\"411\":4,\"412\":3,\"414\":2,\"415\":2,\"416\":2,\"419\":6,\"421\":2,\"423\":2,\"424\":3,\"425\":1,\"426\":2,\"427\":1,\"428\":16,\"429\":1,\"431\":1,\"432\":2,\"433\":3,\"434\":6,\"435\":26}}],[\"observe\",{\"1\":{\"390\":1,\"426\":1}}],[\"observations\",{\"1\":{\"49\":1,\"75\":1}}],[\"observation\",{\"1\":{\"45\":1,\"49\":1,\"75\":1,\"428\":1}}],[\"obj\",{\"1\":{\"9\":9,\"13\":3,\"18\":3,\"19\":2,\"23\":1,\"24\":2,\"381\":2}}],[\"objects\",{\"1\":{\"337\":3}}],[\"objective\",{\"1\":{\"57\":2}}],[\"object\",{\"0\":{\"8\":1,\"377\":1,\"381\":1},\"1\":{\"9\":1,\"13\":5,\"18\":3,\"28\":3,\"159\":1,\"255\":1,\"345\":1,\"372\":1}}],[\"obviously\",{\"1\":{\"234\":1,\"400\":1}}],[\"obv指标却形成了相反的低点或高点\",{\"1\":{\"6\":1}}],[\"obv指标与价格的趋势相一致时\",{\"1\":{\"6\":1}}],[\"obv\",{\"0\":{\"6\":1},\"1\":{\"6\":1}}],[\"once\",{\"1\":{\"345\":1,\"394\":1}}],[\"on=\",{\"1\":{\"260\":1}}],[\"only\",{\"1\":{\"242\":1,\"273\":2,\"311\":1,\"415\":1,\"417\":2,\"435\":2}}],[\"online\",{\"1\":{\"45\":1,\"383\":2,\"386\":1,\"428\":2}}],[\"ones\",{\"1\":{\"435\":1}}],[\"oneself\",{\"1\":{\"411\":1}}],[\"one\",{\"1\":{\"68\":1,\"233\":2,\"312\":3,\"391\":1,\"392\":1,\"396\":1,\"406\":1,\"409\":1,\"413\":1,\"419\":1,\"428\":2,\"434\":4,\"435\":2}}],[\"on\",{\"0\":{\"6\":1,\"397\":1,\"400\":1,\"402\":1,\"414\":1},\"1\":{\"69\":1,\"227\":1,\"233\":4,\"244\":4,\"246\":3,\"259\":1,\"260\":1,\"287\":2,\"294\":1,\"337\":2,\"345\":4,\"385\":1,\"391\":1,\"393\":2,\"394\":1,\"395\":1,\"397\":4,\"398\":1,\"399\":3,\"401\":6,\"402\":5,\"403\":7,\"404\":1,\"405\":4,\"406\":4,\"407\":1,\"409\":1,\"410\":1,\"412\":4,\"416\":1,\"419\":1,\"428\":3,\"432\":1,\"434\":8,\"435\":15}}],[\"4b\",{\"1\":{\"360\":1}}],[\"46\",{\"1\":{\"352\":1}}],[\"4658\",{\"1\":{\"288\":1}}],[\"48\",{\"1\":{\"342\":1,\"367\":2}}],[\"48~57\",{\"1\":{\"94\":1}}],[\"473\",{\"1\":{\"346\":1}}],[\"47\",{\"1\":{\"313\":1}}],[\"40\",{\"1\":{\"430\":2}}],[\"400mb\",{\"1\":{\"337\":1}}],[\"408\",{\"1\":{\"311\":1,\"312\":1,\"316\":2}}],[\"4096\",{\"1\":{\"125\":1,\"358\":2}}],[\"4n\",{\"1\":{\"203\":1}}],[\"4n​\",{\"1\":{\"138\":1,\"197\":1,\"198\":1,\"208\":2}}],[\"43200\",{\"1\":{\"121\":1}}],[\"4个\",{\"1\":{\"83\":1}}],[\"442\",{\"1\":{\"342\":2}}],[\"4418e\",{\"1\":{\"283\":1}}],[\"44\",{\"1\":{\"10\":1}}],[\"4125\",{\"1\":{\"302\":1,\"303\":1}}],[\"41\",{\"1\":{\"10\":1}}],[\"49\",{\"1\":{\"10\":4}}],[\"4\",{\"0\":{\"6\":1,\"17\":1,\"23\":1,\"34\":1,\"54\":1,\"81\":1,\"88\":1,\"102\":1,\"113\":1,\"119\":1,\"130\":1,\"131\":1,\"132\":1,\"133\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":2,\"159\":1,\"172\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":2,\"182\":1,\"183\":1,\"199\":1,\"206\":1,\"215\":1,\"234\":1,\"247\":1,\"261\":1,\"273\":1,\"274\":1,\"275\":1,\"298\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":2,\"322\":1,\"325\":1,\"327\":1,\"364\":1,\"365\":1,\"367\":1,\"368\":1,\"376\":1,\"382\":1,\"387\":1,\"392\":1,\"396\":1,\"402\":1,\"403\":1,\"410\":1,\"411\":1,\"418\":1,\"419\":1,\"426\":1,\"427\":1,\"428\":1},\"1\":{\"20\":1,\"23\":1,\"26\":1,\"28\":8,\"42\":1,\"43\":2,\"70\":1,\"94\":1,\"99\":1,\"113\":2,\"115\":1,\"154\":1,\"193\":2,\"198\":1,\"208\":1,\"225\":1,\"246\":1,\"283\":2,\"285\":1,\"294\":1,\"305\":1,\"315\":1,\"345\":1,\"352\":1,\"355\":3,\"360\":2,\"374\":1,\"434\":1}}],[\"正确的比较方法应该是使用\",{\"1\":{\"375\":1}}],[\"正确写出链表代码\",{\"0\":{\"177\":1}}],[\"正无穷\",{\"1\":{\"375\":1}}],[\"正文前的\",{\"1\":{\"360\":1}}],[\"正文\",{\"1\":{\"360\":1}}],[\"正文里有\",{\"1\":{\"112\":1}}],[\"正偏\",{\"1\":{\"257\":1}}],[\"正则是匹配模式\",{\"1\":{\"223\":1}}],[\"正常邮件为\",{\"1\":{\"81\":1}}],[\"正面或负面的反馈\",{\"1\":{\"48\":1}}],[\"正数表示大于\",{\"1\":{\"28\":1}}],[\"正是为了防止属性名冲突的\",{\"1\":{\"11\":1,\"376\":1}}],[\"正因为\",{\"1\":{\"5\":1}}],[\"正值表示买入信号的强度增加\",{\"1\":{\"5\":1}}],[\"死叉\",{\"1\":{\"5\":1}}],[\"金叉\",{\"1\":{\"5\":1}}],[\"柱状图的正负值和变化趋势可以用来确认价格趋势的强弱和判断价格的超买超卖情况\",{\"1\":{\"5\":1}}],[\"柱状图的变化\",{\"1\":{\"5\":1}}],[\"柱状图为负值\",{\"1\":{\"5\":1}}],[\"柱状图为正值\",{\"1\":{\"5\":1}}],[\"柱状图是快速线和慢速线之间的差值\",{\"1\":{\"5\":1}}],[\"柱状图\",{\"1\":{\"5\":1}}],[\"并选择最优的路径来传输数据包\",{\"1\":{\"369\":1}}],[\"并非只有真正遇到错误才可以收到\",{\"1\":{\"362\":1}}],[\"并\",{\"1\":{\"337\":1}}],[\"并成功\",{\"1\":{\"336\":1}}],[\"并会为你处理好它\",{\"1\":{\"306\":1}}],[\"并尽可能小\",{\"1\":{\"289\":1}}],[\"并实例化模型\",{\"1\":{\"284\":1}}],[\"并实例化了对应的模型\",{\"1\":{\"280\":1}}],[\"并缓存下来\",{\"1\":{\"279\":1}}],[\"并负责将数字表示转化成文本\",{\"1\":{\"277\":1}}],[\"并返回具有最小总距离的数据点和其质心之间的最佳聚类\",{\"1\":{\"261\":1}}],[\"并返回分区点\",{\"1\":{\"209\":1}}],[\"并在\",{\"1\":{\"294\":1}}],[\"并在每个组中应用聚合函数\",{\"1\":{\"260\":1}}],[\"并在当前位置插入\",{\"1\":{\"28\":1}}],[\"并使分布更加接近正态分布\",{\"1\":{\"257\":1}}],[\"并不直观\",{\"1\":{\"315\":1}}],[\"并不需要存储对象\",{\"1\":{\"198\":1}}],[\"并不存在字节序问题\",{\"1\":{\"88\":1}}],[\"并发包利用\",{\"1\":{\"185\":1}}],[\"并发队列\",{\"0\":{\"187\":1},\"1\":{\"185\":1}}],[\"并发送了子网掩码\",{\"1\":{\"117\":1}}],[\"并从\",{\"1\":{\"129\":1}}],[\"并从第二个元素开始迭代\",{\"1\":{\"28\":1}}],[\"并将它们拼接起来\",{\"1\":{\"313\":1}}],[\"并将这一\",{\"1\":{\"119\":1}}],[\"并将其从原来的位置删除\",{\"1\":{\"175\":1}}],[\"并将其\",{\"1\":{\"26\":2}}],[\"并将其存储在注册表中\",{\"1\":{\"15\":1}}],[\"并撤销他们提供的\",{\"1\":{\"118\":1}}],[\"并向网络发送一个\",{\"1\":{\"118\":1}}],[\"并为每个字符分配一个唯一的字符编号\",{\"1\":{\"105\":1}}],[\"并提供了一些新功能\",{\"1\":{\"112\":1}}],[\"并提供\",{\"1\":{\"101\":1}}],[\"并且从理论上来讲\",{\"1\":{\"361\":1}}],[\"并且\",{\"1\":{\"212\":1}}],[\"并且搬移数据\",{\"1\":{\"154\":1}}],[\"并且告诉所有的\",{\"1\":{\"118\":1}}],[\"并且必须是\",{\"1\":{\"100\":1}}],[\"并且无法达到最佳性能\",{\"1\":{\"53\":1}}],[\"并移到下一行\",{\"1\":{\"94\":1}}],[\"并计算从每个可能的动作开始后\",{\"1\":{\"64\":1}}],[\"并同时与环境互动\",{\"1\":{\"52\":1}}],[\"并根据执行动作后获得的奖励\",{\"1\":{\"48\":1}}],[\"并取样一个批次喂给\",{\"1\":{\"45\":1}}],[\"并灰度化\",{\"1\":{\"43\":1}}],[\"并停止迭代\",{\"1\":{\"28\":1}}],[\"并产生买入和卖出的信号\",{\"1\":{\"5\":1}}],[\"并进一步确认买卖信号\",{\"1\":{\"4\":1}}],[\"线程池该如何处理\",{\"0\":{\"188\":1}}],[\"线程池没有空闲线程时\",{\"0\":{\"188\":1}}],[\"线程安全的队列叫并发队列\",{\"1\":{\"187\":1}}],[\"线性模型和神经网络通常更适合使用标准化的特征\",{\"1\":{\"260\":1}}],[\"线性模型自然地学习\",{\"1\":{\"260\":1}}],[\"线性排序的使用场景特殊\",{\"1\":{\"215\":1}}],[\"线性排序\",{\"0\":{\"211\":1}}],[\"线性对数阶\",{\"1\":{\"162\":1}}],[\"线性阶\",{\"1\":{\"162\":1}}],[\"线性探测每次探测的步长是\",{\"1\":{\"150\":1}}],[\"线性探测的时间就会越来越久\",{\"1\":{\"149\":1}}],[\"线性探测的缺点\",{\"1\":{\"149\":1}}],[\"线性探测\",{\"0\":{\"149\":1}}],[\"线性判别分析\",{\"1\":{\"74\":1}}],[\"线\",{\"1\":{\"5\":2}}],[\"利用分治思想解决非排序问题\",{\"1\":{\"210\":1}}],[\"利用数组实现的有界队列\",{\"1\":{\"188\":1}}],[\"利用链表实现的队列\",{\"1\":{\"188\":1}}],[\"利用哨兵简化变成难度\",{\"1\":{\"180\":1}}],[\"利用哨兵简化实现难度\",{\"0\":{\"180\":1}}],[\"利用已知信息最大化奖励\",{\"1\":{\"53\":1}}],[\"利用现有估计更新目标\",{\"1\":{\"44\":1}}],[\"利用\",{\"1\":{\"44\":2,\"187\":1}}],[\"利用短期\",{\"1\":{\"5\":1}}],[\"利用平均收盘价上涨和下跌的幅度比较\",{\"1\":{\"4\":1}}],[\"平衡性\",{\"1\":{\"200\":1}}],[\"平摊到其他那些时间复杂度比较低的操作上\",{\"1\":{\"166\":1}}],[\"平方阶\",{\"1\":{\"162\":1}}],[\"平均时长\",{\"1\":{\"316\":1}}],[\"平均时间复杂度是\",{\"1\":{\"204\":1}}],[\"平均值\",{\"1\":{\"260\":1}}],[\"平均每个桶\",{\"1\":{\"212\":1}}],[\"平均都是\",{\"1\":{\"205\":1}}],[\"平均情况下\",{\"1\":{\"203\":1}}],[\"平均情况时间复杂度\",{\"0\":{\"165\":1}}],[\"平均情况时间复杂度为\",{\"1\":{\"136\":1}}],[\"平均\",{\"0\":{\"163\":1},\"1\":{\"201\":1,\"203\":1,\"204\":1,\"206\":1}}],[\"平均收盘价下跌的幅度\",{\"1\":{\"4\":1}}],[\"平均收盘价上涨的幅度\",{\"1\":{\"4\":1}}],[\"平面的字符时要注意\",{\"1\":{\"374\":1}}],[\"平面和第\",{\"1\":{\"106\":1}}],[\"平面中有一个私用区\",{\"1\":{\"106\":1}}],[\"平面上的\",{\"1\":{\"106\":1}}],[\"平面\",{\"1\":{\"106\":2}}],[\"平滑异同移动平均线\",{\"0\":{\"5\":1}}],[\"37\",{\"1\":{\"345\":1}}],[\"3755\",{\"1\":{\"100\":1}}],[\"35686c2\",{\"1\":{\"337\":1}}],[\"3668\",{\"1\":{\"311\":1,\"312\":1}}],[\"3374\",{\"1\":{\"302\":1}}],[\"33~126\",{\"1\":{\"94\":1}}],[\"3895\",{\"1\":{\"302\":2,\"303\":1}}],[\"3835\",{\"1\":{\"288\":1}}],[\"384\",{\"1\":{\"111\":1}}],[\"34\",{\"1\":{\"367\":1}}],[\"3422\",{\"1\":{\"345\":1}}],[\"3464\",{\"1\":{\"283\":1}}],[\"3403\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":2,\"306\":2}}],[\"3n​+9n​+27n​+\",{\"1\":{\"198\":1}}],[\"3e\",{\"1\":{\"112\":1}}],[\"31\",{\"1\":{\"111\":1,\"159\":1}}],[\"32767\",{\"1\":{\"367\":1}}],[\"32766\",{\"1\":{\"367\":1}}],[\"32765\",{\"1\":{\"367\":1}}],[\"32\",{\"1\":{\"83\":1,\"87\":1,\"88\":1,\"90\":1,\"94\":1,\"99\":2,\"313\":1,\"367\":2}}],[\"3f\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1}}],[\"30mg\",{\"1\":{\"345\":1}}],[\"3014\",{\"1\":{\"294\":1,\"297\":1,\"298\":1}}],[\"30522\",{\"1\":{\"285\":1}}],[\"3072\",{\"1\":{\"285\":1}}],[\"3008个\",{\"1\":{\"100\":1}}],[\"30\",{\"1\":{\"13\":2,\"28\":1,\"346\":2,\"362\":1,\"367\":2,\"379\":1}}],[\"3\",{\"0\":{\"5\":1,\"14\":1,\"15\":1,\"16\":1,\"22\":1,\"33\":1,\"47\":1,\"53\":1,\"69\":1,\"70\":1,\"80\":1,\"87\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":2,\"102\":1,\"103\":1,\"104\":1,\"108\":1,\"112\":1,\"118\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":2,\"133\":1,\"140\":1,\"144\":1,\"151\":1,\"158\":1,\"166\":1,\"171\":1,\"174\":1,\"175\":1,\"176\":1,\"180\":1,\"190\":1,\"198\":1,\"205\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":2,\"229\":1,\"233\":1,\"245\":1,\"256\":1,\"257\":1,\"258\":1,\"260\":2,\"269\":1,\"270\":1,\"271\":1,\"272\":2,\"283\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":2,\"294\":1,\"295\":2,\"296\":2,\"297\":2,\"298\":1,\"299\":1,\"303\":1,\"309\":1,\"313\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":2,\"322\":1,\"323\":1,\"324\":2,\"325\":1,\"333\":1,\"335\":1,\"336\":1,\"337\":2,\"338\":1,\"347\":1,\"359\":1,\"368\":1,\"375\":1,\"381\":1,\"386\":1,\"391\":1,\"395\":1,\"400\":1,\"401\":1,\"405\":1,\"406\":1,\"408\":1,\"409\":1,\"413\":1,\"414\":1,\"416\":1,\"417\":1,\"421\":1,\"422\":1,\"424\":1,\"425\":1,\"428\":1,\"430\":1,\"431\":1,\"433\":1,\"434\":1},\"1\":{\"4\":1,\"9\":1,\"20\":1,\"23\":2,\"26\":6,\"28\":8,\"43\":3,\"70\":1,\"97\":1,\"102\":1,\"125\":1,\"193\":3,\"194\":1,\"197\":1,\"198\":1,\"206\":1,\"246\":1,\"255\":1,\"283\":1,\"294\":2,\"295\":1,\"322\":2,\"325\":2,\"345\":1,\"355\":3,\"360\":2,\"365\":1,\"375\":2,\"377\":6,\"403\":1}}],[\"首位各添加了一个\",{\"1\":{\"306\":1}}],[\"首位为\",{\"1\":{\"99\":1}}],[\"首先是目标\",{\"1\":{\"364\":1}}],[\"首先是随机初始化一定数量\",{\"1\":{\"261\":1}}],[\"首先我们克隆远端仓库\",{\"1\":{\"336\":1}}],[\"首先创建\",{\"1\":{\"331\":1}}],[\"首先创建函数对输入进行\",{\"1\":{\"312\":1}}],[\"首先更新\",{\"1\":{\"315\":1}}],[\"首先\",{\"1\":{\"292\":1,\"336\":1,\"337\":1}}],[\"首先会判断\",{\"1\":{\"113\":1}}],[\"首先计算每一天的涨幅和跌幅\",{\"1\":{\"4\":1}}],[\"首字母\",{\"1\":{\"99\":1}}],[\"首页\",{\"0\":{\"0\":1}}],[\"dying\",{\"1\":{\"432\":1}}],[\"dynamic\",{\"0\":{\"114\":1,\"313\":1},\"1\":{\"121\":1,\"312\":1}}],[\"dynamics\",{\"1\":{\"62\":1,\"63\":1}}],[\"dɔːn\",{\"1\":{\"423\":1}}],[\"dʒæzmɪn\",{\"1\":{\"407\":1}}],[\"dperessed\",{\"1\":{\"345\":1}}],[\"dpkg\",{\"1\":{\"127\":3}}],[\"dkv\",{\"1\":{\"342\":1}}],[\"dl\",{\"1\":{\"325\":4}}],[\"df2\",{\"1\":{\"260\":1}}],[\"df1\",{\"1\":{\"260\":1}}],[\"df\",{\"1\":{\"260\":10,\"261\":1}}],[\"dfsjh\",{\"1\":{\"76\":1}}],[\"dusk\",{\"1\":{\"423\":1}}],[\"dull\",{\"1\":{\"407\":1,\"424\":1}}],[\"due\",{\"1\":{\"345\":5,\"435\":2}}],[\"dummy\",{\"1\":{\"331\":5,\"332\":2,\"335\":1,\"336\":6,\"337\":7}}],[\"duplicates\",{\"1\":{\"260\":2}}],[\"during\",{\"1\":{\"61\":1,\"390\":1,\"395\":1,\"398\":1,\"426\":1}}],[\"drinking\",{\"1\":{\"406\":1}}],[\"drilling\",{\"1\":{\"405\":1}}],[\"dreams\",{\"1\":{\"403\":1,\"428\":1}}],[\"drama\",{\"1\":{\"403\":1,\"416\":1}}],[\"dramas\",{\"1\":{\"399\":1,\"403\":1,\"416\":1,\"419\":2}}],[\"dry\",{\"0\":{\"431\":1},\"1\":{\"345\":2,\"411\":1,\"429\":1,\"431\":1}}],[\"druglibtest\",{\"1\":{\"345\":1}}],[\"druglibtrain\",{\"1\":{\"345\":1}}],[\"drug\",{\"1\":{\"345\":13,\"346\":8}}],[\"dropout\",{\"1\":{\"285\":3}}],[\"drop\",{\"1\":{\"260\":3}}],[\"drwxr\",{\"1\":{\"125\":1}}],[\"dtype=\",{\"1\":{\"311\":3}}],[\"dtype\",{\"1\":{\"255\":1}}],[\"dtypes\",{\"1\":{\"255\":3}}],[\"danger\",{\"1\":{\"428\":1,\"432\":2,\"434\":2}}],[\"dawn\",{\"1\":{\"423\":1}}],[\"dark\",{\"1\":{\"404\":1}}],[\"date\",{\"1\":{\"337\":1,\"381\":1,\"409\":1}}],[\"dates\",{\"1\":{\"259\":2,\"417\":1}}],[\"datacollatorwithpadding\",{\"1\":{\"313\":3,\"314\":2,\"315\":1,\"317\":2}}],[\"dataloader\",{\"0\":{\"319\":1},\"1\":{\"313\":1,\"319\":6,\"320\":1,\"322\":2,\"323\":1,\"324\":1,\"325\":8}}],[\"dataset=tokenized\",{\"1\":{\"315\":2,\"316\":2}}],[\"datasetdict\",{\"1\":{\"311\":2,\"312\":1,\"342\":4,\"345\":2}}],[\"dataset\",{\"1\":{\"311\":9,\"312\":6,\"314\":4,\"317\":2,\"318\":1,\"332\":2,\"340\":1,\"341\":4,\"342\":14,\"343\":2,\"345\":21,\"346\":10,\"347\":1}}],[\"datasets\",{\"0\":{\"340\":1},\"1\":{\"71\":1,\"310\":1,\"311\":6,\"312\":8,\"313\":1,\"314\":2,\"315\":3,\"316\":3,\"317\":4,\"318\":8,\"319\":2,\"326\":1,\"332\":1,\"339\":1,\"340\":2,\"341\":1,\"342\":2,\"345\":2,\"346\":1}}],[\"data=x\",{\"1\":{\"261\":2}}],[\"data=df\",{\"1\":{\"255\":5}}],[\"dataframes\",{\"1\":{\"341\":1}}],[\"dataframe\",{\"1\":{\"258\":1,\"259\":1,\"260\":3,\"341\":1}}],[\"data\",{\"1\":{\"75\":1,\"258\":1,\"313\":3,\"314\":1,\"315\":4,\"316\":1,\"317\":1,\"319\":1,\"338\":1,\"341\":5,\"342\":10,\"343\":4,\"345\":2,\"356\":1,\"383\":2,\"384\":1,\"385\":1}}],[\"daily\",{\"1\":{\"246\":1,\"345\":2,\"396\":1}}],[\"days\",{\"1\":{\"411\":1,\"428\":1,\"430\":1,\"435\":1}}],[\"day\",{\"0\":{\"393\":1,\"394\":1,\"395\":1,\"396\":1},\"1\":{\"244\":1,\"345\":2,\"393\":5,\"394\":1,\"395\":2,\"396\":3,\"406\":2,\"407\":1,\"411\":1,\"426\":1,\"428\":1,\"434\":1,\"435\":2}}],[\"dn\",{\"1\":{\"215\":1}}],[\"ddns\",{\"1\":{\"121\":1}}],[\"dhcp\",{\"0\":{\"114\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1},\"1\":{\"114\":2,\"116\":2,\"117\":7,\"118\":8,\"119\":3,\"120\":3,\"121\":6,\"122\":3}}],[\"d类地址\",{\"1\":{\"111\":1}}],[\"dbcs\",{\"1\":{\"103\":1}}],[\"dword\",{\"1\":{\"83\":1}}],[\"d\",{\"1\":{\"45\":1,\"125\":1,\"128\":1,\"129\":1,\"215\":1,\"224\":4,\"232\":2,\"234\":1,\"402\":1,\"411\":1,\"413\":1,\"432\":1,\"434\":1}}],[\"dolphins\",{\"1\":{\"435\":1}}],[\"domesticated\",{\"1\":{\"432\":1}}],[\"documentaries\",{\"1\":{\"403\":2,\"428\":2}}],[\"doctors\",{\"1\":{\"345\":2}}],[\"doctor\",{\"1\":{\"268\":1,\"345\":1}}],[\"dogs\",{\"1\":{\"291\":1,\"435\":1}}],[\"dog\",{\"1\":{\"291\":1}}],[\"do\",{\"0\":{\"384\":1,\"385\":1,\"396\":1,\"397\":2,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"406\":2,\"408\":1,\"410\":1,\"413\":1,\"414\":1,\"416\":1,\"418\":1,\"421\":1,\"424\":1,\"425\":1,\"426\":1,\"427\":1,\"430\":1,\"431\":1,\"434\":1},\"1\":{\"234\":1,\"244\":1,\"337\":1,\"391\":1,\"396\":1,\"399\":4,\"402\":1,\"403\":4,\"404\":2,\"406\":3,\"407\":1,\"408\":1,\"412\":3,\"415\":2,\"416\":1,\"419\":2,\"420\":1,\"421\":2,\"423\":2,\"424\":1,\"426\":1,\"427\":1,\"428\":1,\"429\":4,\"431\":2,\"432\":2,\"435\":4}}],[\"don\",{\"1\":{\"233\":1,\"236\":1,\"237\":1,\"248\":1,\"393\":1,\"400\":2,\"403\":4,\"406\":1,\"413\":1,\"414\":1,\"419\":1,\"427\":1,\"435\":1}}],[\"done=true\",{\"1\":{\"20\":1}}],[\"done\",{\"1\":{\"19\":2,\"20\":5,\"21\":1,\"24\":2,\"345\":1,\"413\":1,\"435\":1}}],[\"does\",{\"1\":{\"227\":1}}],[\"doesn\",{\"1\":{\"227\":1}}],[\"doing\",{\"1\":{\"227\":2,\"231\":1,\"393\":1,\"405\":1,\"406\":1,\"413\":1,\"421\":1,\"431\":4,\"434\":2,\"435\":1}}],[\"downs\",{\"1\":{\"428\":1}}],[\"downsides\",{\"1\":{\"244\":1}}],[\"downton\",{\"1\":{\"419\":1}}],[\"downtown\",{\"1\":{\"246\":1,\"416\":1,\"419\":1}}],[\"download\",{\"1\":{\"383\":2}}],[\"down\",{\"1\":{\"196\":1,\"244\":1,\"406\":5,\"428\":2,\"430\":3,\"434\":2,\"435\":2}}],[\"doubled\",{\"1\":{\"345\":1}}],[\"double\",{\"0\":{\"47\":1,\"151\":1},\"1\":{\"44\":1,\"47\":2,\"83\":1,\"103\":1,\"435\":1}}],[\"dqns\",{\"1\":{\"47\":1}}],[\"dqn\",{\"0\":{\"42\":1,\"43\":1},\"1\":{\"47\":1}}],[\"demonstrate\",{\"1\":{\"435\":1}}],[\"degrees\",{\"1\":{\"430\":4}}],[\"details\",{\"1\":{\"405\":1}}],[\"deterministic\",{\"1\":{\"55\":1}}],[\"dedicate\",{\"1\":{\"396\":1}}],[\"deer\",{\"1\":{\"389\":1}}],[\"deeper\",{\"1\":{\"242\":1}}],[\"deep\",{\"0\":{\"41\":1,\"42\":1,\"44\":1,\"47\":1},\"1\":{\"41\":1,\"42\":1,\"44\":6,\"45\":1,\"46\":1,\"47\":1,\"48\":2,\"59\":1,\"74\":1,\"406\":1,\"434\":1}}],[\"development\",{\"1\":{\"398\":1,\"435\":2}}],[\"dev\",{\"1\":{\"367\":7}}],[\"devices\",{\"1\":{\"383\":1}}],[\"device\",{\"1\":{\"112\":1,\"323\":6,\"324\":1,\"325\":8}}],[\"deviation\",{\"1\":{\"3\":1}}],[\"desired\",{\"1\":{\"434\":3}}],[\"designer\",{\"1\":{\"428\":1}}],[\"designed\",{\"1\":{\"383\":1,\"390\":1,\"435\":1}}],[\"designated\",{\"1\":{\"356\":1}}],[\"design\",{\"1\":{\"246\":2}}],[\"despite\",{\"1\":{\"428\":1}}],[\"destination\",{\"1\":{\"360\":2,\"384\":1}}],[\"descent\",{\"1\":{\"44\":2}}],[\"description\",{\"0\":{\"16\":1},\"1\":{\"12\":3,\"15\":1,\"338\":1,\"376\":1}}],[\"dequeue\",{\"1\":{\"185\":1,\"187\":1}}],[\"deb\",{\"1\":{\"127\":2}}],[\"decrease\",{\"1\":{\"435\":1}}],[\"decay\",{\"1\":{\"321\":1}}],[\"decorative\",{\"1\":{\"435\":1}}],[\"decorations\",{\"1\":{\"435\":1}}],[\"decoration\",{\"1\":{\"246\":3}}],[\"decoding\",{\"0\":{\"298\":1},\"1\":{\"298\":1}}],[\"decoded\",{\"1\":{\"298\":2}}],[\"decoder\",{\"1\":{\"273\":3,\"275\":7}}],[\"decoders\",{\"1\":{\"273\":1}}],[\"decode\",{\"1\":{\"83\":1,\"88\":1,\"298\":3,\"306\":3}}],[\"decided\",{\"1\":{\"406\":1,\"419\":1}}],[\"deciding\",{\"1\":{\"397\":1}}],[\"decimal\",{\"1\":{\"93\":1}}],[\"decision\",{\"1\":{\"49\":1,\"63\":1}}],[\"depresses\",{\"1\":{\"435\":1}}],[\"depression\",{\"1\":{\"345\":4}}],[\"depending\",{\"1\":{\"403\":2}}],[\"depends\",{\"1\":{\"233\":1,\"402\":1,\"435\":2}}],[\"dependent\",{\"1\":{\"75\":1}}],[\"depthastronomical\",{\"1\":{\"427\":1}}],[\"depth\",{\"1\":{\"28\":1,\"192\":2,\"427\":1}}],[\"definately\",{\"1\":{\"385\":1}}],[\"definition\",{\"1\":{\"38\":1}}],[\"def\",{\"1\":{\"255\":3,\"312\":1,\"314\":1,\"316\":1,\"317\":1,\"345\":1,\"346\":1}}],[\"default\",{\"0\":{\"34\":1,\"35\":1},\"1\":{\"35\":6,\"36\":9,\"112\":1,\"121\":1,\"367\":4}}],[\"delve\",{\"1\":{\"427\":1}}],[\"delved\",{\"1\":{\"427\":1}}],[\"delay\",{\"1\":{\"383\":2,\"386\":2}}],[\"deliberately\",{\"1\":{\"311\":2}}],[\"delimiter=\",{\"1\":{\"345\":1}}],[\"delimiter\",{\"1\":{\"345\":1}}],[\"delim\",{\"1\":{\"28\":1}}],[\"deleted\",{\"1\":{\"149\":2}}],[\"deletecount\",{\"1\":{\"28\":2}}],[\"delete\",{\"1\":{\"9\":2,\"332\":2}}],[\"deal\",{\"1\":{\"425\":1}}],[\"deaf\",{\"1\":{\"421\":2}}],[\"deadlines\",{\"1\":{\"393\":1,\"395\":1}}],[\"dead\",{\"1\":{\"244\":1}}],[\"dea\",{\"1\":{\"5\":1}}],[\"dinner\",{\"1\":{\"428\":1}}],[\"didn\",{\"1\":{\"435\":1}}],[\"did\",{\"0\":{\"417\":1,\"419\":1,\"428\":1},\"1\":{\"415\":1,\"420\":1,\"423\":1,\"428\":1,\"434\":1,\"435\":1}}],[\"diversity\",{\"1\":{\"392\":1}}],[\"diverse\",{\"1\":{\"389\":1,\"403\":2}}],[\"divergence\",{\"0\":{\"5\":1}}],[\"dijkstra\",{\"1\":{\"369\":1}}],[\"diet\",{\"1\":{\"345\":1}}],[\"dicing\",{\"0\":{\"345\":1}}],[\"dictionary\",{\"1\":{\"287\":1}}],[\"dimension\",{\"1\":{\"301\":1}}],[\"dim=\",{\"1\":{\"283\":1,\"324\":1}}],[\"directly\",{\"1\":{\"386\":1}}],[\"directory\",{\"1\":{\"125\":1,\"287\":2,\"294\":1}}],[\"dir\",{\"1\":{\"125\":1}}],[\"digital\",{\"1\":{\"435\":1}}],[\"digit\",{\"1\":{\"83\":1}}],[\"disappearing\",{\"1\":{\"432\":1}}],[\"disappeared\",{\"1\":{\"406\":1}}],[\"disadvantage\",{\"1\":{\"383\":1,\"386\":1}}],[\"dislikes\",{\"1\":{\"244\":1}}],[\"disruptor\",{\"1\":{\"185\":1}}],[\"disturbance\",{\"1\":{\"404\":1}}],[\"disturb\",{\"1\":{\"404\":1}}],[\"distracting\",{\"1\":{\"406\":1}}],[\"distraction\",{\"1\":{\"404\":1}}],[\"distracts\",{\"1\":{\"405\":1}}],[\"distract\",{\"1\":{\"404\":2}}],[\"distribution\",{\"1\":{\"61\":1,\"62\":1,\"63\":1}}],[\"distances\",{\"1\":{\"383\":1,\"387\":1}}],[\"distance\",{\"1\":{\"369\":1,\"387\":1,\"434\":1}}],[\"distorting\",{\"1\":{\"311\":2}}],[\"distilbert\",{\"1\":{\"279\":2,\"280\":2,\"282\":1,\"301\":2,\"303\":1,\"304\":1,\"307\":1}}],[\"distillbert\",{\"1\":{\"273\":1}}],[\"distilgpt2\",{\"1\":{\"267\":1}}],[\"distinctive\",{\"1\":{\"407\":1,\"410\":1}}],[\"distinction\",{\"1\":{\"398\":1,\"432\":1}}],[\"distinct\",{\"1\":{\"75\":1}}],[\"discover\",{\"0\":{\"116\":1},\"1\":{\"116\":1}}],[\"discounted\",{\"1\":{\"56\":1}}],[\"discount\",{\"1\":{\"49\":1}}],[\"discounting\",{\"1\":{\"49\":1}}],[\"discipline\",{\"1\":{\"112\":1}}],[\"discriminant\",{\"1\":{\"74\":1}}],[\"discrete\",{\"1\":{\"49\":1,\"255\":5}}],[\"discard\",{\"1\":{\"45\":1}}],[\"different\",{\"1\":{\"242\":1,\"331\":1,\"397\":1,\"403\":3,\"416\":1,\"421\":1,\"434\":1,\"435\":2}}],[\"differences\",{\"0\":{\"414\":1},\"1\":{\"260\":1,\"412\":1}}],[\"difference\",{\"0\":{\"68\":1},\"1\":{\"66\":1}}],[\"dif\",{\"1\":{\"5\":1}}],[\"dm\",{\"1\":{\"4\":2}}],[\"=l\",{\"1\":{\"225\":1}}],[\"=nlogmn​\",{\"1\":{\"212\":1}}],[\"=cn+nlog2​n\",{\"1\":{\"208\":1}}],[\"=t\",{\"1\":{\"208\":2}}],[\"=2k×t\",{\"1\":{\"208\":1}}],[\"=2×\",{\"1\":{\"208\":1}}],[\"=2×t\",{\"1\":{\"208\":1,\"209\":1}}],[\"=2\",{\"1\":{\"191\":1}}],[\"=1\",{\"1\":{\"191\":1}}],[\"=f\",{\"1\":{\"191\":1}}],[\"=o\",{\"1\":{\"138\":2,\"162\":1}}],[\"=argamax​q∗\",{\"1\":{\"69\":1}}],[\"=γ∑​p\",{\"1\":{\"62\":1}}],[\"=eτ∼πθ​​\",{\"1\":{\"62\":1}}],[\"=eτ∼π​\",{\"1\":{\"62\":1}}],[\"=eπ​\",{\"1\":{\"56\":1,\"64\":2,\"65\":1}}],[\"=p\",{\"1\":{\"55\":1,\"61\":1,\"225\":4}}],[\"=k=0∑∞​γkrr+k+1​\",{\"1\":{\"49\":1}}],[\"=k=0∑∞​rr+k+1​\",{\"1\":{\"49\":1}}],[\"=rt+1​+γrt+2​+γ2rt+3​+γ3rt+4​+\",{\"1\":{\"49\":1,\"62\":1}}],[\"=rt+1​+rt+2​+rt+3​+rt+4​+\",{\"1\":{\"49\":1}}],[\"=>\",{\"1\":{\"23\":1,\"28\":2,\"225\":5}}],[\"==coding\",{\"1\":{\"393\":1}}],[\"==explore\",{\"1\":{\"393\":1}}],[\"===\",{\"1\":{\"15\":1,\"26\":1,\"28\":1,\"377\":1,\"378\":1}}],[\"==\",{\"0\":{\"27\":1},\"1\":{\"12\":1,\"27\":5,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"159\":1,\"164\":1,\"180\":7,\"185\":2,\"191\":2,\"192\":1,\"193\":2,\"194\":2,\"210\":1,\"345\":1,\"377\":1,\"378\":2}}],[\"=\",{\"1\":{\"4\":2,\"9\":9,\"10\":1,\"12\":4,\"13\":10,\"15\":2,\"16\":3,\"20\":6,\"21\":4,\"22\":1,\"23\":2,\"26\":11,\"28\":11,\"35\":1,\"62\":1,\"111\":1,\"142\":7,\"143\":7,\"144\":5,\"145\":5,\"146\":2,\"151\":1,\"159\":6,\"162\":2,\"164\":3,\"180\":11,\"192\":1,\"193\":3,\"194\":7,\"203\":7,\"204\":5,\"205\":8,\"206\":5,\"208\":11,\"209\":5,\"212\":1,\"213\":15,\"225\":5,\"237\":5,\"242\":9,\"244\":2,\"246\":1,\"255\":14,\"257\":2,\"259\":2,\"260\":8,\"261\":4,\"267\":2,\"268\":3,\"279\":5,\"280\":2,\"281\":1,\"282\":3,\"283\":1,\"285\":2,\"286\":2,\"288\":4,\"291\":1,\"294\":2,\"296\":3,\"297\":1,\"298\":1,\"301\":21,\"302\":7,\"303\":7,\"304\":4,\"306\":4,\"307\":6,\"311\":2,\"312\":7,\"313\":4,\"314\":5,\"315\":3,\"316\":9,\"317\":5,\"318\":2,\"319\":2,\"320\":2,\"321\":1,\"322\":3,\"323\":5,\"324\":5,\"325\":22,\"331\":4,\"336\":1,\"337\":3,\"342\":5,\"343\":3,\"345\":5,\"346\":4,\"375\":3,\"380\":1,\"399\":2,\"400\":1,\"401\":3,\"405\":1,\"406\":1,\"408\":1,\"412\":2,\"415\":1,\"416\":3,\"417\":3,\"423\":1,\"424\":2,\"425\":1,\"429\":1,\"431\":1,\"432\":2,\"434\":2,\"435\":7}}],[\"可爱的\",{\"1\":{\"435\":1}}],[\"可通过\",{\"1\":{\"267\":1}}],[\"可视化\",{\"1\":{\"261\":1}}],[\"可实现惰性匹配\",{\"1\":{\"224\":1}}],[\"可读性太差\",{\"1\":{\"180\":1}}],[\"可在这里查询\",{\"1\":{\"108\":1}}],[\"可被分配给不同的字符\",{\"1\":{\"106\":1}}],[\"可显示可打印字符\",{\"1\":{\"94\":1}}],[\"可显示但不可打印的空格字符\",{\"1\":{\"94\":1}}],[\"可迭代\",{\"0\":{\"22\":1}}],[\"可迭代对象\",{\"0\":{\"19\":1},\"1\":{\"19\":1,\"24\":1}}],[\"可以修改\",{\"1\":{\"373\":1}}],[\"可以分摊流量\",{\"1\":{\"370\":1}}],[\"可以根据路由协议算法生成动态路由表\",{\"1\":{\"368\":1}}],[\"可以根据源\",{\"1\":{\"367\":1}}],[\"可以接两个外网\",{\"1\":{\"367\":1}}],[\"可以接收很多参数\",{\"1\":{\"288\":1}}],[\"可以设置\",{\"1\":{\"367\":1}}],[\"可以设置特殊的\",{\"1\":{\"362\":1}}],[\"可以更加容易推断出错的位置\",{\"1\":{\"361\":1}}],[\"可以划分\",{\"1\":{\"358\":1}}],[\"可以准确转发\",{\"1\":{\"354\":1}}],[\"可以配置\",{\"1\":{\"347\":1}}],[\"可以传入\",{\"1\":{\"346\":1}}],[\"可以是单个文件路径\",{\"1\":{\"342\":1}}],[\"可以是一帧图片\",{\"1\":{\"49\":1}}],[\"可以观察到\",{\"1\":{\"337\":1}}],[\"可以发\",{\"1\":{\"356\":1}}],[\"可以发现多个最短的路径\",{\"1\":{\"370\":1}}],[\"可以发现\",{\"1\":{\"337\":1}}],[\"可以发送广播包\",{\"1\":{\"112\":1}}],[\"可以指定\",{\"1\":{\"332\":1}}],[\"可以尝试下面方法\",{\"1\":{\"315\":1}}],[\"可以在这多个路径中进行负载均衡\",{\"1\":{\"370\":1}}],[\"可以在\",{\"1\":{\"302\":1,\"315\":1,\"328\":1}}],[\"可以在全局注册表中寻找其\",{\"1\":{\"11\":1,\"18\":1}}],[\"可以\",{\"1\":{\"275\":1}}],[\"可以降低多少对另一个量的不确定性\",{\"1\":{\"254\":1}}],[\"可以写成\",{\"1\":{\"224\":2}}],[\"可以支持快速的插入\",{\"1\":{\"195\":1}}],[\"可以把第一个的走法分为两类\",{\"1\":{\"191\":1}}],[\"可以实现非常高效的并发队列\",{\"1\":{\"187\":1}}],[\"可以实现一个更加高效的散列表\",{\"1\":{\"154\":1}}],[\"可以有效地协调生产和消费的速度\",{\"1\":{\"186\":1}}],[\"可以有效利用\",{\"1\":{\"154\":1}}],[\"可以借助\",{\"1\":{\"173\":1}}],[\"可以进行一次排序\",{\"1\":{\"140\":1}}],[\"可以先记录下已经删除的数据\",{\"1\":{\"136\":1}}],[\"可以灵活地对文本进行处理\",{\"1\":{\"132\":1}}],[\"可以单独执行\",{\"1\":{\"132\":1}}],[\"可以退出\",{\"1\":{\"127\":1}}],[\"可以下载\",{\"1\":{\"127\":1}}],[\"可以通过传递\",{\"1\":{\"312\":1}}],[\"可以通过查看\",{\"1\":{\"311\":1}}],[\"可以通过填充\",{\"1\":{\"250\":1}}],[\"可以通过修改默认初始大小\",{\"1\":{\"156\":1}}],[\"可以通过管道\",{\"1\":{\"128\":1}}],[\"可以通过\",{\"1\":{\"124\":1,\"129\":1,\"366\":1}}],[\"可以使用进度条\",{\"1\":{\"323\":1}}],[\"可以使用空格来将句子切分为字词\",{\"1\":{\"291\":1}}],[\"可以使用更多的n\",{\"1\":{\"261\":1}}],[\"可以使用更大的\",{\"1\":{\"261\":1}}],[\"可以使用搜索工具\",{\"1\":{\"127\":1}}],[\"可以使用\",{\"1\":{\"124\":1,\"127\":1,\"129\":2,\"259\":1,\"298\":1,\"304\":1,\"316\":1,\"337\":1,\"345\":1,\"346\":1}}],[\"可以自行安装\",{\"1\":{\"112\":1}}],[\"可以自定义顺序进行排序\",{\"1\":{\"28\":1}}],[\"可以并存于同一个文件内\",{\"1\":{\"103\":1}}],[\"可以绘出混淆矩阵\",{\"1\":{\"77\":1}}],[\"可以学随机策略\",{\"1\":{\"59\":1}}],[\"可以从统一的位置进行\",{\"1\":{\"36\":1}}],[\"可以不指定被导出实体的名称\",{\"1\":{\"35\":1}}],[\"可以正确处理\",{\"1\":{\"28\":1}}],[\"可以一次添加多个元素\",{\"1\":{\"26\":1}}],[\"可以将序列转化成特定结构的\",{\"1\":{\"301\":1}}],[\"可以将很长的结果分页展示\",{\"1\":{\"127\":1}}],[\"可以将\",{\"1\":{\"23\":1,\"316\":1}}],[\"可以创建无穷迭代器\",{\"1\":{\"20\":1}}],[\"可以用来进行\",{\"1\":{\"316\":1}}],[\"可以用桶排序或计数排序\",{\"1\":{\"214\":1}}],[\"可以用\",{\"1\":{\"19\":1,\"24\":1,\"258\":1}}],[\"可以用以下方法\",{\"1\":{\"13\":1}}],[\"可以参考\",{\"1\":{\"17\":1}}],[\"可以返回对象所有键\",{\"1\":{\"13\":1,\"18\":1}}],[\"可以获取所有的\",{\"1\":{\"13\":1,\"18\":1}}],[\"可以避免属性名冲突\",{\"1\":{\"13\":1}}],[\"可以判断市场买入和卖出压力的强弱\",{\"1\":{\"6\":1}}],[\"可以确认当前趋势的可靠性\",{\"1\":{\"6\":1}}],[\"可以提高交易决策的准确性\",{\"1\":{\"5\":1}}],[\"可以提高预测准确性\",{\"1\":{\"4\":1}}],[\"可能导致不稳定的路由和降低的网络性能\",{\"1\":{\"369\":1}}],[\"可能不会有\",{\"1\":{\"312\":1}}],[\"可能被切分成\",{\"1\":{\"293\":1}}],[\"可能有十几个\",{\"1\":{\"292\":1}}],[\"可能本身没有含义\",{\"1\":{\"292\":1}}],[\"可能要\",{\"1\":{\"216\":1}}],[\"可能查到该位置时\",{\"1\":{\"149\":1}}],[\"可能是目的主机不工作或不存在\",{\"1\":{\"360\":1}}],[\"可能是患者的\",{\"1\":{\"345\":1}}],[\"可能是\",{\"1\":{\"279\":1}}],[\"可能是指\",{\"1\":{\"265\":1}}],[\"可能是出于显示上视觉美观的考虑\",{\"1\":{\"100\":1}}],[\"可能是在代码中的另一个位置\",{\"1\":{\"15\":1}}],[\"可能具有\",{\"1\":{\"90\":1}}],[\"可能指\",{\"1\":{\"88\":1}}],[\"可能的\",{\"1\":{\"49\":2}}],[\"可能会溢出\",{\"1\":{\"139\":1}}],[\"可能会导致\",{\"1\":{\"47\":1}}],[\"可能会出现反弹的机会\",{\"1\":{\"4\":1}}],[\"可能会出现价格回调的机会\",{\"1\":{\"4\":1}}],[\"可能达到\",{\"1\":{\"41\":1}}],[\"可能提示价格上涨的动力减弱\",{\"1\":{\"6\":1}}],[\"可能预示价格下跌的可能性增加\",{\"1\":{\"5\":1}}],[\"可能预示价格上涨的可能性增加\",{\"1\":{\"5\":1}}],[\"为什么有的编程规范要求用\",{\"1\":{\"373\":1}}],[\"为什么会出错呢\",{\"1\":{\"301\":1}}],[\"为什么还要用\",{\"1\":{\"112\":1}}],[\"为此我们要查看\",{\"1\":{\"294\":1}}],[\"为依据判断是否存在时\",{\"1\":{\"258\":1}}],[\"为每一个运行\",{\"1\":{\"129\":1}}],[\"为系统的每个用户设置环境信息\",{\"1\":{\"129\":1}}],[\"为新用户设置密码\",{\"1\":{\"124\":1}}],[\"为目标地址进行广播\",{\"1\":{\"118\":1}}],[\"为源\",{\"1\":{\"118\":1}}],[\"为它分配了一个可以用的\",{\"1\":{\"117\":1}}],[\"为26个小写英文字母\",{\"1\":{\"94\":1}}],[\"为大型机操作系统而开发设计的\",{\"1\":{\"93\":1}}],[\"为例\",{\"1\":{\"59\":1,\"87\":1}}],[\"为该状态下每个可能的\",{\"1\":{\"43\":1}}],[\"为\",{\"1\":{\"15\":1,\"65\":1,\"68\":1,\"70\":1,\"94\":2,\"111\":1,\"112\":1,\"279\":1,\"312\":1,\"315\":1,\"323\":1,\"345\":1,\"375\":2}}],[\"为了表达几个额外的语言场景\",{\"1\":{\"375\":1}}],[\"为了能够计算往返时间\",{\"1\":{\"361\":1}}],[\"为了避免它在无意中被修改\",{\"1\":{\"373\":1}}],[\"为了避免每次都用\",{\"1\":{\"353\":1}}],[\"为了避免重复计算\",{\"1\":{\"193\":1}}],[\"为了理解\",{\"1\":{\"338\":1}}],[\"为了充分利用集群\",{\"1\":{\"325\":1}}],[\"为了让我们知道训练的进度\",{\"1\":{\"323\":1}}],[\"为了定义学习率调度器\",{\"1\":{\"322\":1}}],[\"为了获得预测结果\",{\"1\":{\"316\":1}}],[\"为了处理长序列\",{\"1\":{\"307\":1}}],[\"为了批处理\",{\"1\":{\"307\":1}}],[\"为了实现这一步骤\",{\"1\":{\"295\":1}}],[\"为了加快训练\",{\"1\":{\"275\":1}}],[\"为了在大规模数据上进行预训练\",{\"1\":{\"268\":1}}],[\"为了保持各自的独立性\",{\"1\":{\"260\":1}}],[\"为了兼顾任意规模数据排序\",{\"1\":{\"215\":1}}],[\"为了对\",{\"1\":{\"158\":1}}],[\"为了尽可能保证散列表的操作效率\",{\"1\":{\"151\":1}}],[\"为了统一这种混乱局面\",{\"1\":{\"95\":1}}],[\"为了与其它标准兼容\",{\"1\":{\"90\":1}}],[\"为了解决这个问题\",{\"1\":{\"64\":1,\"302\":1}}],[\"为了使得训练更稳定\",{\"1\":{\"44\":1}}],[\"为了降低\",{\"1\":{\"43\":1}}],[\"为了达到这个目的\",{\"1\":{\"14\":1}}],[\"为了增强rsi指标的有效性\",{\"1\":{\"4\":1}}],[\"为时间周期\",{\"1\":{\"3\":2}}],[\"相邻节点会根据接收到的信息更新自己的向量表\",{\"1\":{\"369\":1}}],[\"相对于\",{\"1\":{\"292\":1}}],[\"相对强弱指数\",{\"0\":{\"4\":1}}],[\"相关的前五名答案之一\",{\"1\":{\"268\":1}}],[\"相关代码\",{\"1\":{\"255\":1}}],[\"相关信息\",{\"1\":{\"10\":1,\"48\":1,\"70\":1,\"133\":1,\"258\":1,\"259\":1}}],[\"相比于上面的代码\",{\"1\":{\"180\":1}}],[\"相比开放寻址法更简单\",{\"1\":{\"152\":1}}],[\"相比之下\",{\"1\":{\"39\":1,\"59\":1}}],[\"相结合来计算\",{\"1\":{\"68\":1}}],[\"相当于在多个子图中进行\",{\"1\":{\"255\":1}}],[\"相当于是一组字符集的总称\",{\"1\":{\"97\":1}}],[\"相当于\",{\"1\":{\"26\":1,\"54\":1}}],[\"相等\",{\"1\":{\"11\":1,\"18\":1,\"362\":1}}],[\"相同的\",{\"1\":{\"15\":1}}],[\"相同\",{\"1\":{\"10\":1,\"376\":1}}],[\"相反\",{\"1\":{\"4\":2,\"225\":1}}],[\"超过网络包的生存时间仍然没到\",{\"1\":{\"360\":1}}],[\"超时\",{\"1\":{\"360\":2}}],[\"超卖信号\",{\"1\":{\"4\":1}}],[\"超买\",{\"1\":{\"4\":1}}],[\"rt\",{\"1\":{\"367\":1}}],[\"rtt\",{\"1\":{\"361\":1}}],[\"rt+1​\",{\"1\":{\"65\":1,\"66\":1,\"68\":2,\"70\":1}}],[\"rt+1​+γv\",{\"1\":{\"68\":2,\"70\":1}}],[\"rt+1​+γ∗vπ​\",{\"1\":{\"65\":1}}],[\"rt+1​+γrt+2​+γ2rt+3​+γ3rt+4​+\",{\"1\":{\"56\":1}}],[\"rt+1​+γamax​q\",{\"1\":{\"44\":1,\"70\":1}}],[\"rustling\",{\"1\":{\"419\":2}}],[\"rustic\",{\"1\":{\"246\":1}}],[\"rub\",{\"1\":{\"414\":2}}],[\"rules\",{\"1\":{\"405\":1}}],[\"rule\",{\"1\":{\"367\":4}}],[\"runtime\",{\"1\":{\"315\":1}}],[\"running\",{\"1\":{\"291\":1}}],[\"run\",{\"1\":{\"291\":1,\"315\":1}}],[\"rc\",{\"1\":{\"255\":2}}],[\"rʌstɪk\",{\"1\":{\"246\":1}}],[\"raining\",{\"1\":{\"431\":1}}],[\"rain\",{\"1\":{\"430\":1}}],[\"rains\",{\"1\":{\"429\":1,\"430\":1,\"431\":1}}],[\"radiate\",{\"1\":{\"407\":1}}],[\"radix\",{\"0\":{\"214\":1}}],[\"rare\",{\"1\":{\"389\":1}}],[\"rabbits\",{\"1\":{\"389\":1,\"435\":1}}],[\"rather\",{\"1\":{\"402\":1,\"403\":1,\"419\":1,\"428\":1,\"435\":1}}],[\"rating\",{\"1\":{\"345\":1}}],[\"ratio\",{\"1\":{\"257\":1}}],[\"rate\",{\"0\":{\"322\":1},\"1\":{\"322\":1}}],[\"ram\",{\"1\":{\"312\":2,\"340\":1}}],[\"raw\",{\"1\":{\"279\":2,\"311\":7,\"312\":5,\"314\":2,\"317\":2,\"342\":2,\"343\":1,\"345\":2}}],[\"random\",{\"1\":{\"74\":1,\"255\":1}}],[\"range\",{\"1\":{\"20\":8,\"22\":1,\"23\":1,\"121\":1,\"285\":1,\"301\":2,\"323\":2,\"325\":4,\"345\":2,\"389\":1,\"410\":1,\"435\":1}}],[\"rpm\",{\"1\":{\"127\":5}}],[\"rwx\",{\"1\":{\"125\":1}}],[\"rw\",{\"1\":{\"125\":1}}],[\"roam\",{\"1\":{\"435\":1}}],[\"roads\",{\"1\":{\"248\":2,\"428\":2}}],[\"road\",{\"1\":{\"248\":2}}],[\"round\",{\"1\":{\"434\":4}}],[\"routines\",{\"1\":{\"396\":1}}],[\"routine\",{\"1\":{\"394\":1,\"397\":1,\"398\":1}}],[\"routing\",{\"1\":{\"369\":3,\"370\":1}}],[\"route\",{\"1\":{\"360\":1,\"362\":1,\"367\":5}}],[\"routers\",{\"1\":{\"121\":1}}],[\"rose\",{\"1\":{\"409\":3,\"411\":1}}],[\"roses\",{\"1\":{\"407\":3,\"408\":1,\"410\":2,\"411\":1}}],[\"room\",{\"0\":{\"451\":1},\"1\":{\"397\":1,\"404\":1,\"408\":1}}],[\"root\",{\"1\":{\"124\":2,\"125\":4,\"129\":2,\"356\":5}}],[\"rocks\",{\"1\":{\"390\":1}}],[\"role\",{\"1\":{\"386\":1}}],[\"roberta\",{\"1\":{\"273\":1}}],[\"romance\",{\"1\":{\"435\":1}}],[\"romantic\",{\"1\":{\"399\":1,\"428\":1}}],[\"rom\",{\"1\":{\"121\":1}}],[\"rows\",{\"1\":{\"75\":1,\"311\":3,\"312\":3,\"342\":3,\"346\":1}}],[\"r×s\",{\"1\":{\"75\":1}}],[\"rich\",{\"1\":{\"435\":1}}],[\"richard\",{\"1\":{\"48\":1}}],[\"risk\",{\"1\":{\"435\":1}}],[\"ride\",{\"1\":{\"428\":1}}],[\"riding\",{\"1\":{\"428\":1}}],[\"ridge\",{\"1\":{\"74\":1}}],[\"rip\",{\"1\":{\"369\":1,\"370\":1}}],[\"ri\",{\"1\":{\"244\":1}}],[\"right\",{\"1\":{\"242\":1,\"260\":1,\"395\":1,\"403\":1,\"404\":1,\"421\":1,\"435\":1}}],[\"r\",{\"1\":{\"49\":2,\"62\":4,\"125\":2,\"127\":1,\"208\":14,\"209\":11,\"224\":3,\"244\":1,\"248\":1,\"268\":4,\"345\":13,\"407\":1,\"411\":1,\"435\":5}}],[\"rl\",{\"0\":{\"49\":1,\"54\":1},\"1\":{\"49\":2,\"66\":1}}],[\"rebirth\",{\"1\":{\"407\":1}}],[\"reboot\",{\"1\":{\"134\":1}}],[\"renowned\",{\"1\":{\"407\":1}}],[\"rename\",{\"1\":{\"318\":1,\"345\":2}}],[\"remember\",{\"1\":{\"390\":1,\"417\":1}}],[\"remove\",{\"1\":{\"318\":1}}],[\"reveal\",{\"1\":{\"414\":2,\"419\":1}}],[\"reveals\",{\"1\":{\"412\":1}}],[\"reverse\",{\"1\":{\"28\":1}}],[\"revolutionize\",{\"1\":{\"383\":1}}],[\"review\",{\"1\":{\"345\":2,\"346\":10}}],[\"requires\",{\"1\":{\"315\":1}}],[\"request\",{\"0\":{\"118\":1},\"1\":{\"116\":1,\"118\":1,\"119\":1,\"120\":1,\"353\":1}}],[\"referred\",{\"1\":{\"384\":1}}],[\"referring\",{\"1\":{\"311\":1}}],[\"references=batch\",{\"1\":{\"324\":1}}],[\"references=labels\",{\"1\":{\"316\":1}}],[\"references=predictions\",{\"1\":{\"316\":1}}],[\"reflect\",{\"1\":{\"13\":1,\"18\":1}}],[\"relief\",{\"1\":{\"419\":2}}],[\"rely\",{\"1\":{\"385\":1}}],[\"relplot\",{\"1\":{\"255\":2,\"261\":1}}],[\"relationships\",{\"1\":{\"435\":1}}],[\"relative\",{\"0\":{\"4\":1},\"1\":{\"4\":1}}],[\"related\",{\"1\":{\"393\":1,\"398\":1,\"404\":1,\"416\":1,\"423\":1,\"435\":3}}],[\"relaxation\",{\"1\":{\"397\":1}}],[\"relax\",{\"1\":{\"393\":1,\"426\":1}}],[\"relaxed\",{\"1\":{\"244\":1,\"397\":1,\"401\":1,\"408\":1}}],[\"realized\",{\"1\":{\"403\":1,\"411\":1}}],[\"real\",{\"1\":{\"345\":1,\"391\":1,\"435\":1}}],[\"really\",{\"1\":{\"231\":2,\"232\":1,\"233\":2,\"237\":1,\"345\":2,\"400\":1,\"401\":1,\"403\":1,\"405\":1,\"407\":1,\"408\":1,\"410\":1,\"419\":2,\"435\":1}}],[\"reasons\",{\"1\":{\"345\":2,\"404\":1}}],[\"reason\",{\"1\":{\"242\":1}}],[\"reader\",{\"1\":{\"435\":1}}],[\"ready\",{\"1\":{\"419\":1}}],[\"reading\",{\"1\":{\"396\":1,\"405\":1,\"435\":9}}],[\"readme\",{\"1\":{\"337\":1,\"338\":1}}],[\"read\",{\"1\":{\"125\":1,\"406\":1,\"415\":1,\"435\":12}}],[\"red\",{\"1\":{\"195\":1,\"345\":1,\"409\":1}}],[\"reduced\",{\"1\":{\"383\":1}}],[\"reduces\",{\"1\":{\"383\":1,\"386\":1}}],[\"reduceright\",{\"1\":{\"28\":2}}],[\"reduce\",{\"1\":{\"28\":2}}],[\"retrieve\",{\"1\":{\"280\":1,\"332\":1}}],[\"ret\",{\"1\":{\"193\":3,\"194\":4}}],[\"returned\",{\"1\":{\"406\":1}}],[\"returning\",{\"1\":{\"345\":1}}],[\"returns\",{\"1\":{\"301\":3}}],[\"return\",{\"1\":{\"9\":3,\"20\":6,\"23\":1,\"28\":1,\"49\":1,\"54\":1,\"56\":1,\"62\":1,\"64\":2,\"67\":1,\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"159\":2,\"164\":1,\"180\":7,\"191\":3,\"192\":2,\"193\":4,\"194\":3,\"203\":1,\"204\":1,\"205\":1,\"208\":1,\"209\":2,\"213\":1,\"255\":2,\"267\":1,\"279\":2,\"301\":5,\"305\":1,\"307\":1,\"312\":1,\"314\":1,\"316\":1,\"317\":1,\"345\":1,\"346\":1}}],[\"receiving\",{\"1\":{\"435\":1}}],[\"received\",{\"1\":{\"435\":1}}],[\"receiver\",{\"1\":{\"435\":1}}],[\"receive\",{\"1\":{\"435\":1}}],[\"recent\",{\"1\":{\"435\":1}}],[\"recently\",{\"1\":{\"175\":1,\"345\":1}}],[\"recipe\",{\"1\":{\"435\":1}}],[\"recipients\",{\"1\":{\"435\":1}}],[\"recipient\",{\"1\":{\"228\":1,\"435\":1}}],[\"reckon\",{\"1\":{\"401\":1}}],[\"recharge\",{\"1\":{\"393\":1,\"397\":1}}],[\"recall和f1\",{\"1\":{\"81\":1}}],[\"recall=tp+fntp​\",{\"1\":{\"80\":1}}],[\"recall\",{\"0\":{\"80\":1},\"1\":{\"77\":1,\"80\":3,\"81\":5}}],[\"reproduce\",{\"1\":{\"435\":1}}],[\"represent\",{\"1\":{\"410\":1,\"411\":1}}],[\"represents\",{\"1\":{\"409\":1}}],[\"replied\",{\"1\":{\"428\":1,\"434\":1}}],[\"reply\",{\"1\":{\"353\":1}}],[\"replace\",{\"1\":{\"225\":5}}],[\"replay\",{\"0\":{\"45\":1},\"1\":{\"44\":2,\"45\":4}}],[\"reporting\",{\"1\":{\"338\":1}}],[\"repo=\",{\"1\":{\"335\":1}}],[\"repo\",{\"1\":{\"128\":1,\"325\":1,\"331\":1,\"332\":8,\"335\":2,\"336\":10}}],[\"repository\",{\"0\":{\"336\":1},\"1\":{\"332\":1,\"336\":3}}],[\"repos\",{\"1\":{\"128\":1}}],[\"repertoire\",{\"0\":{\"85\":1}}],[\"resources\",{\"1\":{\"428\":2}}],[\"reserves\",{\"1\":{\"389\":1}}],[\"research\",{\"1\":{\"310\":1}}],[\"responsibilities\",{\"1\":{\"395\":1}}],[\"responsiveness\",{\"1\":{\"383\":1,\"386\":1}}],[\"response\",{\"1\":{\"75\":1}}],[\"rest\",{\"1\":{\"397\":1}}],[\"restore\",{\"1\":{\"337\":1}}],[\"restart\",{\"1\":{\"315\":1}}],[\"restaurants\",{\"1\":{\"246\":1,\"397\":1}}],[\"res\",{\"1\":{\"291\":1}}],[\"rescale\",{\"1\":{\"261\":1}}],[\"results\",{\"1\":{\"28\":1,\"338\":1,\"383\":1}}],[\"result\",{\"1\":{\"21\":3,\"225\":10,\"259\":1,\"268\":4,\"294\":1,\"296\":1,\"297\":1,\"298\":1,\"301\":1,\"387\":1}}],[\"regular\",{\"1\":{\"334\":1}}],[\"regularization\",{\"1\":{\"321\":1}}],[\"regressive\",{\"1\":{\"269\":1,\"273\":1}}],[\"regression\",{\"1\":{\"74\":6,\"255\":3}}],[\"register\",{\"1\":{\"14\":1}}],[\"rewarding\",{\"1\":{\"229\":1,\"244\":1}}],[\"rewards\",{\"1\":{\"51\":1}}],[\"reward\",{\"1\":{\"45\":1,\"46\":1,\"49\":3,\"53\":1,\"57\":1,\"62\":2,\"65\":1,\"69\":3,\"70\":1}}],[\"reinforcement\",{\"1\":{\"45\":1,\"48\":2,\"57\":1,\"64\":1}}],[\"re\",{\"0\":{\"36\":1},\"1\":{\"36\":4,\"400\":1,\"401\":1,\"434\":1,\"435\":2}}],[\"rspend\",{\"1\":{\"398\":1}}],[\"rs=dmum​\",{\"1\":{\"4\":1}}],[\"rsi=100−1+rs100​\",{\"1\":{\"4\":1}}],[\"rsi指标的快线和慢线交叉也可以提供买入和卖出的信号\",{\"1\":{\"4\":1}}],[\"rsi\",{\"0\":{\"4\":1},\"1\":{\"4\":2}}],[\"α=1+t2​\",{\"1\":{\"3\":1}}],[\"α\",{\"1\":{\"3\":2}}],[\"α∈\",{\"1\":{\"3\":1}}],[\"0c13\",{\"1\":{\"379\":1}}],[\"0b111\",{\"1\":{\"379\":1}}],[\"0860\",{\"1\":{\"352\":1}}],[\"0800\",{\"1\":{\"352\":1,\"364\":1}}],[\"039\",{\"1\":{\"345\":1,\"346\":1}}],[\"000\",{\"1\":{\"291\":2,\"362\":1}}],[\"0005\",{\"1\":{\"283\":1}}],[\"0402\",{\"1\":{\"283\":1}}],[\"04\",{\"1\":{\"283\":1}}],[\"02\",{\"1\":{\"283\":1,\"285\":1}}],[\"0195e\",{\"1\":{\"283\":1}}],[\"01\",{\"1\":{\"225\":3,\"283\":2}}],[\"097\",{\"1\":{\"111\":1}}],[\"0~239\",{\"1\":{\"111\":1}}],[\"0~223\",{\"1\":{\"111\":1}}],[\"0~255\",{\"1\":{\"108\":1,\"111\":1}}],[\"0~192\",{\"1\":{\"111\":1}}],[\"0~191\",{\"1\":{\"111\":1}}],[\"0~172\",{\"1\":{\"111\":1}}],[\"0~10\",{\"1\":{\"111\":1}}],[\"0~127\",{\"1\":{\"99\":1,\"108\":1,\"111\":1}}],[\"0~31\",{\"1\":{\"94\":1}}],[\"0x\",{\"1\":{\"379\":1}}],[\"0x1f\",{\"1\":{\"375\":2}}],[\"0xdfff\",{\"1\":{\"106\":1}}],[\"0xd800\",{\"1\":{\"106\":1}}],[\"0xe000~0xf8ff\",{\"1\":{\"106\":1}}],[\"0xa0~0xff\",{\"1\":{\"97\":1}}],[\"0xff\",{\"1\":{\"95\":1,\"379\":1}}],[\"0xfeff\",{\"1\":{\"88\":1}}],[\"0x80\",{\"1\":{\"95\":1}}],[\"0x0a\",{\"1\":{\"94\":1}}],[\"0x0d\",{\"1\":{\"94\":1}}],[\"0x00\",{\"1\":{\"94\":1}}],[\"0x07\",{\"1\":{\"94\":1}}],[\"0\",{\"1\":{\"3\":1,\"9\":4,\"22\":1,\"26\":2,\"27\":2,\"28\":4,\"49\":2,\"68\":1,\"70\":2,\"94\":1,\"96\":1,\"99\":1,\"106\":2,\"107\":1,\"111\":20,\"112\":3,\"116\":4,\"118\":4,\"121\":4,\"122\":1,\"137\":1,\"138\":1,\"142\":2,\"143\":1,\"144\":2,\"145\":1,\"154\":2,\"157\":2,\"159\":3,\"164\":1,\"180\":4,\"192\":1,\"194\":1,\"203\":3,\"204\":1,\"205\":1,\"208\":3,\"209\":1,\"210\":2,\"213\":7,\"224\":4,\"225\":1,\"255\":2,\"257\":2,\"258\":2,\"267\":3,\"279\":16,\"283\":5,\"285\":4,\"291\":1,\"294\":9,\"301\":1,\"302\":2,\"303\":2033,\"311\":3,\"312\":16,\"316\":2,\"320\":1,\"322\":1,\"324\":2,\"342\":1,\"345\":5,\"360\":2,\"361\":1,\"366\":1,\"367\":11,\"373\":2,\"375\":11,\"379\":1}}],[\"ecosystems\",{\"1\":{\"435\":1}}],[\"echo\",{\"1\":{\"367\":1}}],[\"educated\",{\"1\":{\"435\":1}}],[\"educate\",{\"1\":{\"435\":1}}],[\"education\",{\"1\":{\"428\":2}}],[\"educational\",{\"1\":{\"396\":1,\"403\":1,\"435\":1}}],[\"edʒi\",{\"1\":{\"419\":1}}],[\"edgy\",{\"1\":{\"419\":2}}],[\"edgecolor\",{\"1\":{\"255\":1}}],[\"edge\",{\"1\":{\"244\":1,\"435\":1}}],[\"edit\",{\"1\":{\"414\":1}}],[\"ebgp\",{\"1\":{\"370\":2}}],[\"ebcdic\",{\"0\":{\"92\":1,\"93\":1},\"1\":{\"93\":1}}],[\"egp\",{\"1\":{\"370\":1}}],[\"eyes\",{\"1\":{\"428\":2}}],[\"eye\",{\"1\":{\"345\":1,\"423\":1}}],[\"equivalent\",{\"1\":{\"311\":4}}],[\"equation\",{\"0\":{\"65\":1},\"1\":{\"46\":1,\"64\":1}}],[\"emotions\",{\"1\":{\"413\":2}}],[\"emerges\",{\"1\":{\"407\":1}}],[\"emergence\",{\"1\":{\"399\":1}}],[\"emily\",{\"1\":{\"403\":6,\"406\":4,\"411\":4,\"419\":3,\"428\":11,\"434\":7}}],[\"embeddings\",{\"1\":{\"285\":1}}],[\"embedding\",{\"1\":{\"280\":1,\"285\":1}}],[\"email\",{\"1\":{\"89\":2}}],[\"emat−1​​​t=1t>2​\",{\"1\":{\"3\":1}}],[\"emat​=\",{\"1\":{\"3\":1}}],[\"erratic\",{\"1\":{\"429\":1}}],[\"error\",{\"1\":{\"46\":1,\"74\":1}}],[\"er\",{\"1\":{\"296\":1}}],[\"ergonomic\",{\"1\":{\"244\":1}}],[\"earlier\",{\"1\":{\"435\":1}}],[\"earth\",{\"1\":{\"419\":1}}],[\"ear\",{\"1\":{\"400\":3}}],[\"eat\",{\"1\":{\"345\":1,\"390\":1,\"435\":3}}],[\"eating\",{\"1\":{\"274\":2,\"401\":2,\"404\":1,\"406\":1,\"435\":2}}],[\"easier\",{\"1\":{\"414\":1}}],[\"easy\",{\"1\":{\"244\":1,\"401\":1,\"424\":1,\"435\":3}}],[\"eascii\",{\"0\":{\"95\":1,\"96\":1},\"1\":{\"95\":1,\"96\":1,\"97\":2}}],[\"each\",{\"1\":{\"242\":1,\"260\":1,\"403\":1,\"404\":1,\"407\":1,\"410\":1,\"428\":1}}],[\"efforts\",{\"1\":{\"392\":1}}],[\"effects\",{\"1\":{\"345\":3,\"383\":1,\"386\":1}}],[\"effective\",{\"1\":{\"345\":3}}],[\"effectiveness\",{\"1\":{\"345\":2}}],[\"efficient\",{\"1\":{\"44\":1}}],[\"ef\",{\"1\":{\"132\":2}}],[\"e\",{\"1\":{\"127\":1,\"225\":1,\"232\":1,\"375\":4,\"379\":2,\"435\":4}}],[\"etc\",{\"1\":{\"124\":2,\"125\":1,\"128\":2,\"129\":5,\"367\":1}}],[\"eth1\",{\"1\":{\"367\":2}}],[\"eth2\",{\"1\":{\"367\":3}}],[\"eth3\",{\"1\":{\"367\":3}}],[\"ethernet\",{\"1\":{\"353\":1,\"387\":1}}],[\"ether\",{\"1\":{\"112\":1}}],[\"eth0\",{\"1\":{\"112\":2,\"361\":1,\"367\":2}}],[\"e类地址\",{\"1\":{\"111\":1}}],[\"exude\",{\"1\":{\"407\":1}}],[\"exercise\",{\"1\":{\"396\":1}}],[\"execute\",{\"1\":{\"125\":1}}],[\"execution\",{\"0\":{\"121\":1}}],[\"exited\",{\"1\":{\"383\":1}}],[\"exciting\",{\"1\":{\"435\":1}}],[\"excitement\",{\"1\":{\"428\":2}}],[\"excited\",{\"1\":{\"390\":1,\"434\":1}}],[\"exclaim\",{\"1\":{\"419\":1}}],[\"exclaimed\",{\"1\":{\"419\":1}}],[\"excluding\",{\"1\":{\"345\":1}}],[\"exception\",{\"1\":{\"192\":1}}],[\"extinct\",{\"1\":{\"435\":1}}],[\"extinction\",{\"1\":{\"432\":3,\"434\":1,\"435\":2}}],[\"extra\",{\"1\":{\"399\":1,\"435\":1}}],[\"extremley\",{\"1\":{\"345\":1}}],[\"extremely\",{\"1\":{\"345\":1}}],[\"exterior\",{\"1\":{\"370\":1}}],[\"extended\",{\"1\":{\"93\":1,\"95\":1}}],[\"exfoliated\",{\"1\":{\"345\":1}}],[\"example\",{\"1\":{\"312\":3,\"314\":3,\"317\":3,\"341\":1,\"345\":2,\"346\":2,\"391\":1,\"403\":1,\"404\":1,\"405\":1,\"411\":1,\"416\":1,\"435\":2}}],[\"exam\",{\"1\":{\"237\":1}}],[\"expanse\",{\"1\":{\"434\":1}}],[\"expand\",{\"1\":{\"435\":1}}],[\"expanding\",{\"1\":{\"259\":1}}],[\"expand=true\",{\"1\":{\"259\":1}}],[\"expressive\",{\"1\":{\"414\":1}}],[\"expression\",{\"1\":{\"413\":1}}],[\"expresses\",{\"1\":{\"409\":1}}],[\"express\",{\"1\":{\"409\":1,\"411\":1,\"413\":1,\"435\":1}}],[\"explosion\",{\"1\":{\"435\":1}}],[\"exploring\",{\"1\":{\"428\":1}}],[\"explore\",{\"1\":{\"397\":1,\"398\":1,\"403\":2}}],[\"exploration\",{\"0\":{\"53\":1},\"1\":{\"53\":1,\"59\":1,\"70\":1}}],[\"exploitation\",{\"0\":{\"53\":1},\"1\":{\"53\":1,\"59\":1}}],[\"expense\",{\"1\":{\"435\":1}}],[\"expected\",{\"1\":{\"49\":1,\"53\":1,\"54\":1,\"56\":2,\"57\":1,\"62\":3,\"64\":2,\"69\":1,\"301\":1,\"345\":1}}],[\"experiences\",{\"1\":{\"44\":1,\"45\":10,\"383\":1,\"386\":1,\"398\":1}}],[\"experience\",{\"0\":{\"45\":1},\"1\":{\"44\":2,\"45\":2,\"66\":1,\"234\":1,\"383\":3,\"390\":2,\"391\":1,\"399\":2,\"400\":3,\"402\":3,\"403\":3,\"419\":1}}],[\"export\",{\"0\":{\"29\":1,\"31\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1},\"1\":{\"29\":1,\"31\":2,\"35\":8,\"36\":21,\"129\":5}}],[\"exponential\",{\"1\":{\"3\":1}}],[\"event\",{\"1\":{\"435\":1}}],[\"events\",{\"1\":{\"403\":2}}],[\"evening\",{\"1\":{\"434\":1}}],[\"even\",{\"1\":{\"389\":1,\"396\":1,\"405\":1,\"419\":1,\"421\":1,\"435\":1}}],[\"ever\",{\"0\":{\"390\":1,\"433\":1},\"1\":{\"242\":1,\"407\":1,\"432\":1}}],[\"everyone\",{\"1\":{\"384\":1,\"414\":1}}],[\"everybody\",{\"1\":{\"244\":2,\"248\":1}}],[\"every\",{\"0\":{\"396\":1},\"1\":{\"28\":1,\"248\":3,\"396\":3,\"406\":1,\"421\":1}}],[\"evaluate\",{\"1\":{\"316\":5,\"324\":3}}],[\"evaluation\",{\"0\":{\"316\":1,\"324\":1},\"1\":{\"315\":1,\"316\":1,\"338\":1}}],[\"eval\",{\"1\":{\"315\":1,\"316\":3,\"319\":1,\"324\":2,\"325\":4}}],[\"evidence\",{\"1\":{\"311\":2}}],[\"evolution\",{\"1\":{\"57\":1}}],[\"epochs\",{\"1\":{\"322\":2,\"323\":1,\"325\":6}}],[\"epoch\",{\"1\":{\"315\":2,\"316\":3,\"322\":1,\"323\":1,\"325\":2,\"331\":2}}],[\"eps\",{\"1\":{\"285\":1}}],[\"epsilon\",{\"1\":{\"42\":1,\"69\":2,\"70\":3,\"375\":1}}],[\"episodeon\",{\"1\":{\"400\":1}}],[\"episode\",{\"1\":{\"51\":1,\"61\":1,\"62\":1,\"66\":1,\"400\":1,\"403\":1}}],[\"episodic\",{\"0\":{\"51\":1}}],[\"enlightenment\",{\"1\":{\"407\":1}}],[\"entertainment\",{\"1\":{\"403\":2,\"435\":1}}],[\"entire\",{\"1\":{\"74\":1}}],[\"enhance\",{\"1\":{\"402\":2,\"435\":2}}],[\"engineer\",{\"1\":{\"428\":1}}],[\"england\",{\"1\":{\"428\":1}}],[\"english\",{\"0\":{\"443\":1,\"444\":1},\"1\":{\"279\":2,\"280\":2,\"282\":1,\"301\":2,\"307\":1,\"396\":1,\"421\":1}}],[\"engrossed\",{\"1\":{\"415\":1}}],[\"engaging\",{\"1\":{\"402\":1,\"435\":1}}],[\"engaged\",{\"1\":{\"401\":3,\"435\":1}}],[\"engage\",{\"1\":{\"396\":1,\"397\":1}}],[\"enclosures\",{\"1\":{\"434\":2}}],[\"enclosure\",{\"1\":{\"390\":1}}],[\"encouraged\",{\"1\":{\"232\":1}}],[\"encoding\",{\"0\":{\"87\":1,\"88\":1,\"89\":1,\"295\":1,\"439\":1},\"1\":{\"83\":2,\"88\":1,\"269\":1,\"273\":1,\"295\":3,\"298\":1}}],[\"encoded\",{\"1\":{\"288\":2}}],[\"encoder\",{\"1\":{\"273\":2,\"275\":4}}],[\"encoders\",{\"1\":{\"273\":1}}],[\"encode\",{\"1\":{\"83\":1,\"88\":1,\"273\":1}}],[\"enough\",{\"1\":{\"234\":1,\"434\":2}}],[\"enjoyed\",{\"1\":{\"403\":1}}],[\"enjoyment\",{\"1\":{\"398\":1}}],[\"enjoy\",{\"0\":{\"417\":1,\"419\":1},\"1\":{\"231\":1,\"242\":1,\"244\":1,\"393\":2,\"403\":4,\"415\":1,\"416\":1,\"420\":1,\"421\":1,\"424\":1,\"426\":1,\"435\":1}}],[\"enjoyable\",{\"1\":{\"229\":1}}],[\"enqueue\",{\"1\":{\"185\":1,\"187\":1}}],[\"enable\",{\"1\":{\"133\":2,\"383\":1}}],[\"environment\",{\"0\":{\"121\":1},\"1\":{\"62\":1,\"69\":1,\"244\":1,\"397\":1,\"423\":1}}],[\"environments\",{\"1\":{\"43\":1,\"244\":1}}],[\"endangered\",{\"1\":{\"435\":4}}],[\"endo\",{\"1\":{\"345\":1}}],[\"endianness\",{\"1\":{\"88\":1}}],[\"end\",{\"0\":{\"450\":1},\"1\":{\"23\":2,\"28\":7,\"403\":1,\"419\":1,\"431\":2}}],[\"elders\",{\"1\":{\"435\":1}}],[\"elegant\",{\"1\":{\"435\":1}}],[\"elegance\",{\"1\":{\"410\":1}}],[\"elephants\",{\"1\":{\"433\":1,\"435\":3}}],[\"elephant\",{\"1\":{\"391\":1,\"435\":1}}],[\"elevate\",{\"1\":{\"345\":1}}],[\"electra\",{\"1\":{\"273\":1}}],[\"elementn\",{\"1\":{\"28\":1}}],[\"element1\",{\"1\":{\"28\":1}}],[\"element0\",{\"1\":{\"28\":1}}],[\"elemn\",{\"1\":{\"28\":2}}],[\"elem1\",{\"1\":{\"28\":2}}],[\"elaborate\",{\"1\":{\"227\":1}}],[\"ell\",{\"1\":{\"225\":1}}],[\"else\",{\"1\":{\"20\":2,\"28\":2,\"142\":3,\"143\":3,\"144\":2,\"145\":2,\"180\":1,\"204\":1,\"206\":1,\"323\":1,\"325\":1,\"406\":1}}],[\"essential\",{\"1\":{\"383\":1}}],[\"es5\",{\"1\":{\"373\":1}}],[\"escape\",{\"1\":{\"246\":1,\"435\":1}}],[\"especially\",{\"1\":{\"234\":1,\"402\":1,\"403\":1}}],[\"estimate\",{\"1\":{\"59\":1}}],[\"estimation\",{\"1\":{\"46\":1}}],[\"es\",{\"1\":{\"11\":1,\"225\":1,\"376\":1}}],[\"指望\",{\"1\":{\"428\":1}}],[\"指定交换机\",{\"1\":{\"356\":1}}],[\"指从头开始训练模型\",{\"1\":{\"272\":1}}],[\"指针指向下一级的结点\",{\"1\":{\"196\":1}}],[\"指针指向空地址\",{\"1\":{\"169\":1}}],[\"指针都会指向这个哨兵结点\",{\"1\":{\"180\":1}}],[\"指数位\",{\"1\":{\"375\":1}}],[\"指数阶\",{\"1\":{\"162\":1}}],[\"指数移动平均\",{\"1\":{\"3\":1}}],[\"指向\",{\"1\":{\"121\":1}}],[\"指的是\",{\"1\":{\"112\":1}}],[\"指的是前22位是网络号\",{\"1\":{\"111\":1}}],[\"指的是两个或多个\",{\"1\":{\"59\":1}}],[\"指扩展\",{\"1\":{\"99\":1}}],[\"指二进制数中的一位\",{\"1\":{\"83\":1}}],[\"指标\",{\"0\":{\"2\":1}}],[\"twenties\",{\"1\":{\"428\":1}}],[\"two\",{\"1\":{\"233\":1,\"259\":1,\"345\":1,\"398\":1,\"435\":1}}],[\"typing\",{\"0\":{\"414\":1},\"1\":{\"412\":3,\"414\":1}}],[\"typically\",{\"1\":{\"395\":1,\"397\":1,\"398\":1,\"435\":1}}],[\"types\",{\"1\":{\"255\":1,\"399\":1,\"403\":2,\"435\":1}}],[\"type\",{\"1\":{\"112\":1,\"255\":2,\"259\":2,\"260\":1,\"285\":3,\"294\":2,\"312\":8,\"313\":1,\"318\":1,\"319\":1,\"332\":1,\"335\":1}}],[\"typeof\",{\"1\":{\"28\":1}}],[\"typeerror\",{\"1\":{\"12\":1}}],[\"tv\",{\"0\":{\"392\":1,\"399\":1,\"400\":2,\"402\":2},\"1\":{\"391\":1,\"392\":1,\"399\":6,\"400\":2,\"402\":4,\"403\":7,\"416\":1,\"428\":1}}],[\"ttl\",{\"1\":{\"362\":4,\"364\":1}}],[\"txt\",{\"1\":{\"341\":1}}],[\"tsv\",{\"1\":{\"341\":1,\"345\":4}}],[\"tqdm\",{\"1\":{\"323\":4,\"325\":2}}],[\"turn\",{\"1\":{\"435\":1}}],[\"turned\",{\"1\":{\"403\":1,\"406\":1}}],[\"tulips\",{\"1\":{\"407\":2}}],[\"tuning\",{\"1\":{\"272\":1,\"309\":1}}],[\"tune\",{\"1\":{\"270\":1,\"337\":1,\"340\":1,\"403\":2,\"421\":1}}],[\"tuples\",{\"1\":{\"44\":3,\"45\":2}}],[\"t5\",{\"1\":{\"269\":1,\"270\":1,\"273\":1}}],[\"tigers\",{\"1\":{\"389\":1,\"432\":1,\"434\":1,\"435\":2}}],[\"tired\",{\"1\":{\"345\":1}}],[\"tirosint\",{\"1\":{\"345\":6}}],[\"titlepad=10\",{\"1\":{\"255\":1}}],[\"titlesize=14\",{\"1\":{\"255\":1}}],[\"titleweight=\",{\"1\":{\"255\":1}}],[\"title\",{\"1\":{\"255\":1,\"342\":3}}],[\"ticks\",{\"1\":{\"255\":2}}],[\"tickled\",{\"1\":{\"237\":2}}],[\"tidy\",{\"1\":{\"232\":2}}],[\"timeless\",{\"1\":{\"410\":1}}],[\"times\",{\"1\":{\"259\":1,\"394\":1,\"403\":1,\"415\":3,\"416\":2,\"419\":1}}],[\"time\",{\"0\":{\"164\":2,\"165\":1,\"166\":1},\"1\":{\"121\":3,\"234\":2,\"384\":2,\"393\":2,\"395\":1,\"396\":1,\"397\":2,\"398\":3,\"405\":1,\"406\":1,\"408\":2,\"415\":1,\"419\":1,\"421\":1,\"428\":3,\"431\":1,\"434\":1,\"435\":4}}],[\"tmp\",{\"1\":{\"180\":2,\"203\":2,\"205\":2,\"206\":2,\"208\":5,\"213\":3}}],[\"tcpdump\",{\"1\":{\"361\":2}}],[\"tcp\",{\"1\":{\"112\":1,\"120\":1,\"352\":1,\"360\":4,\"362\":1,\"364\":1}}],[\"tftp\",{\"1\":{\"122\":6}}],[\"tf\",{\"1\":{\"88\":1,\"250\":1,\"301\":1}}],[\"tbyte\",{\"1\":{\"83\":1}}],[\"tn\",{\"1\":{\"77\":1}}],[\"tpu\",{\"1\":{\"316\":1,\"325\":2,\"326\":1}}],[\"tp\",{\"1\":{\"77\":1}}],[\"t=0∏​p\",{\"1\":{\"62\":1}}],[\"td\",{\"1\":{\"46\":9,\"47\":1,\"68\":8,\"69\":1}}],[\"treat\",{\"1\":{\"435\":1}}],[\"treetops\",{\"1\":{\"434\":1}}],[\"tree\",{\"1\":{\"74\":1,\"195\":1,\"356\":1}}],[\"trees\",{\"1\":{\"74\":1,\"419\":1,\"434\":1}}],[\"trip\",{\"1\":{\"428\":2}}],[\"tricky\",{\"1\":{\"415\":1}}],[\"tried\",{\"1\":{\"406\":1}}],[\"trouble\",{\"1\":{\"232\":1}}],[\"trying\",{\"1\":{\"406\":2}}],[\"try\",{\"1\":{\"228\":1,\"345\":1,\"396\":1,\"397\":1,\"403\":1,\"406\":2,\"421\":4,\"434\":1}}],[\"transmit\",{\"1\":{\"383\":1}}],[\"translation\",{\"1\":{\"366\":1}}],[\"transformer\",{\"0\":{\"263\":1,\"269\":1,\"270\":1,\"271\":1,\"273\":1,\"285\":1,\"288\":1},\"1\":{\"269\":5,\"270\":1,\"273\":4,\"275\":2,\"276\":2,\"277\":2,\"279\":2,\"280\":4,\"281\":1,\"288\":1,\"294\":1,\"296\":1,\"298\":1,\"302\":1,\"304\":1,\"308\":2,\"346\":2}}],[\"transformers\",{\"0\":{\"266\":1,\"267\":1,\"277\":1},\"1\":{\"71\":1,\"266\":1,\"267\":3,\"268\":1,\"276\":1,\"277\":1,\"279\":2,\"280\":3,\"282\":1,\"283\":1,\"285\":2,\"286\":2,\"287\":1,\"294\":2,\"296\":1,\"301\":3,\"307\":1,\"312\":1,\"313\":2,\"314\":2,\"315\":6,\"317\":1,\"320\":1,\"321\":1,\"322\":1,\"325\":2,\"327\":1,\"331\":2,\"337\":1}}],[\"transform\",{\"1\":{\"260\":5,\"296\":1}}],[\"transforms\",{\"0\":{\"260\":1}}],[\"transformation\",{\"1\":{\"258\":1,\"407\":1}}],[\"transfer\",{\"0\":{\"89\":1,\"272\":1},\"1\":{\"270\":1,\"383\":1}}],[\"traceroute\",{\"0\":{\"362\":1},\"1\":{\"360\":1,\"362\":6,\"363\":1}}],[\"trainerarguments\",{\"1\":{\"331\":3}}],[\"trainer\",{\"0\":{\"314\":1},\"1\":{\"314\":2,\"315\":13,\"316\":10,\"317\":2,\"318\":1,\"321\":1,\"322\":1,\"331\":4}}],[\"trained\",{\"1\":{\"286\":2,\"435\":1}}],[\"train\",{\"1\":{\"260\":5,\"311\":6,\"312\":5,\"313\":2,\"314\":1,\"315\":4,\"316\":3,\"318\":1,\"319\":3,\"322\":1,\"323\":2,\"325\":12,\"331\":1,\"337\":1,\"342\":11,\"343\":2,\"345\":2,\"346\":2}}],[\"trainingarguments\",{\"1\":{\"315\":4,\"316\":1}}],[\"training\",{\"0\":{\"315\":1,\"323\":1},\"1\":{\"44\":2,\"69\":1,\"70\":1,\"260\":1,\"311\":1,\"315\":5,\"316\":2,\"318\":1,\"322\":7,\"323\":1,\"325\":10,\"326\":1,\"331\":1,\"338\":2,\"428\":2,\"435\":1}}],[\"traveled\",{\"1\":{\"417\":1}}],[\"traveling\",{\"1\":{\"417\":1}}],[\"travel\",{\"1\":{\"242\":2,\"384\":1,\"435\":1}}],[\"trajectory\",{\"1\":{\"62\":1}}],[\"trade\",{\"0\":{\"53\":1},\"1\":{\"59\":1}}],[\"truly\",{\"1\":{\"390\":1,\"393\":1}}],[\"trunks\",{\"1\":{\"391\":1}}],[\"trunk\",{\"1\":{\"358\":1,\"435\":1}}],[\"truncate\",{\"1\":{\"304\":2,\"305\":1,\"307\":1}}],[\"truncation=true\",{\"1\":{\"279\":1,\"304\":2,\"307\":1,\"312\":2,\"314\":1,\"317\":1}}],[\"truncation\",{\"1\":{\"279\":1}}],[\"trunc\",{\"1\":{\"10\":4}}],[\"truth\",{\"1\":{\"234\":1}}],[\"true\",{\"1\":{\"9\":1,\"15\":1,\"19\":1,\"20\":2,\"21\":1,\"24\":1,\"26\":1,\"27\":1,\"28\":4,\"77\":2,\"203\":1,\"206\":1,\"258\":1,\"285\":1,\"312\":1,\"347\":1,\"375\":1,\"377\":1,\"381\":1,\"403\":1,\"428\":1}}],[\"temperatures\",{\"1\":{\"430\":4}}],[\"temporal\",{\"0\":{\"68\":1},\"1\":{\"43\":3,\"66\":1}}],[\"tedious\",{\"1\":{\"417\":2,\"419\":1}}],[\"terrible\",{\"1\":{\"399\":1,\"400\":2}}],[\"term\",{\"1\":{\"74\":1}}],[\"techniques\",{\"1\":{\"396\":1,\"406\":1}}],[\"technology\",{\"1\":{\"393\":1,\"435\":1}}],[\"technologies\",{\"1\":{\"383\":1,\"385\":1,\"393\":1}}],[\"television\",{\"1\":{\"435\":1}}],[\"telescope\",{\"1\":{\"423\":1}}],[\"telnet\",{\"1\":{\"361\":1}}],[\"tell\",{\"1\":{\"234\":1,\"412\":1,\"419\":1,\"428\":1}}],[\"text\",{\"1\":{\"267\":1,\"291\":2,\"341\":3,\"346\":2}}],[\"teeth\",{\"1\":{\"237\":2}}],[\"teacher\",{\"1\":{\"268\":1}}],[\"teachers\",{\"1\":{\"244\":1}}],[\"teach\",{\"1\":{\"267\":1}}],[\"tea\",{\"1\":{\"237\":2,\"404\":1}}],[\"tes\",{\"0\":{\"89\":1},\"1\":{\"88\":1}}],[\"testing\",{\"1\":{\"74\":1}}],[\"test\",{\"1\":{\"9\":2,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"124\":5,\"129\":1,\"311\":2,\"312\":1,\"315\":1,\"316\":1,\"342\":7,\"343\":2,\"345\":1,\"346\":1}}],[\"tent\",{\"1\":{\"419\":3,\"434\":2}}],[\"tenterhooksall\",{\"1\":{\"403\":1}}],[\"tenterhooksabout\",{\"1\":{\"401\":1}}],[\"tenterhooks\",{\"1\":{\"401\":5}}],[\"tensorflow\",{\"1\":{\"301\":1}}],[\"tensors=\",{\"1\":{\"279\":1,\"301\":4,\"307\":1}}],[\"tensors\",{\"1\":{\"279\":1,\"301\":3,\"305\":1,\"313\":1}}],[\"tensor\",{\"1\":{\"279\":3,\"283\":2,\"288\":3,\"301\":6,\"302\":8,\"303\":5,\"308\":1,\"318\":1,\"320\":1}}],[\"tense\",{\"1\":{\"244\":1}}],[\"tennis\",{\"1\":{\"237\":1}}],[\"tended\",{\"1\":{\"417\":2}}],[\"tends\",{\"1\":{\"395\":1}}],[\"tend\",{\"1\":{\"232\":1,\"239\":1}}],[\"ten\",{\"1\":{\"83\":1,\"244\":1,\"403\":2}}],[\"tame\",{\"1\":{\"432\":1,\"435\":1}}],[\"tale\",{\"1\":{\"428\":1}}],[\"talked\",{\"1\":{\"428\":2}}],[\"talk\",{\"1\":{\"399\":1,\"404\":1}}],[\"talking\",{\"1\":{\"244\":1,\"411\":1}}],[\"taste\",{\"1\":{\"417\":3,\"419\":2}}],[\"tasks\",{\"1\":{\"339\":1,\"393\":1,\"395\":1,\"398\":1,\"406\":1}}],[\"task\",{\"0\":{\"51\":1,\"52\":1}}],[\"tazorac\",{\"1\":{\"345\":1}}],[\"tag\",{\"1\":{\"336\":1,\"358\":1,\"435\":1}}],[\"takes\",{\"1\":{\"384\":1}}],[\"take\",{\"1\":{\"227\":2,\"345\":1,\"398\":1,\"406\":1,\"411\":2,\"420\":1,\"424\":2,\"428\":2}}],[\"taking\",{\"1\":{\"62\":1,\"345\":3,\"403\":1,\"428\":3}}],[\"tail\",{\"1\":{\"185\":2}}],[\"tar\",{\"1\":{\"129\":5}}],[\"targetto\",{\"1\":{\"44\":1}}],[\"target\",{\"0\":{\"46\":1},\"1\":{\"28\":2,\"44\":1,\"46\":9,\"47\":2,\"67\":1,\"68\":2,\"252\":1}}],[\"tab\",{\"1\":{\"225\":5}}],[\"tabs\",{\"1\":{\"225\":1}}],[\"tablets\",{\"1\":{\"435\":1}}],[\"tables\",{\"1\":{\"244\":1,\"246\":1,\"367\":1}}],[\"table\",{\"1\":{\"41\":2,\"69\":1,\"70\":2,\"237\":1,\"367\":8}}],[\"tabular\",{\"1\":{\"41\":1}}],[\"thyroidectomy\",{\"1\":{\"345\":1}}],[\"thyroid\",{\"1\":{\"345\":1}}],[\"thing\",{\"1\":{\"403\":1,\"406\":1}}],[\"things\",{\"1\":{\"239\":1,\"391\":1,\"393\":1,\"396\":1,\"403\":4,\"414\":1,\"425\":1,\"435\":1}}],[\"thinking\",{\"1\":{\"345\":1,\"434\":1}}],[\"think\",{\"0\":{\"385\":1,\"413\":1,\"414\":1},\"1\":{\"232\":1,\"233\":1,\"234\":2,\"242\":1,\"248\":1,\"391\":1,\"403\":1,\"409\":1,\"411\":3,\"412\":2,\"413\":3,\"415\":1,\"419\":1,\"421\":1,\"432\":3,\"435\":6}}],[\"this\",{\"1\":{\"20\":11,\"28\":5,\"35\":1,\"69\":1,\"159\":5,\"233\":2,\"237\":1,\"248\":3,\"267\":2,\"268\":2,\"279\":2,\"301\":1,\"312\":6,\"345\":2,\"392\":1,\"406\":1,\"411\":2,\"415\":1,\"421\":1,\"423\":1,\"428\":2,\"435\":4}}],[\"thisarg\",{\"1\":{\"19\":1,\"23\":1,\"24\":1,\"28\":6}}],[\"though\",{\"1\":{\"428\":1,\"430\":1}}],[\"thought\",{\"1\":{\"411\":2,\"434\":2,\"435\":2}}],[\"thoughtful\",{\"1\":{\"229\":2,\"435\":1}}],[\"those\",{\"1\":{\"227\":1,\"244\":1,\"403\":2,\"428\":1,\"433\":1,\"434\":4}}],[\"tha\",{\"1\":{\"246\":1}}],[\"than\",{\"1\":{\"227\":1,\"258\":1,\"304\":2,\"345\":1,\"402\":1,\"406\":4,\"424\":1,\"428\":3,\"435\":5}}],[\"that\",{\"0\":{\"396\":1,\"409\":1,\"411\":1},\"1\":{\"61\":1,\"62\":1,\"74\":1,\"75\":1,\"228\":1,\"234\":1,\"237\":1,\"244\":1,\"248\":1,\"304\":2,\"345\":5,\"390\":2,\"393\":1,\"395\":1,\"396\":1,\"400\":1,\"401\":2,\"402\":2,\"403\":4,\"406\":8,\"407\":1,\"409\":2,\"411\":1,\"414\":1,\"417\":2,\"419\":1,\"421\":1,\"423\":1,\"424\":1,\"425\":1,\"426\":1,\"428\":3,\"434\":1,\"435\":8}}],[\"thriller\",{\"1\":{\"403\":1,\"435\":2}}],[\"thrillers\",{\"1\":{\"399\":1,\"401\":1}}],[\"three\",{\"1\":{\"345\":1}}],[\"threadlocalmap\",{\"1\":{\"154\":1}}],[\"through\",{\"1\":{\"259\":1,\"403\":1,\"411\":1,\"428\":4,\"435\":2}}],[\"throw\",{\"1\":{\"192\":1}}],[\"these\",{\"1\":{\"390\":1,\"411\":1,\"419\":1,\"434\":2,\"435\":1}}],[\"there\",{\"0\":{\"389\":1,\"392\":1,\"396\":1,\"409\":1,\"411\":1},\"1\":{\"244\":5,\"246\":3,\"386\":1,\"389\":2,\"390\":1,\"392\":1,\"394\":1,\"396\":1,\"398\":1,\"403\":1,\"405\":1,\"407\":1,\"411\":1,\"428\":2,\"433\":1,\"434\":1,\"435\":1}}],[\"themselves\",{\"1\":{\"414\":2}}],[\"them\",{\"1\":{\"244\":1,\"390\":2,\"391\":3,\"403\":1,\"411\":4,\"419\":4,\"427\":1,\"428\":1,\"433\":1,\"434\":3,\"435\":2}}],[\"they\",{\"1\":{\"233\":2,\"385\":1,\"390\":1,\"391\":4,\"401\":2,\"403\":6,\"406\":3,\"407\":1,\"410\":1,\"411\":6,\"413\":1,\"419\":14,\"427\":1,\"428\":10,\"434\":13,\"435\":11}}],[\"then\",{\"1\":{\"69\":1,\"242\":1,\"345\":5,\"404\":1,\"405\":1,\"406\":2,\"408\":1,\"416\":1,\"419\":1,\"434\":1}}],[\"theorem\",{\"0\":{\"63\":1}}],[\"the\",{\"0\":{\"42\":1,\"44\":1,\"53\":1,\"386\":1,\"391\":2,\"393\":1,\"395\":2,\"398\":1,\"401\":1,\"403\":1,\"413\":1,\"414\":1,\"424\":1,\"425\":1,\"426\":1,\"427\":1,\"428\":1,\"434\":1},\"1\":{\"44\":3,\"45\":1,\"54\":1,\"57\":2,\"59\":2,\"61\":1,\"69\":5,\"70\":1,\"75\":7,\"227\":1,\"228\":1,\"233\":3,\"234\":1,\"237\":2,\"239\":1,\"242\":3,\"244\":4,\"246\":10,\"248\":11,\"257\":1,\"259\":3,\"260\":5,\"273\":1,\"276\":1,\"280\":1,\"303\":6,\"304\":4,\"311\":2,\"312\":6,\"315\":1,\"332\":1,\"337\":1,\"345\":16,\"383\":5,\"384\":1,\"385\":2,\"386\":6,\"387\":1,\"389\":2,\"390\":6,\"391\":2,\"392\":3,\"393\":3,\"394\":8,\"395\":8,\"396\":1,\"397\":2,\"398\":4,\"399\":3,\"400\":1,\"401\":2,\"402\":9,\"403\":17,\"404\":1,\"405\":2,\"406\":12,\"407\":3,\"408\":2,\"409\":2,\"410\":1,\"411\":11,\"412\":4,\"413\":1,\"414\":2,\"415\":4,\"416\":3,\"419\":9,\"420\":1,\"421\":5,\"423\":9,\"424\":6,\"425\":4,\"426\":6,\"427\":2,\"428\":29,\"429\":1,\"430\":1,\"432\":4,\"433\":3,\"434\":17,\"435\":37}}],[\"their\",{\"1\":{\"13\":1,\"227\":1,\"244\":1,\"383\":1,\"386\":1,\"389\":1,\"390\":1,\"391\":2,\"392\":2,\"403\":2,\"406\":1,\"407\":3,\"410\":1,\"411\":1,\"413\":1,\"414\":1,\"419\":4,\"427\":1,\"428\":4,\"434\":3,\"435\":9}}],[\"town\",{\"1\":{\"428\":1}}],[\"towards\",{\"1\":{\"403\":1}}],[\"tone\",{\"1\":{\"421\":2}}],[\"toner\",{\"1\":{\"345\":1}}],[\"told\",{\"1\":{\"419\":1}}],[\"togive\",{\"1\":{\"413\":1}}],[\"together\",{\"1\":{\"244\":1,\"246\":1,\"403\":1,\"428\":4}}],[\"tocatch\",{\"1\":{\"406\":1}}],[\"tom\",{\"1\":{\"403\":6,\"406\":2,\"411\":6,\"419\":4,\"428\":11,\"434\":5}}],[\"topics\",{\"0\":{\"435\":1,\"453\":1}}],[\"topic\",{\"1\":{\"412\":1,\"415\":1,\"423\":1,\"428\":1}}],[\"top\",{\"1\":{\"395\":1,\"399\":1}}],[\"toprimitive\",{\"1\":{\"17\":1,\"26\":1}}],[\"tody\",{\"1\":{\"385\":1}}],[\"todo\",{\"1\":{\"382\":1}}],[\"today\",{\"1\":{\"239\":1,\"435\":1}}],[\"tofdo\",{\"1\":{\"381\":1}}],[\"totally\",{\"1\":{\"401\":1,\"421\":1}}],[\"total\",{\"1\":{\"345\":1}}],[\"torch\",{\"1\":{\"281\":1,\"282\":1,\"283\":2,\"288\":2,\"301\":4,\"302\":3,\"303\":1,\"307\":1,\"313\":4,\"315\":1,\"318\":1,\"319\":5,\"320\":1,\"323\":4,\"324\":2,\"325\":3}}],[\"token=\",{\"1\":{\"331\":1}}],[\"tokenize\",{\"1\":{\"296\":2,\"301\":2,\"306\":1,\"314\":2,\"317\":2}}],[\"tokenized\",{\"1\":{\"291\":2,\"301\":2,\"312\":7,\"313\":1,\"314\":1,\"316\":1,\"317\":1,\"318\":8,\"319\":2}}],[\"tokenizer=tokenizer\",{\"1\":{\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1}}],[\"tokenizer\",{\"0\":{\"279\":1,\"305\":1},\"1\":{\"277\":3,\"279\":6,\"281\":1,\"283\":1,\"288\":2,\"289\":1,\"291\":6,\"292\":1,\"294\":10,\"295\":4,\"296\":3,\"297\":1,\"298\":1,\"299\":1,\"301\":12,\"302\":2,\"303\":5,\"304\":3,\"305\":1,\"306\":7,\"307\":3,\"308\":3,\"309\":1,\"312\":8,\"313\":1,\"314\":2,\"315\":2,\"317\":2,\"325\":1,\"326\":1,\"331\":8,\"336\":5,\"337\":9}}],[\"tokenizers\",{\"0\":{\"289\":1,\"327\":1},\"1\":{\"71\":1,\"312\":1,\"331\":1}}],[\"tokenization\",{\"0\":{\"290\":1,\"293\":1,\"296\":1},\"1\":{\"289\":1,\"292\":1,\"293\":3,\"295\":1,\"296\":1,\"299\":1,\"308\":1,\"312\":2}}],[\"tokens\",{\"0\":{\"297\":1},\"1\":{\"279\":1,\"292\":2,\"295\":2,\"296\":2,\"297\":3,\"298\":2,\"299\":1,\"301\":6,\"302\":2,\"303\":1,\"304\":1,\"306\":3,\"307\":2,\"312\":1,\"331\":1,\"337\":3}}],[\"token\",{\"0\":{\"306\":1},\"1\":{\"268\":2,\"279\":1,\"285\":1,\"291\":7,\"292\":2,\"294\":2,\"302\":5,\"303\":1,\"306\":1,\"312\":8,\"313\":2,\"318\":1,\"319\":1,\"331\":1,\"332\":3,\"335\":1}}],[\"tough\",{\"1\":{\"394\":1}}],[\"tourism\",{\"1\":{\"248\":2}}],[\"touch\",{\"1\":{\"244\":1,\"345\":1}}],[\"toorganizing\",{\"1\":{\"434\":1}}],[\"took\",{\"1\":{\"406\":1,\"411\":1,\"434\":2}}],[\"too\",{\"1\":{\"248\":3,\"345\":1,\"400\":1,\"401\":3,\"403\":1,\"404\":2,\"406\":1,\"430\":2,\"434\":1,\"435\":1}}],[\"tools\",{\"1\":{\"112\":6}}],[\"tos\",{\"1\":{\"112\":2,\"364\":1,\"367\":1}}],[\"tostring\",{\"1\":{\"12\":2,\"26\":2}}],[\"to\",{\"0\":{\"331\":1,\"381\":1,\"390\":1,\"391\":1,\"400\":1,\"402\":1,\"424\":1,\"426\":1,\"434\":2},\"1\":{\"20\":5,\"44\":2,\"62\":1,\"69\":1,\"72\":1,\"227\":2,\"228\":2,\"231\":2,\"232\":3,\"233\":1,\"234\":5,\"235\":1,\"236\":1,\"237\":10,\"239\":2,\"242\":12,\"244\":10,\"248\":5,\"267\":1,\"269\":1,\"273\":1,\"297\":2,\"301\":3,\"303\":3,\"306\":1,\"311\":1,\"312\":1,\"315\":1,\"323\":2,\"324\":1,\"325\":2,\"329\":1,\"331\":9,\"332\":1,\"335\":1,\"336\":5,\"337\":8,\"338\":1,\"345\":21,\"383\":3,\"384\":3,\"386\":1,\"387\":1,\"390\":6,\"391\":2,\"392\":1,\"393\":4,\"394\":3,\"395\":4,\"396\":2,\"397\":7,\"398\":2,\"399\":2,\"400\":2,\"401\":5,\"402\":3,\"403\":13,\"404\":2,\"406\":14,\"407\":5,\"408\":4,\"409\":5,\"411\":5,\"413\":7,\"414\":4,\"416\":3,\"417\":7,\"419\":7,\"420\":1,\"421\":2,\"423\":2,\"424\":7,\"425\":3,\"426\":1,\"427\":1,\"428\":11,\"430\":5,\"431\":2,\"432\":7,\"433\":1,\"434\":22,\"435\":37}}],[\"t\",{\"0\":{\"406\":1},\"1\":{\"3\":3,\"162\":2,\"208\":7,\"209\":2,\"224\":2,\"227\":1,\"231\":1,\"233\":1,\"236\":1,\"237\":1,\"248\":1,\"255\":2,\"345\":1,\"393\":1,\"400\":2,\"403\":4,\"404\":1,\"405\":1,\"406\":2,\"411\":3,\"413\":1,\"414\":1,\"416\":2,\"417\":1,\"419\":1,\"421\":6,\"427\":2,\"428\":1,\"435\":4}}],[\"t−1\",{\"1\":{\"3\":1}}],[\"t+1\",{\"1\":{\"3\":1}}],[\"wɑːtʃ\",{\"1\":{\"428\":1}}],[\"wrap\",{\"1\":{\"435\":1}}],[\"wrap=3\",{\"1\":{\"255\":1}}],[\"writing\",{\"0\":{\"414\":1},\"1\":{\"242\":1,\"412\":4,\"413\":1,\"414\":1}}],[\"write\",{\"0\":{\"413\":1},\"1\":{\"125\":1,\"412\":2}}],[\"wandered\",{\"1\":{\"419\":1}}],[\"wanting\",{\"1\":{\"434\":1}}],[\"want\",{\"1\":{\"244\":1,\"248\":1,\"402\":1,\"409\":1,\"411\":1,\"419\":1,\"428\":1,\"435\":1}}],[\"wanted\",{\"1\":{\"242\":2,\"406\":1,\"434\":1}}],[\"watched\",{\"1\":{\"399\":1,\"406\":1}}],[\"watching\",{\"1\":{\"396\":1,\"401\":2,\"403\":3,\"406\":2,\"416\":1,\"419\":2,\"428\":2}}],[\"watch\",{\"0\":{\"400\":1,\"401\":1,\"402\":1,\"403\":1},\"1\":{\"390\":1,\"399\":2,\"400\":1,\"401\":5,\"402\":2,\"403\":7,\"416\":1,\"428\":1,\"435\":1}}],[\"watered\",{\"1\":{\"411\":1}}],[\"waters\",{\"1\":{\"407\":1}}],[\"water\",{\"1\":{\"248\":2,\"406\":1,\"407\":1}}],[\"waking\",{\"1\":{\"345\":1,\"397\":1}}],[\"walks\",{\"1\":{\"428\":1}}],[\"walked\",{\"1\":{\"411\":1,\"419\":1}}],[\"walking\",{\"1\":{\"411\":1,\"431\":1}}],[\"walk\",{\"1\":{\"345\":1,\"396\":1,\"403\":1,\"411\":2}}],[\"wallabies\",{\"1\":{\"435\":1}}],[\"wall\",{\"1\":{\"246\":1}}],[\"war\",{\"1\":{\"435\":1}}],[\"warm\",{\"1\":{\"435\":1}}],[\"warmup\",{\"1\":{\"322\":1,\"325\":2}}],[\"warmth\",{\"1\":{\"246\":1,\"407\":1,\"410\":1,\"411\":1}}],[\"warning\",{\"1\":{\"315\":1}}],[\"wait\",{\"1\":{\"428\":1}}],[\"waitress\",{\"1\":{\"268\":1}}],[\"waiters\",{\"1\":{\"406\":1}}],[\"waiter\",{\"1\":{\"268\":1}}],[\"waiting\",{\"1\":{\"267\":2,\"279\":2,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1,\"401\":1}}],[\"ways\",{\"1\":{\"435\":1}}],[\"way\",{\"1\":{\"246\":1,\"345\":1,\"392\":1,\"397\":1,\"403\":1,\"414\":3,\"419\":1,\"425\":2,\"426\":1,\"428\":1,\"435\":3}}],[\"waste\",{\"1\":{\"434\":1}}],[\"wash\",{\"1\":{\"345\":1}}],[\"washroom\",{\"1\":{\"246\":1}}],[\"wasnt\",{\"1\":{\"345\":1}}],[\"was\",{\"1\":{\"232\":1,\"242\":1,\"291\":2,\"345\":7,\"390\":4,\"403\":3,\"406\":2,\"411\":1,\"415\":1,\"416\":1,\"417\":5,\"419\":5,\"428\":2,\"433\":1,\"434\":2,\"435\":3}}],[\"wombats\",{\"1\":{\"435\":1}}],[\"woman\",{\"1\":{\"268\":1,\"345\":1}}],[\"woods\",{\"1\":{\"428\":1}}],[\"wonder\",{\"1\":{\"411\":1,\"426\":2,\"427\":1}}],[\"wolves\",{\"1\":{\"389\":1}}],[\"would\",{\"0\":{\"391\":1},\"1\":{\"232\":2,\"244\":2,\"248\":2,\"345\":1,\"385\":1,\"391\":2,\"394\":1,\"395\":1,\"409\":1,\"411\":1,\"420\":1,\"428\":2,\"434\":3}}],[\"wouldn\",{\"1\":{\"231\":1,\"416\":2,\"421\":1}}],[\"worry\",{\"1\":{\"393\":1}}],[\"world\",{\"1\":{\"248\":1,\"392\":2}}],[\"worse\",{\"1\":{\"246\":1}}],[\"worst\",{\"0\":{\"164\":1}}],[\"worker\",{\"1\":{\"435\":1}}],[\"worked\",{\"1\":{\"428\":1}}],[\"working\",{\"1\":{\"404\":1}}],[\"workout\",{\"1\":{\"396\":1}}],[\"workweek\",{\"1\":{\"394\":1,\"395\":1,\"397\":1,\"398\":1}}],[\"works\",{\"1\":{\"268\":2}}],[\"work\",{\"0\":{\"243\":1},\"1\":{\"237\":1,\"244\":9,\"393\":3,\"395\":1,\"398\":2,\"406\":8,\"435\":2}}],[\"wordpiece\",{\"1\":{\"293\":1}}],[\"words\",{\"1\":{\"279\":1,\"292\":1,\"435\":1}}],[\"word\",{\"0\":{\"291\":1},\"1\":{\"83\":4,\"291\":1,\"292\":3,\"419\":1}}],[\"whales\",{\"1\":{\"435\":1}}],[\"what\",{\"0\":{\"391\":1,\"393\":1,\"394\":1,\"395\":1,\"397\":1,\"405\":1,\"406\":1,\"408\":1,\"410\":1,\"414\":1,\"430\":1},\"1\":{\"399\":1,\"401\":1,\"403\":3,\"404\":3,\"407\":1,\"411\":1,\"412\":2,\"419\":4,\"428\":1,\"429\":3,\"434\":1,\"435\":1}}],[\"whatismyip\",{\"1\":{\"366\":1}}],[\"whatever\",{\"1\":{\"337\":1,\"405\":1,\"406\":1}}],[\"why\",{\"1\":{\"406\":1,\"434\":1}}],[\"who\",{\"1\":{\"405\":1}}],[\"whoami\",{\"1\":{\"332\":1}}],[\"whom\",{\"1\":{\"311\":1}}],[\"whole\",{\"1\":{\"248\":2,\"267\":2,\"279\":2,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1}}],[\"whether\",{\"1\":{\"244\":1,\"396\":1,\"397\":1,\"426\":1,\"428\":1}}],[\"whenever\",{\"1\":{\"244\":1,\"424\":1,\"428\":1}}],[\"when\",{\"0\":{\"406\":1,\"417\":1},\"1\":{\"235\":1,\"345\":1,\"393\":3,\"395\":1,\"401\":3,\"402\":2,\"404\":1,\"405\":1,\"410\":1,\"415\":2,\"417\":3,\"419\":1,\"420\":1,\"421\":1,\"426\":2,\"429\":1,\"431\":2,\"433\":1,\"434\":1,\"435\":2}}],[\"where\",{\"1\":{\"228\":2,\"244\":1,\"389\":1,\"391\":1,\"403\":2,\"407\":1,\"424\":1,\"429\":1,\"433\":1,\"435\":4}}],[\"white\",{\"1\":{\"411\":1}}],[\"whitegrid\",{\"1\":{\"255\":1}}],[\"which\",{\"1\":{\"229\":1,\"345\":1,\"386\":1,\"397\":1,\"400\":1,\"407\":1,\"414\":1,\"432\":1,\"435\":2}}],[\"while\",{\"1\":{\"21\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"162\":1,\"180\":2,\"208\":3,\"386\":1,\"403\":2,\"427\":1}}],[\"w\",{\"1\":{\"224\":4,\"225\":10,\"255\":1}}],[\"wget\",{\"1\":{\"129\":1,\"342\":2}}],[\"wine\",{\"1\":{\"435\":1}}],[\"winding\",{\"1\":{\"428\":2}}],[\"windspeed\",{\"1\":{\"257\":1}}],[\"windows\",{\"1\":{\"112\":1,\"125\":1,\"129\":3}}],[\"widened\",{\"1\":{\"428\":2}}],[\"wide\",{\"1\":{\"392\":1,\"400\":1,\"410\":1,\"435\":1}}],[\"width\",{\"1\":{\"88\":1,\"255\":3}}],[\"wildlife\",{\"1\":{\"389\":1,\"392\":1}}],[\"wild\",{\"0\":{\"389\":1,\"391\":1,\"392\":1,\"432\":1,\"433\":1},\"1\":{\"389\":3,\"391\":1,\"392\":1,\"419\":1,\"432\":6,\"433\":1,\"434\":3,\"435\":1}}],[\"will\",{\"0\":{\"413\":1},\"1\":{\"228\":1,\"248\":1,\"267\":1,\"301\":1,\"303\":3,\"304\":2,\"345\":1,\"401\":1,\"412\":1,\"413\":4,\"416\":1,\"420\":1,\"434\":1,\"435\":2}}],[\"wi\",{\"1\":{\"387\":1}}],[\"wired\",{\"1\":{\"387\":1,\"400\":1}}],[\"wireless\",{\"1\":{\"383\":1,\"387\":1}}],[\"witness\",{\"1\":{\"311\":2}}],[\"within\",{\"1\":{\"434\":1}}],[\"withered\",{\"1\":{\"411\":2}}],[\"without\",{\"1\":{\"385\":2,\"393\":1,\"419\":1,\"421\":1,\"430\":1,\"434\":2}}],[\"with\",{\"0\":{\"57\":1,\"414\":1},\"1\":{\"232\":2,\"242\":1,\"244\":3,\"246\":1,\"315\":1,\"324\":1,\"337\":2,\"345\":4,\"390\":1,\"393\":1,\"397\":3,\"398\":2,\"399\":1,\"400\":2,\"401\":1,\"403\":2,\"406\":4,\"407\":1,\"409\":2,\"410\":2,\"411\":2,\"412\":4,\"414\":1,\"419\":1,\"423\":2,\"428\":3,\"435\":6}}],[\"wish\",{\"1\":{\"242\":1}}],[\"welfare\",{\"1\":{\"435\":1}}],[\"well\",{\"1\":{\"244\":2,\"246\":1,\"409\":1,\"411\":2,\"414\":1,\"417\":1,\"419\":1,\"421\":1,\"433\":1,\"435\":4}}],[\"went\",{\"1\":{\"434\":1}}],[\"weather\",{\"0\":{\"420\":1,\"429\":1,\"430\":1,\"431\":1},\"1\":{\"429\":4,\"431\":1}}],[\"wear\",{\"1\":{\"246\":1,\"345\":1}}],[\"weddings\",{\"1\":{\"435\":1}}],[\"wedding\",{\"1\":{\"407\":1,\"435\":1}}],[\"wednesday\",{\"1\":{\"395\":2}}],[\"were\",{\"0\":{\"417\":1},\"1\":{\"403\":2,\"411\":2,\"415\":1,\"419\":3,\"420\":1,\"428\":3,\"433\":1,\"434\":1}}],[\"weekdays\",{\"0\":{\"398\":1},\"1\":{\"398\":3}}],[\"weekends\",{\"0\":{\"397\":1,\"398\":1},\"1\":{\"397\":2,\"398\":3}}],[\"weekend\",{\"1\":{\"394\":1,\"397\":1,\"398\":1,\"434\":1}}],[\"week\",{\"0\":{\"393\":1,\"395\":1},\"1\":{\"393\":2,\"394\":2,\"395\":2,\"397\":1,\"401\":1,\"406\":1,\"419\":1,\"423\":1}}],[\"weeks\",{\"1\":{\"345\":3}}],[\"web\",{\"0\":{\"333\":1},\"1\":{\"329\":1}}],[\"webpack\",{\"1\":{\"32\":1}}],[\"weight\",{\"1\":{\"255\":1,\"294\":1,\"321\":1,\"345\":2,\"367\":2}}],[\"weighted\",{\"1\":{\"3\":1}}],[\"wet\",{\"0\":{\"431\":1},\"1\":{\"246\":1,\"429\":1}}],[\"we\",{\"1\":{\"239\":3,\"244\":3,\"246\":1,\"267\":1,\"385\":1,\"389\":1,\"403\":2,\"409\":1,\"411\":1,\"413\":2,\"428\":1,\"432\":1,\"434\":1,\"435\":11}}],[\"wmat​=t\",{\"1\":{\"3\":1}}],[\"nɪvɔː\",{\"1\":{\"435\":1}}],[\"nginx\",{\"1\":{\"352\":3}}],[\"nn\",{\"1\":{\"283\":1}}],[\"np\",{\"1\":{\"255\":1,\"257\":3,\"301\":1,\"316\":3}}],[\"nthe\",{\"1\":{\"345\":1}}],[\"nt\",{\"1\":{\"244\":1}}],[\"nifty\",{\"1\":{\"400\":2,\"403\":1}}],[\"nights\",{\"1\":{\"428\":1,\"434\":2}}],[\"night\",{\"1\":{\"345\":1,\"419\":3,\"423\":2,\"426\":1}}],[\"ni\",{\"1\":{\"345\":1}}],[\"nice\",{\"1\":{\"246\":2,\"288\":1,\"435\":1}}],[\"nip\",{\"1\":{\"242\":1}}],[\"nibble\",{\"1\":{\"83\":1}}],[\"n>1\",{\"1\":{\"208\":1}}],[\"n次冒泡\",{\"1\":{\"203\":1}}],[\"n−2\",{\"1\":{\"191\":1}}],[\"n−1\",{\"1\":{\"191\":1,\"203\":4}}],[\"n+k\",{\"1\":{\"215\":1}}],[\"n+2n​+4n​+8n​+\",{\"1\":{\"210\":1}}],[\"n+3\",{\"1\":{\"165\":1}}],[\"n+11+2+3+\",{\"1\":{\"165\":1}}],[\"n+1\",{\"1\":{\"165\":3}}],[\"nk\",{\"1\":{\"162\":1}}],[\"n3\",{\"1\":{\"162\":1}}],[\"n2\",{\"1\":{\"162\":2,\"201\":1,\"203\":4,\"204\":3,\"205\":2,\"206\":8,\"208\":1,\"209\":3,\"215\":4,\"216\":1}}],[\"nlisten\",{\"1\":{\"345\":1}}],[\"nlogn\",{\"1\":{\"140\":1,\"162\":2,\"201\":1,\"208\":2,\"209\":4,\"212\":1,\"215\":3}}],[\"nlp\",{\"0\":{\"264\":1},\"1\":{\"71\":1,\"264\":2,\"276\":2,\"327\":1}}],[\"n=1\",{\"1\":{\"97\":1,\"208\":1}}],[\"n×p\",{\"1\":{\"75\":1}}],[\"north\",{\"1\":{\"428\":1}}],[\"norm\",{\"1\":{\"285\":1}}],[\"normalization\",{\"1\":{\"261\":1}}],[\"normalizer\",{\"1\":{\"258\":1}}],[\"nodded\",{\"1\":{\"406\":1,\"419\":1}}],[\"node\",{\"1\":{\"180\":3}}],[\"novels\",{\"1\":{\"435\":2}}],[\"novel\",{\"1\":{\"406\":1,\"435\":2}}],[\"noisegoing\",{\"1\":{\"405\":1}}],[\"noise\",{\"1\":{\"404\":1,\"405\":1,\"406\":3}}],[\"noon\",{\"1\":{\"397\":1}}],[\"nook\",{\"1\":{\"248\":3}}],[\"nowadays\",{\"1\":{\"239\":1,\"385\":1,\"435\":4}}],[\"now\",{\"1\":{\"134\":1,\"232\":1,\"234\":1,\"239\":1,\"242\":1,\"255\":1,\"383\":1,\"408\":3,\"428\":1}}],[\"nohup\",{\"1\":{\"132\":2}}],[\"no\",{\"0\":{\"232\":1},\"1\":{\"88\":1,\"132\":1,\"232\":2,\"233\":1,\"244\":4,\"324\":1,\"345\":2,\"398\":1,\"403\":2,\"434\":1}}],[\"nonetype\",{\"1\":{\"345\":1}}],[\"none\",{\"1\":{\"345\":3,\"428\":1}}],[\"non\",{\"1\":{\"74\":4,\"430\":2,\"435\":2}}],[\"nothing\",{\"1\":{\"431\":2}}],[\"notes\",{\"1\":{\"421\":2}}],[\"notebook\",{\"1\":{\"325\":3}}],[\"noticing\",{\"1\":{\"419\":1}}],[\"noticeable\",{\"1\":{\"383\":1,\"386\":1}}],[\"notation\",{\"0\":{\"75\":1},\"1\":{\"73\":1}}],[\"not\",{\"1\":{\"13\":1,\"41\":1,\"231\":5,\"232\":4,\"233\":1,\"237\":3,\"244\":1,\"246\":1,\"248\":2,\"311\":2,\"313\":1,\"337\":1,\"345\":3,\"385\":1,\"398\":1,\"401\":1,\"404\":2,\"405\":1,\"406\":4,\"408\":1,\"410\":1,\"415\":1,\"417\":1,\"419\":3,\"424\":2,\"425\":1,\"431\":2,\"432\":2,\"434\":5,\"435\":2}}],[\"naked\",{\"1\":{\"423\":1}}],[\"native\",{\"1\":{\"435\":1}}],[\"national\",{\"1\":{\"94\":1,\"389\":1}}],[\"nature\",{\"1\":{\"419\":1,\"426\":2,\"434\":2}}],[\"natural\",{\"1\":{\"389\":3,\"390\":1,\"391\":1,\"434\":1,\"435\":3}}],[\"nat\",{\"1\":{\"366\":3}}],[\"nasty\",{\"1\":{\"345\":1}}],[\"nan\",{\"1\":{\"28\":1,\"375\":3}}],[\"names\",{\"1\":{\"318\":1,\"417\":1,\"425\":1}}],[\"names=\",{\"1\":{\"311\":1}}],[\"name=\",{\"1\":{\"255\":2,\"345\":2}}],[\"name对应的\",{\"1\":{\"90\":1}}],[\"named\",{\"1\":{\"35\":1,\"36\":2}}],[\"name\",{\"1\":{\"9\":4,\"11\":3,\"13\":5,\"16\":4,\"18\":3,\"35\":4,\"124\":2,\"331\":2,\"337\":1}}],[\"nurse\",{\"1\":{\"268\":1}}],[\"nul空\",{\"1\":{\"94\":1}}],[\"null\",{\"0\":{\"373\":1},\"1\":{\"27\":1,\"169\":1,\"180\":5,\"285\":1,\"372\":1}}],[\"numpy\",{\"1\":{\"301\":1,\"316\":1,\"346\":1}}],[\"numerical\",{\"1\":{\"74\":1}}],[\"num\",{\"0\":{\"380\":1},\"1\":{\"20\":2,\"23\":3,\"267\":1,\"285\":2,\"311\":3,\"312\":4,\"315\":1,\"316\":1,\"320\":1,\"322\":6,\"323\":1,\"325\":16,\"342\":3,\"346\":1}}],[\"numbers\",{\"1\":{\"435\":1}}],[\"numbertostring\",{\"0\":{\"380\":1}}],[\"number\",{\"0\":{\"375\":1,\"379\":1},\"1\":{\"10\":4,\"75\":2,\"323\":1,\"372\":1,\"375\":4,\"377\":6,\"380\":1}}],[\"necklace\",{\"1\":{\"435\":1}}],[\"neater\",{\"1\":{\"414\":4}}],[\"nearby\",{\"1\":{\"246\":1,\"428\":1}}],[\"near\",{\"1\":{\"242\":1,\"433\":1}}],[\"nearest\",{\"1\":{\"74\":1}}],[\"need\",{\"1\":{\"395\":1,\"406\":1,\"414\":1,\"435\":2}}],[\"needs\",{\"1\":{\"228\":1,\"246\":2}}],[\"never\",{\"1\":{\"391\":1,\"406\":1,\"421\":1,\"433\":1,\"434\":1}}],[\"netflix\",{\"1\":{\"403\":1}}],[\"netmask\",{\"1\":{\"121\":1}}],[\"netlink\",{\"1\":{\"112\":1}}],[\"net\",{\"1\":{\"112\":7}}],[\"networks\",{\"1\":{\"47\":1,\"48\":1,\"383\":1,\"385\":1}}],[\"network\",{\"0\":{\"42\":1,\"383\":1,\"384\":1,\"385\":1,\"386\":1},\"1\":{\"41\":1,\"42\":1,\"44\":2,\"45\":2,\"46\":2,\"47\":2,\"74\":1,\"280\":2,\"294\":1,\"296\":2,\"298\":1,\"360\":2,\"366\":1,\"383\":4,\"384\":2,\"385\":1,\"386\":1,\"387\":2}}],[\"negative\",{\"1\":{\"77\":2,\"81\":2,\"225\":2,\"267\":1,\"282\":1,\"283\":3}}],[\"neighborhood\",{\"1\":{\"246\":2}}],[\"neighbor\",{\"1\":{\"74\":1,\"246\":1}}],[\"neural\",{\"1\":{\"41\":1,\"44\":1,\"45\":1,\"47\":1,\"48\":1,\"74\":1}}],[\"nexthop\",{\"1\":{\"367\":2}}],[\"next\",{\"1\":{\"19\":2,\"20\":7,\"21\":1,\"24\":2,\"45\":1,\"49\":1,\"69\":1,\"70\":1,\"121\":2,\"171\":1,\"180\":7,\"401\":2,\"406\":2,\"411\":1}}],[\"newly\",{\"1\":{\"435\":1}}],[\"news\",{\"1\":{\"402\":1,\"403\":1}}],[\"new\",{\"1\":{\"9\":1,\"26\":1,\"34\":1,\"51\":1,\"180\":3,\"208\":1,\"213\":2,\"259\":1,\"337\":6,\"345\":2,\"377\":5,\"383\":1,\"393\":1,\"396\":2,\"397\":1,\"398\":1,\"403\":3,\"406\":1,\"435\":5}}],[\"n\",{\"0\":{\"138\":3,\"197\":3,\"198\":3,\"199\":3},\"1\":{\"3\":1,\"45\":1,\"75\":3,\"86\":2,\"97\":1,\"136\":1,\"138\":2,\"142\":2,\"143\":3,\"144\":2,\"145\":3,\"149\":1,\"152\":1,\"154\":1,\"162\":9,\"164\":3,\"165\":3,\"169\":1,\"180\":15,\"183\":1,\"185\":1,\"191\":11,\"192\":3,\"193\":8,\"194\":4,\"196\":1,\"198\":1,\"201\":1,\"203\":5,\"204\":6,\"205\":4,\"206\":2,\"208\":8,\"209\":6,\"210\":6,\"212\":4,\"213\":9,\"214\":2,\"215\":1,\"224\":4,\"225\":1,\"246\":1,\"261\":6,\"345\":4,\"353\":1,\"404\":1,\"407\":1,\"411\":1,\"419\":2,\"424\":1,\"428\":1,\"435\":1}}],[\"snakes\",{\"1\":{\"435\":1}}],[\"snaps\",{\"1\":{\"411\":2}}],[\"snowstorms\",{\"1\":{\"429\":1}}],[\"sns\",{\"1\":{\"255\":5,\"261\":2}}],[\"sb\",{\"1\":{\"405\":1}}],[\"sbin\",{\"1\":{\"129\":1}}],[\"sɪv\",{\"1\":{\"402\":1}}],[\"squirrels\",{\"1\":{\"389\":1}}],[\"squad\",{\"1\":{\"342\":17,\"343\":4}}],[\"squares\",{\"1\":{\"74\":1}}],[\"smell\",{\"1\":{\"435\":1}}],[\"smiling\",{\"1\":{\"428\":1}}],[\"smile\",{\"1\":{\"419\":1,\"428\":1}}],[\"smiled\",{\"1\":{\"403\":1,\"434\":3}}],[\"smug\",{\"1\":{\"406\":1}}],[\"smoother\",{\"1\":{\"383\":1}}],[\"smaller\",{\"1\":{\"406\":1}}],[\"small\",{\"1\":{\"246\":1,\"248\":1,\"345\":1,\"400\":1,\"406\":1,\"428\":1,\"435\":3}}],[\"smat​=np1​+p2​+\",{\"1\":{\"3\":1}}],[\"src\",{\"1\":{\"367\":3}}],[\"sst\",{\"1\":{\"279\":2,\"280\":2,\"282\":1,\"301\":2,\"307\":1}}],[\"sing\",{\"1\":{\"421\":1}}],[\"singer\",{\"1\":{\"420\":1}}],[\"singing\",{\"0\":{\"421\":1},\"1\":{\"420\":3,\"421\":1}}],[\"since\",{\"1\":{\"242\":1,\"246\":1,\"428\":1}}],[\"sight\",{\"1\":{\"424\":3}}],[\"sigh\",{\"1\":{\"419\":2}}],[\"significant\",{\"1\":{\"435\":1}}],[\"significantly\",{\"1\":{\"383\":1}}],[\"significance\",{\"1\":{\"407\":1,\"435\":1}}],[\"siesta\",{\"1\":{\"406\":1}}],[\"silence\",{\"1\":{\"404\":1,\"405\":1,\"406\":1}}],[\"side\",{\"1\":{\"345\":3,\"428\":1}}],[\"sideeffectsreview\",{\"1\":{\"345\":1}}],[\"sideeffects\",{\"1\":{\"345\":1}}],[\"size=8\",{\"1\":{\"319\":2}}],[\"size\",{\"1\":{\"281\":3,\"282\":1,\"285\":4,\"313\":4,\"319\":4,\"320\":1,\"345\":1,\"347\":1}}],[\"situation\",{\"1\":{\"402\":1}}],[\"sit\",{\"1\":{\"244\":1}}],[\"simultaneously\",{\"1\":{\"387\":1}}],[\"simulated\",{\"1\":{\"57\":1}}],[\"simply\",{\"1\":{\"393\":1,\"397\":1}}],[\"simplicity\",{\"1\":{\"59\":1}}],[\"simple\",{\"1\":{\"3\":1,\"244\":1,\"294\":1,\"296\":2,\"298\":1,\"435\":1}}],[\"skyline\",{\"1\":{\"423\":1}}],[\"sky\",{\"0\":{\"423\":1,\"424\":1,\"426\":1},\"1\":{\"423\":3,\"424\":2,\"426\":3,\"428\":5}}],[\"skills\",{\"1\":{\"435\":1}}],[\"skim\",{\"1\":{\"435\":1}}],[\"skies\",{\"1\":{\"428\":2}}],[\"skin\",{\"1\":{\"345\":2}}],[\"skip\",{\"1\":{\"195\":1}}],[\"sklearn\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"255\":1,\"261\":1}}],[\"sweltering\",{\"1\":{\"430\":3}}],[\"swelling\",{\"1\":{\"345\":2}}],[\"swell\",{\"1\":{\"345\":1}}],[\"switch\",{\"1\":{\"401\":1,\"403\":2}}],[\"switching\",{\"1\":{\"345\":1}}],[\"switched\",{\"1\":{\"345\":2}}],[\"switzerland\",{\"1\":{\"10\":1}}],[\"swap\",{\"1\":{\"187\":1,\"205\":1,\"209\":2}}],[\"slowly\",{\"1\":{\"428\":2}}],[\"slot\",{\"1\":{\"152\":1}}],[\"sleeping\",{\"1\":{\"401\":1}}],[\"sleep\",{\"1\":{\"397\":1}}],[\"slicing\",{\"0\":{\"345\":1}}],[\"slice\",{\"1\":{\"23\":5,\"28\":1}}],[\"she\",{\"1\":{\"406\":6,\"411\":3,\"419\":1,\"428\":3}}],[\"shell\",{\"0\":{\"131\":1},\"1\":{\"129\":6,\"342\":1}}],[\"shuffle\",{\"1\":{\"345\":2}}],[\"shuffle=true\",{\"1\":{\"319\":1}}],[\"shutdown\",{\"1\":{\"134\":1}}],[\"shake\",{\"1\":{\"406\":1}}],[\"shape\",{\"1\":{\"281\":1,\"282\":1,\"313\":1,\"316\":2,\"319\":1,\"320\":1,\"423\":1}}],[\"sharing\",{\"1\":{\"246\":1,\"385\":1}}],[\"sharex=false\",{\"1\":{\"255\":1}}],[\"share\",{\"1\":{\"232\":1,\"246\":1,\"404\":1}}],[\"shock\",{\"1\":{\"434\":2}}],[\"shocked\",{\"1\":{\"345\":1}}],[\"shop\",{\"1\":{\"406\":2,\"407\":1}}],[\"shops\",{\"1\":{\"246\":1}}],[\"short\",{\"1\":{\"396\":1,\"400\":1}}],[\"shortest\",{\"1\":{\"370\":1}}],[\"showing\",{\"1\":{\"424\":1}}],[\"shower\",{\"1\":{\"421\":1}}],[\"showcasesa\",{\"1\":{\"392\":1}}],[\"show\",{\"1\":{\"392\":1,\"411\":1,\"416\":1,\"435\":1}}],[\"shows\",{\"1\":{\"345\":1,\"402\":2,\"403\":1,\"412\":1,\"428\":1}}],[\"should\",{\"1\":{\"255\":1,\"345\":1,\"384\":1,\"432\":1,\"434\":1,\"435\":1}}],[\"sh\",{\"1\":{\"124\":1}}],[\"shift\",{\"1\":{\"26\":2,\"28\":1}}],[\"synthroid\",{\"1\":{\"345\":2}}],[\"syntax\",{\"0\":{\"89\":1}}],[\"system\",{\"1\":{\"133\":2,\"248\":2,\"370\":1}}],[\"systemd\",{\"1\":{\"133\":3}}],[\"systemctl\",{\"1\":{\"133\":4}}],[\"sympathetically\",{\"1\":{\"406\":1}}],[\"symptoms\",{\"1\":{\"345\":3}}],[\"symptms\",{\"1\":{\"345\":1}}],[\"sym2\",{\"1\":{\"16\":2}}],[\"sym\",{\"1\":{\"16\":4}}],[\"symbolism\",{\"1\":{\"410\":1}}],[\"symbolizing\",{\"1\":{\"407\":1}}],[\"symbolized\",{\"1\":{\"411\":1}}],[\"symbolizes\",{\"1\":{\"409\":1}}],[\"symbolize\",{\"1\":{\"407\":1,\"409\":1,\"411\":1,\"435\":1}}],[\"symbols\",{\"0\":{\"12\":1,\"14\":1},\"1\":{\"12\":1,\"279\":1}}],[\"symbol\",{\"0\":{\"11\":1,\"15\":2,\"16\":2,\"17\":1,\"20\":1,\"376\":1},\"1\":{\"9\":1,\"11\":12,\"12\":7,\"13\":11,\"14\":5,\"15\":10,\"16\":9,\"17\":7,\"18\":14,\"19\":2,\"20\":5,\"21\":1,\"22\":1,\"24\":2,\"26\":1,\"28\":2,\"372\":1,\"376\":4,\"377\":3,\"407\":1,\"411\":1}}],[\"science\",{\"1\":{\"403\":1,\"428\":1}}],[\"sci\",{\"1\":{\"399\":1,\"435\":1}}],[\"scikit\",{\"1\":{\"261\":1}}],[\"scale\",{\"1\":{\"261\":2}}],[\"scalar\",{\"1\":{\"74\":1,\"86\":1}}],[\"scalable\",{\"1\":{\"41\":1}}],[\"scatter\",{\"1\":{\"255\":1}}],[\"scheduling\",{\"1\":{\"397\":1}}],[\"schedule\",{\"1\":{\"395\":1}}],[\"scheduler\",{\"0\":{\"322\":1},\"1\":{\"322\":4,\"323\":1,\"325\":8}}],[\"scheme\",{\"0\":{\"88\":1}}],[\"schools\",{\"1\":{\"248\":2}}],[\"school\",{\"0\":{\"417\":1},\"1\":{\"246\":1,\"417\":2,\"425\":1}}],[\"scope\",{\"1\":{\"112\":1,\"367\":5}}],[\"scores\",{\"1\":{\"255\":24}}],[\"score的超级无敌深入探讨\",{\"1\":{\"81\":1}}],[\"score相同的权重\",{\"1\":{\"81\":1}}],[\"score和recall\",{\"1\":{\"81\":1}}],[\"score\",{\"0\":{\"81\":1},\"1\":{\"77\":1,\"78\":2,\"79\":2,\"80\":2,\"81\":3,\"255\":1,\"267\":3}}],[\"script\",{\"1\":{\"341\":1,\"342\":1}}],[\"screenporch\",{\"1\":{\"255\":1}}],[\"screen\",{\"1\":{\"244\":1,\"400\":4,\"402\":1,\"403\":1}}],[\"scr\",{\"1\":{\"86\":1}}],[\"summer\",{\"1\":{\"430\":1}}],[\"sums\",{\"1\":{\"260\":1}}],[\"suddenly\",{\"1\":{\"403\":1,\"419\":1,\"434\":1}}],[\"sudoers\",{\"1\":{\"125\":2}}],[\"suˈpɜrb\",{\"1\":{\"399\":1}}],[\"suspense\",{\"1\":{\"399\":1,\"401\":2,\"435\":1}}],[\"sunset\",{\"1\":{\"423\":1,\"424\":1,\"428\":1}}],[\"sunscreen\",{\"1\":{\"345\":1}}],[\"sunrise\",{\"1\":{\"423\":1,\"424\":1,\"428\":3}}],[\"sung\",{\"1\":{\"421\":1}}],[\"sunflowers\",{\"1\":{\"407\":1,\"408\":1,\"410\":2,\"411\":2}}],[\"sundays\",{\"1\":{\"397\":1}}],[\"sunday\",{\"1\":{\"397\":1,\"406\":1}}],[\"sun\",{\"1\":{\"345\":1,\"424\":1}}],[\"superb\",{\"1\":{\"399\":1}}],[\"supervised\",{\"1\":{\"270\":1}}],[\"suppose\",{\"1\":{\"419\":1}}],[\"support\",{\"1\":{\"74\":2}}],[\"supplementary\",{\"1\":{\"106\":1}}],[\"suits\",{\"1\":{\"244\":1}}],[\"such\",{\"1\":{\"244\":1,\"389\":1,\"390\":1,\"398\":1,\"406\":1,\"433\":1,\"435\":1}}],[\"subscription\",{\"1\":{\"399\":1}}],[\"subsided\",{\"1\":{\"345\":1}}],[\"subword\",{\"0\":{\"293\":1},\"1\":{\"292\":1,\"293\":2}}],[\"subwords\",{\"1\":{\"279\":1}}],[\"suburb\",{\"1\":{\"246\":1}}],[\"subject\",{\"1\":{\"242\":1}}],[\"subnet\",{\"1\":{\"121\":2}}],[\"surrounding\",{\"1\":{\"434\":1}}],[\"surround\",{\"1\":{\"403\":2}}],[\"surrogate\",{\"1\":{\"19\":1,\"21\":1,\"23\":1,\"24\":1,\"106\":1}}],[\"surprised\",{\"1\":{\"411\":1}}],[\"surprises\",{\"1\":{\"403\":1,\"411\":1}}],[\"surprise\",{\"1\":{\"345\":1,\"403\":1,\"411\":1,\"428\":2}}],[\"survive\",{\"1\":{\"242\":1}}],[\"survival\",{\"1\":{\"74\":1,\"428\":1}}],[\"sure\",{\"1\":{\"232\":2,\"233\":1,\"419\":1,\"424\":1,\"435\":1}}],[\"sutton\",{\"1\":{\"48\":1}}],[\"sense\",{\"1\":{\"407\":1,\"410\":1,\"427\":1,\"435\":1}}],[\"sent\",{\"1\":{\"407\":1}}],[\"sentence\",{\"1\":{\"312\":3}}],[\"sentences\",{\"1\":{\"312\":2}}],[\"sentence2\",{\"1\":{\"311\":6,\"312\":7,\"313\":2,\"314\":1,\"317\":1,\"318\":2}}],[\"sentence1\",{\"1\":{\"311\":6,\"312\":7,\"313\":2,\"314\":1,\"317\":1,\"318\":2}}],[\"sentencepiece\",{\"1\":{\"293\":1,\"337\":4}}],[\"sentiment\",{\"1\":{\"267\":2,\"279\":3,\"435\":2}}],[\"sever\",{\"1\":{\"345\":2}}],[\"severe\",{\"1\":{\"345\":1}}],[\"seventh\",{\"1\":{\"435\":1}}],[\"seven\",{\"1\":{\"246\":1}}],[\"section2\",{\"0\":{\"447\":1}}],[\"section1\",{\"0\":{\"446\":1,\"448\":1}}],[\"sector\",{\"1\":{\"248\":1}}],[\"security\",{\"1\":{\"435\":1}}],[\"secretly\",{\"1\":{\"428\":1}}],[\"second\",{\"1\":{\"312\":3,\"383\":2,\"434\":2}}],[\"sep\",{\"1\":{\"306\":2,\"312\":6}}],[\"separate\",{\"1\":{\"259\":1}}],[\"separation\",{\"1\":{\"246\":1}}],[\"self\",{\"1\":{\"270\":1,\"435\":1}}],[\"select\",{\"1\":{\"227\":1,\"255\":1,\"260\":1,\"345\":3,\"408\":1}}],[\"selectionsort\",{\"1\":{\"205\":1}}],[\"selection\",{\"0\":{\"205\":1},\"1\":{\"74\":1,\"255\":1}}],[\"seat\",{\"1\":{\"435\":1}}],[\"seats\",{\"1\":{\"244\":1}}],[\"seaborn\",{\"1\":{\"255\":1}}],[\"search\",{\"1\":{\"227\":1}}],[\"sedentary\",{\"1\":{\"244\":1}}],[\"seems\",{\"1\":{\"413\":1,\"414\":1,\"419\":1}}],[\"seemed\",{\"1\":{\"406\":1,\"419\":1}}],[\"seem\",{\"1\":{\"403\":1,\"435\":1}}],[\"seen\",{\"0\":{\"433\":1},\"1\":{\"391\":1,\"428\":1,\"432\":1,\"433\":2,\"435\":1}}],[\"seeing\",{\"1\":{\"390\":1,\"391\":1,\"416\":1,\"428\":1,\"434\":1}}],[\"see\",{\"0\":{\"391\":1},\"1\":{\"227\":1,\"345\":1,\"390\":2,\"391\":2,\"403\":3,\"414\":2,\"416\":1,\"419\":1,\"424\":1,\"428\":1,\"434\":2,\"435\":1}}],[\"serious\",{\"1\":{\"400\":1}}],[\"series\",{\"1\":{\"255\":2,\"399\":2,\"401\":1,\"403\":3}}],[\"serialization\",{\"1\":{\"88\":1}}],[\"serves\",{\"1\":{\"385\":1}}],[\"server\",{\"1\":{\"117\":5,\"118\":4,\"119\":1,\"120\":1,\"121\":5,\"122\":2,\"133\":2,\"370\":1,\"387\":1}}],[\"services\",{\"1\":{\"385\":1,\"399\":2}}],[\"service\",{\"1\":{\"112\":1,\"133\":2,\"387\":1}}],[\"sequence2\",{\"1\":{\"302\":3,\"303\":1}}],[\"sequence1\",{\"1\":{\"302\":2}}],[\"sequence\",{\"1\":{\"62\":1,\"87\":1,\"90\":2,\"269\":2,\"273\":2,\"281\":1,\"282\":1,\"296\":2,\"301\":5,\"303\":1,\"304\":3,\"306\":3,\"315\":1}}],[\"sequences=2\",{\"1\":{\"267\":1}}],[\"sequences\",{\"1\":{\"45\":1,\"288\":3,\"301\":4,\"303\":8,\"304\":5,\"307\":2}}],[\"sequential\",{\"1\":{\"45\":1}}],[\"setting\",{\"1\":{\"435\":1}}],[\"settle\",{\"1\":{\"403\":1}}],[\"settled\",{\"1\":{\"403\":1,\"419\":1}}],[\"set\",{\"0\":{\"86\":1},\"1\":{\"19\":1,\"74\":1,\"83\":1,\"103\":1,\"260\":2,\"311\":3,\"313\":1,\"318\":1,\"416\":1}}],[\"saw\",{\"1\":{\"423\":1,\"433\":1,\"434\":1}}],[\"safari\",{\"0\":{\"390\":1},\"1\":{\"434\":2,\"435\":1}}],[\"safe\",{\"1\":{\"246\":1,\"432\":1}}],[\"saturdays\",{\"1\":{\"393\":1,\"397\":1}}],[\"saturday\",{\"1\":{\"393\":2}}],[\"sat\",{\"1\":{\"345\":1,\"406\":1,\"434\":2}}],[\"said\",{\"1\":{\"345\":1,\"400\":1,\"402\":1,\"403\":2,\"406\":2,\"411\":3,\"414\":1,\"419\":3,\"421\":1,\"428\":2,\"434\":1,\"435\":1}}],[\"saved\",{\"1\":{\"345\":1}}],[\"save\",{\"1\":{\"287\":2,\"294\":2,\"331\":1,\"336\":2,\"337\":2,\"435\":2}}],[\"saleprice\",{\"1\":{\"255\":4}}],[\"same\",{\"0\":{\"398\":1,\"401\":1,\"403\":1},\"1\":{\"248\":1,\"387\":1,\"398\":1,\"399\":1,\"401\":2,\"403\":2}}],[\"sample\",{\"1\":{\"260\":1,\"345\":2}}],[\"samples\",{\"1\":{\"45\":2,\"313\":5}}],[\"sampling\",{\"1\":{\"44\":1}}],[\"sarsa\",{\"1\":{\"69\":1}}],[\"saying\",{\"1\":{\"419\":1}}],[\"say\",{\"1\":{\"36\":1,\"231\":1,\"232\":3,\"234\":2,\"248\":1,\"413\":1,\"416\":2}}],[\"sayhi\",{\"1\":{\"35\":1,\"36\":2}}],[\"sooner\",{\"1\":{\"428\":1}}],[\"sociable\",{\"1\":{\"435\":1}}],[\"socialize\",{\"1\":{\"435\":1}}],[\"socializing\",{\"1\":{\"397\":1,\"398\":1}}],[\"social\",{\"1\":{\"397\":1,\"398\":1}}],[\"society\",{\"1\":{\"416\":1,\"419\":1}}],[\"sound\",{\"1\":{\"399\":2,\"400\":3,\"403\":4,\"405\":1,\"419\":1}}],[\"source\",{\"1\":{\"129\":3,\"360\":1,\"384\":1}}],[\"sources\",{\"1\":{\"128\":1,\"435\":1}}],[\"soak\",{\"1\":{\"345\":1}}],[\"sore\",{\"1\":{\"345\":1}}],[\"sorted\",{\"1\":{\"201\":1}}],[\"sort\",{\"0\":{\"203\":1,\"204\":1,\"205\":1,\"208\":1,\"209\":1,\"212\":1,\"213\":1,\"214\":1},\"1\":{\"28\":5,\"208\":8,\"209\":8,\"255\":3,\"346\":2}}],[\"software\",{\"1\":{\"398\":1,\"428\":1}}],[\"softmax\",{\"1\":{\"283\":2}}],[\"soft\",{\"1\":{\"274\":1,\"407\":1,\"408\":1}}],[\"sofa\",{\"1\":{\"246\":1}}],[\"so\",{\"1\":{\"232\":2,\"242\":1,\"267\":1,\"279\":2,\"301\":1,\"303\":1,\"304\":1,\"307\":1,\"345\":4,\"395\":1,\"398\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":3,\"405\":1,\"409\":1,\"413\":2,\"417\":1,\"419\":1,\"421\":1,\"424\":2,\"425\":1,\"431\":1,\"434\":3,\"435\":2}}],[\"soldiers\",{\"1\":{\"28\":4}}],[\"someday\",{\"1\":{\"428\":1}}],[\"someone\",{\"1\":{\"233\":2,\"237\":2,\"406\":2,\"409\":2,\"412\":1,\"419\":1,\"435\":2}}],[\"sometimes\",{\"1\":{\"227\":1,\"239\":1,\"403\":1,\"408\":1}}],[\"something\",{\"1\":{\"28\":3,\"227\":2,\"228\":1,\"242\":3,\"396\":1,\"401\":1,\"402\":1,\"403\":2,\"405\":1,\"406\":2,\"417\":1,\"424\":1,\"428\":3,\"434\":4,\"435\":2}}],[\"some\",{\"1\":{\"28\":1,\"332\":1,\"345\":1,\"389\":1,\"393\":2,\"396\":1,\"397\":2,\"400\":1,\"401\":1,\"403\":4,\"406\":3,\"407\":1,\"411\":2,\"419\":2,\"434\":2,\"435\":3}}],[\"s\",{\"0\":{\"22\":1,\"173\":1},\"1\":{\"49\":1,\"55\":1,\"56\":1,\"61\":2,\"64\":2,\"65\":1,\"69\":3,\"81\":1,\"224\":4,\"225\":3,\"228\":1,\"234\":2,\"237\":2,\"242\":2,\"244\":5,\"246\":4,\"375\":3,\"387\":1,\"389\":1,\"392\":1,\"393\":3,\"394\":2,\"395\":1,\"396\":2,\"397\":2,\"398\":1,\"400\":1,\"401\":1,\"403\":4,\"405\":2,\"406\":1,\"407\":2,\"409\":1,\"412\":1,\"413\":1,\"414\":4,\"419\":1,\"424\":2,\"426\":5,\"428\":2,\"429\":1,\"430\":1,\"431\":1,\"434\":4,\"435\":10}}],[\"spoken\",{\"0\":{\"443\":1}}],[\"sports\",{\"1\":{\"431\":1}}],[\"spot\",{\"1\":{\"389\":1}}],[\"spring\",{\"1\":{\"428\":1}}],[\"spiritual\",{\"1\":{\"407\":1}}],[\"spell\",{\"1\":{\"435\":1}}],[\"spellbound\",{\"1\":{\"435\":1}}],[\"spent\",{\"1\":{\"428\":1}}],[\"spending\",{\"1\":{\"435\":1}}],[\"spend\",{\"1\":{\"393\":1,\"397\":1,\"406\":1,\"435\":1}}],[\"speak\",{\"1\":{\"421\":1}}],[\"speakers\",{\"1\":{\"399\":1}}],[\"speeds\",{\"1\":{\"383\":2}}],[\"speed\",{\"0\":{\"383\":1},\"1\":{\"383\":2}}],[\"species\",{\"1\":{\"389\":2,\"435\":3}}],[\"specific\",{\"1\":{\"412\":1}}],[\"specification\",{\"1\":{\"339\":1}}],[\"specified\",{\"1\":{\"303\":1,\"304\":1}}],[\"specially\",{\"1\":{\"390\":1}}],[\"special\",{\"0\":{\"409\":1,\"411\":1},\"1\":{\"227\":1,\"337\":3,\"407\":1,\"411\":2,\"435\":2}}],[\"spare\",{\"1\":{\"435\":1}}],[\"sparse\",{\"1\":{\"246\":2}}],[\"spanning\",{\"1\":{\"356\":1}}],[\"spacious\",{\"1\":{\"246\":1}}],[\"spaces\",{\"1\":{\"59\":2}}],[\"space\",{\"1\":{\"41\":2,\"49\":4,\"86\":1,\"88\":1,\"105\":1,\"246\":1,\"332\":2,\"434\":1}}],[\"splits\",{\"1\":{\"260\":1}}],[\"splitting\",{\"1\":{\"259\":1}}],[\"split\",{\"1\":{\"28\":2,\"259\":1,\"291\":1,\"345\":3,\"346\":1}}],[\"splice\",{\"1\":{\"28\":2}}],[\"sp\",{\"0\":{\"106\":1},\"1\":{\"21\":1,\"106\":3,\"374\":2}}],[\"stylish\",{\"1\":{\"435\":1}}],[\"style\",{\"1\":{\"121\":1,\"255\":1,\"259\":4,\"414\":2}}],[\"stumble\",{\"1\":{\"419\":2}}],[\"stumbled\",{\"1\":{\"419\":1}}],[\"study\",{\"0\":{\"444\":1},\"1\":{\"412\":1,\"428\":1}}],[\"studying\",{\"1\":{\"396\":1,\"404\":1,\"405\":1}}],[\"studies\",{\"0\":{\"241\":1}}],[\"stickler\",{\"1\":{\"405\":4,\"406\":1}}],[\"still\",{\"0\":{\"413\":1},\"1\":{\"403\":1,\"412\":1,\"413\":1,\"419\":1,\"428\":1}}],[\"sting\",{\"1\":{\"9\":1}}],[\"stp\",{\"0\":{\"356\":1,\"357\":1},\"1\":{\"356\":1}}],[\"std\",{\"1\":{\"260\":1}}],[\"stem\",{\"1\":{\"407\":1}}],[\"stereotypical\",{\"1\":{\"248\":2}}],[\"steps=num\",{\"1\":{\"322\":1,\"325\":2}}],[\"steps=0\",{\"1\":{\"322\":1,\"325\":2}}],[\"steps\",{\"1\":{\"315\":3,\"322\":4,\"323\":1,\"325\":6}}],[\"stepwise\",{\"1\":{\"74\":1}}],[\"step\",{\"0\":{\"68\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1},\"1\":{\"4\":4,\"46\":1,\"68\":2,\"70\":4,\"323\":2,\"325\":4}}],[\"sth\",{\"1\":{\"231\":2}}],[\"stomach\",{\"1\":{\"421\":1}}],[\"stopped\",{\"1\":{\"434\":1}}],[\"stopping\",{\"1\":{\"430\":1}}],[\"stop\",{\"1\":{\"406\":1,\"430\":2}}],[\"stops\",{\"1\":{\"404\":1}}],[\"store\",{\"1\":{\"411\":1}}],[\"stories\",{\"1\":{\"403\":2,\"419\":1}}],[\"storyline\",{\"1\":{\"435\":1}}],[\"story\",{\"1\":{\"246\":1}}],[\"storage\",{\"1\":{\"87\":1,\"334\":1,\"336\":1}}],[\"stochastic\",{\"1\":{\"55\":1,\"59\":1,\"61\":1}}],[\"st+1​\",{\"1\":{\"65\":1,\"66\":1,\"68\":6,\"70\":2}}],[\"st+1​∣st​\",{\"1\":{\"62\":2}}],[\"st+1\",{\"1\":{\"44\":1,\"70\":1}}],[\"st​\",{\"1\":{\"44\":3,\"62\":1,\"66\":1,\"67\":4,\"68\":4,\"70\":8}}],[\"stargaze\",{\"1\":{\"428\":1}}],[\"stargazing\",{\"1\":{\"427\":2}}],[\"star\",{\"1\":{\"428\":2}}],[\"stars\",{\"0\":{\"425\":1,\"427\":1,\"428\":1},\"1\":{\"423\":4,\"424\":2,\"426\":1,\"427\":1,\"428\":3}}],[\"started\",{\"1\":{\"345\":3,\"403\":1,\"417\":2,\"419\":2,\"428\":1}}],[\"starts\",{\"0\":{\"423\":1},\"1\":{\"69\":1}}],[\"start\",{\"1\":{\"23\":2,\"28\":9,\"133\":2,\"244\":1,\"394\":1,\"397\":1,\"435\":3}}],[\"stayed\",{\"1\":{\"406\":1,\"419\":1,\"434\":1}}],[\"stay\",{\"1\":{\"345\":1,\"395\":1,\"403\":1}}],[\"staged\",{\"1\":{\"337\":2}}],[\"status\",{\"1\":{\"337\":2}}],[\"statistical\",{\"1\":{\"72\":1,\"74\":2}}],[\"statefreq\",{\"1\":{\"260\":1}}],[\"state=0\",{\"1\":{\"255\":1}}],[\"state→π\",{\"1\":{\"54\":1}}],[\"states\",{\"0\":{\"281\":1},\"1\":{\"49\":1,\"51\":2,\"54\":1,\"59\":1,\"69\":1,\"280\":1,\"282\":1}}],[\"state\",{\"1\":{\"41\":2,\"42\":1,\"43\":1,\"45\":2,\"49\":3,\"54\":3,\"55\":1,\"56\":1,\"61\":2,\"62\":2,\"63\":1,\"64\":2,\"69\":7,\"70\":2,\"112\":1,\"260\":6,\"281\":1,\"287\":1,\"369\":1,\"370\":1}}],[\"stabilize\",{\"1\":{\"44\":1}}],[\"stack\",{\"1\":{\"42\":1}}],[\"standard\",{\"1\":{\"3\":1,\"94\":2}}],[\"struggled\",{\"1\":{\"406\":1}}],[\"structured\",{\"1\":{\"398\":1,\"428\":1}}],[\"strange\",{\"1\":{\"406\":2,\"419\":1}}],[\"strategy=\",{\"1\":{\"316\":1,\"331\":1}}],[\"strategy\",{\"1\":{\"70\":1,\"315\":1}}],[\"strategies\",{\"1\":{\"57\":1}}],[\"streaming\",{\"1\":{\"399\":1}}],[\"strengthen\",{\"1\":{\"435\":1}}],[\"strength\",{\"0\":{\"4\":1},\"1\":{\"4\":1}}],[\"strike\",{\"1\":{\"397\":1}}],[\"stringtonumber\",{\"0\":{\"379\":1}}],[\"string并非\",{\"1\":{\"374\":1}}],[\"string\",{\"0\":{\"374\":1,\"380\":1},\"1\":{\"10\":3,\"11\":1,\"12\":2,\"13\":1,\"19\":2,\"21\":1,\"22\":1,\"24\":1,\"26\":1,\"83\":1,\"159\":1,\"259\":1,\"298\":2,\"311\":2,\"372\":1,\"374\":3,\"376\":1,\"377\":2,\"380\":2}}],[\"stroll\",{\"1\":{\"434\":1}}],[\"strolling\",{\"1\":{\"434\":1}}],[\"stroke\",{\"1\":{\"257\":2}}],[\"strongly\",{\"1\":{\"232\":1}}],[\"str\",{\"0\":{\"379\":1},\"1\":{\"21\":5,\"23\":6,\"28\":1,\"259\":2,\"268\":2}}],[\"sd\",{\"1\":{\"3\":4}}],[\"滑动平均\",{\"1\":{\"3\":1}}],[\"aesthetically\",{\"1\":{\"435\":1}}],[\"away\",{\"1\":{\"428\":2,\"434\":2}}],[\"awe\",{\"1\":{\"426\":3}}],[\"awful\",{\"1\":{\"399\":1}}],[\"awk\",{\"1\":{\"132\":2}}],[\"affordable\",{\"1\":{\"435\":1}}],[\"affected\",{\"1\":{\"435\":1}}],[\"affection\",{\"1\":{\"407\":1,\"410\":1}}],[\"affecting\",{\"0\":{\"387\":1}}],[\"affects\",{\"1\":{\"383\":1}}],[\"africa\",{\"1\":{\"434\":1}}],[\"afternoon\",{\"1\":{\"406\":1}}],[\"after\",{\"1\":{\"69\":1,\"345\":1,\"393\":1,\"394\":1,\"397\":2,\"403\":1,\"406\":1}}],[\"axis=\",{\"1\":{\"316\":2}}],[\"axes\",{\"1\":{\"255\":1}}],[\"a3\",{\"1\":{\"260\":1}}],[\"a2\",{\"1\":{\"260\":2}}],[\"a1\",{\"1\":{\"260\":2}}],[\"a0\",{\"1\":{\"260\":1}}],[\"agree\",{\"1\":{\"434\":1}}],[\"ago\",{\"1\":{\"345\":1}}],[\"again\",{\"1\":{\"232\":1,\"234\":1,\"345\":1,\"406\":1,\"408\":2}}],[\"agent和大语言模型都代表了人工智能领域的重要进展\",{\"1\":{\"39\":1}}],[\"agent能够在实际世界中操作\",{\"1\":{\"39\":1}}],[\"agent的设计和应用通常涉及更广泛的工程和硬件系统\",{\"1\":{\"39\":1}}],[\"agent的示例\",{\"1\":{\"39\":1}}],[\"agent\",{\"0\":{\"37\":1,\"38\":1},\"1\":{\"38\":3,\"39\":2,\"45\":4,\"46\":1,\"48\":1,\"49\":4,\"52\":1,\"53\":1,\"54\":6,\"56\":1,\"59\":1,\"61\":1,\"62\":1,\"64\":3,\"69\":1}}],[\"age\",{\"1\":{\"9\":6,\"13\":4,\"28\":8,\"428\":1}}],[\"admire\",{\"1\":{\"426\":2}}],[\"adventures\",{\"1\":{\"428\":1}}],[\"adventure\",{\"1\":{\"419\":2}}],[\"advantage\",{\"1\":{\"398\":1}}],[\"adorable\",{\"1\":{\"390\":1,\"435\":1}}],[\"adore\",{\"1\":{\"231\":1,\"407\":1}}],[\"adam\",{\"1\":{\"321\":1}}],[\"adamw\",{\"1\":{\"321\":3,\"325\":4}}],[\"adequate\",{\"1\":{\"244\":1}}],[\"adj\",{\"1\":{\"229\":1,\"401\":2,\"416\":2,\"417\":1,\"419\":1,\"424\":1,\"430\":1,\"434\":1,\"435\":1}}],[\"adds\",{\"1\":{\"407\":1}}],[\"additionally\",{\"1\":{\"389\":1,\"396\":1,\"403\":1}}],[\"additive\",{\"1\":{\"74\":2}}],[\"add\",{\"1\":{\"246\":1,\"324\":2,\"336\":3,\"337\":1,\"346\":2,\"367\":6,\"435\":1}}],[\"address\",{\"1\":{\"366\":1}}],[\"addressing\",{\"0\":{\"148\":1}}],[\"addr\",{\"0\":{\"112\":1},\"1\":{\"112\":2,\"364\":1}}],[\"az\",{\"1\":{\"224\":2}}],[\"abuse\",{\"1\":{\"435\":1}}],[\"abroad\",{\"1\":{\"417\":1}}],[\"abbey\",{\"1\":{\"416\":1,\"419\":2}}],[\"about\",{\"0\":{\"392\":1,\"425\":1,\"427\":1,\"428\":1},\"1\":{\"233\":1,\"244\":2,\"246\":1,\"332\":1,\"345\":1,\"383\":1,\"392\":2,\"393\":1,\"399\":1,\"403\":2,\"411\":1,\"412\":1,\"413\":2,\"414\":2,\"415\":1,\"419\":4,\"421\":1,\"423\":3,\"425\":2,\"427\":1,\"428\":6,\"435\":2}}],[\"abs\",{\"1\":{\"375\":1}}],[\"absolute\",{\"1\":{\"285\":1}}],[\"absolutely\",{\"1\":{\"232\":1}}],[\"abstract\",{\"0\":{\"85\":1}}],[\"abc\",{\"1\":{\"224\":1}}],[\"amazing\",{\"1\":{\"391\":1,\"419\":2,\"428\":1,\"434\":2,\"435\":2}}],[\"amrozi\",{\"1\":{\"311\":2}}],[\"amount\",{\"1\":{\"260\":1,\"345\":1}}],[\"amortized\",{\"0\":{\"166\":1}}],[\"am\",{\"1\":{\"231\":1,\"233\":2,\"237\":2,\"345\":1,\"400\":1,\"401\":2,\"405\":2,\"406\":1,\"408\":1,\"410\":1,\"415\":2,\"416\":1,\"421\":2,\"435\":6}}],[\"american\",{\"1\":{\"94\":2}}],[\"apartment\",{\"1\":{\"428\":1}}],[\"apache\",{\"1\":{\"340\":1}}],[\"api\",{\"0\":{\"305\":1,\"314\":1,\"331\":1},\"1\":{\"255\":1,\"276\":1,\"277\":2,\"309\":1,\"327\":1,\"329\":1,\"331\":1}}],[\"apt\",{\"1\":{\"128\":2,\"129\":1,\"133\":1}}],[\"app\",{\"1\":{\"425\":1}}],[\"appeal\",{\"1\":{\"419\":1}}],[\"appearance\",{\"1\":{\"399\":1,\"407\":1,\"410\":1}}],[\"apparently\",{\"1\":{\"414\":1}}],[\"appreciation\",{\"1\":{\"435\":1}}],[\"appreciated\",{\"1\":{\"403\":1,\"435\":1}}],[\"appreciate\",{\"1\":{\"392\":1,\"427\":1,\"435\":2}}],[\"approached\",{\"1\":{\"428\":1}}],[\"approaches\",{\"1\":{\"74\":1}}],[\"approximation\",{\"1\":{\"57\":1}}],[\"apply\",{\"1\":{\"257\":1,\"345\":1}}],[\"apples\",{\"1\":{\"274\":2}}],[\"apple\",{\"1\":{\"22\":1,\"26\":9}}],[\"australia\",{\"1\":{\"435\":1}}],[\"audience\",{\"1\":{\"421\":1}}],[\"audio\",{\"1\":{\"402\":1,\"435\":1}}],[\"autobiographies\",{\"1\":{\"435\":1}}],[\"autonomous\",{\"1\":{\"370\":1}}],[\"automodelformaskedlm\",{\"1\":{\"331\":2,\"337\":2}}],[\"automodelforsequenceclassification\",{\"1\":{\"282\":3,\"301\":4,\"302\":1,\"307\":2,\"315\":2,\"316\":1,\"320\":2,\"325\":4}}],[\"automodel\",{\"1\":{\"280\":3,\"282\":1,\"284\":1,\"286\":3}}],[\"autotokenizer\",{\"1\":{\"279\":4,\"280\":1,\"294\":3,\"296\":2,\"301\":4,\"307\":2,\"312\":2,\"314\":2,\"317\":2,\"331\":2,\"337\":2}}],[\"auto\",{\"1\":{\"269\":2,\"273\":2,\"323\":1}}],[\"autos\",{\"1\":{\"257\":3,\"259\":3}}],[\"autolayout=true\",{\"1\":{\"255\":1}}],[\"auth\",{\"1\":{\"36\":2,\"331\":1}}],[\"aug\",{\"1\":{\"125\":1}}],[\"a类地址\",{\"1\":{\"111\":1}}],[\"aˋ\",{\"1\":{\"86\":1}}],[\"a∈rk×s\",{\"1\":{\"75\":1}}],[\"a∈rk\",{\"1\":{\"75\":1}}],[\"a∈r\",{\"1\":{\"75\":1}}],[\"avid\",{\"1\":{\"435\":1}}],[\"avoid\",{\"1\":{\"345\":1}}],[\"available\",{\"1\":{\"75\":1,\"323\":1,\"325\":1,\"435\":1}}],[\"averageclaim\",{\"1\":{\"260\":3}}],[\"averageincome\",{\"1\":{\"260\":1}}],[\"average\",{\"0\":{\"5\":1,\"165\":1},\"1\":{\"3\":4,\"260\":1}}],[\"a∣s\",{\"1\":{\"55\":2,\"61\":2}}],[\"a=π\",{\"1\":{\"55\":1}}],[\"ached\",{\"1\":{\"345\":1}}],[\"acne\",{\"1\":{\"345\":1}}],[\"ack\",{\"0\":{\"119\":1},\"1\":{\"119\":1,\"120\":1,\"362\":1}}],[\"across\",{\"1\":{\"411\":2,\"419\":1}}],[\"acrobatics\",{\"1\":{\"391\":1,\"435\":1}}],[\"acr\",{\"0\":{\"85\":1},\"1\":{\"86\":1}}],[\"accidents\",{\"1\":{\"257\":2}}],[\"accommodation\",{\"0\":{\"245\":1}}],[\"accordingly\",{\"1\":{\"69\":1}}],[\"accepted\",{\"1\":{\"434\":1}}],[\"accelerator\",{\"1\":{\"325\":11}}],[\"accelerate\",{\"0\":{\"325\":1},\"1\":{\"71\":1,\"309\":1,\"315\":4,\"325\":8,\"326\":1}}],[\"accessing\",{\"1\":{\"387\":1}}],[\"accessories\",{\"1\":{\"435\":1}}],[\"accessor\",{\"1\":{\"259\":2}}],[\"access\",{\"0\":{\"352\":1},\"1\":{\"125\":1}}],[\"accumulated\",{\"1\":{\"395\":1}}],[\"accumulator\",{\"1\":{\"28\":2}}],[\"accused\",{\"1\":{\"311\":2}}],[\"accuracy=tp+tn+fp+fntp+tn​\",{\"1\":{\"78\":1}}],[\"accuracy\",{\"0\":{\"78\":1},\"1\":{\"77\":1,\"78\":3,\"316\":2,\"324\":1,\"405\":1}}],[\"act\",{\"1\":{\"285\":1}}],[\"actually\",{\"1\":{\"231\":1,\"411\":1,\"425\":1,\"435\":2}}],[\"acts\",{\"1\":{\"69\":1}}],[\"active\",{\"1\":{\"345\":1}}],[\"activities\",{\"1\":{\"248\":2,\"393\":1,\"397\":2,\"398\":1,\"435\":2}}],[\"activity\",{\"1\":{\"229\":1,\"406\":3}}],[\"acting\",{\"1\":{\"69\":4}}],[\"actions\",{\"1\":{\"47\":2,\"49\":4,\"51\":1,\"52\":1,\"53\":1,\"59\":1,\"61\":1,\"64\":1,\"69\":1,\"383\":1,\"386\":1}}],[\"action\",{\"1\":{\"41\":1,\"42\":1,\"43\":1,\"45\":2,\"47\":3,\"49\":2,\"54\":3,\"55\":1,\"59\":5,\"61\":2,\"62\":2,\"64\":4,\"69\":6,\"70\":2,\"401\":3,\"435\":1}}],[\"air\",{\"1\":{\"244\":1}}],[\"ai\",{\"0\":{\"37\":1,\"38\":1,\"438\":1},\"1\":{\"38\":3,\"39\":3}}],[\"astronomy\",{\"1\":{\"428\":1}}],[\"astronomical\",{\"1\":{\"427\":1}}],[\"astype\",{\"1\":{\"261\":1}}],[\"asked\",{\"1\":{\"403\":1,\"419\":1}}],[\"aspect\",{\"1\":{\"389\":1}}],[\"assertionerror\",{\"1\":{\"345\":1}}],[\"assert\",{\"1\":{\"345\":1}}],[\"assign\",{\"1\":{\"13\":2,\"18\":1}}],[\"ascending=true\",{\"1\":{\"255\":1}}],[\"ascending=false\",{\"1\":{\"255\":2}}],[\"ascent\",{\"0\":{\"63\":1},\"1\":{\"57\":2,\"63\":1}}],[\"ascii字符\",{\"1\":{\"103\":1}}],[\"ascii字符编码方案简介\",{\"0\":{\"94\":1}}],[\"ascii\",{\"0\":{\"92\":1},\"1\":{\"83\":1,\"87\":1,\"89\":1,\"94\":2,\"95\":3,\"96\":2,\"97\":2,\"99\":6,\"100\":3,\"107\":4}}],[\"as\",{\"0\":{\"33\":1,\"419\":1},\"1\":{\"36\":2,\"268\":2,\"311\":1,\"316\":1,\"370\":1,\"384\":1,\"385\":1,\"389\":1,\"398\":1,\"399\":1,\"406\":3,\"411\":3,\"419\":2,\"421\":8,\"428\":4,\"430\":2,\"433\":1,\"434\":3,\"435\":4}}],[\"a\",{\"0\":{\"390\":2,\"400\":1,\"411\":1,\"414\":2,\"417\":1,\"419\":1},\"1\":{\"28\":2,\"42\":1,\"59\":1,\"61\":2,\"64\":2,\"69\":4,\"74\":1,\"75\":2,\"86\":1,\"102\":1,\"108\":1,\"125\":2,\"142\":4,\"143\":4,\"144\":4,\"145\":4,\"180\":14,\"203\":7,\"204\":6,\"205\":7,\"206\":9,\"208\":4,\"209\":2,\"210\":1,\"213\":13,\"222\":2,\"224\":2,\"228\":2,\"231\":4,\"232\":2,\"233\":1,\"234\":1,\"237\":2,\"242\":5,\"244\":7,\"246\":9,\"248\":3,\"260\":2,\"267\":2,\"268\":2,\"274\":1,\"279\":2,\"291\":2,\"294\":1,\"296\":2,\"298\":1,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1,\"331\":1,\"345\":3,\"346\":2,\"347\":1,\"354\":4,\"355\":2,\"365\":1,\"366\":9,\"367\":1,\"373\":1,\"374\":1,\"383\":2,\"384\":1,\"385\":1,\"386\":3,\"389\":1,\"390\":4,\"391\":1,\"392\":1,\"393\":3,\"394\":4,\"396\":4,\"397\":5,\"398\":4,\"399\":6,\"400\":10,\"401\":3,\"402\":2,\"403\":4,\"404\":2,\"405\":4,\"406\":12,\"407\":4,\"408\":2,\"409\":4,\"410\":3,\"411\":10,\"412\":7,\"413\":1,\"414\":3,\"415\":2,\"416\":2,\"417\":4,\"419\":11,\"420\":2,\"423\":6,\"424\":3,\"425\":3,\"426\":3,\"428\":11,\"430\":2,\"432\":1,\"433\":1,\"434\":18,\"435\":37}}],[\"arm\",{\"1\":{\"434\":2}}],[\"army\",{\"1\":{\"28\":9}}],[\"artwork\",{\"1\":{\"435\":1}}],[\"art\",{\"1\":{\"412\":1}}],[\"articles\",{\"1\":{\"396\":1}}],[\"architecture\",{\"1\":{\"265\":4,\"294\":1}}],[\"architectures\",{\"0\":{\"265\":1},\"1\":{\"265\":1}}],[\"arange\",{\"1\":{\"255\":1}}],[\"around\",{\"1\":{\"242\":1,\"390\":1,\"392\":1,\"411\":2}}],[\"arp\",{\"0\":{\"353\":1},\"1\":{\"113\":1,\"352\":1,\"353\":7,\"355\":3,\"356\":1,\"364\":1}}],[\"area\",{\"1\":{\"106\":1,\"345\":2}}],[\"are\",{\"0\":{\"389\":1,\"392\":1,\"398\":1,\"409\":1,\"411\":1,\"414\":1},\"1\":{\"75\":1,\"232\":1,\"244\":3,\"246\":1,\"248\":6,\"304\":2,\"383\":1,\"387\":1,\"389\":2,\"390\":1,\"391\":1,\"392\":1,\"396\":1,\"397\":1,\"398\":3,\"402\":1,\"403\":2,\"405\":1,\"407\":3,\"410\":1,\"412\":1,\"413\":1,\"419\":2,\"423\":1,\"428\":1,\"432\":1,\"434\":3,\"435\":19}}],[\"arbitrarily\",{\"1\":{\"70\":1}}],[\"argmax\",{\"1\":{\"316\":2,\"324\":1}}],[\"args\",{\"1\":{\"315\":3,\"316\":2,\"331\":1}}],[\"arg2\",{\"1\":{\"28\":1}}],[\"arg1\",{\"1\":{\"28\":1}}],[\"arrived\",{\"1\":{\"434\":1}}],[\"arrow\",{\"1\":{\"340\":1}}],[\"arrlength\",{\"1\":{\"28\":1}}],[\"arr\",{\"1\":{\"23\":2,\"26\":10,\"28\":42,\"208\":16,\"209\":13,\"210\":6}}],[\"arrays\",{\"1\":{\"301\":1}}],[\"arrayblockingqueue\",{\"1\":{\"185\":1}}],[\"arraylike\",{\"1\":{\"22\":2,\"28\":4}}],[\"array\",{\"0\":{\"22\":1,\"23\":1,\"25\":1},\"1\":{\"19\":3,\"22\":7,\"23\":8,\"24\":3,\"26\":1,\"28\":8,\"164\":3}}],[\"attribute\",{\"1\":{\"345\":1}}],[\"attributeerror\",{\"1\":{\"345\":1}}],[\"attack\",{\"1\":{\"345\":1}}],[\"attention\",{\"0\":{\"274\":1,\"303\":1},\"1\":{\"275\":1,\"279\":1,\"285\":2,\"294\":2,\"302\":3,\"303\":10,\"304\":2,\"308\":1,\"312\":5,\"313\":1,\"318\":1,\"319\":1,\"401\":1}}],[\"atmosphere\",{\"1\":{\"244\":2}}],[\"at​=a\",{\"1\":{\"64\":1}}],[\"at​∣st​\",{\"1\":{\"62\":2}}],[\"at​​\",{\"1\":{\"44\":1,\"70\":1}}],[\"at​\",{\"1\":{\"44\":3,\"62\":3,\"66\":1,\"70\":6}}],[\"atari\",{\"1\":{\"41\":1,\"43\":1}}],[\"at\",{\"0\":{\"417\":1,\"424\":1,\"426\":1},\"1\":{\"26\":2,\"61\":1,\"62\":1,\"69\":2,\"232\":1,\"242\":1,\"345\":1,\"390\":1,\"393\":1,\"403\":1,\"417\":1,\"419\":3,\"421\":1,\"423\":3,\"425\":1,\"426\":4,\"428\":2,\"431\":1,\"434\":2}}],[\"animal\",{\"0\":{\"391\":1},\"1\":{\"391\":1,\"392\":1,\"435\":2}}],[\"animals\",{\"0\":{\"389\":1,\"392\":1,\"432\":1,\"433\":1},\"1\":{\"389\":4,\"390\":1,\"392\":2,\"419\":1,\"432\":5,\"433\":1,\"434\":7,\"435\":20}}],[\"ankles\",{\"1\":{\"345\":1}}],[\"anxiety\",{\"1\":{\"345\":5}}],[\"anniversaries\",{\"1\":{\"435\":1}}],[\"annoy\",{\"1\":{\"293\":1}}],[\"annoyingly\",{\"1\":{\"293\":1}}],[\"annealing\",{\"1\":{\"57\":1}}],[\"angry\",{\"1\":{\"237\":1}}],[\"ansi\",{\"1\":{\"95\":1}}],[\"andrew\",{\"1\":{\"48\":1}}],[\"and\",{\"0\":{\"345\":1,\"398\":1,\"414\":1,\"423\":1},\"1\":{\"48\":1,\"69\":1,\"70\":1,\"74\":3,\"187\":1,\"227\":1,\"228\":1,\"229\":2,\"232\":3,\"233\":1,\"234\":2,\"237\":1,\"244\":4,\"246\":11,\"248\":2,\"259\":5,\"260\":1,\"280\":1,\"332\":2,\"336\":1,\"338\":1,\"345\":20,\"383\":6,\"384\":1,\"385\":2,\"386\":2,\"387\":1,\"389\":6,\"390\":4,\"391\":1,\"392\":4,\"393\":5,\"394\":2,\"395\":4,\"397\":3,\"398\":6,\"400\":2,\"401\":3,\"402\":3,\"403\":15,\"404\":2,\"405\":3,\"406\":7,\"407\":7,\"408\":6,\"409\":1,\"410\":5,\"411\":10,\"412\":2,\"413\":1,\"414\":1,\"416\":2,\"417\":4,\"419\":5,\"424\":2,\"425\":2,\"426\":6,\"427\":1,\"428\":22,\"430\":1,\"431\":1,\"433\":1,\"434\":12,\"435\":26}}],[\"an\",{\"1\":{\"48\":1,\"61\":1,\"62\":1,\"69\":1,\"70\":1,\"72\":1,\"244\":2,\"246\":1,\"248\":1,\"345\":2,\"389\":1,\"390\":1,\"399\":2,\"419\":3,\"421\":1,\"434\":3,\"435\":4}}],[\"anyone\",{\"1\":{\"407\":1}}],[\"anything\",{\"0\":{\"396\":1}}],[\"anymore\",{\"1\":{\"236\":1}}],[\"any\",{\"0\":{\"409\":1,\"411\":1},\"1\":{\"19\":1,\"20\":1,\"24\":1,\"407\":2,\"428\":1,\"431\":1,\"434\":1}}],[\"another\",{\"1\":{\"13\":1}}],[\"analysis\",{\"0\":{\"1\":1},\"1\":{\"74\":3,\"259\":1,\"267\":2,\"279\":3}}],[\"almost\",{\"1\":{\"435\":1}}],[\"although\",{\"1\":{\"419\":1}}],[\"alter\",{\"1\":{\"9\":2}}],[\"already\",{\"1\":{\"411\":1,\"428\":1}}],[\"alongside\",{\"1\":{\"411\":1}}],[\"alot\",{\"1\":{\"345\":1}}],[\"also\",{\"1\":{\"345\":1,\"384\":1,\"391\":1,\"396\":2,\"397\":1,\"403\":2,\"415\":1,\"419\":1,\"434\":1,\"435\":2}}],[\"albert\",{\"1\":{\"273\":1}}],[\"always\",{\"0\":{\"401\":1,\"403\":1},\"1\":{\"239\":1,\"242\":3,\"246\":1,\"391\":1,\"399\":1,\"401\":2,\"403\":2,\"417\":1,\"419\":1,\"426\":1,\"428\":3,\"434\":2}}],[\"allergies\",{\"1\":{\"345\":1}}],[\"allergy\",{\"1\":{\"345\":1}}],[\"all\",{\"1\":{\"232\":1,\"244\":1,\"255\":1,\"345\":1,\"367\":3,\"403\":1,\"406\":1,\"417\":2,\"419\":3,\"428\":2,\"434\":1,\"435\":1}}],[\"allowing\",{\"1\":{\"397\":1}}],[\"allows\",{\"1\":{\"244\":1,\"393\":1}}],[\"allow\",{\"1\":{\"121\":2}}],[\"aliasing\",{\"1\":{\"59\":2}}],[\"algorithm\",{\"0\":{\"44\":1},\"1\":{\"69\":1,\"70\":2}}],[\"alert\",{\"1\":{\"9\":6,\"10\":4,\"13\":2,\"15\":1,\"16\":3,\"21\":3,\"23\":1,\"26\":20,\"28\":11,\"35\":2,\"381\":1}}],[\"alpha\",{\"1\":{\"7\":1}}],[\"mɑː\",{\"1\":{\"435\":1}}],[\"mr\",{\"1\":{\"428\":1}}],[\"mrpc\",{\"1\":{\"310\":2,\"311\":1,\"314\":1,\"316\":4,\"317\":1,\"324\":1,\"331\":2}}],[\"mɜ\",{\"1\":{\"402\":1}}],[\"mbps\",{\"1\":{\"383\":2}}],[\"mbart\",{\"1\":{\"273\":1}}],[\"mcg\",{\"1\":{\"345\":1}}],[\"md\",{\"1\":{\"337\":1,\"338\":1}}],[\"mdp\",{\"1\":{\"49\":1}}],[\"ml\",{\"1\":{\"310\":1}}],[\"mlogn\",{\"1\":{\"197\":1}}],[\"mysteries\",{\"1\":{\"426\":2}}],[\"myself\",{\"1\":{\"403\":1}}],[\"mysql\",{\"1\":{\"133\":8}}],[\"my\",{\"1\":{\"232\":1,\"234\":2,\"237\":4,\"242\":1,\"244\":1,\"246\":2,\"267\":2,\"279\":2,\"287\":2,\"294\":1,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1,\"331\":1,\"341\":4,\"345\":15,\"383\":1,\"389\":1,\"390\":1,\"392\":1,\"393\":4,\"394\":1,\"395\":2,\"397\":2,\"399\":1,\"400\":1,\"402\":3,\"403\":4,\"406\":6,\"407\":1,\"411\":1,\"413\":3,\"414\":1,\"423\":1,\"424\":1,\"428\":3,\"432\":1,\"435\":8}}],[\"muddy\",{\"1\":{\"407\":1}}],[\"musical\",{\"1\":{\"421\":1}}],[\"music\",{\"1\":{\"404\":1,\"406\":1}}],[\"must\",{\"1\":{\"345\":1}}],[\"mu\",{\"1\":{\"331\":1}}],[\"mutual\",{\"0\":{\"253\":1},\"1\":{\"253\":1,\"255\":4}}],[\"much\",{\"0\":{\"425\":1,\"427\":1},\"1\":{\"231\":1,\"248\":1,\"267\":1,\"279\":2,\"345\":3,\"401\":3,\"403\":2,\"414\":2,\"417\":1,\"419\":1,\"421\":4,\"423\":1,\"427\":1,\"430\":1,\"431\":1,\"434\":1,\"435\":1}}],[\"multicast\",{\"1\":{\"112\":2}}],[\"multilingual\",{\"1\":{\"106\":1}}],[\"multiple\",{\"1\":{\"74\":1}}],[\"mp4\",{\"1\":{\"225\":3}}],[\"mn​\",{\"1\":{\"212\":1}}],[\"m×klogk\",{\"1\":{\"212\":1}}],[\"m+1\",{\"1\":{\"208\":1}}],[\"m=3\",{\"1\":{\"197\":1}}],[\"m\",{\"1\":{\"152\":2,\"197\":1,\"212\":4,\"224\":8,\"225\":1,\"231\":7,\"233\":1,\"237\":2,\"244\":1,\"337\":1,\"345\":1,\"346\":2,\"400\":1,\"401\":5,\"402\":1,\"405\":3,\"406\":2,\"407\":1,\"419\":1,\"421\":1,\"428\":1,\"435\":3}}],[\"mistakes\",{\"1\":{\"435\":1}}],[\"milk\",{\"1\":{\"435\":1}}],[\"milky\",{\"1\":{\"425\":2,\"428\":1}}],[\"mimicked\",{\"1\":{\"390\":1}}],[\"mit\",{\"1\":{\"339\":1}}],[\"microsoft\",{\"1\":{\"310\":1}}],[\"mi\",{\"0\":{\"253\":1},\"1\":{\"254\":1,\"255\":25}}],[\"mixed\",{\"1\":{\"316\":1}}],[\"mix\",{\"1\":{\"233\":1,\"400\":1}}],[\"might\",{\"1\":{\"227\":2,\"403\":1,\"409\":1,\"421\":1,\"435\":2}}],[\"mingle\",{\"1\":{\"435\":1}}],[\"minus\",{\"1\":{\"430\":2}}],[\"minute\",{\"1\":{\"406\":1}}],[\"minutes\",{\"1\":{\"345\":2,\"406\":1,\"435\":1}}],[\"minds\",{\"1\":{\"233\":1,\"435\":1}}],[\"mind\",{\"1\":{\"233\":1,\"234\":1,\"400\":2,\"413\":2,\"414\":1,\"424\":2,\"434\":2}}],[\"min\",{\"1\":{\"205\":6,\"260\":1}}],[\"minage\",{\"1\":{\"28\":2}}],[\"middle\",{\"1\":{\"246\":1,\"395\":2}}],[\"mid+1\",{\"1\":{\"208\":2}}],[\"mid\",{\"1\":{\"139\":1,\"142\":9,\"143\":9,\"144\":8,\"145\":8,\"208\":7,\"428\":1}}],[\"mq\",{\"1\":{\"112\":3}}],[\"mtu500\",{\"1\":{\"112\":1}}],[\"mtu\",{\"1\":{\"112\":3,\"362\":2}}],[\"meat\",{\"1\":{\"435\":1}}],[\"meaning\",{\"0\":{\"411\":1},\"1\":{\"428\":1}}],[\"meanings\",{\"0\":{\"409\":1},\"1\":{\"407\":1,\"411\":1}}],[\"meaningful\",{\"1\":{\"228\":1,\"229\":1,\"435\":1}}],[\"means\",{\"0\":{\"261\":1},\"1\":{\"74\":1,\"261\":5}}],[\"mean\",{\"1\":{\"74\":1,\"232\":1,\"260\":5,\"403\":2,\"406\":2,\"419\":1,\"425\":1,\"428\":1}}],[\"mention\",{\"1\":{\"434\":2}}],[\"memorable\",{\"1\":{\"390\":1}}],[\"memory\",{\"1\":{\"44\":1,\"45\":1,\"173\":1,\"340\":1}}],[\"meɡə\",{\"1\":{\"383\":1}}],[\"megabits\",{\"1\":{\"383\":2}}],[\"message\",{\"1\":{\"360\":1}}],[\"mechanic\",{\"1\":{\"268\":1}}],[\"medium\",{\"0\":{\"352\":1}}],[\"medication\",{\"1\":{\"345\":1}}],[\"median\",{\"1\":{\"260\":1}}],[\"medhouseval\",{\"1\":{\"261\":3}}],[\"medhousevalue\",{\"1\":{\"261\":1}}],[\"melt\",{\"1\":{\"255\":1}}],[\"meetings\",{\"1\":{\"398\":1}}],[\"meets\",{\"1\":{\"246\":1}}],[\"meet\",{\"1\":{\"244\":1,\"395\":1,\"398\":1,\"435\":1}}],[\"me\",{\"1\":{\"227\":1,\"237\":1,\"244\":3,\"345\":2,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"397\":3,\"398\":1,\"401\":2,\"404\":1,\"405\":1,\"411\":1,\"413\":1,\"414\":1,\"419\":1,\"421\":1,\"426\":1,\"430\":1,\"431\":1,\"434\":1,\"435\":1}}],[\"merge方法进行连接\",{\"1\":{\"260\":1}}],[\"merge\",{\"0\":{\"208\":1},\"1\":{\"208\":13,\"260\":3}}],[\"metadata\",{\"0\":{\"339\":1},\"1\":{\"287\":1}}],[\"metrics=compute\",{\"1\":{\"316\":1}}],[\"metrics\",{\"1\":{\"315\":1,\"316\":16,\"324\":1,\"332\":1,\"338\":1,\"340\":1}}],[\"metric\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"253\":1,\"316\":5,\"324\":6}}],[\"methods\",{\"0\":{\"58\":1},\"1\":{\"57\":4,\"59\":3,\"74\":2,\"332\":1}}],[\"method\",{\"1\":{\"41\":1,\"57\":1,\"64\":1}}],[\"mood\",{\"1\":{\"403\":2}}],[\"most\",{\"1\":{\"395\":1,\"396\":1,\"403\":1,\"409\":1,\"419\":1,\"432\":1}}],[\"mosold\",{\"1\":{\"255\":1}}],[\"money\",{\"1\":{\"435\":1}}],[\"monetary\",{\"1\":{\"435\":1}}],[\"monkeys\",{\"1\":{\"434\":1}}],[\"monotonous\",{\"1\":{\"417\":1}}],[\"monday\",{\"1\":{\"394\":2}}],[\"monthly\",{\"1\":{\"399\":1}}],[\"months\",{\"1\":{\"246\":1}}],[\"month\",{\"1\":{\"242\":1,\"434\":1}}],[\"monte\",{\"0\":{\"67\":1},\"1\":{\"57\":1,\"66\":1}}],[\"mobile\",{\"0\":{\"400\":1,\"402\":1},\"1\":{\"383\":1,\"399\":2,\"400\":1,\"402\":3,\"425\":1}}],[\"moisturizer\",{\"1\":{\"345\":1}}],[\"mornings\",{\"1\":{\"394\":1}}],[\"morning\",{\"1\":{\"345\":1,\"421\":1,\"428\":2}}],[\"more\",{\"1\":{\"44\":1,\"127\":3,\"128\":1,\"227\":3,\"345\":2,\"397\":1,\"398\":1,\"402\":1,\"403\":1,\"406\":6,\"413\":1,\"414\":1,\"419\":1,\"424\":1,\"428\":4,\"431\":1,\"434\":2,\"435\":10}}],[\"mop\",{\"1\":{\"246\":1}}],[\"movie\",{\"1\":{\"401\":4}}],[\"movies\",{\"1\":{\"401\":3,\"402\":1,\"403\":1,\"435\":1}}],[\"moving\",{\"0\":{\"5\":1},\"1\":{\"3\":4,\"419\":1}}],[\"move\",{\"1\":{\"246\":1,\"406\":1}}],[\"moment\",{\"1\":{\"242\":1}}],[\"module\",{\"1\":{\"346\":1}}],[\"modules\",{\"1\":{\"32\":1,\"36\":2,\"286\":1}}],[\"modern\",{\"1\":{\"385\":1}}],[\"moderate\",{\"1\":{\"345\":1}}],[\"moderately\",{\"1\":{\"345\":2}}],[\"model在\",{\"1\":{\"323\":1}}],[\"model=\",{\"1\":{\"267\":1,\"268\":1}}],[\"models\",{\"0\":{\"263\":1,\"284\":1,\"327\":1},\"1\":{\"74\":2,\"265\":1,\"273\":3,\"310\":1,\"331\":1,\"332\":1}}],[\"model\",{\"0\":{\"270\":1,\"280\":1,\"281\":1,\"282\":1,\"320\":1,\"334\":1,\"338\":1,\"339\":1},\"1\":{\"74\":1,\"83\":1,\"265\":3,\"267\":4,\"276\":1,\"277\":3,\"280\":2,\"281\":2,\"282\":3,\"283\":3,\"284\":3,\"285\":2,\"286\":6,\"287\":4,\"288\":7,\"294\":2,\"301\":7,\"302\":4,\"303\":11,\"304\":5,\"306\":3,\"307\":3,\"308\":2,\"315\":4,\"316\":2,\"318\":1,\"320\":3,\"321\":1,\"323\":3,\"324\":2,\"325\":13,\"326\":1,\"328\":1,\"331\":19,\"332\":3,\"335\":1,\"336\":6,\"337\":22,\"338\":6,\"339\":4}}],[\"modified\",{\"1\":{\"337\":1}}],[\"mammals\",{\"1\":{\"435\":1}}],[\"magnificent\",{\"1\":{\"390\":1,\"434\":1}}],[\"made\",{\"1\":{\"345\":1,\"435\":1}}],[\"massages\",{\"1\":{\"391\":1}}],[\"master\",{\"1\":{\"342\":2,\"343\":1}}],[\"mask=torch\",{\"1\":{\"303\":1}}],[\"masks\",{\"0\":{\"303\":1},\"1\":{\"308\":1}}],[\"mask\",{\"1\":{\"121\":1,\"268\":3,\"275\":1,\"279\":1,\"294\":2,\"302\":1,\"303\":8,\"304\":2,\"312\":5,\"313\":1,\"318\":1,\"319\":1}}],[\"main\",{\"1\":{\"337\":4,\"367\":2,\"435\":1}}],[\"maid\",{\"1\":{\"268\":1}}],[\"may\",{\"1\":{\"242\":1}}],[\"maybe\",{\"1\":{\"233\":1,\"384\":1,\"435\":1}}],[\"marsupials\",{\"1\":{\"435\":1}}],[\"marriages\",{\"1\":{\"435\":1}}],[\"married\",{\"1\":{\"434\":1}}],[\"marry\",{\"1\":{\"434\":1}}],[\"marian\",{\"1\":{\"273\":1}}],[\"mariadb\",{\"1\":{\"133\":5}}],[\"markov\",{\"1\":{\"49\":1,\"63\":1}}],[\"manchester\",{\"1\":{\"428\":2}}],[\"managed\",{\"1\":{\"435\":1}}],[\"manageable\",{\"1\":{\"406\":1}}],[\"manage\",{\"1\":{\"395\":1}}],[\"management\",{\"1\":{\"332\":2,\"398\":1}}],[\"many\",{\"1\":{\"383\":1,\"385\":1,\"387\":1,\"411\":1,\"413\":1,\"430\":1,\"432\":1,\"434\":4}}],[\"man\",{\"1\":{\"124\":1,\"268\":1}}],[\"making\",{\"1\":{\"75\":1,\"227\":1,\"435\":1}}],[\"makes\",{\"1\":{\"435\":1}}],[\"make\",{\"1\":{\"44\":1,\"255\":2,\"259\":4,\"396\":1,\"397\":1,\"401\":1,\"403\":1,\"405\":1,\"423\":1,\"428\":2,\"431\":1,\"435\":4}}],[\"makeuser\",{\"1\":{\"9\":1}}],[\"mac\",{\"0\":{\"349\":1,\"352\":1,\"366\":1},\"1\":{\"112\":6,\"113\":6,\"116\":2,\"117\":1,\"118\":1,\"352\":5,\"353\":7,\"354\":4,\"355\":5,\"364\":10,\"366\":14}}],[\"machines\",{\"1\":{\"74\":1}}],[\"machine\",{\"0\":{\"445\":1},\"1\":{\"74\":1}}],[\"macd\",{\"0\":{\"5\":1},\"1\":{\"5\":3}}],[\"max\",{\"1\":{\"121\":1,\"213\":6,\"260\":1,\"261\":3,\"267\":1,\"285\":1,\"303\":5,\"304\":4,\"325\":1}}],[\"maximum\",{\"1\":{\"60\":1,\"303\":1}}],[\"maxage\",{\"1\":{\"28\":2}}],[\"mapping\",{\"1\":{\"340\":1}}],[\"map\",{\"0\":{\"347\":1},\"1\":{\"28\":3,\"312\":4,\"314\":1,\"317\":1,\"337\":3,\"340\":1,\"345\":3,\"346\":2,\"347\":2}}],[\"mapfn\",{\"1\":{\"19\":1,\"23\":1,\"24\":1}}],[\"mate\",{\"1\":{\"435\":1}}],[\"mates\",{\"1\":{\"246\":1}}],[\"matters\",{\"1\":{\"227\":1,\"435\":1}}],[\"matter\",{\"1\":{\"227\":2,\"435\":1}}],[\"matrix\",{\"1\":{\"26\":1,\"75\":1,\"77\":1}}],[\"math\",{\"1\":{\"10\":4,\"375\":1}}],[\"ma\",{\"1\":{\"3\":5}}],[\"触碰布林带下轨时买入\",{\"1\":{\"3\":1}}],[\"也收到了信息\",{\"1\":{\"355\":1}}],[\"也收到了这个广播\",{\"1\":{\"355\":1}}],[\"也提供了一些函数处理\",{\"1\":{\"345\":1}}],[\"也会到交换机\",{\"1\":{\"355\":1}}],[\"也会被考虑进去\",{\"1\":{\"302\":1}}],[\"也会减少\",{\"1\":{\"292\":1}}],[\"也会引起\",{\"1\":{\"59\":1}}],[\"也有针对标点符号增加了额外规则的\",{\"1\":{\"291\":1}}],[\"也包括\",{\"1\":{\"225\":2}}],[\"也计算了\",{\"1\":{\"193\":1}}],[\"也免不了会出现拉链过长的情况\",{\"1\":{\"158\":1}}],[\"也就是网络差错包\",{\"1\":{\"362\":1}}],[\"也就是\",{\"1\":{\"291\":1}}],[\"也就是传左边命令截取的进程号给命令\",{\"1\":{\"132\":1}}],[\"也就是说\",{\"1\":{\"61\":1,\"150\":1,\"200\":1}}],[\"也就是说当有至少两根k线的实体完全突破上轨或者完全跌破下轨时\",{\"1\":{\"3\":1}}],[\"也属于是不完全的间接兼容或半兼容\",{\"1\":{\"107\":1}}],[\"也存在对应的两种可能\",{\"1\":{\"88\":1}}],[\"也称为专用区\",{\"1\":{\"106\":1}}],[\"也称辅助平面\",{\"1\":{\"106\":1}}],[\"也称\",{\"1\":{\"97\":1}}],[\"也称字节顺序\",{\"1\":{\"88\":1}}],[\"也称作序列化模式\",{\"1\":{\"88\":1}}],[\"也被称为存储格式\",{\"1\":{\"87\":1}}],[\"也可做同样的操作\",{\"1\":{\"331\":1}}],[\"也可能不变\",{\"1\":{\"366\":1}}],[\"也可能会变\",{\"1\":{\"353\":1}}],[\"也可能指字节序列\",{\"1\":{\"88\":1}}],[\"也可能是指\",{\"1\":{\"88\":1,\"265\":1}}],[\"也可能使用多个码点组成的序列来表示\",{\"1\":{\"86\":1}}],[\"也可以是\",{\"1\":{\"367\":1}}],[\"也可以是开放的\",{\"1\":{\"85\":1}}],[\"也可以有多条路径\",{\"1\":{\"367\":1}}],[\"也可以上传自己的模型和数据集\",{\"1\":{\"327\":1}}],[\"也可以指定\",{\"1\":{\"305\":1}}],[\"也可以使用\",{\"1\":{\"294\":1}}],[\"也可以说\",{\"1\":{\"265\":1}}],[\"也可以进行动态扩容\",{\"1\":{\"154\":1}}],[\"也可以通过\",{\"1\":{\"129\":1}}],[\"也可以知道如何从\",{\"1\":{\"121\":1}}],[\"也可以用\",{\"1\":{\"28\":1}}],[\"也可以正常地处理\",{\"1\":{\"21\":1}}],[\"也不能让正常邮件直接进垃圾箱\",{\"1\":{\"81\":1}}],[\"也不能让真正患病的人检测不出癌症\",{\"1\":{\"81\":1}}],[\"也没有\",{\"1\":{\"26\":1}}],[\"也是不同的\",{\"1\":{\"376\":1}}],[\"也是个非常常用的\",{\"1\":{\"258\":1}}],[\"也是衡量两个量之间的关系\",{\"1\":{\"253\":1}}],[\"也是分治\",{\"1\":{\"209\":1}}],[\"也是非常有讲究的\",{\"1\":{\"188\":1}}],[\"也是一致的\",{\"1\":{\"108\":1}}],[\"也是一种\",{\"1\":{\"69\":1}}],[\"也是在\",{\"1\":{\"97\":1}}],[\"也是\",{\"1\":{\"22\":1,\"303\":1,\"315\":1}}],[\"也是耐心持有\",{\"1\":{\"3\":1}}],[\"也拷贝\",{\"1\":{\"13\":1}}],[\"在路上\",{\"1\":{\"402\":1}}],[\"在较小范围内\",{\"1\":{\"380\":1}}],[\"在较低层的实现中\",{\"1\":{\"331\":1}}],[\"在比较旧的浏览器中\",{\"1\":{\"379\":1}}],[\"在一个组织内部\",{\"1\":{\"370\":1}}],[\"在一些多语言模型中使用\",{\"1\":{\"293\":1}}],[\"在同一网段\",{\"1\":{\"366\":1}}],[\"在网关\",{\"1\":{\"366\":1}}],[\"在原来的二层的头上加一个\",{\"1\":{\"358\":1}}],[\"在原始数据中选择最相关的特征\",{\"1\":{\"250\":1}}],[\"在处理\",{\"1\":{\"346\":1}}],[\"在本章内容中\",{\"1\":{\"340\":1}}],[\"在本篇文章中\",{\"1\":{\"309\":1}}],[\"在第三章中我们介绍了\",{\"1\":{\"345\":1}}],[\"在第三章中我们初步体验了\",{\"1\":{\"340\":1}}],[\"在第二字节再度进行扩展\",{\"1\":{\"102\":1}}],[\"在哪个口\",{\"1\":{\"354\":2}}],[\"在哪些数据集上训练的\",{\"1\":{\"328\":1}}],[\"在哪里\",{\"1\":{\"122\":1}}],[\"在前两章中你了解了\",{\"1\":{\"326\":1}}],[\"在多\",{\"1\":{\"316\":1}}],[\"在多线程的情况下\",{\"1\":{\"187\":1}}],[\"在实例化\",{\"1\":{\"315\":1}}],[\"在实现上使用的是连续的内存空间\",{\"1\":{\"173\":1}}],[\"在我们定义\",{\"1\":{\"315\":1}}],[\"在批处理中这将数据整理到一个\",{\"1\":{\"313\":1}}],[\"在批处理句子时\",{\"1\":{\"275\":1}}],[\"在这些关键点\",{\"1\":{\"361\":1}}],[\"在这个例子中\",{\"1\":{\"312\":1}}],[\"在这种情况下\",{\"1\":{\"41\":1,\"51\":1}}],[\"在顶部加了一个维度\",{\"1\":{\"301\":1}}],[\"在此之前我们直接调用\",{\"1\":{\"301\":1}}],[\"在之前的例子中\",{\"1\":{\"300\":1}}],[\"在大一些的模型中可能是3072甚至更大\",{\"1\":{\"281\":1}}],[\"在大部分情况下都可以做到\",{\"1\":{\"209\":1}}],[\"在上面\",{\"1\":{\"364\":1}}],[\"在上面的过程中\",{\"1\":{\"355\":1}}],[\"在上一节中\",{\"1\":{\"279\":1}}],[\"在上涨趋势中\",{\"1\":{\"3\":1}}],[\"在生成第4个单词时\",{\"1\":{\"275\":1}}],[\"在翻译\",{\"1\":{\"274\":1}}],[\"在做文本翻译任务时\",{\"1\":{\"274\":1}}],[\"在该文章中\",{\"1\":{\"273\":1}}],[\"在该状态下采取各种可能的动作\",{\"1\":{\"64\":1}}],[\"在迁移学习时\",{\"1\":{\"270\":1}}],[\"在模型上进一步微调并不会消除这种偏差\",{\"1\":{\"268\":1}}],[\"在接下来的学习中\",{\"1\":{\"265\":1}}],[\"在pandas中使用\",{\"1\":{\"260\":1}}],[\"在使用过程中直接调用\",{\"1\":{\"295\":1}}],[\"在使用\",{\"1\":{\"255\":1}}],[\"在量词后加个\",{\"1\":{\"224\":1}}],[\"在每个\",{\"1\":{\"315\":1}}],[\"在每个桶中的复杂度为\",{\"1\":{\"212\":1}}],[\"在每个桶中使用快排\",{\"1\":{\"212\":1}}],[\"在每个波段里使用先进先出\",{\"1\":{\"112\":1}}],[\"在已排序区间中找到合适的位置将其插入\",{\"1\":{\"204\":1}}],[\"在讲数据结构和算法时\",{\"1\":{\"198\":1}}],[\"在软件开发中\",{\"1\":{\"198\":1}}],[\"在链表中进行查找时\",{\"1\":{\"196\":1}}],[\"在队列为空的时候\",{\"1\":{\"186\":1}}],[\"在任何时候\",{\"1\":{\"180\":1}}],[\"在单链表中\",{\"1\":{\"170\":1}}],[\"在能够应用均摊时间复杂度分析的场合\",{\"1\":{\"166\":1}}],[\"在数组中插入一个元素的时间复杂度是\",{\"1\":{\"204\":1}}],[\"在数组中\",{\"1\":{\"165\":1}}],[\"在给定数组\",{\"1\":{\"164\":1}}],[\"在给定一个轨迹\",{\"1\":{\"62\":1}}],[\"在命令行中运行的程序\",{\"1\":{\"131\":1}}],[\"在交互命令行里运行\",{\"0\":{\"131\":1}}],[\"在当前用户的默认工作目录\",{\"1\":{\"129\":1}}],[\"在把包发出去之前要先把\",{\"1\":{\"113\":1}}],[\"在制订\",{\"1\":{\"107\":1}}],[\"在unicode标准中\",{\"1\":{\"90\":1}}],[\"在编号字符集中\",{\"1\":{\"86\":1}}],[\"在某些特殊传输环境中\",{\"1\":{\"89\":1}}],[\"在某些特殊的传输环境中\",{\"1\":{\"83\":1}}],[\"在某些专业领域\",{\"1\":{\"83\":1}}],[\"在所有的positive数据中\",{\"1\":{\"80\":1}}],[\"在预测为positive的所有数据中\",{\"1\":{\"79\":1}}],[\"在评价一个二分类的机器学习模型的性能时\",{\"1\":{\"77\":1}}],[\"在执行策略\",{\"1\":{\"62\":1}}],[\"在状态\",{\"1\":{\"61\":1}}],[\"在高维\",{\"1\":{\"59\":1}}],[\"在探索时会根据概率分布随机选择动作\",{\"1\":{\"59\":1}}],[\"在相同的状态下\",{\"1\":{\"55\":1}}],[\"在视频游戏中\",{\"1\":{\"49\":1}}],[\"在未知环境中通过试错学习来采取最佳行动以实现特定目标\",{\"1\":{\"48\":1}}],[\"在伪代码中可以看到\",{\"1\":{\"46\":1}}],[\"在不断相互影响\",{\"1\":{\"46\":1}}],[\"在训练的每一步\",{\"1\":{\"46\":1}}],[\"在训练过程中\",{\"1\":{\"45\":1,\"275\":1}}],[\"在训练过程中高效利用\",{\"1\":{\"45\":1}}],[\"在\",{\"1\":{\"45\":1,\"57\":1,\"64\":1,\"69\":2,\"70\":1,\"86\":2,\"99\":1,\"112\":1,\"118\":1,\"125\":1,\"129\":1,\"133\":2,\"158\":1,\"261\":1,\"275\":1,\"288\":2,\"315\":1,\"317\":1,\"324\":1,\"326\":1,\"327\":1,\"329\":1,\"339\":1,\"356\":1,\"364\":1,\"367\":1,\"380\":1}}],[\"在各种领域都有广泛的应用\",{\"1\":{\"38\":1}}],[\"在进行\",{\"1\":{\"36\":1}}],[\"在注册表中读取\",{\"1\":{\"15\":1}}],[\"在下跌趋势中\",{\"1\":{\"3\":1}}],[\"在股价接近布林下轨时买入\",{\"1\":{\"3\":1}}],[\"在股价接近布林上轨时卖出\",{\"1\":{\"3\":1}}],[\"投资组合管理\",{\"1\":{\"7\":1}}],[\"投资者可以将其与其他技术指标结合使用\",{\"1\":{\"4\":1}}],[\"投资者就该观测好股价的突破方向\",{\"1\":{\"3\":1}}],[\"投资成功率很高\",{\"1\":{\"3\":1}}],[\"要去\",{\"1\":{\"367\":1}}],[\"要从\",{\"1\":{\"366\":1,\"367\":1}}],[\"要查找这个\",{\"1\":{\"366\":1}}],[\"要访问目标服务器\",{\"1\":{\"366\":1}}],[\"要访问\",{\"1\":{\"365\":2}}],[\"要访问机器\",{\"1\":{\"355\":1}}],[\"要发送数据的机器发送一个广播包\",{\"1\":{\"353\":1}}],[\"要处理\",{\"1\":{\"292\":1}}],[\"要进行微调\",{\"1\":{\"272\":1}}],[\"要表示\",{\"1\":{\"224\":1}}],[\"要将其转化为非负整数\",{\"1\":{\"213\":1}}],[\"要比排序的数据\",{\"1\":{\"213\":1}}],[\"要排序的数据需要很容易就能划分成\",{\"1\":{\"212\":1}}],[\"要考虑的指标\",{\"1\":{\"201\":1}}],[\"要\",{\"1\":{\"169\":1}}],[\"要求内存空间连续\",{\"1\":{\"140\":1}}],[\"要么匹配位置\",{\"1\":{\"223\":1}}],[\"要么匹配字符\",{\"1\":{\"223\":1}}],[\"要么在每次二分查找前都进行排序\",{\"1\":{\"140\":1}}],[\"要么每次插入\",{\"1\":{\"140\":1}}],[\"要么被留作扩展之用\",{\"1\":{\"106\":1}}],[\"要么增加要么减少\",{\"1\":{\"61\":1}}],[\"要解决的问题\",{\"1\":{\"87\":1}}],[\"要注意\",{\"1\":{\"22\":1,\"377\":1}}],[\"要采取的交易策略就是耐心等待\",{\"1\":{\"3\":1}}],[\"要来临前的预兆\",{\"1\":{\"3\":1}}],[\"爆发性大幅上涨\",{\"1\":{\"3\":1}}],[\"这原本是符合\",{\"1\":{\"375\":1}}],[\"这常常被称为等价路由\",{\"1\":{\"370\":1}}],[\"这使得算法适用于分布式网络环境\",{\"1\":{\"369\":1}}],[\"这使得学习过程更加稳定\",{\"1\":{\"59\":1}}],[\"这将在本地创建文件夹<path\",{\"1\":{\"336\":1}}],[\"这将会创建名为\",{\"1\":{\"331\":1}}],[\"这次我们再执行\",{\"1\":{\"316\":1}}],[\"这要通过\",{\"1\":{\"302\":1}}],[\"这要用到\",{\"1\":{\"286\":1}}],[\"这显然是不应该的\",{\"1\":{\"302\":1}}],[\"这也会产生一些问题\",{\"1\":{\"292\":1}}],[\"这也是循环队列比链式队列应用更加广泛的原因\",{\"1\":{\"187\":1}}],[\"这会造成错误\",{\"1\":{\"379\":1}}],[\"这会保存两个文件\",{\"1\":{\"287\":1}}],[\"这会导致训练的不稳定性\",{\"1\":{\"46\":1}}],[\"这类模型有\",{\"1\":{\"273\":3}}],[\"这类模型在其进行训练的语料上进行了理解\",{\"1\":{\"270\":1}}],[\"这取决于你要做什么任务\",{\"1\":{\"273\":1}}],[\"这两部分可以单独使用\",{\"1\":{\"273\":1}}],[\"这两个文件相辅相成\",{\"1\":{\"287\":1}}],[\"这两个操作是k均值聚类的核心步骤\",{\"1\":{\"261\":1}}],[\"这两个工具\",{\"1\":{\"112\":1}}],[\"这意味着它无法检索到一个词的合理表示\",{\"1\":{\"291\":1}}],[\"这意味着该模型已针对生成输出进行了优化\",{\"1\":{\"273\":1}}],[\"这意味着对模型进行了优化\",{\"1\":{\"273\":1}}],[\"这篇文章\",{\"1\":{\"273\":1}}],[\"这往往需要使用大规模语料\",{\"1\":{\"272\":1}}],[\"这其中可能会夹杂一些意识形态或者价值观的刻板印象\",{\"1\":{\"268\":1}}],[\"这对于分析数据中不同类别之间的关系和差异非常有用\",{\"1\":{\"260\":1}}],[\"这对于有效的投资组合管理至关重要\",{\"1\":{\"7\":1}}],[\"这可以通过加法\",{\"1\":{\"250\":1}}],[\"这可能是一个买入信号\",{\"1\":{\"4\":2}}],[\"这可能是一个卖出信号\",{\"1\":{\"4\":2}}],[\"这块内存被组织成\",{\"1\":{\"219\":1}}],[\"这三种排序算法都是原地排序\",{\"1\":{\"202\":1}}],[\"这台机器会收到多个\",{\"1\":{\"118\":1}}],[\"这时目的主机不能处理\",{\"1\":{\"360\":1}}],[\"这时基本不用广播了\",{\"1\":{\"354\":1}}],[\"这时桶排序的时间复杂度接近于\",{\"1\":{\"212\":1}}],[\"这时快排的时间复杂度就从\",{\"1\":{\"209\":1}}],[\"这时只能再申请一个更大的内存空间\",{\"1\":{\"173\":1}}],[\"这时程序不能霸占交互命令行\",{\"1\":{\"132\":1}}],[\"这时的沟通基本靠\",{\"1\":{\"116\":1}}],[\"这时候可以高卖低买\",{\"1\":{\"3\":1}}],[\"这张网卡仅仅可以供本机星湖通信\",{\"1\":{\"112\":1}}],[\"这张网卡是\",{\"1\":{\"112\":1}}],[\"这\",{\"1\":{\"97\":2,\"100\":1}}],[\"这带来了一些困扰和麻烦\",{\"1\":{\"93\":1}}],[\"这与字符编码关系密切\",{\"1\":{\"83\":1}}],[\"这一点非常重要\",{\"1\":{\"370\":1}}],[\"这一列根据空格拆分\",{\"1\":{\"259\":1}}],[\"这一步称为\",{\"1\":{\"116\":1}}],[\"这一过程会变得计算上昂贵和困难\",{\"1\":{\"64\":1}}],[\"这一章将介绍一种\",{\"1\":{\"57\":1}}],[\"这就相当于买房自己装修\",{\"1\":{\"114\":1}}],[\"这就是重复计算问题\",{\"1\":{\"193\":1}}],[\"这就是\",{\"1\":{\"87\":1}}],[\"这就是为什么我们说\",{\"1\":{\"70\":1}}],[\"这就要求进行大量的模拟和计算\",{\"1\":{\"64\":1}}],[\"这就像是在追逐一个不断移动的目标\",{\"1\":{\"46\":1}}],[\"这有助于代理决定在哪个状态采取行动\",{\"1\":{\"56\":1}}],[\"这里是\",{\"1\":{\"360\":1}}],[\"这里会用到\",{\"1\":{\"345\":2}}],[\"这里我们传入了\",{\"1\":{\"345\":1}}],[\"这里我们实现一个简单的二分查找\",{\"1\":{\"139\":1}}],[\"这里不展开介绍\",{\"1\":{\"333\":1}}],[\"这里只是画成\",{\"1\":{\"280\":1}}],[\"这里做特殊处理\",{\"1\":{\"180\":1}}],[\"这里取最优的\",{\"1\":{\"70\":1}}],[\"这里的价值是指在给定状态下\",{\"1\":{\"56\":1}}],[\"这里给一个\",{\"1\":{\"22\":1}}],[\"这是默认的主路由表\",{\"1\":{\"367\":1}}],[\"这是刚刚添加的规则\",{\"1\":{\"367\":1}}],[\"这是的源\",{\"1\":{\"366\":1}}],[\"这是找我的\",{\"1\":{\"355\":1}}],[\"这是用来衡量\",{\"1\":{\"316\":1}}],[\"这是因为\",{\"1\":{\"315\":1}}],[\"这是有用的\",{\"1\":{\"312\":1}}],[\"这是在预训练时使用的\",{\"1\":{\"306\":1}}],[\"这是logits\",{\"1\":{\"283\":1}}],[\"这是一篇关于\",{\"1\":{\"258\":1}}],[\"这是一个输出全靠\",{\"1\":{\"353\":1}}],[\"这是一个关键参数\",{\"1\":{\"261\":1}}],[\"这是一个使用\",{\"1\":{\"255\":1}}],[\"这是一个使用特征工程提高准确性的例子\",{\"1\":{\"252\":1}}],[\"这是一个\",{\"1\":{\"70\":1}}],[\"这是一个二维表格\",{\"1\":{\"69\":1}}],[\"这是我们可以将扩容操作穿插在插入操作的过程中\",{\"1\":{\"154\":1}}],[\"这是物理意义上的最终编码\",{\"1\":{\"88\":1}}],[\"这是为了兼容韩国字符集标准ks\",{\"1\":{\"86\":1}}],[\"这是\",{\"1\":{\"49\":1,\"59\":1,\"129\":2}}],[\"这是是\",{\"1\":{\"28\":1}}],[\"这些术语\",{\"1\":{\"265\":1}}],[\"这些码点被称之为代理码点\",{\"1\":{\"106\":1}}],[\"这些双字符编码字符就是全角字符\",{\"1\":{\"100\":1}}],[\"这些逻辑层面的码元序列如何转换为\",{\"1\":{\"83\":1}}],[\"这些编号如何编码成一系列逻辑层面有限大小的数字\",{\"1\":{\"83\":1}}],[\"这些字符的编号是什么\",{\"1\":{\"83\":1}}],[\"这些样本可以用来近似计算梯度\",{\"1\":{\"63\":1}}],[\"这些状态需要不同的动作相应\",{\"1\":{\"59\":1}}],[\"这些系统可能包括传感器\",{\"1\":{\"39\":1}}],[\"这些代理通常被设计用来模拟人类智能\",{\"1\":{\"38\":1}}],[\"这些库提供了资产配置\",{\"1\":{\"7\":1}}],[\"这些库提供了用于创建和测试交易算法以及优化参数和分析性能的工具\",{\"1\":{\"7\":1}}],[\"这样仍然不够\",{\"1\":{\"358\":1}}],[\"这样过了一段时间之后\",{\"1\":{\"354\":1}}],[\"这样我们只需要将长度填充为该\",{\"1\":{\"312\":1}}],[\"这样我们可以用于\",{\"1\":{\"11\":1,\"18\":1}}],[\"这样模型才能进行处理\",{\"1\":{\"312\":1}}],[\"这样做有两点好处\",{\"1\":{\"292\":1}}],[\"这样做给了我们更多的控制权\",{\"1\":{\"21\":1}}],[\"这样肯定比只取某一个数据好\",{\"1\":{\"216\":1}}],[\"这样的查找效率很低\",{\"1\":{\"196\":1}}],[\"这样就可以避免重复计算的问题了\",{\"1\":{\"193\":1}}],[\"这样就避免了网络只学它刚刚做的事情了\",{\"1\":{\"45\":1}}],[\"这样会大大提高\",{\"1\":{\"156\":1}}],[\"这样也就有效避免了前面讲到的散列碰撞攻击\",{\"1\":{\"154\":1}}],[\"这样排序的成本可被均摊\",{\"1\":{\"140\":1}}],[\"这样其他的机器也能用\",{\"1\":{\"114\":1}}],[\"这样其他人在使用该包的时候\",{\"1\":{\"36\":1}}],[\"这样更加高效\",{\"1\":{\"45\":1}}],[\"这样可以捕捉到\",{\"1\":{\"43\":1}}],[\"这样\",{\"1\":{\"42\":1,\"120\":1,\"121\":1,\"154\":1,\"346\":1,\"358\":1,\"367\":1}}],[\"这个在后面我们讲数据中心的网络的时候\",{\"1\":{\"370\":1}}],[\"这个快速网络\",{\"1\":{\"367\":1}}],[\"这个网络\",{\"1\":{\"367\":2}}],[\"这个网段来的使用\",{\"1\":{\"367\":1}}],[\"这个网段\",{\"1\":{\"366\":1}}],[\"这个路由表\",{\"1\":{\"367\":1}}],[\"这个目标网络\",{\"1\":{\"367\":1}}],[\"这个口出去\",{\"1\":{\"366\":1}}],[\"这个口转发\",{\"1\":{\"366\":1}}],[\"这个程序利用\",{\"1\":{\"362\":1}}],[\"这个就不在本篇的讲述范围了\",{\"1\":{\"361\":1}}],[\"这个词表和预训练时的词表是相同的\",{\"1\":{\"295\":1}}],[\"这个架构只包括最基本的\",{\"1\":{\"280\":1}}],[\"这个方法的核心思想是通过迭代的方式\",{\"1\":{\"261\":1}}],[\"这个方法必须返回一个迭代器\",{\"1\":{\"20\":1}}],[\"这个交换的操作决定了它是不稳定的\",{\"1\":{\"205\":1}}],[\"这个问题与分解之后的子问题\",{\"1\":{\"190\":1}}],[\"这个问题会导致在训练过程中出现显著的振荡\",{\"1\":{\"46\":1}}],[\"这个比较操作\",{\"1\":{\"180\":1}}],[\"这个时候就要使用\",{\"1\":{\"361\":1}}],[\"这个时候就会存在线程安全问题\",{\"1\":{\"187\":1}}],[\"这个时候\",{\"1\":{\"166\":1}}],[\"这个时候可以观察情况考虑低位买入\",{\"1\":{\"3\":1}}],[\"这个时候可以观察情况考虑高位卖出\",{\"1\":{\"3\":1}}],[\"这个默认值是可以设置的\",{\"1\":{\"156\":1}}],[\"这个文件都会运行\",{\"1\":{\"129\":1}}],[\"这个文件会指示\",{\"1\":{\"122\":1}}],[\"这个列表很长\",{\"1\":{\"127\":1}}],[\"这个过程称为\",{\"1\":{\"117\":1}}],[\"这个被称为\",{\"1\":{\"112\":1}}],[\"这个地址用于本机通信\",{\"1\":{\"112\":1}}],[\"这个地址\",{\"1\":{\"112\":1}}],[\"这个字节和下个字节共同组成汉字\",{\"1\":{\"99\":1}}],[\"这个编码值是码元的序列\",{\"1\":{\"87\":1}}],[\"这个叫做\",{\"1\":{\"63\":1}}],[\"这个分布决定了在给定状态下采取每个动作的概率\",{\"1\":{\"59\":1}}],[\"这个值函数将状态\",{\"1\":{\"56\":1}}],[\"这个陷阱是探索与利用之间的权衡问题\",{\"1\":{\"53\":1}}],[\"这个包\",{\"1\":{\"36\":1}}],[\"这个对象\",{\"1\":{\"22\":1}}],[\"这被称为背离\",{\"1\":{\"6\":1}}],[\"这表示市场参与者对当前趋势持续性的看法一致\",{\"1\":{\"6\":1}}],[\"这条线用于平滑快速线的波动\",{\"1\":{\"5\":1}}],[\"这条线代表了价格短期内的快速变化\",{\"1\":{\"5\":1}}],[\"这种算法基于节点之间的距离信息\",{\"1\":{\"369\":1}}],[\"这种结构\",{\"1\":{\"219\":1}}],[\"这种数据结构来实现请求排队\",{\"1\":{\"188\":1}}],[\"这种基于阻塞队列实现的\",{\"1\":{\"186\":1}}],[\"这种基于部分样本的估计方式被称为\",{\"1\":{\"68\":1}}],[\"这种链表叫带头链表\",{\"1\":{\"180\":1}}],[\"这种采用单字节码元的编码方式来说\",{\"1\":{\"88\":1}}],[\"这种情况是最应该避免的\",{\"1\":{\"81\":2}}],[\"这种情况不常见\",{\"1\":{\"3\":1}}],[\"这种平滑的调整机制为\",{\"1\":{\"59\":1}}],[\"这种方式既可以创建仓库\",{\"1\":{\"331\":1}}],[\"这种方式有助于降低随机初始化对聚类结果的影响\",{\"1\":{\"261\":1}}],[\"这种方式对响应时间敏感的系统来说\",{\"1\":{\"188\":1}}],[\"这种方式就是\",{\"1\":{\"41\":1}}],[\"这种方法允许我们根据某个类别将数据分组\",{\"1\":{\"260\":1}}],[\"这种方法叫\",{\"1\":{\"68\":1}}],[\"这种方法使得\",{\"1\":{\"59\":1}}],[\"这种方法的核心思想是\",{\"1\":{\"56\":1}}],[\"这种状态往往是大行情\",{\"1\":{\"3\":1}}],[\"当进行数学运算时进行数值转换\",{\"1\":{\"381\":1}}],[\"当进行批处理时\",{\"1\":{\"302\":1}}],[\"当跟\",{\"1\":{\"377\":1}}],[\"当该数据包到达时\",{\"1\":{\"362\":1}}],[\"当交换机把二层的头取下来时就可以识别\",{\"1\":{\"358\":1}}],[\"当机器\",{\"1\":{\"355\":1}}],[\"当机器数多的时候\",{\"1\":{\"354\":1}}],[\"当包到达交换机时\",{\"1\":{\"354\":1}}],[\"当你调用\",{\"1\":{\"331\":1}}],[\"当在\",{\"1\":{\"315\":1}}],[\"当拿到一个比较复杂的数据集\",{\"1\":{\"253\":1}}],[\"当点击回退时\",{\"1\":{\"222\":1}}],[\"当按顺序访问页面\",{\"1\":{\"222\":1}}],[\"当扫描到右括号时\",{\"1\":{\"221\":1}}],[\"当扫描到左括号时\",{\"1\":{\"221\":1}}],[\"当被调用函数执行完成\",{\"1\":{\"219\":1}}],[\"当要排序的\",{\"1\":{\"213\":1}}],[\"当要处理的数据具有环型结构的特点时\",{\"1\":{\"170\":1}}],[\"当桶的个数\",{\"1\":{\"212\":1}}],[\"当相邻元素大小相等时\",{\"1\":{\"203\":1}}],[\"当调用栈比较深时\",{\"1\":{\"193\":1}}],[\"当递归调用到\",{\"1\":{\"193\":1}}],[\"当递归调用超过一定深度之后\",{\"1\":{\"192\":1}}],[\"当没有空闲资源时\",{\"1\":{\"188\":1}}],[\"当代码执行万次\",{\"1\":{\"180\":1}}],[\"当有一个新的数据被访问时\",{\"1\":{\"175\":1}}],[\"当红黑树结点个数少于\",{\"1\":{\"158\":1}}],[\"当数据量比较小\",{\"1\":{\"154\":1}}],[\"当数组没有更多空间存储数据时\",{\"1\":{\"136\":1}}],[\"当然有时候\",{\"1\":{\"370\":1}}],[\"当然每个用户需要一个\",{\"1\":{\"358\":1}}],[\"当然你也可以将\",{\"1\":{\"286\":1}}],[\"当然也可以将多个字段合并\",{\"1\":{\"259\":1}}],[\"当然\",{\"1\":{\"154\":1,\"280\":1,\"292\":1}}],[\"当然我们也可以让\",{\"1\":{\"20\":1}}],[\"当装载因子过大时\",{\"1\":{\"154\":1}}],[\"当散列表中空闲位置不多的时候\",{\"1\":{\"151\":1}}],[\"当散列表中插入的数据越来越多时\",{\"1\":{\"149\":1}}],[\"当线性探测查找时\",{\"1\":{\"149\":1}}],[\"当登录以及每次打开新的\",{\"1\":{\"129\":1}}],[\"当用户登录时\",{\"1\":{\"129\":1}}],[\"当用户第一次登录时\",{\"1\":{\"129\":1}}],[\"当一台机器新加入一个网络时\",{\"1\":{\"116\":1}}],[\"当配置的地址不在同一个网段时\",{\"1\":{\"113\":1}}],[\"当发出一个目的地址为\",{\"1\":{\"111\":1}}],[\"当第一个比特位为\",{\"1\":{\"96\":2}}],[\"当它获得新\",{\"1\":{\"45\":1}}],[\"当我们将全部\",{\"1\":{\"324\":1}}],[\"当我们想要以大于\",{\"1\":{\"258\":1}}],[\"当我们刚开始还不知道使用什么模型的时候\",{\"1\":{\"253\":1}}],[\"当我们往跳表中插入数据的时候\",{\"1\":{\"200\":1}}],[\"当我们不停地往跳表中插入数据时\",{\"1\":{\"200\":1}}],[\"当我们训练得到\",{\"1\":{\"69\":1}}],[\"当我们写\",{\"1\":{\"36\":1}}],[\"当我们使用外部的\",{\"1\":{\"13\":1}}],[\"当前进时\",{\"1\":{\"222\":1}}],[\"当前的\",{\"1\":{\"65\":1}}],[\"当前的数组元素\",{\"1\":{\"28\":1}}],[\"当前状态下的\",{\"1\":{\"65\":1}}],[\"当前索引\",{\"1\":{\"28\":1}}],[\"当前收盘价\",{\"1\":{\"4\":2}}],[\"当使用\",{\"1\":{\"20\":1}}],[\"当\",{\"1\":{\"19\":1,\"20\":2,\"41\":2,\"45\":1,\"70\":1,\"81\":2,\"119\":1,\"129\":1,\"138\":1,\"157\":1,\"208\":1}}],[\"当快速线从上方向下穿过慢速线时\",{\"1\":{\"5\":1}}],[\"当快速线从下方向上穿过慢速线时\",{\"1\":{\"5\":1}}],[\"当快速线和慢速线发生交叉时\",{\"1\":{\"5\":1}}],[\"当快速线向下穿过慢速线时\",{\"1\":{\"5\":1}}],[\"当快速线向下突破慢速线时\",{\"1\":{\"5\":1}}],[\"当快速线向上穿过慢速线时\",{\"1\":{\"5\":1}}],[\"当快速线向上突破慢速线时\",{\"1\":{\"5\":1}}],[\"当rsi快线从上方向下突破rsi慢线时\",{\"1\":{\"4\":1}}],[\"当rsi快线从下方向上突破rsi慢线时\",{\"1\":{\"4\":1}}],[\"当rsi从超卖区\",{\"1\":{\"4\":1}}],[\"当rsi从超买区\",{\"1\":{\"4\":1}}],[\"当rsi低于30时\",{\"1\":{\"4\":1}}],[\"当rsi超过70时\",{\"1\":{\"4\":1}}],[\"当股价在布林带内宽幅震荡时\",{\"1\":{\"3\":1}}],[\"当布林带上轨或者下轨开口达到相当大的幅度\",{\"1\":{\"3\":1}}],[\"当布林带通道收窄\",{\"1\":{\"3\":1}}],[\"当价格形成高点或低点时\",{\"1\":{\"6\":1}}],[\"当价格沿着布林下轨运行时\",{\"1\":{\"3\":1}}],[\"当价格沿着布林上轨运行时\",{\"1\":{\"3\":1}}],[\"当价格在中轨和下轨之间的区域运行时\",{\"1\":{\"3\":1}}],[\"当价格在中轨和上轨之间的区域运行时\",{\"1\":{\"3\":1}}],[\"如坐针毡\",{\"1\":{\"401\":1}}],[\"如此反复\",{\"1\":{\"362\":1}}],[\"如上面的\",{\"1\":{\"331\":1}}],[\"如我们要使用\",{\"1\":{\"328\":1}}],[\"如翻译或摘要\",{\"1\":{\"273\":1}}],[\"如文本生成\",{\"1\":{\"273\":1}}],[\"如句子分类和命名实体识别\",{\"1\":{\"273\":1}}],[\"如决策树\",{\"1\":{\"250\":1}}],[\"如标准化\",{\"1\":{\"250\":1}}],[\"如著名的约瑟夫问题\",{\"1\":{\"170\":1}}],[\"如归并排序\",{\"1\":{\"162\":1}}],[\"如下图\",{\"1\":{\"152\":1}}],[\"如用于\",{\"1\":{\"89\":1}}],[\"如码点编号为u+51c9与u+f979的这两个码点实际上是同一个字符\",{\"1\":{\"86\":1}}],[\"如行\",{\"1\":{\"86\":1}}],[\"如ascii字符表\",{\"1\":{\"85\":1}}],[\"如何判断主机可达\",{\"1\":{\"362\":1}}],[\"如何获得同时有\",{\"1\":{\"342\":1}}],[\"如何创建自己的数据集并将其推至\",{\"1\":{\"340\":1}}],[\"如何对数据集进行切片\",{\"1\":{\"340\":1}}],[\"如何从\",{\"1\":{\"309\":1}}],[\"如何利用\",{\"1\":{\"308\":1,\"309\":1}}],[\"如何处理不同长度的多个序列\",{\"1\":{\"300\":1}}],[\"如何处理多个序列\",{\"1\":{\"300\":1}}],[\"如何生成\",{\"1\":{\"294\":1}}],[\"如何在\",{\"1\":{\"210\":1}}],[\"如何编写递归代码\",{\"0\":{\"191\":1}}],[\"如何实现一个线程安全的队列呢\",{\"1\":{\"187\":1}}],[\"如何选择冲突解决方法\",{\"1\":{\"154\":1}}],[\"如何设计\",{\"0\":{\"154\":1}}],[\"如何探测\",{\"1\":{\"148\":1}}],[\"如何关闭\",{\"1\":{\"133\":1}}],[\"如何做兼容\",{\"1\":{\"87\":1}}],[\"如何通过相对有限的整型数来可扩展地表示可能会无限增长的字符数量\",{\"1\":{\"87\":1}}],[\"如何优化权重呢\",{\"1\":{\"61\":1}}],[\"如何使得一个表示集合的对象可以被\",{\"1\":{\"19\":1}}],[\"如何使用自定义训练过程\",{\"1\":{\"309\":1}}],[\"如何使用\",{\"1\":{\"4\":1,\"5\":1,\"308\":1,\"309\":1,\"338\":1}}],[\"如何使用布林线呢\",{\"1\":{\"3\":1}}],[\"如深度学习和强化学习\",{\"1\":{\"38\":1}}],[\"如\",{\"1\":{\"32\":1,\"85\":1,\"89\":1,\"90\":1,\"94\":1,\"99\":2,\"111\":1,\"124\":1,\"265\":1,\"342\":1,\"345\":1,\"370\":1}}],[\"如果所有规则都匹配不上\",{\"1\":{\"367\":1}}],[\"如果访问内网\",{\"1\":{\"367\":1}}],[\"如果访问\",{\"1\":{\"367\":2}}],[\"如果中间遇到窄的关口会被卡住\",{\"1\":{\"362\":1}}],[\"如果可能的话\",{\"1\":{\"361\":1}}],[\"如果接收到了\",{\"1\":{\"361\":1}}],[\"如果在同一网段中\",{\"1\":{\"364\":1}}],[\"如果在自己可控范围内遇到网落不通的问题\",{\"1\":{\"361\":1}}],[\"如果在规定时间内\",{\"1\":{\"361\":1}}],[\"如果在一个被剪裁的很小的\",{\"1\":{\"112\":1}}],[\"如果目的主机接收分组的数据字段来自\",{\"1\":{\"360\":1}}],[\"如果遇到下面的错误\",{\"1\":{\"315\":1}}],[\"如果遇到一组静态数据\",{\"1\":{\"140\":1}}],[\"如果传入了大于最大限度的序列会崩溃\",{\"1\":{\"304\":1}}],[\"如果两个序列的长度不一样怎么办\",{\"1\":{\"302\":1}}],[\"如果两个变量之间存在关联\",{\"1\":{\"254\":1}}],[\"如果某个\",{\"1\":{\"291\":1}}],[\"如果还在同一环境中\",{\"1\":{\"280\":1}}],[\"如果能则继续\",{\"1\":{\"221\":1}}],[\"如果能用\",{\"1\":{\"22\":1}}],[\"如果比栈顶元素的优先级高\",{\"1\":{\"220\":1}}],[\"如果排序的数组比较大\",{\"1\":{\"216\":1}}],[\"如果链表中结点多了\",{\"1\":{\"200\":1}}],[\"如果要将\",{\"1\":{\"331\":1}}],[\"如果要排序的数据有\",{\"1\":{\"214\":1}}],[\"如果要删除的结点也在索引中\",{\"1\":{\"199\":1}}],[\"如果要解压\",{\"1\":{\"129\":1}}],[\"如果每\",{\"1\":{\"198\":1}}],[\"如果每一层都要遍历\",{\"1\":{\"197\":1}}],[\"如果每次扩容都申请一个原来散列表大小两倍的空间\",{\"1\":{\"154\":1}}],[\"如果最大深度比较小\",{\"1\":{\"192\":1}}],[\"如果实时计算\",{\"1\":{\"192\":1}}],[\"如果递归求解的数据规模很大\",{\"1\":{\"192\":1}}],[\"如果队列已经满了\",{\"1\":{\"186\":1}}],[\"如果此时缓存已满\",{\"1\":{\"175\":1}}],[\"如果此时缓存未满\",{\"1\":{\"175\":1}}],[\"如果此数据没有在缓存链表中\",{\"1\":{\"175\":1}}],[\"如果此数据之前已经被缓存在链表中了\",{\"1\":{\"175\":1}}],[\"如果你确实需要使用\",{\"1\":{\"340\":1}}],[\"如果你确切知道你想使用什么类型的模型\",{\"1\":{\"284\":1}}],[\"如果你使用\",{\"1\":{\"331\":1}}],[\"如果你要复制粘贴分布式训练的代码\",{\"1\":{\"325\":1}}],[\"如果你想使用某个特定的\",{\"1\":{\"331\":1}}],[\"如果你想将仓库放到组织下\",{\"1\":{\"331\":1}}],[\"如果你想在\",{\"1\":{\"325\":1}}],[\"如果你想在训练过程中自动上传你的模型到\",{\"1\":{\"315\":1}}],[\"如果你想做进一步了解\",{\"1\":{\"276\":1}}],[\"如果你的数据集很大\",{\"1\":{\"340\":1}}],[\"如果你的\",{\"1\":{\"312\":1}}],[\"如果你的代码对内存的使用非常苛刻\",{\"1\":{\"173\":1}}],[\"如果你不想了解这些细节\",{\"1\":{\"310\":1}}],[\"如果你配置了网关\",{\"1\":{\"113\":1}}],[\"如果声明的数组过小\",{\"1\":{\"173\":1}}],[\"如果声明的数组过大\",{\"1\":{\"173\":1}}],[\"如果数据没有达到主机\",{\"1\":{\"362\":1}}],[\"如果数据比较复杂\",{\"1\":{\"261\":1}}],[\"如果数据范围\",{\"1\":{\"213\":1}}],[\"如果数据都被划分到一个桶里\",{\"1\":{\"212\":1}}],[\"如果数据之间的比较操作非常耗时\",{\"1\":{\"140\":1}}],[\"如果数组中没有该元素\",{\"1\":{\"164\":1}}],[\"如果一段代码的时间复杂度是\",{\"1\":{\"162\":1}}],[\"如果一个广播网络里面接入了\",{\"1\":{\"353\":1}}],[\"如果一个网络管理员在网络里配置了\",{\"1\":{\"117\":1}}],[\"如果一个字节是\",{\"1\":{\"99\":1}}],[\"如果一个字符串可以和一个整数互相转换\",{\"1\":{\"10\":1}}],[\"如果事先知道大概的数据量有多大\",{\"1\":{\"156\":1}}],[\"如果我们使用的交换机是支持\",{\"1\":{\"358\":1}}],[\"如果我们自定义了\",{\"1\":{\"316\":1}}],[\"如果我们想使用这种\",{\"1\":{\"291\":1}}],[\"如果我们进行了训练集和验证集的划分\",{\"1\":{\"260\":1}}],[\"如果我们选用线性模型\",{\"1\":{\"252\":1}}],[\"如果我们不更新索引\",{\"1\":{\"200\":1}}],[\"如果我们能在链表上建立\",{\"1\":{\"196\":1}}],[\"如果我们从概率的角度分析\",{\"1\":{\"165\":1}}],[\"如果我们要找的元素刚好是数组的第一个元素\",{\"1\":{\"164\":1}}],[\"如果我们更加在意执行效率\",{\"1\":{\"154\":1}}],[\"如果我们对空间消耗非常敏感\",{\"1\":{\"154\":1}}],[\"如果我们给神经网络提供\",{\"1\":{\"45\":1}}],[\"如果计算得到的存储位置已经被占用\",{\"1\":{\"151\":1}}],[\"如果简单地设置为空\",{\"1\":{\"149\":1}}],[\"如果遍历到数组中的空闲位置仍然没找到\",{\"1\":{\"149\":1}}],[\"如果相等\",{\"1\":{\"149\":1}}],[\"如果出现了冲突\",{\"1\":{\"148\":1}}],[\"如果希望用数组来存储\",{\"1\":{\"140\":1}}],[\"如果有的路由器设置了不回\",{\"1\":{\"362\":1}}],[\"如果有频繁的插入和删除操作\",{\"1\":{\"140\":1}}],[\"如果有多个\",{\"1\":{\"118\":1}}],[\"如果对数组内元素的顺序没有要求\",{\"1\":{\"136\":1}}],[\"如果程序在\",{\"1\":{\"131\":1}}],[\"如果默认没安装\",{\"1\":{\"129\":1}}],[\"如果是\",{\"1\":{\"129\":1,\"173\":1}}],[\"如果是数据中心里面的服务器\",{\"1\":{\"114\":1}}],[\"如果知道软件有某个关键词\",{\"1\":{\"127\":1}}],[\"如果想要在每个\",{\"1\":{\"316\":1}}],[\"如果想要分成更多的簇\",{\"1\":{\"261\":1}}],[\"如果想要统计非数值特征\",{\"1\":{\"260\":1}}],[\"如果想看更详细的文档\",{\"1\":{\"124\":1}}],[\"如果想使用\",{\"1\":{\"121\":1}}],[\"如果想让两次的结果相同\",{\"1\":{\"302\":1}}],[\"如果想让同名\",{\"1\":{\"11\":1,\"18\":1}}],[\"如果想让属性按照自定义的方式\",{\"1\":{\"10\":1}}],[\"如果直接将网关配置成\",{\"1\":{\"113\":1}}],[\"如果没有其他规则匹配\",{\"1\":{\"367\":1}}],[\"如果没有提供\",{\"1\":{\"28\":1}}],[\"如果没配网关\",{\"1\":{\"113\":1}}],[\"如果不在同一网段\",{\"1\":{\"364\":1}}],[\"如果不在我们的控制范围内\",{\"1\":{\"361\":1}}],[\"如果不想使用默认模型\",{\"1\":{\"267\":1}}],[\"如果不知道关键词\",{\"1\":{\"127\":1}}],[\"如果不是一个网段的\",{\"1\":{\"113\":1}}],[\"如果不传\",{\"1\":{\"28\":1}}],[\"如果需要通过某个网络接口发送数据包\",{\"1\":{\"112\":1}}],[\"如果放不下\",{\"1\":{\"112\":1}}],[\"如果赢了\",{\"1\":{\"61\":1}}],[\"如果这种变化导致其他的动作有更大的\",{\"1\":{\"59\":1}}],[\"如果智能体过于探索\",{\"1\":{\"53\":1}}],[\"如果非最优的\",{\"1\":{\"47\":1}}],[\"如果它过于利用\",{\"1\":{\"53\":1}}],[\"如果它没有什么重要信息\",{\"1\":{\"43\":1}}],[\"如果它表示一个集合\",{\"1\":{\"19\":1}}],[\"如果提供了的话\",{\"1\":{\"28\":1}}],[\"如果什么都没找到\",{\"1\":{\"28\":1}}],[\"如果为假值\",{\"1\":{\"28\":1}}],[\"如果返回\",{\"1\":{\"28\":1}}],[\"如果类数组中有\",{\"1\":{\"28\":1}}],[\"如果\",{\"1\":{\"27\":1,\"28\":1,\"56\":1,\"139\":1,\"146\":2,\"210\":3}}],[\"如果该\",{\"1\":{\"15\":1}}],[\"如果全局注册表中有\",{\"1\":{\"15\":1}}],[\"如果使用\",{\"1\":{\"13\":1,\"337\":1}}],[\"如果当日的收盘价等于前一日的收盘价\",{\"1\":{\"6\":1}}],[\"如果当日的收盘价低于前一日的收盘价\",{\"1\":{\"6\":1}}],[\"如果当日的收盘价高于前一日的收盘价\",{\"1\":{\"6\":1}}],[\"如果价格上涨但obv下跌\",{\"1\":{\"6\":1}}],[\"如果价格上涨且obv也上涨\",{\"1\":{\"6\":1}}],[\"如果市场上没有什么会影响股价的重要消息爆出\",{\"1\":{\"3\":1}}],[\"如果股价格远远偏离了上轨或者下轨\",{\"1\":{\"3\":1}}],[\"如果股价向上突破则买入\",{\"1\":{\"3\":1}}],[\"如果布林通道随即出现突然扩张\",{\"1\":{\"3\":1}}],[\"如果高点的连线与低点的连线形成基本平行\",{\"1\":{\"3\":1}}],[\"持有的空单的只要价格不脱离下轨\",{\"1\":{\"3\":1}}],[\"持有多单的要守住\",{\"1\":{\"3\":1}}],[\"稳定\",{\"1\":{\"203\":1,\"204\":1,\"206\":1,\"208\":1,\"215\":1}}],[\"稳定性\",{\"1\":{\"201\":1}}],[\"稳定下跌\",{\"1\":{\"3\":1}}],[\"稳定上涨\",{\"1\":{\"3\":1}}],[\"市场为单边下跌行情\",{\"1\":{\"3\":1}}],[\"市场为单边上涨行情\",{\"1\":{\"3\":1}}],[\"买了个高级点的路由器\",{\"1\":{\"367\":1}}],[\"买进\",{\"1\":{\"3\":1}}],[\"买入\",{\"1\":{\"3\":1}}],[\"暂不考虑做多\",{\"1\":{\"3\":1}}],[\"暂不考虑做空\",{\"1\":{\"3\":1}}],[\"卖出时机作出研判的技术指标\",{\"1\":{\"5\":1}}],[\"卖出\",{\"1\":{\"3\":2}}],[\"2b\",{\"1\":{\"360\":1}}],[\"29\",{\"1\":{\"285\":1}}],[\"2x2\",{\"1\":{\"282\":1}}],[\"2×t\",{\"1\":{\"208\":2}}],[\"2n1​\",{\"1\":{\"165\":1}}],[\"2n\",{\"1\":{\"162\":1,\"203\":2}}],[\"2n​+4n​+8n​+\",{\"1\":{\"198\":1}}],[\"2n​\",{\"1\":{\"138\":1,\"197\":1,\"198\":1,\"208\":2,\"209\":2}}],[\"2kn​=1\",{\"1\":{\"138\":1}}],[\"2kn​\",{\"1\":{\"138\":1,\"197\":1,\"208\":2}}],[\"2>\",{\"1\":{\"132\":2}}],[\"22\",{\"1\":{\"111\":2}}],[\"224\",{\"1\":{\"111\":1}}],[\"2443\",{\"1\":{\"294\":1,\"297\":1,\"298\":1}}],[\"240\",{\"1\":{\"111\":1,\"121\":1}}],[\"24\",{\"1\":{\"111\":3,\"366\":1,\"367\":5}}],[\"2个字节\",{\"1\":{\"107\":1}}],[\"2878\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":1,\"306\":2}}],[\"28\",{\"1\":{\"95\":1}}],[\"28=256\",{\"1\":{\"86\":1}}],[\"264−253+3\",{\"1\":{\"375\":1}}],[\"2607\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":1,\"306\":2}}],[\"26\",{\"1\":{\"94\":1}}],[\"2310\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":2,\"306\":2}}],[\"23\",{\"1\":{\"28\":2}}],[\"2034\",{\"1\":{\"312\":1}}],[\"2031\",{\"1\":{\"303\":4,\"304\":2}}],[\"2028\",{\"1\":{\"312\":1}}],[\"2023\",{\"1\":{\"279\":1,\"312\":2}}],[\"2026\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":1,\"306\":2}}],[\"2042\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":2,\"306\":2}}],[\"2048\",{\"1\":{\"106\":1}}],[\"2017\",{\"1\":{\"269\":1}}],[\"2019\",{\"1\":{\"125\":1}}],[\"2061\",{\"1\":{\"279\":1,\"303\":4,\"304\":2}}],[\"206\",{\"1\":{\"183\":1}}],[\"2008\",{\"1\":{\"345\":1,\"375\":1}}],[\"2007\",{\"1\":{\"345\":1}}],[\"2006\",{\"1\":{\"345\":1}}],[\"2003\",{\"1\":{\"312\":2}}],[\"200\",{\"1\":{\"302\":20,\"303\":5,\"367\":7}}],[\"2001\",{\"1\":{\"112\":1}}],[\"2005\",{\"1\":{\"102\":3,\"279\":1,\"301\":2,\"303\":4,\"304\":2,\"306\":2}}],[\"2000\",{\"1\":{\"102\":6,\"345\":1}}],[\"20\",{\"1\":{\"28\":2,\"315\":1,\"367\":4,\"406\":1}}],[\"20日\",{\"1\":{\"3\":3}}],[\"27\",{\"1\":{\"28\":1,\"94\":1,\"111\":2,\"367\":4}}],[\"2117\",{\"1\":{\"312\":1}}],[\"2172\",{\"1\":{\"279\":1}}],[\"21​\",{\"1\":{\"165\":1}}],[\"2163\",{\"1\":{\"302\":1}}],[\"2166\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":1,\"306\":2}}],[\"21600\",{\"1\":{\"121\":1}}],[\"216=65536\",{\"1\":{\"105\":1}}],[\"214\",{\"1\":{\"111\":1}}],[\"21003\",{\"1\":{\"101\":1}}],[\"210\",{\"1\":{\"43\":1}}],[\"21\",{\"1\":{\"26\":1,\"183\":1,\"428\":1}}],[\"253−1\",{\"1\":{\"374\":1}}],[\"250\",{\"1\":{\"121\":1}}],[\"252\",{\"1\":{\"111\":1}}],[\"254\",{\"1\":{\"111\":1}}],[\"255\",{\"1\":{\"111\":26,\"116\":4,\"118\":4,\"121\":6}}],[\"256\",{\"1\":{\"95\":1,\"99\":1}}],[\"256位\",{\"1\":{\"83\":1}}],[\"25\",{\"1\":{\"23\":1}}],[\"2tyt​+\",{\"1\":{\"3\":1}}],[\"2\",{\"0\":{\"4\":1,\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"21\":1,\"28\":1,\"32\":1,\"36\":1,\"40\":1,\"44\":1,\"45\":1,\"46\":2,\"47\":1,\"50\":1,\"52\":1,\"56\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":2,\"66\":1,\"67\":1,\"68\":2,\"75\":1,\"79\":1,\"84\":1,\"85\":1,\"86\":2,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":2,\"100\":1,\"107\":1,\"111\":1,\"117\":1,\"125\":1,\"128\":1,\"132\":1,\"139\":1,\"143\":1,\"150\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":2,\"156\":2,\"157\":3,\"158\":2,\"159\":2,\"165\":1,\"170\":1,\"173\":1,\"176\":1,\"179\":1,\"187\":1,\"197\":1,\"204\":1,\"207\":1,\"208\":1,\"209\":2,\"210\":1,\"213\":1,\"225\":1,\"228\":1,\"232\":1,\"243\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":2,\"258\":1,\"266\":1,\"267\":1,\"268\":2,\"271\":1,\"275\":1,\"277\":1,\"280\":1,\"281\":1,\"282\":2,\"284\":1,\"285\":1,\"286\":1,\"287\":2,\"288\":2,\"292\":1,\"294\":1,\"297\":1,\"302\":1,\"307\":1,\"312\":1,\"314\":1,\"315\":1,\"316\":2,\"320\":1,\"323\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":2,\"333\":1,\"334\":2,\"335\":1,\"336\":2,\"337\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":2,\"347\":1,\"351\":1,\"355\":1,\"367\":1,\"374\":1,\"380\":1,\"384\":1,\"385\":2,\"386\":1,\"387\":1,\"390\":1,\"393\":1,\"394\":2,\"395\":1,\"396\":1,\"397\":1,\"398\":1,\"401\":1,\"403\":1,\"406\":1,\"409\":1,\"411\":1,\"414\":1,\"417\":1,\"419\":1,\"422\":1,\"425\":1,\"427\":1,\"431\":1,\"434\":1},\"1\":{\"3\":2,\"4\":2,\"9\":1,\"10\":2,\"20\":1,\"22\":1,\"26\":7,\"28\":16,\"70\":1,\"90\":2,\"97\":1,\"99\":1,\"100\":2,\"111\":1,\"113\":4,\"125\":1,\"132\":2,\"139\":2,\"162\":1,\"191\":8,\"193\":4,\"194\":3,\"197\":1,\"198\":1,\"200\":1,\"208\":2,\"210\":1,\"216\":1,\"220\":1,\"222\":3,\"246\":2,\"255\":1,\"267\":1,\"273\":1,\"279\":2,\"280\":2,\"281\":1,\"282\":3,\"285\":1,\"288\":1,\"293\":1,\"301\":4,\"307\":1,\"310\":1,\"312\":1,\"316\":1,\"317\":1,\"320\":1,\"345\":1,\"352\":1,\"353\":2,\"355\":3,\"360\":1,\"362\":1,\"365\":1,\"366\":7,\"367\":4,\"375\":2,\"379\":1,\"411\":1}}],[\"+3\",{\"1\":{\"375\":1}}],[\"+3×n\",{\"1\":{\"208\":1}}],[\"+k×n​\",{\"1\":{\"208\":1}}],[\"+k\",{\"1\":{\"208\":1}}],[\"+t\",{\"1\":{\"208\":1}}],[\"+9+3+1=2n​\",{\"1\":{\"198\":1}}],[\"+8+4+2=n−2\",{\"1\":{\"198\":1}}],[\"+f\",{\"1\":{\"191\":1}}],[\"+n=4×t\",{\"1\":{\"208\":1}}],[\"+n\",{\"1\":{\"208\":3,\"209\":1}}],[\"+n×2n1​+n×21​=43n+1​\",{\"1\":{\"165\":1}}],[\"+n+n​=2\",{\"1\":{\"165\":1}}],[\"++\",{\"1\":{\"213\":1}}],[\"++j\",{\"1\":{\"203\":1,\"205\":1,\"209\":1}}],[\"++1\",{\"1\":{\"194\":1}}],[\"++depth\",{\"1\":{\"192\":1}}],[\"++i\",{\"1\":{\"164\":1,\"180\":2,\"203\":1,\"204\":1,\"205\":1,\"208\":1,\"213\":5}}],[\"++var3\",{\"1\":{\"159\":1}}],[\"+2×n=8×t\",{\"1\":{\"208\":1}}],[\"+2×n=4×\",{\"1\":{\"208\":1}}],[\"+22\",{\"1\":{\"150\":1}}],[\"+2\",{\"1\":{\"150\":1}}],[\"+2yt−t+2​+yt−t+1​​\",{\"1\":{\"3\":1}}],[\"+0\",{\"1\":{\"150\":2,\"375\":1}}],[\"+α\",{\"1\":{\"44\":1,\"67\":1,\"68\":1,\"70\":2}}],[\"+code\",{\"1\":{\"10\":1}}],[\"+1=2n−1\",{\"1\":{\"210\":1}}],[\"+12\",{\"1\":{\"150\":1}}],[\"+1\",{\"1\":{\"10\":1,\"150\":1}}],[\"+44\",{\"1\":{\"10\":1}}],[\"+41\",{\"1\":{\"10\":1}}],[\"+49\",{\"1\":{\"10\":3}}],[\"+pn​​\",{\"1\":{\"3\":1}}],[\"+\",{\"0\":{\"129\":1},\"1\":{\"3\":1,\"9\":2,\"10\":1,\"26\":3,\"65\":1,\"111\":1,\"142\":2,\"143\":4,\"144\":2,\"145\":3,\"159\":1,\"185\":1,\"191\":1,\"192\":1,\"193\":3,\"194\":1,\"203\":1,\"204\":1,\"205\":1,\"208\":1,\"209\":1,\"213\":2,\"224\":1,\"229\":1,\"231\":1,\"259\":2,\"280\":1,\"325\":6,\"343\":2,\"360\":1,\"375\":4,\"404\":1,\"411\":1}}],[\"下次当机器\",{\"1\":{\"355\":1}}],[\"下次执行时不需要重复计算\",{\"1\":{\"312\":1}}],[\"下图是两台交换机连接三个局域网的情况\",{\"1\":{\"355\":1}}],[\"下的文件目录\",{\"1\":{\"337\":1}}],[\"下的性能\",{\"1\":{\"62\":1}}],[\"下一跳可以是\",{\"1\":{\"367\":1}}],[\"下一跳路由器的地址\",{\"1\":{\"367\":1}}],[\"下一跳路由器可能存在故障\",{\"1\":{\"360\":1}}],[\"下一跳网关\",{\"1\":{\"367\":1}}],[\"下一跳是\",{\"1\":{\"365\":2}}],[\"下一次分区时\",{\"1\":{\"210\":1}}],[\"下一状态下的价值\",{\"1\":{\"65\":1}}],[\"下中点\",{\"1\":{\"176\":1}}],[\"下创建\",{\"1\":{\"133\":1}}],[\"下常用的压缩模式\",{\"1\":{\"129\":2}}],[\"下载并解压\",{\"1\":{\"342\":1}}],[\"下载\",{\"0\":{\"129\":1},\"1\":{\"127\":1}}],[\"下面说一下\",{\"1\":{\"366\":1}}],[\"下面我将使用\",{\"1\":{\"346\":1}}],[\"下面我们验证一下\",{\"1\":{\"345\":1}}],[\"下面我们将介绍三种上传文件到\",{\"1\":{\"334\":1}}],[\"下面我们添加一些输出\",{\"1\":{\"323\":1}}],[\"下面我们要进行微调了\",{\"1\":{\"313\":1}}],[\"下面我们先介绍下\",{\"1\":{\"294\":1}}],[\"下面我们来使用模型进行预测\",{\"1\":{\"288\":1}}],[\"下面我们直接使用迭代器本身来进行\",{\"1\":{\"21\":1}}],[\"下面的分步调用只是为了让大家更清楚\",{\"1\":{\"295\":1}}],[\"下面分别介绍这两步\",{\"1\":{\"295\":1}}],[\"下面介绍\",{\"1\":{\"291\":1}}],[\"下面介绍几种\",{\"1\":{\"289\":1}}],[\"下面介绍三种最常见的列表结构\",{\"1\":{\"168\":1}}],[\"下面将使用\",{\"1\":{\"284\":1}}],[\"下面将介绍强化学习相关的概念\",{\"1\":{\"48\":1}}],[\"下面列举了一部分\",{\"1\":{\"280\":1}}],[\"下面\",{\"1\":{\"129\":3}}],[\"下面是和仓库创建\",{\"1\":{\"332\":1}}],[\"下面是\",{\"1\":{\"216\":1}}],[\"下面是一个\",{\"1\":{\"121\":1}}],[\"下面是完整的语法\",{\"1\":{\"28\":1}}],[\"下跌并跌破50时\",{\"1\":{\"4\":1}}],[\"下跌\",{\"1\":{\"3\":1}}],[\"下轨\",{\"1\":{\"3\":1}}],[\"下\",{\"1\":{\"3\":1,\"129\":1}}],[\"中配置了静态路由\",{\"1\":{\"366\":1}}],[\"中记下\",{\"1\":{\"366\":1}}],[\"中间的这些设备或者机器\",{\"1\":{\"361\":1}}],[\"中还有一些\",{\"1\":{\"346\":1}}],[\"中还有一个被称为代理区\",{\"1\":{\"106\":1}}],[\"中包含了全部的\",{\"1\":{\"336\":1}}],[\"中增加\",{\"1\":{\"331\":1}}],[\"中对应的仓库上\",{\"1\":{\"331\":1}}],[\"中执行\",{\"1\":{\"325\":1}}],[\"中尝试\",{\"1\":{\"325\":1}}],[\"中使用\",{\"1\":{\"324\":1}}],[\"中我们介绍了如何使用\",{\"1\":{\"317\":1}}],[\"中详细介绍\",{\"1\":{\"315\":1}}],[\"中传递\",{\"1\":{\"315\":2,\"316\":1}}],[\"中前\",{\"1\":{\"313\":1}}],[\"中保存整个数据集\",{\"1\":{\"312\":1}}],[\"中加载数据集\",{\"0\":{\"311\":1}}],[\"中不仅有\",{\"1\":{\"310\":1}}],[\"中准备大型数据集\",{\"1\":{\"309\":1}}],[\"中已有对应示例\",{\"1\":{\"305\":1}}],[\"中获取\",{\"1\":{\"302\":1}}],[\"中讨论\",{\"1\":{\"294\":1}}],[\"中来讨论\",{\"1\":{\"294\":1}}],[\"中你已经看到了如何加载以及保存使用模型\",{\"1\":{\"288\":1}}],[\"中看到建立模型所需的属性\",{\"1\":{\"287\":1}}],[\"中查看它是如何训练的\",{\"1\":{\"328\":1}}],[\"中查看并下载\",{\"1\":{\"326\":1}}],[\"中查看更多示例\",{\"1\":{\"325\":1}}],[\"中查看\",{\"1\":{\"286\":1}}],[\"中心\",{\"1\":{\"267\":1}}],[\"中上传你自己的模型\",{\"1\":{\"266\":1}}],[\"中取\",{\"1\":{\"260\":1}}],[\"中分别取出一个数\",{\"1\":{\"216\":1}}],[\"中采用堆排序来实现排序函数\",{\"1\":{\"215\":1}}],[\"中都是非负数\",{\"1\":{\"213\":1}}],[\"中递归查找\",{\"1\":{\"210\":1}}],[\"中继续递归查找\",{\"1\":{\"210\":1}}],[\"中点\",{\"1\":{\"176\":1}}],[\"中找指定元素\",{\"1\":{\"164\":1}}],[\"中元素个数超过\",{\"1\":{\"157\":1}}],[\"中有\",{\"1\":{\"375\":1}}],[\"中有如下信息\",{\"1\":{\"339\":1}}],[\"中有些特殊\",{\"1\":{\"133\":1}}],[\"中有服务\",{\"1\":{\"133\":1}}],[\"中为\",{\"1\":{\"129\":2}}],[\"中可以用\",{\"1\":{\"125\":1}}],[\"中工具的名字比较杂乱\",{\"1\":{\"112\":1}}],[\"中将\",{\"1\":{\"107\":1}}],[\"中日韩统一表意文字扩充\",{\"1\":{\"102\":2}}],[\"中国国家质量技术监督局于\",{\"1\":{\"102\":1}}],[\"中文繁体\",{\"1\":{\"101\":1}}],[\"中文汉字多达10万+\",{\"1\":{\"99\":1}}],[\"中闲置的最高位利用起来\",{\"1\":{\"96\":1}}],[\"中更高效\",{\"1\":{\"59\":1}}],[\"中至关重要\",{\"1\":{\"49\":1}}],[\"中复制参数来更新\",{\"1\":{\"46\":1}}],[\"中学习\",{\"1\":{\"44\":1}}],[\"中的几个基本类型\",{\"1\":{\"377\":1}}],[\"中的概念\",{\"1\":{\"356\":1}}],[\"中的最大长度\",{\"1\":{\"312\":1}}],[\"中的数据\",{\"1\":{\"312\":1}}],[\"中的数据集\",{\"1\":{\"311\":1}}],[\"中的数组提供的功能\",{\"1\":{\"136\":1}}],[\"中的说明或者使用页面上的\",{\"1\":{\"276\":1}}],[\"中的字符\",{\"1\":{\"106\":1}}],[\"中的字符数量\",{\"1\":{\"86\":1}}],[\"中的码点值\",{\"1\":{\"87\":1}}],[\"中的每个抽象字符表示为\",{\"1\":{\"86\":1}}],[\"中的一种\",{\"1\":{\"57\":1}}],[\"中的相关性\",{\"1\":{\"45\":1}}],[\"中的颜色并没有很重要的信息\",{\"1\":{\"43\":1}}],[\"中的\",{\"1\":{\"36\":1,\"155\":1,\"258\":1,\"276\":1,\"302\":1,\"318\":1,\"374\":1,\"375\":1}}],[\"中轨\",{\"1\":{\"3\":1}}],[\"中\",{\"1\":{\"3\":1,\"44\":1,\"45\":2,\"69\":1,\"121\":1,\"124\":1,\"131\":1,\"132\":1,\"133\":1,\"154\":1,\"222\":1,\"261\":1,\"275\":1,\"288\":1,\"325\":1,\"339\":1,\"356\":1}}],[\"上应该怎么做\",{\"1\":{\"340\":1}}],[\"上加载数据集\",{\"1\":{\"340\":1}}],[\"上传\",{\"0\":{\"334\":1}}],[\"上传最后一版\",{\"1\":{\"331\":1}}],[\"上传到你所在的组织下\",{\"1\":{\"331\":1}}],[\"上传到\",{\"1\":{\"331\":1}}],[\"上传文件了\",{\"1\":{\"329\":1}}],[\"上共享模型会自动为该模型部署托管的推理\",{\"1\":{\"327\":1}}],[\"上进行分布式训练\",{\"1\":{\"325\":1}}],[\"上进行正确的\",{\"1\":{\"313\":1}}],[\"上开箱即用\",{\"1\":{\"316\":1}}],[\"上运行\",{\"1\":{\"315\":1,\"323\":1}}],[\"上述例子中为16\",{\"1\":{\"281\":1}}],[\"上述例子中为2\",{\"1\":{\"281\":1}}],[\"上述三个\",{\"1\":{\"99\":1}}],[\"上一篇文章中介绍了如何使用\",{\"1\":{\"309\":1}}],[\"上一节中提到的\",{\"1\":{\"278\":1}}],[\"上一个函数调用的结果\",{\"1\":{\"28\":1}}],[\"上一个交易日的收盘价\",{\"1\":{\"4\":2}}],[\"上中点\",{\"1\":{\"176\":1}}],[\"上扩展后的字符集\",{\"1\":{\"99\":1}}],[\"上使用\",{\"1\":{\"57\":1}}],[\"上面模型的默认\",{\"1\":{\"279\":1}}],[\"上面爬台阶的例子中\",{\"1\":{\"193\":1}}],[\"上面只是举例说明哨兵的作用\",{\"1\":{\"180\":1}}],[\"上面对应的就是最好情况时间复杂度和最坏情况时间复杂度\",{\"1\":{\"164\":1}}],[\"上面已经介绍了\",{\"1\":{\"28\":1}}],[\"上面的代码没抛出\",{\"1\":{\"345\":1}}],[\"上面的代码确实将文本转化成了数字表示\",{\"1\":{\"312\":1}}],[\"上面的代码下载了\",{\"1\":{\"280\":1}}],[\"上面的两次都进行贪婪匹配\",{\"1\":{\"224\":1}}],[\"上面的\",{\"1\":{\"22\":1}}],[\"上的每个字符对应\",{\"1\":{\"374\":1}}],[\"上的数据集\",{\"0\":{\"341\":1}}],[\"上的\",{\"1\":{\"21\":1,\"336\":1}}],[\"上涨并突破50时\",{\"1\":{\"4\":1}}],[\"上轨\",{\"1\":{\"3\":1}}],[\"上\",{\"1\":{\"3\":1,\"261\":1,\"315\":1,\"366\":1}}],[\"bɪˌvɔː\",{\"1\":{\"435\":1}}],[\"bɪt\",{\"1\":{\"383\":2}}],[\"bgp\",{\"1\":{\"370\":6}}],[\"bpdu\",{\"1\":{\"356\":2,\"357\":1}}],[\"bpe\",{\"1\":{\"293\":1,\"337\":4}}],[\"bc20ff2\",{\"1\":{\"337\":1}}],[\"b2\",{\"1\":{\"260\":1}}],[\"b1\",{\"1\":{\"260\":1}}],[\"b0\",{\"1\":{\"260\":1}}],[\"blushed\",{\"1\":{\"428\":1}}],[\"blue\",{\"1\":{\"403\":2,\"426\":1}}],[\"bluetooth\",{\"1\":{\"400\":2,\"403\":1}}],[\"blossom\",{\"1\":{\"428\":1}}],[\"blossomed\",{\"1\":{\"428\":2}}],[\"bloom\",{\"1\":{\"411\":1}}],[\"blooms\",{\"1\":{\"411\":1}}],[\"blooded\",{\"1\":{\"435\":1}}],[\"blood\",{\"1\":{\"345\":1}}],[\"block\",{\"1\":{\"405\":1,\"406\":1}}],[\"blabla\",{\"1\":{\"355\":1}}],[\"blanket\",{\"1\":{\"274\":1}}],[\"black\",{\"1\":{\"195\":1}}],[\"bldgtype\",{\"1\":{\"255\":3}}],[\"by\",{\"1\":{\"227\":1,\"232\":1,\"234\":1,\"242\":3,\"259\":1,\"260\":1,\"395\":1,\"415\":2,\"435\":3}}],[\"bytes\",{\"1\":{\"352\":5,\"353\":3}}],[\"byte\",{\"1\":{\"83\":3,\"88\":1,\"90\":1,\"99\":1,\"103\":1,\"112\":1,\"293\":1}}],[\"b`\",{\"1\":{\"225\":2}}],[\"buːˈkeɪ\",{\"1\":{\"435\":1}}],[\"buy\",{\"1\":{\"407\":1,\"408\":2,\"410\":1}}],[\"busiest\",{\"0\":{\"395\":1},\"1\":{\"395\":1}}],[\"busy\",{\"1\":{\"393\":1,\"397\":1,\"428\":1}}],[\"bustle\",{\"1\":{\"246\":2,\"428\":2}}],[\"bunch\",{\"1\":{\"246\":1,\"407\":1,\"411\":1}}],[\"building\",{\"1\":{\"246\":1,\"405\":1}}],[\"but\",{\"1\":{\"227\":1,\"231\":1,\"232\":2,\"236\":1,\"239\":1,\"246\":1,\"301\":1,\"345\":1,\"391\":1,\"394\":1,\"402\":1,\"403\":2,\"406\":6,\"407\":1,\"408\":1,\"410\":1,\"411\":2,\"415\":1,\"416\":1,\"419\":3,\"421\":2,\"424\":1,\"428\":4,\"433\":1,\"434\":4,\"435\":2}}],[\"bubblesort\",{\"1\":{\"203\":1}}],[\"bubble\",{\"0\":{\"203\":1}}],[\"bucket\",{\"0\":{\"212\":1},\"1\":{\"152\":1}}],[\"buffer\",{\"1\":{\"45\":3}}],[\"bsearch\",{\"1\":{\"142\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"bsd\",{\"1\":{\"112\":1}}],[\"b类地址\",{\"1\":{\"111\":1}}],[\"bmp\",{\"0\":{\"106\":1},\"1\":{\"106\":6}}],[\"birthday\",{\"1\":{\"435\":1}}],[\"birthdays\",{\"1\":{\"435\":2}}],[\"bird\",{\"1\":{\"389\":1}}],[\"birds\",{\"1\":{\"9\":2}}],[\"bikes\",{\"1\":{\"428\":2}}],[\"biographies\",{\"1\":{\"435\":1}}],[\"biodiversity\",{\"1\":{\"389\":2,\"435\":1}}],[\"bios\",{\"1\":{\"121\":3}}],[\"bias\",{\"1\":{\"328\":1,\"338\":1}}],[\"bigger\",{\"1\":{\"244\":1,\"400\":1}}],[\"big\",{\"1\":{\"231\":2,\"232\":1,\"237\":1,\"246\":1,\"400\":1,\"401\":1,\"403\":1,\"416\":1,\"419\":1,\"423\":1}}],[\"binge\",{\"1\":{\"428\":3}}],[\"bin\",{\"1\":{\"124\":2,\"129\":5,\"287\":3,\"337\":5}}],[\"binary\",{\"1\":{\"83\":1,\"93\":1}}],[\"bits\",{\"1\":{\"125\":1,\"237\":2}}],[\"bit\",{\"1\":{\"83\":4,\"246\":2,\"394\":3,\"417\":1}}],[\"beyond\",{\"1\":{\"434\":1}}],[\"begin\",{\"1\":{\"417\":1,\"435\":1}}],[\"bed\",{\"1\":{\"411\":2}}],[\"behind\",{\"1\":{\"406\":2,\"435\":2}}],[\"behaviors\",{\"1\":{\"392\":1}}],[\"before\",{\"0\":{\"433\":1},\"1\":{\"404\":1,\"432\":1}}],[\"being\",{\"1\":{\"398\":2,\"404\":1,\"405\":1,\"435\":2}}],[\"beijing\",{\"1\":{\"390\":3}}],[\"between\",{\"0\":{\"414\":1},\"1\":{\"383\":1,\"386\":1,\"397\":1,\"398\":1,\"412\":1}}],[\"better\",{\"1\":{\"59\":1,\"242\":1,\"244\":1,\"345\":1,\"394\":1,\"400\":2,\"402\":1,\"413\":1}}],[\"bench\",{\"1\":{\"434\":1}}],[\"benchmark\",{\"1\":{\"310\":2}}],[\"benefit\",{\"1\":{\"346\":4}}],[\"benefitsreview\",{\"1\":{\"345\":1,\"346\":3}}],[\"berttokenizer\",{\"1\":{\"294\":2}}],[\"bertmodel\",{\"1\":{\"285\":2,\"286\":3}}],[\"bertconfig\",{\"1\":{\"285\":3}}],[\"bert\",{\"1\":{\"265\":5,\"268\":1,\"269\":1,\"270\":1,\"273\":1,\"284\":1,\"285\":2,\"286\":3,\"293\":1,\"294\":3,\"296\":1,\"303\":1,\"304\":1,\"312\":1,\"314\":1,\"315\":1,\"317\":1,\"331\":2,\"346\":2}}],[\"bear\",{\"1\":{\"423\":1,\"425\":1}}],[\"bears\",{\"1\":{\"389\":1,\"435\":1}}],[\"beauty\",{\"1\":{\"392\":1,\"407\":1,\"427\":1,\"428\":2}}],[\"beautifully\",{\"1\":{\"435\":1}}],[\"beautiful\",{\"1\":{\"246\":1,\"407\":1,\"424\":1,\"426\":1,\"428\":1,\"434\":2,\"435\":1}}],[\"beach\",{\"1\":{\"248\":2}}],[\"beaches\",{\"1\":{\"248\":2}}],[\"been\",{\"0\":{\"390\":1},\"1\":{\"242\":1,\"246\":2,\"267\":2,\"279\":2,\"301\":3,\"303\":1,\"304\":1,\"306\":3,\"307\":1,\"403\":1,\"417\":1,\"419\":1,\"428\":3,\"435\":1}}],[\"became\",{\"1\":{\"345\":1,\"406\":1}}],[\"because\",{\"1\":{\"242\":1,\"248\":1,\"383\":1,\"386\":1,\"407\":1,\"414\":1,\"433\":1}}],[\"become\",{\"1\":{\"242\":1,\"435\":3}}],[\"beck\",{\"1\":{\"237\":1}}],[\"be\",{\"1\":{\"227\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"237\":4,\"242\":3,\"244\":4,\"248\":3,\"301\":1,\"337\":3,\"345\":3,\"385\":1,\"391\":1,\"394\":3,\"395\":3,\"400\":1,\"401\":3,\"405\":1,\"406\":2,\"413\":3,\"416\":1,\"417\":3,\"419\":2,\"420\":1,\"423\":1,\"425\":1,\"427\":1,\"428\":1,\"430\":1,\"432\":2,\"434\":5,\"435\":7}}],[\"best\",{\"0\":{\"164\":1},\"1\":{\"406\":1}}],[\"believe\",{\"1\":{\"434\":1,\"435\":1}}],[\"bel响铃\",{\"1\":{\"94\":1}}],[\"bellman\",{\"0\":{\"65\":1},\"1\":{\"46\":1,\"64\":1,\"369\":1}}],[\"b\",{\"1\":{\"28\":2,\"83\":2,\"102\":1,\"125\":1,\"208\":3,\"222\":2,\"224\":1,\"225\":4,\"260\":1,\"354\":2,\"355\":1,\"365\":1,\"366\":7}}],[\"brunch\",{\"1\":{\"406\":2}}],[\"breathe\",{\"1\":{\"419\":1}}],[\"breathed\",{\"1\":{\"419\":1}}],[\"breath\",{\"1\":{\"406\":1}}],[\"bread\",{\"1\":{\"406\":1}}],[\"breakout\",{\"0\":{\"451\":1}}],[\"breakfast\",{\"1\":{\"428\":1}}],[\"breaking\",{\"1\":{\"406\":2}}],[\"break\",{\"1\":{\"20\":1,\"21\":1,\"88\":1,\"164\":1,\"203\":1,\"204\":1,\"206\":1,\"319\":1,\"406\":3}}],[\"branch\",{\"1\":{\"337\":3}}],[\"brother\",{\"1\":{\"311\":2}}],[\"broadcast\",{\"1\":{\"112\":1}}],[\"brick\",{\"1\":{\"435\":1}}],[\"brighter\",{\"1\":{\"435\":1}}],[\"brighten\",{\"1\":{\"227\":1,\"435\":1}}],[\"bright\",{\"1\":{\"404\":1,\"407\":3,\"408\":1,\"410\":1}}],[\"brisk\",{\"1\":{\"396\":1}}],[\"bridge\",{\"1\":{\"356\":7}}],[\"bring\",{\"1\":{\"228\":1,\"435\":1}}],[\"britain\",{\"1\":{\"10\":1}}],[\"brd\",{\"1\":{\"112\":1}}],[\"bottle\",{\"1\":{\"435\":1}}],[\"both\",{\"1\":{\"74\":2,\"231\":1,\"233\":1,\"400\":2,\"403\":3,\"419\":1,\"428\":1,\"435\":1}}],[\"bouquet\",{\"1\":{\"435\":1}}],[\"bounce\",{\"1\":{\"244\":1}}],[\"bounded\",{\"1\":{\"188\":1}}],[\"bose\",{\"1\":{\"403\":1}}],[\"boss\",{\"1\":{\"237\":1}}],[\"bonus\",{\"1\":{\"399\":1}}],[\"boys\",{\"1\":{\"345\":1}}],[\"body\",{\"1\":{\"259\":2,\"345\":1}}],[\"box\",{\"1\":{\"258\":1,\"434\":1,\"435\":1}}],[\"boxen\",{\"1\":{\"255\":2,\"261\":2}}],[\"bold\",{\"1\":{\"255\":2}}],[\"bollinger\",{\"0\":{\"3\":1}}],[\"border\",{\"1\":{\"370\":1}}],[\"bore\",{\"1\":{\"257\":1}}],[\"bored\",{\"1\":{\"237\":1,\"415\":1}}],[\"boring\",{\"1\":{\"237\":1,\"417\":1,\"419\":1}}],[\"bookworm\",{\"1\":{\"435\":1}}],[\"book\",{\"1\":{\"435\":5}}],[\"bookstore\",{\"1\":{\"435\":1}}],[\"bookshop\",{\"1\":{\"435\":1}}],[\"bookshelf\",{\"1\":{\"246\":1,\"435\":1}}],[\"books\",{\"1\":{\"428\":1,\"435\":22}}],[\"booting\",{\"1\":{\"121\":1}}],[\"boot\",{\"0\":{\"121\":1},\"1\":{\"116\":1,\"399\":1}}],[\"bootp\",{\"1\":{\"116\":3,\"118\":1,\"121\":2}}],[\"bootstrap\",{\"1\":{\"74\":1}}],[\"bootstrapping\",{\"1\":{\"44\":1,\"68\":1}}],[\"boosting\",{\"1\":{\"74\":1}}],[\"boolean\",{\"1\":{\"19\":1,\"20\":1,\"24\":1,\"203\":1,\"258\":1,\"372\":1,\"377\":2}}],[\"bamboo\",{\"1\":{\"390\":2,\"435\":1}}],[\"bached\",{\"1\":{\"302\":1}}],[\"background\",{\"1\":{\"405\":2,\"406\":2,\"411\":1,\"435\":1}}],[\"backward\",{\"1\":{\"323\":1,\"325\":3}}],[\"back\",{\"1\":{\"237\":1,\"244\":1,\"345\":1,\"394\":1,\"419\":1}}],[\"batches\",{\"1\":{\"313\":1,\"322\":1,\"324\":1}}],[\"batched=true\",{\"1\":{\"312\":1,\"314\":1,\"317\":1}}],[\"batched\",{\"1\":{\"301\":1,\"302\":4,\"303\":2,\"312\":1,\"347\":1}}],[\"batching\",{\"1\":{\"301\":1}}],[\"batch\",{\"1\":{\"281\":1,\"302\":1,\"312\":4,\"313\":6,\"319\":4,\"320\":2,\"323\":4,\"324\":7,\"325\":6,\"347\":2}}],[\"bar\",{\"1\":{\"323\":2,\"325\":4,\"406\":1}}],[\"bart\",{\"1\":{\"269\":1,\"270\":1,\"273\":1}}],[\"barto\",{\"1\":{\"48\":1}}],[\"barh\",{\"1\":{\"255\":1}}],[\"badly\",{\"1\":{\"435\":1}}],[\"bad\",{\"1\":{\"248\":2,\"345\":2,\"399\":1,\"400\":3,\"404\":1,\"435\":1}}],[\"bashrc\",{\"1\":{\"129\":8}}],[\"bash\",{\"1\":{\"124\":1,\"129\":8}}],[\"basic\",{\"0\":{\"440\":1},\"1\":{\"106\":1,\"246\":3,\"428\":1}}],[\"base\",{\"1\":{\"128\":1,\"265\":2,\"268\":1,\"279\":2,\"280\":2,\"282\":1,\"286\":2,\"294\":2,\"301\":2,\"307\":1,\"312\":1,\"314\":1,\"317\":1,\"328\":1,\"331\":1,\"337\":1,\"339\":1}}],[\"base64\",{\"1\":{\"89\":1}}],[\"based\",{\"0\":{\"55\":1,\"56\":1,\"291\":1,\"292\":1,\"337\":1},\"1\":{\"54\":2,\"57\":5,\"59\":1,\"64\":3,\"69\":2,\"74\":1,\"291\":2,\"292\":3,\"296\":1}}],[\"bagging\",{\"1\":{\"74\":1}}],[\"bank\",{\"0\":{\"452\":1}}],[\"banter\",{\"1\":{\"246\":1}}],[\"band\",{\"1\":{\"112\":3}}],[\"bands\",{\"0\":{\"3\":1}}],[\"banana\",{\"1\":{\"22\":1,\"26\":2}}],[\"balance\",{\"0\":{\"6\":1},\"1\":{\"244\":1,\"397\":1,\"435\":1}}],[\"134\",{\"1\":{\"367\":5}}],[\"13\",{\"1\":{\"360\":1}}],[\"1377\",{\"1\":{\"322\":1}}],[\"1b\",{\"1\":{\"360\":2}}],[\"14\",{\"1\":{\"360\":1}}],[\"1445\",{\"1\":{\"346\":1}}],[\"1444\",{\"1\":{\"345\":1}}],[\"1468\",{\"1\":{\"345\":1}}],[\"141\",{\"1\":{\"183\":1}}],[\"1`\",{\"1\":{\"315\":1}}],[\"1e+25\",{\"1\":{\"380\":1}}],[\"1e3\",{\"1\":{\"379\":1}}],[\"1e\",{\"1\":{\"285\":1,\"379\":1}}],[\"1+x\",{\"1\":{\"257\":1}}],[\"1×2n1​+2×2n1​+3×2n1​+\",{\"1\":{\"165\":1}}],[\"1gb\",{\"1\":{\"140\":2}}],[\"1字符集\",{\"1\":{\"108\":1}}],[\"1个字符\",{\"1\":{\"107\":1}}],[\"173\",{\"1\":{\"367\":2}}],[\"176\",{\"1\":{\"367\":2}}],[\"17662\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":1,\"306\":2}}],[\"170\",{\"1\":{\"294\":1,\"297\":1,\"298\":1}}],[\"1725\",{\"1\":{\"311\":1,\"312\":1}}],[\"172\",{\"1\":{\"111\":1}}],[\"17\",{\"1\":{\"102\":1,\"360\":1}}],[\"125\",{\"1\":{\"345\":1}}],[\"125mcg\",{\"1\":{\"345\":1}}],[\"1200\",{\"1\":{\"294\":1,\"297\":1,\"298\":1}}],[\"12172\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":1,\"306\":2}}],[\"12\",{\"1\":{\"97\":1,\"285\":3,\"360\":1}}],[\"127\",{\"1\":{\"94\":1,\"100\":2,\"101\":1,\"112\":1,\"367\":1}}],[\"128\",{\"1\":{\"94\":1,\"95\":2,\"111\":2}}],[\"123456ancdefghijklm\",{\"1\":{\"224\":1}}],[\"123\",{\"1\":{\"13\":5}}],[\"190\",{\"1\":{\"367\":5}}],[\"1996\",{\"1\":{\"312\":2}}],[\"1998\",{\"1\":{\"86\":1}}],[\"19\",{\"1\":{\"183\":1}}],[\"192\",{\"1\":{\"111\":2,\"113\":7,\"121\":5,\"366\":20,\"367\":10}}],[\"1980\",{\"1\":{\"101\":1}}],[\"1972\",{\"1\":{\"94\":1}}],[\"1964年\",{\"1\":{\"93\":1}}],[\"1是一个8比特的编号空间\",{\"1\":{\"86\":1}}],[\"1的编号空间是256\",{\"1\":{\"86\":1}}],[\"18437736874454810627\",{\"1\":{\"375\":1}}],[\"188\",{\"1\":{\"367\":4}}],[\"183\",{\"1\":{\"367\":5}}],[\"189\",{\"1\":{\"367\":4}}],[\"1894个\",{\"1\":{\"101\":1}}],[\"180\",{\"1\":{\"121\":1}}],[\"18000\",{\"1\":{\"121\":1}}],[\"18\",{\"1\":{\"28\":1,\"360\":1}}],[\"1500\",{\"1\":{\"112\":3,\"352\":1}}],[\"152\",{\"1\":{\"111\":1}}],[\"15个非汉字及80个汉字\",{\"1\":{\"101\":1}}],[\"15\",{\"1\":{\"28\":4,\"97\":4,\"106\":1,\"345\":1,\"360\":1,\"369\":1}}],[\"11303\",{\"1\":{\"294\":1,\"297\":1,\"298\":1}}],[\"1111\",{\"1\":{\"111\":1}}],[\"1110\",{\"1\":{\"111\":1,\"294\":1,\"297\":1,\"298\":1}}],[\"110\",{\"1\":{\"111\":1}}],[\"11\",{\"1\":{\"26\":1,\"125\":1,\"360\":1,\"375\":2}}],[\"1692\",{\"1\":{\"283\":1}}],[\"161\",{\"1\":{\"125\":1}}],[\"168\",{\"1\":{\"111\":2,\"113\":5,\"121\":5,\"366\":20,\"367\":10}}],[\"160~255\",{\"1\":{\"97\":1}}],[\"160\",{\"1\":{\"43\":1}}],[\"16\",{\"0\":{\"107\":1},\"1\":{\"23\":1,\"28\":1,\"87\":1,\"88\":1,\"90\":1,\"97\":1,\"99\":2,\"106\":2,\"107\":6,\"111\":6,\"112\":1,\"156\":1,\"159\":1,\"281\":1,\"360\":1,\"374\":2}}],[\"1024\",{\"1\":{\"304\":1}}],[\"102\",{\"1\":{\"279\":2,\"288\":3,\"294\":1,\"301\":1,\"303\":8,\"304\":4,\"306\":1,\"312\":2}}],[\"1037\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":1,\"306\":2}}],[\"1045\",{\"1\":{\"279\":2,\"301\":2,\"303\":8,\"304\":4,\"306\":2}}],[\"1012\",{\"1\":{\"279\":1,\"288\":1,\"301\":2,\"303\":4,\"304\":1,\"306\":2,\"312\":2}}],[\"101\",{\"1\":{\"279\":2,\"288\":3,\"294\":1,\"301\":1,\"303\":8,\"304\":4,\"306\":1,\"312\":1,\"366\":6,\"367\":4}}],[\"1011\",{\"1\":{\"41\":1}}],[\"109\",{\"1\":{\"41\":1}}],[\"1005\",{\"1\":{\"279\":1,\"301\":2,\"303\":4,\"304\":2,\"306\":2}}],[\"1003\",{\"1\":{\"124\":2}}],[\"10000000000000000\",{\"1\":{\"380\":2}}],[\"1000\",{\"1\":{\"112\":1,\"192\":1,\"345\":3,\"347\":1}}],[\"1001\",{\"1\":{\"86\":1}}],[\"100\",{\"1\":{\"26\":1,\"302\":1,\"367\":6}}],[\"10\",{\"1\":{\"9\":1,\"26\":1,\"111\":6,\"125\":1,\"192\":1,\"244\":1,\"260\":1,\"310\":1,\"316\":1,\"345\":1,\"367\":6}}],[\"1−α\",{\"1\":{\"3\":1}}],[\"1\",{\"0\":{\"2\":1,\"3\":2,\"4\":1,\"5\":1,\"6\":1,\"9\":1,\"12\":1,\"15\":1,\"20\":1,\"26\":1,\"31\":1,\"38\":1,\"42\":1,\"45\":1,\"49\":1,\"51\":1,\"55\":1,\"58\":1,\"59\":2,\"60\":1,\"62\":1,\"65\":1,\"67\":1,\"70\":1,\"74\":1,\"78\":1,\"82\":1,\"83\":1,\"85\":1,\"92\":1,\"93\":2,\"94\":1,\"96\":1,\"99\":1,\"105\":1,\"106\":2,\"107\":1,\"108\":1,\"110\":1,\"116\":1,\"124\":1,\"127\":1,\"131\":1,\"138\":1,\"142\":1,\"147\":1,\"148\":2,\"149\":3,\"150\":2,\"151\":2,\"152\":1,\"154\":1,\"156\":1,\"164\":1,\"168\":1,\"169\":2,\"170\":1,\"171\":1,\"172\":1,\"175\":1,\"178\":1,\"186\":1,\"196\":1,\"202\":1,\"203\":2,\"204\":1,\"205\":1,\"206\":1,\"208\":1,\"212\":1,\"224\":1,\"227\":1,\"231\":1,\"239\":1,\"241\":1,\"250\":1,\"251\":2,\"252\":1,\"254\":1,\"257\":1,\"263\":1,\"264\":1,\"265\":2,\"267\":1,\"270\":1,\"274\":1,\"278\":1,\"279\":2,\"280\":1,\"281\":2,\"282\":1,\"283\":1,\"285\":1,\"286\":2,\"287\":1,\"290\":1,\"291\":2,\"292\":1,\"293\":1,\"296\":1,\"301\":1,\"306\":1,\"310\":1,\"311\":2,\"312\":1,\"313\":1,\"315\":1,\"318\":1,\"319\":2,\"320\":1,\"321\":1,\"322\":1,\"328\":1,\"330\":1,\"331\":2,\"332\":1,\"333\":1,\"335\":1,\"341\":1,\"342\":2,\"343\":1,\"345\":1,\"349\":1,\"350\":2,\"351\":1,\"365\":1,\"373\":1,\"379\":1,\"384\":1,\"388\":1,\"389\":2,\"390\":1,\"391\":1,\"392\":1,\"393\":1,\"399\":1,\"400\":1,\"402\":1,\"404\":1,\"405\":1,\"407\":1,\"408\":1,\"410\":1,\"412\":1,\"413\":1,\"415\":1,\"416\":1,\"418\":1,\"420\":1,\"421\":1,\"423\":1,\"424\":1,\"426\":1,\"429\":1,\"430\":1,\"432\":1,\"433\":1},\"1\":{\"3\":1,\"4\":1,\"9\":1,\"10\":4,\"20\":4,\"22\":1,\"23\":3,\"26\":14,\"28\":19,\"43\":2,\"49\":1,\"68\":1,\"70\":2,\"86\":2,\"96\":1,\"97\":2,\"99\":2,\"100\":1,\"108\":1,\"112\":1,\"113\":5,\"121\":6,\"125\":1,\"132\":4,\"136\":1,\"142\":7,\"143\":8,\"144\":6,\"145\":7,\"150\":1,\"152\":1,\"154\":2,\"159\":1,\"162\":3,\"164\":3,\"169\":1,\"171\":1,\"180\":12,\"185\":1,\"191\":8,\"192\":4,\"193\":3,\"194\":3,\"201\":1,\"203\":2,\"204\":3,\"205\":3,\"208\":3,\"209\":4,\"210\":3,\"213\":7,\"222\":4,\"224\":3,\"225\":1,\"258\":1,\"267\":1,\"279\":24,\"283\":6,\"285\":3,\"288\":3,\"292\":1,\"294\":9,\"295\":1,\"301\":2,\"302\":6,\"303\":96,\"304\":36,\"311\":2,\"312\":30,\"316\":2,\"323\":1,\"324\":1,\"325\":2,\"345\":1,\"353\":1,\"355\":7,\"360\":2,\"361\":1,\"362\":1,\"366\":15,\"367\":21,\"374\":1,\"375\":8,\"383\":1,\"399\":1,\"407\":1,\"428\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
