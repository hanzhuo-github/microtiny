const a=JSON.parse('{"key":"v-6172b9af","path":"/code/data-structure-and-algorithm/binary-search.html","title":"二分查找","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"二分查找","description":null,"article":false,"date":"2023-08-25T00:00:00.000Z"},"headers":[{"level":2,"title":"1. 时间复杂度：","slug":"_1-时间复杂度","link":"#_1-时间复杂度","children":[]},{"level":2,"title":"2. 二分查找的递归与非递归实现","slug":"_2-二分查找的递归与非递归实现","link":"#_2-二分查找的递归与非递归实现","children":[]},{"level":2,"title":"3. 二分查找应用场景的局限性","slug":"_3-二分查找应用场景的局限性","link":"#_3-二分查找应用场景的局限性","children":[]},{"level":2,"title":"4. 更复杂的二分查找","slug":"_4-更复杂的二分查找","link":"#_4-更复杂的二分查找","children":[{"level":3,"title":"4.1 查找第一个值等于给定值的元素","slug":"_4-1-查找第一个值等于给定值的元素","link":"#_4-1-查找第一个值等于给定值的元素","children":[]},{"level":3,"title":"4.2 查找最后一个值等于给定值的元素","slug":"_4-2-查找最后一个值等于给定值的元素","link":"#_4-2-查找最后一个值等于给定值的元素","children":[]},{"level":3,"title":"4.3 查找第一个大于等于给定值的元素","slug":"_4-3-查找第一个大于等于给定值的元素","link":"#_4-3-查找第一个大于等于给定值的元素","children":[]},{"level":3,"title":"4.4 查找最后一个小于等于给定值的元素","slug":"_4-4-查找最后一个小于等于给定值的元素","link":"#_4-4-查找最后一个小于等于给定值的元素","children":[]}]}],"git":{"createdTime":1700236816000,"updatedTime":1700236816000,"contributors":[{"name":"Sunshine","email":"hanzhuosoul@gmail.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1042},"filePathRelative":"code/data-structure-and-algorithm/binary-search.md","localizedDate":"2023年8月25日","excerpt":"<p>二分查找针对的是有序集合。每次通过跟中间元素对比，将待查找区间缩小为之前的一半，直到找到要查找的元素，或者区间被缩小为 0。</p>\\n<h2> 1. 时间复杂度：<span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>O</mi><mo stretchy=\\"false\\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(log n)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.01968em;\\">l</span><span class=\\"mord mathnormal\\">o</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.03588em;\\">g</span><span class=\\"mord mathnormal\\">n</span><span class=\\"mclose\\">)</span></span></span></span></h2>"}');export{a as data};
