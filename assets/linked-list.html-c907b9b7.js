const l=JSON.parse('{"key":"v-68a607de","path":"/code/data-structure-and-algorithm/linked-list.html","title":"链表","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"链表","description":null,"article":false,"date":"2023-08-18T00:00:00.000Z"},"headers":[{"level":2,"title":"1. 几种常见的链表结构","slug":"_1-几种常见的链表结构","link":"#_1-几种常见的链表结构","children":[{"level":3,"title":"1.1 单链表","slug":"_1-1-单链表","link":"#_1-1-单链表","children":[]},{"level":3,"title":"1.2 循环链表","slug":"_1-2-循环链表","link":"#_1-2-循环链表","children":[]},{"level":3,"title":"1.3 双向链表","slug":"_1-3-双向链表","link":"#_1-3-双向链表","children":[]},{"level":3,"title":"1.4 双向循环链表","slug":"_1-4-双向循环链表","link":"#_1-4-双向循环链表","children":[]}]},{"level":2,"title":"2. 数组 v.s. 链表","slug":"_2-数组-v-s-链表","link":"#_2-数组-v-s-链表","children":[]},{"level":2,"title":"3. 用链表的应用","slug":"_3-用链表的应用","link":"#_3-用链表的应用","children":[{"level":3,"title":"3.1 实现 LRU","slug":"_3-1-实现-lru","link":"#_3-1-实现-lru","children":[]},{"level":3,"title":"3.2 快慢指针","slug":"_3-2-快慢指针","link":"#_3-2-快慢指针","children":[]}]},{"level":2,"title":"4. 正确写出链表代码","slug":"_4-正确写出链表代码","link":"#_4-正确写出链表代码","children":[{"level":3,"title":"4.1 理解指针或引用的含义 —— 地址","slug":"_4-1-理解指针或引用的含义-——-地址","link":"#_4-1-理解指针或引用的含义-——-地址","children":[]},{"level":3,"title":"4.2 警惕指针丢失和内存泄漏","slug":"_4-2-警惕指针丢失和内存泄漏","link":"#_4-2-警惕指针丢失和内存泄漏","children":[]},{"level":3,"title":"4.3 利用哨兵简化实现难度","slug":"_4-3-利用哨兵简化实现难度","link":"#_4-3-利用哨兵简化实现难度","children":[]},{"level":3,"title":"4.4 重点留意边界条件处理","slug":"_4-4-重点留意边界条件处理","link":"#_4-4-重点留意边界条件处理","children":[]},{"level":3,"title":"4.5 举例画图，辅助思考","slug":"_4-5-举例画图-辅助思考","link":"#_4-5-举例画图-辅助思考","children":[]},{"level":3,"title":"4.6 多写多练","slug":"_4-6-多写多练","link":"#_4-6-多写多练","children":[]}]}],"git":{"createdTime":1692617079000,"updatedTime":1692617079000,"contributors":[{"name":"Sunshine","email":"hanzhuosoul@gmail.com","commits":1}]},"readingTime":{"minutes":5.43,"words":1628},"filePathRelative":"code/data-structure-and-algorithm/linked-list.md","localizedDate":"2023年8月18日","excerpt":"<h2> 1. 几种常见的链表结构</h2>\\n<p>链表的结构五花八门，下面介绍三种最常见的列表结构：单链表、双向链表、循环链表。</p>\\n<h3> 1.1 单链表</h3>\\n<p>一些概念：</p>\\n<ul>\\n<li>结点：\\n<ul>\\n<li>头结点：记录链表的基地址</li>\\n<li>尾结点：指针指向空地址 NULL</li>\\n</ul>\\n</li>\\n<li>后继指针</li>\\n</ul>\\n<p>插入、删除的时间复杂度都是 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>O</mi><mo stretchy=\\"false\\">(</mo><mn>1</mn><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(1)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord\\">1</span><span class=\\"mclose\\">)</span></span></span></span>，随机访问的性能不如数组，要 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>O</mi><mo stretchy=\\"false\\">(</mo><mi>n</mi><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(n)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\">n</span><span class=\\"mclose\\">)</span></span></span></span> 的时间复杂度。</p>"}');export{l as data};
