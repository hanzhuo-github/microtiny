const n=JSON.parse(`{"key":"v-333550ae","path":"/post/js-array.html","title":"Array","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Array","description":null,"date":"2023-08-11T00:00:00.000Z","category":["前端"],"tag":["js"]},"headers":[{"level":2,"title":"1. 快速介绍","slug":"_1-快速介绍","link":"#_1-快速介绍","children":[{"level":3,"title":"不要用 == 比较数组","slug":"不要用-比较数组","link":"#不要用-比较数组","children":[]}]},{"level":2,"title":"2. 数组的方法","slug":"_2-数组的方法","link":"#_2-数组的方法","children":[]}],"git":{"createdTime":1692617079000,"updatedTime":1692617079000,"contributors":[{"name":"Sunshine","email":"hanzhuosoul@gmail.com","commits":1}]},"readingTime":{"minutes":5.31,"words":1594},"filePathRelative":"post/js-array.md","localizedDate":"2023年8月11日","excerpt":"<h2> 1. 快速介绍</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">let</span> arr <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">let</span> arr <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">let</span> fruits <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"Apple\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Orange\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Plum\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\nfruits<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Banana\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// arr.at(i)  支持「负数」</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">[</span>fruits<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">at</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token doc-comment comment\\">/**  push() pop() */</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>    <span class=\\"token comment\\">// 删掉了 Banana，并将其 alert</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>          <span class=\\"token comment\\">// Apple, Orange, Plum</span>\\n\\nfruits<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Pear\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>    <span class=\\"token comment\\">// 相当于 fruits[fruits.length] = \\"Pear\\"</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>          <span class=\\"token comment\\">// Apple, Orange, Plum, Pear</span>\\n\\n<span class=\\"token doc-comment comment\\">/**  shift() unshift() */</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">shift</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>    <span class=\\"token comment\\">// 删掉了 Apple， 并将其 alert</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>            <span class=\\"token comment\\">// Orange, Plum, Pear</span>\\n\\nfruits<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">unshift</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Apple'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span> fruits <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// Apple, Orange, Plum, Pear</span>\\n\\n<span class=\\"token comment\\">// push() 和 unshift() 可以一次添加多个元素</span>\\n<span class=\\"token keyword\\">let</span> fruits <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"Apple\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\nfruits<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Orange\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Peach\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nfruits<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">unshift</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Pineapple\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Lemon\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span> fruits <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>        <span class=\\"token comment\\">// [\\"Pineapple\\", \\"Lemon\\", \\"Apple\\", \\"Orange\\", \\"Peach\\"]</span>\\n\\n\\n<span class=\\"token doc-comment comment\\">/** 循环 */</span>\\n<span class=\\"token keyword\\">let</span> arr <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"Apple\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Orange\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Pear\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 1. for</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 2. for ... of 只获取元素，不获取索引</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span> <span class=\\"token keyword\\">let</span> fruit <span class=\\"token keyword\\">of</span> fruits<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruit<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 3. for ... in 获取索引</span>\\n<span class=\\"token comment\\">// 适用于普通对象并做了对应优化，但是不适用于数组，速度要慢 10-100 倍</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> key <span class=\\"token keyword\\">in</span> fruits<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>fruits<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token doc-comment comment\\">/** length */</span>\\n<span class=\\"token comment\\">// 显示地将 length 减小再恢复原长，此过程不可逆（被截断的元素并不会找回来，是 undefined）</span>\\n<span class=\\"token comment\\">// 清空数组最简单的方式</span>\\narr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n\\n<span class=\\"token comment\\">// 多维数组</span>\\n<span class=\\"token keyword\\">let</span> matrix <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n  <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">7</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">9</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token doc-comment comment\\">/** toString() */</span>\\n<span class=\\"token comment\\">// 以逗号连接数组中的元素</span>\\n<span class=\\"token keyword\\">let</span> arr <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span> arr <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 1,2,3</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span> <span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'1,2,3'</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// true</span>\\n\\n<span class=\\"token comment\\">// 数组没有 Symbol.toPrimitive，也没有 valueOf，只能执行 toString 进行转换</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>    <span class=\\"token comment\\">// \\"1\\"</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>   <span class=\\"token comment\\">// \\"11\\"</span>\\n<span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// \\"1,21\\"</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
