import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c as r,b as a,d as e,e as p,f as s}from"./app-1e7cdb66.js";const h={},c={href:"https://www.zhihu.com/column/paogenjiudi",target:"_blank",rel:"noopener noreferrer"},d=s('<h2 id="_1-ebcdic-码与-ascii-码" tabindex="-1"><a class="header-anchor" href="#_1-ebcdic-码与-ascii-码" aria-hidden="true">#</a> 1 EBCDIC 码与 ASCII 码</h2><h3 id="_1-1-ebcdic-码" tabindex="-1"><a class="header-anchor" href="#_1-1-ebcdic-码" aria-hidden="true">#</a> 1.1 EBCDIC 码</h3><p>EBCDIC（Extended Binary Coded Decimal Interchange Code，扩展二进制编码的十进制交换码）：1964年，IBM 为大型机操作系统而开发设计的。英文字母的排列是不连续的，这带来了一些困扰和麻烦。</p><h3 id="_1-2-ascii字符编码方案简介" tabindex="-1"><a class="header-anchor" href="#_1-2-ascii字符编码方案简介" aria-hidden="true">#</a> 1.2 ASCII字符编码方案简介</h3><p>ASCII（American Standard Code for Information Interchange，美国信息交换标准码）：后来 IBM 的个人计算机和工作站操作系统采用了 ASCII 码，后来称为了英文字符编码工业标准。</p><blockquote><p>由美国国家标准学会ANSI（American National Standard Institute）于1968年正式制定</p><p>1972 年被 ISO/IEC 采用，，制定为 ISO/IEC 646 标准</p></blockquote>',6),o=a("ul",null,[a("li",null,[a("p",null,[e("7 位二进制表示一个字符，总共 128 （"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msup",null,[a("mn",null,"2"),a("mn",null,"7")])]),a("annotation",{encoding:"application/x-tex"},"2^{7}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8141em"}}),a("span",{class:"mord"},[a("span",{class:"mord"},"2"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.8141em"}},[a("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mtight"},"7")])])])])])])])])])])]),e("）个字符。")]),a("p",null,"计算机普遍采用8位作为一个字节来进行存取与处理，因此剩下最高位的那1比特一般为0，但有时在一些通讯系统中也被用作奇偶校验位。")]),a("li",null,[a("p",null,"4 类字符"),a("ul",null,[a("li",null,"0~31：不可显示不可打印的控制字符或通讯专用字符。如 0x07（BEL响铃）会让计算机发出哔的一声、0x00（NUL空，注意不是空格）通常用于指示字符串的结束、0x0D（CR回车）和 0x0A（LF换行）用于指示打印机的打印针头退到行首（即回车）并移到下一行（即换行）等")]),a("blockquote",null,[a("p",null,"注：将这些用于控制或通讯的控制字符或通讯专用字符称之为“字符”，感觉上似乎有点怪，实际上这些所谓的“字符”表示的其实是一种动作或行为，因此才既不可显示也不可能打印。")]),a("ul",null,[a("li",null,[a("p",null,"32：可显示但不可打印的空格字符")]),a("li",null,[a("p",null,"33~126：可显示可打印字符，其中 48~57 为 0-9 的阿拉伯数字，65~90 为 26 个大写英文字母，97~122 为26个小写英文字母，其余的是一些标点符号、运算符号等")]),a("li",null,[a("p",null,"127：不可显示不可打印的控制字符DEL")])])])],-1),I=a("h2",{id:"_2-eascii-及-iso-8859-字符编码方案",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-eascii-及-iso-8859-字符编码方案","aria-hidden":"true"},"#"),e(" 2 EASCII 及 ISO 8859 字符编码方案")],-1),u=a("p",null,[e("计算出现后，逐渐从美国发展到了欧洲。除了最基本的美国使用的那 128 个 ASCII 码之外，还有很多衍生的拉丁字母等字符。考虑到一个字节能够表示的编码实际上有 256（"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msup",null,[a("mn",null,"2"),a("mn",null,"8")])]),a("annotation",{encoding:"application/x-tex"},"2^{8}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8141em"}}),a("span",{class:"mord"},[a("span",{class:"mord"},"2"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.8141em"}},[a("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mtight"},"8")])])])])])])])])])])]),e("）个，于是欧洲各国纷纷打起了后面 128 个编码的主意。")],-1),m=s('<p>各国对于 0x80 ~ 0xFF 的设计各自为政，形成了多个 ANSI 编码方案。为了统一这种混乱局面，又先后设计了两套统一的技能兼容 ASCII 码、又支持各国所使用的那些衍生字段的单字节编码方案：EASCII（Extended ASCII）和 ISO/IEC8859。</p><h3 id="_2-1-eascii" tabindex="-1"><a class="header-anchor" href="#_2-1-eascii" aria-hidden="true">#</a> 2.1 EASCII</h3><p>将 ASCII 中闲置的最高位利用起来。当第一个比特位为 0 时，仍然表示之前的 ASCII 字符；当第一个比特位为 1 时，表示补充扩展的其他衍生字符。</p><p>现在 EASCII 码基本上被废弃了，它容纳的字符太少，国际化和标准化程度不够。目前已经被 ISO/IEC 8859 字符编码方案取代了。</p><h3 id="_2-2-iso-iec-8859" tabindex="-1"><a class="header-anchor" href="#_2-2-iso-iec-8859" aria-hidden="true">#</a> 2.2 ISO/IEC 8859</h3><p>和 EASCII 一样，ISO/IEC 8859 也是在 ASCII 码的基础上利用了最高位，即扩展剩余的128位。但实际上只有 0xA0~0xFF （十进制 160~255）这 96 个编码定义了字符。</p><p>与 ASCII、EASCII 字符编码方案只包括单个独立的字符集不同，ISO/IEC 8859 字符编码方案包括了一组字符集，或者说 ISO/IEC 8859 相当于是一组字符集的总称，其内共包含了 15 个字符集，即 ISO/IEC 8859-n，n=1、2、3...15、16，其中 12 未定义，所以实际上共 15 个。这 15 个字符集大致上包括了欧洲各国所使用到的字符。</p><p>目前使用最为普遍的是 ISO/IEC 8859-1 （也称 Latin-1）字符集，收录了西欧常用字符（包括德法两国的字母）。</p><h2 id="_3-简体汉字编码方案-gbk2312、gbk-等" tabindex="-1"><a class="header-anchor" href="#_3-简体汉字编码方案-gbk2312、gbk-等" aria-hidden="true">#</a> 3. 简体汉字编码方案（GBK2312、GBK 等）</h2><h3 id="_3-1-背景" tabindex="-1"><a class="header-anchor" href="#_3-1-背景" aria-hidden="true">#</a> 3.1 背景</h3><p>中文汉字多达10万+，而一个字节只能表示 256 个字符，所以只能使用多个字节来表示一个字符。</p><p>在 GB（汉语“国标”首字母）系列编码方案中，如果一个字节是 0~127，那么这个字节的含义与 ASCII 码相同，否则，这个字节和下个字节共同组成汉字（或其他字符）。</p><p>GB2312 是最早的 GB 编码方案，收录的汉字不足 1 万，基本满足日常需要，但不包括生僻字，于是后来又进行了扩展。</p><p>GBK 是在 GB2312 上扩展后的字符集，K 指扩展。</p><p>GB18030 是在 GBK 基础上进行进一步扩展得到的，加入了少数民族的文字，一些生僻字被编到了 4 字节。</p><p>上述三个 GB 系列编码方案每次扩展都完全保留之前版本的编码，即每个新版本都向下兼容。</p><p>多字节字符与 ASCII 码混用时，有 2 种处理方式：</p><ul><li>将 ASCII 重新编码为多字节，以便与其他多字节字符统一。如 UTF-16、UTF-32 等。</li><li>保持 ASCII 字符为单字节编码，将其他多字节字符编码中的各个字节的最高位设为 1，以避免与 ASCII 码（首位为 0）冲突。如 GB、UTF-8。</li></ul><p>UTF-16、UTF-32 是多字节编码，采用的是<strong>多字节码元</strong>，UTF-8 虽然也是多字节编码，但采用的是单字节码元。GB 系列虽然除 ASCII 字符外的其余字符位多字节编码，但采用的是<strong>单字节码元</strong>，由于历史原因，又进一步引发了更为麻烦的字节序（Byte-Order）问题。</p><h3 id="_3-2-gb2312" tabindex="-1"><a class="header-anchor" href="#_3-2-gb2312" aria-hidden="true">#</a> 3.2 GB2312</h3><p>GB2312 是双字节编码，前一字节为高字节，后面的为低字节。一个汉字的编码（即汉字内码）的字节，其值必须大于 127（即最高位为 1），并且必须是 2 个大于 127 的字节连在一起共同表示一个汉字。</p><p>GB2312 标准共收录 6763 个汉字，其中一级汉字 3755 个，二级汉字 3008个；同时，除了汉字，GB2312 还收录了包括拉丁字母、希腊字母、日文平假名及片假名字符、俄语西里尔字母在内的 682 个字符。</p><p>可能是出于显示上视觉美观的考虑，这 682 个字符中还包括了 ASCII 里本来就有的数字、标点、字母等字符。即对 ASCII 码中原本就有的单字节编码的字符，又编入了 2 个字节长的 GB2312 编码版本。这些双字符编码字符就是<strong>全角</strong>字符，他们对应的单字节编码的 ASCII 字符就是<strong>半角</strong>字符。</p><h3 id="_3-3-gbk" tabindex="-1"><a class="header-anchor" href="#_3-3-gbk" aria-hidden="true">#</a> 3.3 GBK</h3><p>GBK 只要求高字节大于 127 就表示这是一个汉字的开始。向后完全兼容 GB1212，还支持 GB1212-1980 不支持的部分中文简体、中文繁体、日文。共收录汉字 21003 个、符号 883 个，并提供 1894个 造字码位，简、繁体字融于一体。</p><p>微软的CP936通常被视为等同于GBK。但 GBK 定义的字符较 CP936 多出了 95 个（15个非汉字及80个汉字）。</p><h3 id="_3-4-gb18030" tabindex="-1"><a class="header-anchor" href="#_3-4-gb18030" aria-hidden="true">#</a> 3.4 GB18030</h3><p>中国国家质量技术监督局于 2000 年 3 月 17 日推出了 GB18030-2000 标准，以取代 GBK。GB18030-2000 除保留全部 GBK 编码汉字之外，在第二字节再度进行扩展，增加了大约一百个汉字及四位元组编码空间。</p><p>2005 年，GB18030 编码方案在 GB18030-2000 的基础上又进行了扩充，于是又有了 GB18030-2005《信息技术中文编码字符集》。</p><p>GB18030-2000 是 GBK 的升级版本，它的主要特点是在 GBK 基础上增加了 CJK 中日韩统一表意文字扩充 A 的汉字；而GB18030-2005 的主要特点是在 GB18030-2000 基础上又增加了 CJK 中日韩统一表意文字扩充 B 的汉字。</p><p>微软也为GB18030定义了专门的代码页：CP54936，但是这个代码页实际上并没有真正使用。</p><h3 id="_3-5-小结" tabindex="-1"><a class="header-anchor" href="#_3-5-小结" aria-hidden="true">#</a> 3.5 小结</h3><p>GB 类字符集均属于双字节字符集 DBCS（Double Byte Character Set）。基于DBCS的编码方案里，最大的特点是两字节长的中文字符和一字节长的英文字符（ASCII字符）完全兼容，可以并存于同一个文件内。</p><p>使用GB类编码方案时一般都要时刻记住：一个汉字由两个字节组成（即一个汉字占用的存储空间相当于两个英文字符所占用的存储空间）。</p>',34);function C(B,_){const n=l("ExternalLinkIcon");return i(),r("div",null,[a("p",null,[e("本系列文章是对"),a("a",c,[e("知乎专栏「刨根问底字符编码」"),p(n)]),e(" 的学习记录。")]),d,o,I,u,m])}const x=t(h,[["render",C],["__file","Chapter2.html.vue"]]);export{x as default};
