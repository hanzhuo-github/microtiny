const e=JSON.parse('{"key":"v-1c369cee","path":"/post/iterables.html","title":"Iterables 可迭代对象","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Iterables 可迭代对象","description":null,"date":"2023-08-11T00:00:00.000Z","category":["前端"],"tag":["js"]},"headers":[{"level":2,"title":"1. Symbol.iterator","slug":"_1-symbol-iterator","link":"#_1-symbol-iterator","children":[]},{"level":2,"title":"2. 显示调用迭代器","slug":"_2-显示调用迭代器","link":"#_2-显示调用迭代器","children":[]},{"level":2,"title":"3. 可迭代（iterable）v.s. 类数组（array-like）","slug":"_3-可迭代-iterable-v-s-类数组-array-like","link":"#_3-可迭代-iterable-v-s-类数组-array-like","children":[]},{"level":2,"title":"4. Array.from","slug":"_4-array-from","link":"#_4-array-from","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1692617079000,"updatedTime":1692617079000,"contributors":[{"name":"Sunshine","email":"hanzhuosoul@gmail.com","commits":1}]},"readingTime":{"minutes":4.13,"words":1239},"filePathRelative":"post/iterables.md","localizedDate":"2023年8月11日","excerpt":"<p>可以用 <code>for...of</code> 进行遍历的都是 <code>可迭代对象（iterable）</code>。它是通过 <code>Symbol.iterator</code> 实现的，该属性值是个函数，返回一迭代器（迭代器必须有 <code>next()</code> 函数，<code>next()</code> 函数返回 <code>{done: Boolean, value: any}</code>，当 <code>done: true</code> 时迭代结束）。</p>\\n<p>String 和 Array 内部实现了 Symbol.iterable，它们内置的可迭代对象。用 <code>for...of</code> 对 String 进行遍历时，<code>surrogate pairs</code> 是可以被争取处理的。</p>\\n<p>有索引和 <code>length</code> 属性的对象叫类数组（array-like）。</p>\\n<p><code>Array.from(obj[, mapFn, thisArg])</code> 将可迭代对象或类数组 <code>obj</code> 转化为真正的数组。</p>\\n"}');export{e as data};
