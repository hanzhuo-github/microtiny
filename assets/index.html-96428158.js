const t=JSON.parse('{"key":"v-ba48219a","path":"/code/re/","title":"Introduction","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Introduction","description":null,"article":false,"date":"2023-11-07T00:00:00.000Z","order":1},"headers":[{"level":2,"title":"1. 字符匹配","slug":"_1-字符匹配","link":"#_1-字符匹配","children":[]},{"level":2,"title":"2. 位置匹配","slug":"_2-位置匹配","link":"#_2-位置匹配","children":[]}],"git":{"createdTime":1700236816000,"updatedTime":1700236816000,"contributors":[{"name":"Sunshine","email":"hanzhuosoul@gmail.com","commits":1}]},"readingTime":{"minutes":2.04,"words":612},"filePathRelative":"code/re/index.md","localizedDate":"2023年11月7日","excerpt":"<p>正则是匹配模式，要么匹配字符，要么匹配位置。</p>\\n<h2> 1. 字符匹配</h2>\\n<p>横向模糊匹配：<code>{m,n}</code>\\n纵向模糊匹配：<code>[abc]</code></p>\\n<ul>\\n<li>\\n<p>字符组：</p>\\n<ul>\\n<li>\\n<p>范围表示法</p>\\n<ul>\\n<li><code>[123456ancdefGHIJKLM]</code> 可以写成 <code>[1-6a-fG-M]</code></li>\\n<li>要表示 <code>a</code>、<code>-</code>、<code>z</code> 三个字符中的一个，可以写成 <code>[-az]</code> 或 <code>[az-]</code> 或 <code>[z\\\\-z]</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>排除字符组</p>\\n<ul>\\n<li><code>[^abc]</code> 表示除了 <code>a</code>、<code>b</code>、<code>c</code> 之外的任意字符</li>\\n</ul>\\n</li>\\n<li>\\n<p>常见简写</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">字符组</th>\\n<th style=\\"text-align:left\\">含义</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">\\\\d</td>\\n<td style=\\"text-align:left\\">表示 [0-9]。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">\\\\D</td>\\n<td style=\\"text-align:left\\">表示 [^0-9]。表示除数字外的任意字符。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">\\\\w</td>\\n<td style=\\"text-align:left\\">表示 [0-9a-zA-Z_]。表示数字、大小写字母和下划线。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">\\\\W</td>\\n<td style=\\"text-align:left\\">表示 [^0-9a-zA-Z_]。非单词字符。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">\\\\s</td>\\n<td style=\\"text-align:left\\">表示 [ \\\\t\\\\v\\\\n\\\\r\\\\f]。表示空白符，包括空格、水平制表符、垂直制表符、换行符、回车符、换页符。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">\\\\S</td>\\n<td style=\\"text-align:left\\">表示 [^ \\\\t\\\\v\\\\n\\\\r\\\\f]。 非空白符。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">.</td>\\n<td style=\\"text-align:left\\">表示 [^\\\\n\\\\r\\\\u2028\\\\u2029]。通配符，几乎任意字符。换行符、回车符、行分隔符和段分隔符除外。</td>\\n</tr>\\n</tbody>\\n</table>\\n<ul>\\n<li>匹配任意字符：<code>[\\\\d\\\\D]</code>、<code>[\\\\w\\\\W]</code>、<code>[\\\\s\\\\S]</code>、<code>^</code></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>量词（惰性）：</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">量词</th>\\n<th style=\\"text-align:left\\">含义</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">{m,}</td>\\n<td style=\\"text-align:left\\">表示至少出现 m 次。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">{m}</td>\\n<td style=\\"text-align:left\\">等价于 {m,m}，表示出现 m 次。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">?</td>\\n<td style=\\"text-align:left\\">等价于 {0,1}，表示出现或者不出现。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">+</td>\\n<td style=\\"text-align:left\\">等价于 {1,}，表示出现至少一次。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">*</td>\\n<td style=\\"text-align:left\\">等价于 {0,}，表示出现任意次，有可能不出现。</td>\\n</tr>\\n</tbody>\\n</table>\\n<ul>\\n<li>惰性量词 &amp; 贪婪量词：上面的两次都进行贪婪匹配，在量词后加个 <code>?</code> 可实现惰性匹配</li>\\n</ul>\\n</li>\\n<li>\\n<p>多选分支（惰性）：<code>(p1|p2|p3)</code></p>\\n</li>\\n</ul>"}');export{t as data};
